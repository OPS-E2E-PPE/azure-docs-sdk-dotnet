### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.search.documents.SearchQuery.order_by
  - azure.search.documents.SearchQuery.select
  class: azure.search.documents.SearchQuery
  fullName: azure.search.documents.SearchQuery
  inheritance:
  - inheritance:
    - type: builtins.object
    type: azure.search.documents._index._queries._QueryBase
  langs:
  - python
  module: azure.search.documents
  name: SearchQuery
  summary: Parameters for filtering, sorting, faceting, paging, and other search query
    behaviors.
  syntax:
    content: SearchQuery(**kwargs)
    parameters:
    - description: 'A value that specifies whether to fetch the total count of

        results. Default is false. Setting this value to true may have a performance
        impact. Note that

        the count returned is an approximation.'
      id: include_total_result_count
      type:
      - bool
    - description: 'The list of facet expressions to apply to the search query. Each
        facet

        expression contains a field name, optionally followed by a comma-separated
        list of name:value

        pairs.'
      id: facets
      type:
      - list[str]
    - description: The OData $filter expression to apply to the search query.
      id: filter
      type:
      - str
    - description: 'The comma-separated list of field names to use for hit highlights.

        Only searchable fields can be used for hit highlighting.'
      id: highlight_fields
      type:
      - str
    - description: 'A string tag that is appended to hit highlights. Must be set with

        highlightPreTag. Default is &lt;/em&gt;.'
      id: highlight_post_tag
      type:
      - str
    - description: 'A string tag that is prepended to hit highlights. Must be set
        with

        highlightPostTag. Default is &lt;em&gt;.'
      id: highlight_pre_tag
      type:
      - str
    - description: 'A number between 0 and 100 indicating the percentage of the index
        that

        must be covered by a search query in order for the query to be reported as
        a success. This

        parameter can be useful for ensuring search availability even for services
        with only one

        replica. The default is 100.'
      id: minimum_coverage
      type:
      - float
    - description: 'The comma-separated list of OData $orderby expressions by which
        to sort the

        results. Each expression can be either a field name or a call to either the
        geo.distance() or

        the search.score() functions. Each expression can be followed by asc to indicate
        ascending, or

        desc to indicate descending. The default is ascending order. Ties will be
        broken by the match

        scores of documents. If no $orderby is specified, the default sort order is
        descending by

        document match score. There can be at most 32 $orderby clauses.'
      id: order_by
      type:
      - str
    - description: 'A value that specifies the syntax of the search query. The default
        is

        ''simple''. Use ''full'' if your query uses the Lucene query syntax. Possible
        values include:

        ''simple'', ''full''.'
      id: query_type
      type:
      - str
      - search_index_client.models.QueryType
    - description: 'The list of parameter values to be used in scoring functions (for

        example, referencePointParameter) using the format name-values. For example,
        if the scoring

        profile defines a function with a parameter called ''mylocation'' the parameter
        string would be

        "mylocation--122.2,44.8" (without the quotes).'
      id: scoring_parameters
      type:
      - list[str]
    - description: 'The name of a scoring profile to evaluate match scores for matching

        documents in order to sort the results.'
      id: scoring_profile
      type:
      - str
    - description: 'A full-text search query expression; Use "*" or omit this parameter
        to

        match all documents.'
      id: search_text
      type:
      - str
    - description: 'The comma-separated list of field names to which to scope the
        full-text

        search. When using fielded search (fieldName:searchExpression) in a full Lucene
        query, the

        field names of each fielded search expression take precedence over any field
        names listed in

        this parameter.'
      id: search_fields
      type:
      - str
    - description: 'A value that specifies whether any or all of the search terms
        must be

        matched in order to count the document as a match. Possible values include:
        ''any'', ''all''.'
      id: search_mode
      type:
      - str
      - search_index_client.models.SearchMode
    - description: 'The comma-separated list of fields to retrieve. If unspecified,
        all fields

        marked as retrievable in the schema are included.'
      id: select
      type:
      - str
    - description: 'The number of search results to skip. This value cannot be greater
        than 100,000.

        If you need to scan documents in sequence, but cannot use skip due to this
        limitation, consider

        using orderby on a totally-ordered key and filter with a range query instead.'
      id: skip
      type:
      - int
    - description: 'The number of search results to retrieve. This can be used in
        conjunction with

        $skip to implement client-side paging of search results. If results are truncated
        due to

        server-side paging, the response will include a continuation token that can
        be used to issue

        another Search request for the next page of results.'
      id: top
      type:
      - int
  type: class
  uid: azure.search.documents.SearchQuery
- class: azure.search.documents.SearchQuery
  fullName: azure.search.documents.SearchQuery.order_by
  langs:
  - python
  module: azure.search.documents
  name: order_by(*fields)
  namewithoutparameters: order_by
  summary: Update the *orderby* property for the search results.
  syntax:
    content: order_by(*fields)
    parameters:
    - description: An list of fields for the query result to be ordered by.
      id: fields
      isRequired: true
  type: method
  uid: azure.search.documents.SearchQuery.order_by
- class: azure.search.documents.SearchQuery
  fullName: azure.search.documents.SearchQuery.select
  langs:
  - python
  module: azure.search.documents
  name: select(*fields)
  namewithoutparameters: select
  summary: Update the *select* property for the search results.
  syntax:
    content: select(*fields)
    parameters:
    - description: An list of fields for the query result to return.
      id: fields
      isRequired: true
  type: method
  uid: azure.search.documents.SearchQuery.select
references:
- fullName: azure.search.documents.SearchQuery.order_by
  isExternal: false
  name: order_by(*fields)
  parent: azure.search.documents.SearchQuery
  uid: azure.search.documents.SearchQuery.order_by
- fullName: azure.search.documents.SearchQuery.select
  isExternal: false
  name: select(*fields)
  parent: azure.search.documents.SearchQuery
  uid: azure.search.documents.SearchQuery.select
- fullName: list[str]
  name: list[str]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ']'
    name: ']'
  uid: list[str]

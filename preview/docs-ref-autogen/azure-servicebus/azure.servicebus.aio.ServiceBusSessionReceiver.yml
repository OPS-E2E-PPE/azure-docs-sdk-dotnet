### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.servicebus.aio.ServiceBusSessionReceiver.from_connection_string
  - azure.servicebus.aio.ServiceBusSessionReceiver.session
  class: azure.servicebus.aio.ServiceBusSessionReceiver
  example:
  - "Create a new instance of the ServiceBusReceiver.<!--[!code-python[Main](les\\\
    async_samples\\sample_code_servicebus_async.py )]-->\n\n<!-- literal_block {\"\
    ids\": [], \"classes\": [], \"names\": [], \"dupnames\": [], \"backrefs\": [],\
    \ \"source\": \"D:\\\\a\\\\1\\\\s\\\\dist_temp\\\\10\\\\azure-servicebus-7.0.0b2\\\
    \\samples\\\\async_samples\\\\sample_code_servicebus_async.py\", \"xml:space\"\
    : \"preserve\", \"language\": \"python\", \"linenos\": false, \"highlight_args\"\
    : {\"linenostart\": 1}} -->\n\n````python\n\n   import os\n   from azure.servicebus.aio\
    \ import ServiceBusReceiver, ServiceBusSharedKeyCredential\n   fully_qualified_namespace\
    \ = os.environ['SERVICE_BUS_FULLY_QUALIFIED_NAMESPACE']\n   shared_access_policy\
    \ = os.environ['SERVICE_BUS_SAS_POLICY']\n   shared_access_key = os.environ['SERVICE_BUS_SAS_KEY']\n\
    \   queue_name = os.environ['SERVICE_BUS_QUEUE_NAME']\n   queue_receiver = ServiceBusReceiver(\n\
    \       fully_qualified_namespace=fully_qualified_namespace,\n       credential=ServiceBusSharedKeyCredential(\n\
    \           shared_access_policy,\n           shared_access_key\n       ),\n \
    \      queue_name=queue_name\n   )\n\n   ````\n"
  fullName: azure.servicebus.aio.ServiceBusSessionReceiver
  inheritance:
  - inheritance:
    - inheritance:
      - inheritance:
        - type: builtins.object
        type: collections.abc.AsyncIterable
      type: collections.abc.AsyncIterator
    - inheritance:
      - inheritance:
        - type: builtins.object
        type: azure.servicebus._base_handler.BaseHandler
      type: azure.servicebus.aio._base_handler_async.BaseHandlerAsync
    - inheritance:
      - type: builtins.object
      type: azure.servicebus._common.receiver_mixins.ReceiverMixin
    type: azure.servicebus.aio._servicebus_receiver_async.ServiceBusReceiver
  - inheritance:
    - inheritance:
      - type: builtins.object
      type: azure.servicebus._common.receiver_mixins.ReceiverMixin
    type: azure.servicebus._common.receiver_mixins.SessionReceiverMixin
  langs:
  - python
  module: azure.servicebus.aio
  name: ServiceBusSessionReceiver
  summary: 'The ServiceBusSessionReceiver class defines a high level interface for

    receiving messages from the Azure Service Bus Queue or Topic Subscription.'
  syntax:
    parameters:
    - description: 'The fully qualified host name for the Service Bus namespace.

        The namespace format is: *<yournamespace>.servicebus.windows.net*.'
      id: fully_qualified_namespace
      type:
      - str
    - description: 'The credential object used for authentication which

        implements a particular interface for getting tokens. It accepts

        <xref:azure.servicebus.ServiceBusSharedKeyCredential>, or credential objects

        generated by the azure-identity library and objects that implement the *get_token(self,
        *scopes)* method.'
      id: credential
      type:
      - azure.core.credentials.TokenCredential
    variables:
    - description: 'The fully qualified host name for the Service Bus namespace.

        The namespace format is: *<yournamespace>.servicebus.windows.net*.'
      id: fully_qualified_namespace
      type:
      - str
    - description: The path of the entity that the client connects to.
      id: entity_path
      type:
      - str
  type: class
  uid: azure.servicebus.aio.ServiceBusSessionReceiver
- class: azure.servicebus.aio.ServiceBusSessionReceiver
  example:
  - "Create a new instance of the ServiceBusReceiver from connection string.<!--[!code-python[Main](les\\\
    async_samples\\sample_code_servicebus_async.py )]-->\n\n<!-- literal_block {\"\
    ids\": [], \"classes\": [], \"names\": [], \"dupnames\": [], \"backrefs\": [],\
    \ \"source\": \"D:\\\\a\\\\1\\\\s\\\\dist_temp\\\\10\\\\azure-servicebus-7.0.0b2\\\
    \\samples\\\\async_samples\\\\sample_code_servicebus_async.py\", \"xml:space\"\
    : \"preserve\", \"language\": \"python\", \"linenos\": false, \"highlight_args\"\
    : {\"linenostart\": 1}} -->\n\n````python\n\n   import os\n   from azure.servicebus.aio\
    \ import ServiceBusReceiver\n   servicebus_connection_str = os.environ['SERVICE_BUS_CONNECTION_STR']\n\
    \   queue_name = os.environ['SERVICE_BUS_QUEUE_NAME']\n   queue_receiver = ServiceBusReceiver.from_connection_string(\n\
    \       conn_str=servicebus_connection_str,\n       queue_name=queue_name\n  \
    \ )\n\n   ````\n"
  fullName: azure.servicebus.aio.ServiceBusSessionReceiver.from_connection_string
  langs:
  - python
  module: azure.servicebus.aio
  name: 'from_connection_string(conn_str: str, **kwargs: typing.Any) -> azure.servicebus.aio._servicebus_receiver_async.ServiceBusReceiver'
  namewithoutparameters: from_connection_string
  summary: Create a ServiceBusSessionReceiver from a connection string.
  syntax:
    content: 'from_connection_string(conn_str: str, **kwargs: typing.Any) -> azure.servicebus.aio._servicebus_receiver_async.ServiceBusReceiver'
    parameters:
    - description: The connection string of a Service Bus.
      id: conn_str
      isRequired: true
    return:
      type:
      - azure.servicebus.aio.ServiceBusSessionReceiver
  type: method
  uid: azure.servicebus.aio.ServiceBusSessionReceiver.from_connection_string
- class: azure.servicebus.aio.ServiceBusSessionReceiver
  example:
  - "Get session from a receiver<!--[!code-python[Main](les\\async_samples\\sample_code_servicebus_async.py\
    \ )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"\
    dupnames\": [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\1\\\\s\\\\dist_temp\\\
    \\10\\\\azure-servicebus-7.0.0b2\\\\samples\\\\async_samples\\\\sample_code_servicebus_async.py\"\
    , \"xml:space\": \"preserve\", \"language\": \"python\", \"linenos\": false, \"\
    highlight_args\": {\"linenostart\": 1}} -->\n\n````python\n\n       async with\
    \ servicebus_client.get_queue_session_receiver(queue_name=queue_name, session_id=session_id)\
    \ as receiver:\n           session = receiver.session\n\n   ````\n"
  fullName: azure.servicebus.aio.ServiceBusSessionReceiver.session
  langs:
  - python
  module: azure.servicebus.aio
  name: session
  summary: 'Get the ServiceBusSession object linked with the receiver. Session is
    only available to session-enabled

    entities.'
  syntax:
    return:
      type:
      - azure.servicebus.aio.ServiceBusSession
  type: attribute
  uid: azure.servicebus.aio.ServiceBusSessionReceiver.session
references:
- fullName: azure.servicebus.aio.ServiceBusSessionReceiver.from_connection_string
  isExternal: false
  name: 'from_connection_string(conn_str: str, **kwargs: typing.Any) -> azure.servicebus.aio._servicebus_receiver_async.ServiceBusReceiver'
  parent: azure.servicebus.aio.ServiceBusSessionReceiver
  uid: azure.servicebus.aio.ServiceBusSessionReceiver.from_connection_string
- fullName: azure.servicebus.aio.ServiceBusSessionReceiver.session
  isExternal: false
  name: session
  parent: azure.servicebus.aio.ServiceBusSessionReceiver
  uid: azure.servicebus.aio.ServiceBusSessionReceiver.session

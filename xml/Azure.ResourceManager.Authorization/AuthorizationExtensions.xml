<Type Name="AuthorizationExtensions" FullName="Azure.ResourceManager.Authorization.AuthorizationExtensions">
  <TypeSignature Language="C#" Value="public static class AuthorizationExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit AuthorizationExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Authorization.AuthorizationExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module AuthorizationExtensions" />
  <TypeSignature Language="F#" Value="type AuthorizationExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Authorization</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to Azure.ResourceManager.Authorization. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ElevateAccessGlobalAdministrator">
      <MemberSignature Language="C#" Value="public static Azure.Response ElevateAccessGlobalAdministrator (this Azure.ResourceManager.Resources.TenantResource tenantResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response ElevateAccessGlobalAdministrator(class Azure.ResourceManager.Resources.TenantResource tenantResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.ElevateAccessGlobalAdministrator(Azure.ResourceManager.Resources.TenantResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ElevateAccessGlobalAdministrator (tenantResource As TenantResource, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="static member ElevateAccessGlobalAdministrator : Azure.ResourceManager.Resources.TenantResource * System.Threading.CancellationToken -&gt; Azure.Response" Usage="Azure.ResourceManager.Authorization.AuthorizationExtensions.ElevateAccessGlobalAdministrator (tenantResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Authorization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Elevates access for a Global Administrator.
            Request Path: /providers/Microsoft.Authorization/elevateAccess
            Operation Id: GlobalAdministrator_ElevateAccess
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ElevateAccessGlobalAdministratorAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&gt; ElevateAccessGlobalAdministratorAsync (this Azure.ResourceManager.Resources.TenantResource tenantResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; ElevateAccessGlobalAdministratorAsync(class Azure.ResourceManager.Resources.TenantResource tenantResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.ElevateAccessGlobalAdministratorAsync(Azure.ResourceManager.Resources.TenantResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ElevateAccessGlobalAdministratorAsync (tenantResource As TenantResource, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="static member ElevateAccessGlobalAdministratorAsync : Azure.ResourceManager.Resources.TenantResource * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="Azure.ResourceManager.Authorization.AuthorizationExtensions.ElevateAccessGlobalAdministratorAsync (tenantResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Authorization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Elevates access for a Global Administrator.
            Request Path: /providers/Microsoft.Authorization/elevateAccess
            Operation Id: GlobalAdministrator_ElevateAccess
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAzurePermissionsForResourceGroups">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.Authorization.Models.AzurePermission&gt; GetAzurePermissionsForResourceGroups (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.Authorization.Models.AzurePermission&gt; GetAzurePermissionsForResourceGroups(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetAzurePermissionsForResourceGroups(Azure.ResourceManager.Resources.ResourceGroupResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAzurePermissionsForResourceGroups (resourceGroupResource As ResourceGroupResource, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of AzurePermission)" />
      <MemberSignature Language="F#" Value="static member GetAzurePermissionsForResourceGroups : Azure.ResourceManager.Resources.ResourceGroupResource * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Authorization.Models.AzurePermission&gt;" Usage="Azure.ResourceManager.Authorization.AuthorizationExtensions.GetAzurePermissionsForResourceGroups (resourceGroupResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Authorization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Authorization.Models.AzurePermission&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all permissions the caller has for a resource group.
            Request Path: /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Authorization/permissions
            Operation Id: AzurePermissionsForResourceGroup_List
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Authorization.Models.AzurePermission" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAzurePermissionsForResourceGroupsAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.Authorization.Models.AzurePermission&gt; GetAzurePermissionsForResourceGroupsAsync (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Authorization.Models.AzurePermission&gt; GetAzurePermissionsForResourceGroupsAsync(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetAzurePermissionsForResourceGroupsAsync(Azure.ResourceManager.Resources.ResourceGroupResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAzurePermissionsForResourceGroupsAsync (resourceGroupResource As ResourceGroupResource, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of AzurePermission)" />
      <MemberSignature Language="F#" Value="static member GetAzurePermissionsForResourceGroupsAsync : Azure.ResourceManager.Resources.ResourceGroupResource * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Authorization.Models.AzurePermission&gt;" Usage="Azure.ResourceManager.Authorization.AuthorizationExtensions.GetAzurePermissionsForResourceGroupsAsync (resourceGroupResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Authorization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Authorization.Models.AzurePermission&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all permissions the caller has for a resource group.
            Request Path: /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Authorization/permissions
            Operation Id: AzurePermissionsForResourceGroup_List
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Authorization.Models.AzurePermission" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAzurePermissionsForResources">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.Authorization.Models.AzurePermission&gt; GetAzurePermissionsForResources (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string resourceProviderNamespace, string parentResourcePath, string resourceType, string resourceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.Authorization.Models.AzurePermission&gt; GetAzurePermissionsForResources(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string resourceProviderNamespace, string parentResourcePath, string resourceType, string resourceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetAzurePermissionsForResources(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAzurePermissionsForResources (resourceGroupResource As ResourceGroupResource, resourceProviderNamespace As String, parentResourcePath As String, resourceType As String, resourceName As String, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of AzurePermission)" />
      <MemberSignature Language="F#" Value="static member GetAzurePermissionsForResources : Azure.ResourceManager.Resources.ResourceGroupResource * string * string * string * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Authorization.Models.AzurePermission&gt;" Usage="Azure.ResourceManager.Authorization.AuthorizationExtensions.GetAzurePermissionsForResources (resourceGroupResource, resourceProviderNamespace, parentResourcePath, resourceType, resourceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Authorization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Authorization.Models.AzurePermission&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="resourceProviderNamespace" Type="System.String" />
        <Parameter Name="parentResourcePath" Type="System.String" />
        <Parameter Name="resourceType" Type="System.String" />
        <Parameter Name="resourceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="resourceProviderNamespace"> The namespace of the resource provider. </param>
        <param name="parentResourcePath"> The parent resource identity. </param>
        <param name="resourceType"> The resource type of the resource. </param>
        <param name="resourceName"> The name of the resource to get the permissions for. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all permissions the caller has for a resource.
            Request Path: /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/permissions
            Operation Id: AzurePermissionsForResource_List
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Authorization.Models.AzurePermission" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="resourceProviderNamespace" /> or <paramref name="resourceName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceProviderNamespace" />, <paramref name="parentResourcePath" />, <paramref name="resourceType" /> or <paramref name="resourceName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAzurePermissionsForResourcesAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.Authorization.Models.AzurePermission&gt; GetAzurePermissionsForResourcesAsync (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string resourceProviderNamespace, string parentResourcePath, string resourceType, string resourceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Authorization.Models.AzurePermission&gt; GetAzurePermissionsForResourcesAsync(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string resourceProviderNamespace, string parentResourcePath, string resourceType, string resourceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetAzurePermissionsForResourcesAsync(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAzurePermissionsForResourcesAsync (resourceGroupResource As ResourceGroupResource, resourceProviderNamespace As String, parentResourcePath As String, resourceType As String, resourceName As String, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of AzurePermission)" />
      <MemberSignature Language="F#" Value="static member GetAzurePermissionsForResourcesAsync : Azure.ResourceManager.Resources.ResourceGroupResource * string * string * string * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Authorization.Models.AzurePermission&gt;" Usage="Azure.ResourceManager.Authorization.AuthorizationExtensions.GetAzurePermissionsForResourcesAsync (resourceGroupResource, resourceProviderNamespace, parentResourcePath, resourceType, resourceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Authorization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Authorization.Models.AzurePermission&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="resourceProviderNamespace" Type="System.String" />
        <Parameter Name="parentResourcePath" Type="System.String" />
        <Parameter Name="resourceType" Type="System.String" />
        <Parameter Name="resourceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="resourceProviderNamespace"> The namespace of the resource provider. </param>
        <param name="parentResourcePath"> The parent resource identity. </param>
        <param name="resourceType"> The resource type of the resource. </param>
        <param name="resourceName"> The name of the resource to get the permissions for. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all permissions the caller has for a resource.
            Request Path: /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/permissions
            Operation Id: AzurePermissionsForResource_List
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Authorization.Models.AzurePermission" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="resourceProviderNamespace" /> or <paramref name="resourceName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceProviderNamespace" />, <paramref name="parentResourcePath" />, <paramref name="resourceType" /> or <paramref name="resourceName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetClassicAdministrators">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.Authorization.Models.ClassicAdministrator&gt; GetClassicAdministrators (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.Authorization.Models.ClassicAdministrator&gt; GetClassicAdministrators(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetClassicAdministrators(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetClassicAdministrators (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ClassicAdministrator)" />
      <MemberSignature Language="F#" Value="static member GetClassicAdministrators : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Authorization.Models.ClassicAdministrator&gt;" Usage="Azure.ResourceManager.Authorization.AuthorizationExtensions.GetClassicAdministrators (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Authorization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Authorization.Models.ClassicAdministrator&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets service administrator, account administrator, and co-administrators for the subscription.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Authorization/classicAdministrators
            Operation Id: ClassicAdministrators_List
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Authorization.Models.ClassicAdministrator" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetClassicAdministratorsAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.Authorization.Models.ClassicAdministrator&gt; GetClassicAdministratorsAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Authorization.Models.ClassicAdministrator&gt; GetClassicAdministratorsAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetClassicAdministratorsAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetClassicAdministratorsAsync (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ClassicAdministrator)" />
      <MemberSignature Language="F#" Value="static member GetClassicAdministratorsAsync : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Authorization.Models.ClassicAdministrator&gt;" Usage="Azure.ResourceManager.Authorization.AuthorizationExtensions.GetClassicAdministratorsAsync (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Authorization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Authorization.Models.ClassicAdministrator&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets service administrator, account administrator, and co-administrators for the subscription.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Authorization/classicAdministrators
            Operation Id: ClassicAdministrators_List
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Authorization.Models.ClassicAdministrator" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProviderOperations">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Authorization.ProviderOperationsCollection GetProviderOperations (this Azure.ResourceManager.Resources.TenantResource tenantResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Authorization.ProviderOperationsCollection GetProviderOperations(class Azure.ResourceManager.Resources.TenantResource tenantResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetProviderOperations(Azure.ResourceManager.Resources.TenantResource)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetProviderOperations (tenantResource As TenantResource) As ProviderOperationsCollection" />
      <MemberSignature Language="F#" Value="static member GetProviderOperations : Azure.ResourceManager.Resources.TenantResource -&gt; Azure.ResourceManager.Authorization.ProviderOperationsCollection" Usage="Azure.ResourceManager.Authorization.AuthorizationExtensions.GetProviderOperations tenantResource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Authorization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Authorization.ProviderOperationsCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <summary> Gets a collection of ProviderOperationsResources in the TenantResource. </summary>
        <returns> An object representing collection of ProviderOperationsResources and their operations over a ProviderOperationsResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProviderOperations">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.Authorization.ProviderOperationsResource&gt; GetProviderOperations (this Azure.ResourceManager.Resources.TenantResource tenantResource, string resourceProviderNamespace, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.Authorization.ProviderOperationsResource&gt; GetProviderOperations(class Azure.ResourceManager.Resources.TenantResource tenantResource, string resourceProviderNamespace, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetProviderOperations(Azure.ResourceManager.Resources.TenantResource,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetProviderOperations (tenantResource As TenantResource, resourceProviderNamespace As String, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ProviderOperationsResource)" />
      <MemberSignature Language="F#" Value="static member GetProviderOperations : Azure.ResourceManager.Resources.TenantResource * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Authorization.ProviderOperationsResource&gt;" Usage="Azure.ResourceManager.Authorization.AuthorizationExtensions.GetProviderOperations (tenantResource, resourceProviderNamespace, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Authorization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Authorization.ProviderOperationsResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="resourceProviderNamespace" Type="System.String" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="resourceProviderNamespace"> The namespace of the resource provider. </param>
        <param name="expand"> Specifies whether to expand the values. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets provider operations metadata for the specified resource provider.
            Request Path: /providers/Microsoft.Authorization/providerOperations/{resourceProviderNamespace}
            Operation Id: ProviderOperationsMetadata_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="resourceProviderNamespace" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceProviderNamespace" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetProviderOperationsAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Authorization.ProviderOperationsResource&gt;&gt; GetProviderOperationsAsync (this Azure.ResourceManager.Resources.TenantResource tenantResource, string resourceProviderNamespace, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Authorization.ProviderOperationsResource&gt;&gt; GetProviderOperationsAsync(class Azure.ResourceManager.Resources.TenantResource tenantResource, string resourceProviderNamespace, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetProviderOperationsAsync(Azure.ResourceManager.Resources.TenantResource,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetProviderOperationsAsync (tenantResource As TenantResource, resourceProviderNamespace As String, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ProviderOperationsResource))" />
      <MemberSignature Language="F#" Value="static member GetProviderOperationsAsync : Azure.ResourceManager.Resources.TenantResource * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Authorization.ProviderOperationsResource&gt;&gt;" Usage="Azure.ResourceManager.Authorization.AuthorizationExtensions.GetProviderOperationsAsync (tenantResource, resourceProviderNamespace, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Authorization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Authorization.ProviderOperationsResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="resourceProviderNamespace" Type="System.String" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="resourceProviderNamespace"> The namespace of the resource provider. </param>
        <param name="expand"> Specifies whether to expand the values. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets provider operations metadata for the specified resource provider.
            Request Path: /providers/Microsoft.Authorization/providerOperations/{resourceProviderNamespace}
            Operation Id: ProviderOperationsMetadata_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="resourceProviderNamespace" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceProviderNamespace" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetProviderOperationsResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Authorization.ProviderOperationsResource GetProviderOperationsResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Authorization.ProviderOperationsResource GetProviderOperationsResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetProviderOperationsResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetProviderOperationsResource (client As ArmClient, id As ResourceIdentifier) As ProviderOperationsResource" />
      <MemberSignature Language="F#" Value="static member GetProviderOperationsResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Authorization.ProviderOperationsResource" Usage="Azure.ResourceManager.Authorization.AuthorizationExtensions.GetProviderOperationsResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Authorization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Authorization.ProviderOperationsResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Authorization.ProviderOperationsResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Authorization.ProviderOperationsResource.CreateResourceIdentifier(System.String)" /> to create a <see cref="T:Azure.ResourceManager.Authorization.ProviderOperationsResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Authorization.ProviderOperationsResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRoleAssignment">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.Authorization.RoleAssignmentResource&gt; GetRoleAssignment (this Azure.ResourceManager.ArmResource armResource, string roleAssignmentName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.Authorization.RoleAssignmentResource&gt; GetRoleAssignment(class Azure.ResourceManager.ArmResource armResource, string roleAssignmentName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleAssignment(Azure.ResourceManager.ArmResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRoleAssignment (armResource As ArmResource, roleAssignmentName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of RoleAssignmentResource)" />
      <MemberSignature Language="F#" Value="static member GetRoleAssignment : Azure.ResourceManager.ArmResource * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Authorization.RoleAssignmentResource&gt;" Usage="Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleAssignment (armResource, roleAssignmentName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Authorization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Authorization.RoleAssignmentResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="armResource" Type="Azure.ResourceManager.ArmResource" RefType="this" />
        <Parameter Name="roleAssignmentName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="armResource"> The <see cref="T:Azure.ResourceManager.ArmResource" /> instance the method will execute against. </param>
        <param name="roleAssignmentName"> The name of the role assignment to get. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the specified role assignment.
            Request Path: /{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}
            Operation Id: RoleAssignments_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="roleAssignmentName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="roleAssignmentName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRoleAssignmentAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Authorization.RoleAssignmentResource&gt;&gt; GetRoleAssignmentAsync (this Azure.ResourceManager.ArmResource armResource, string roleAssignmentName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Authorization.RoleAssignmentResource&gt;&gt; GetRoleAssignmentAsync(class Azure.ResourceManager.ArmResource armResource, string roleAssignmentName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleAssignmentAsync(Azure.ResourceManager.ArmResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRoleAssignmentAsync (armResource As ArmResource, roleAssignmentName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of RoleAssignmentResource))" />
      <MemberSignature Language="F#" Value="static member GetRoleAssignmentAsync : Azure.ResourceManager.ArmResource * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Authorization.RoleAssignmentResource&gt;&gt;" Usage="Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleAssignmentAsync (armResource, roleAssignmentName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Authorization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Authorization.RoleAssignmentResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="armResource" Type="Azure.ResourceManager.ArmResource" RefType="this" />
        <Parameter Name="roleAssignmentName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="armResource"> The <see cref="T:Azure.ResourceManager.ArmResource" /> instance the method will execute against. </param>
        <param name="roleAssignmentName"> The name of the role assignment to get. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the specified role assignment.
            Request Path: /{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}
            Operation Id: RoleAssignments_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="roleAssignmentName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="roleAssignmentName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRoleAssignmentResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Authorization.RoleAssignmentResource GetRoleAssignmentResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Authorization.RoleAssignmentResource GetRoleAssignmentResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleAssignmentResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRoleAssignmentResource (client As ArmClient, id As ResourceIdentifier) As RoleAssignmentResource" />
      <MemberSignature Language="F#" Value="static member GetRoleAssignmentResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Authorization.RoleAssignmentResource" Usage="Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleAssignmentResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Authorization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Authorization.RoleAssignmentResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Authorization.RoleAssignmentResource.CreateResourceIdentifier(System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRoleAssignments">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Authorization.RoleAssignmentCollection GetRoleAssignments (this Azure.ResourceManager.ArmResource armResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Authorization.RoleAssignmentCollection GetRoleAssignments(class Azure.ResourceManager.ArmResource armResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleAssignments(Azure.ResourceManager.ArmResource)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRoleAssignments (armResource As ArmResource) As RoleAssignmentCollection" />
      <MemberSignature Language="F#" Value="static member GetRoleAssignments : Azure.ResourceManager.ArmResource -&gt; Azure.ResourceManager.Authorization.RoleAssignmentCollection" Usage="Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleAssignments armResource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Authorization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Authorization.RoleAssignmentCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="armResource" Type="Azure.ResourceManager.ArmResource" RefType="this" />
      </Parameters>
      <Docs>
        <param name="armResource"> The <see cref="T:Azure.ResourceManager.ArmResource" /> instance the method will execute against. </param>
        <summary> Gets a collection of RoleAssignmentResources in the ArmResource. </summary>
        <returns> An object representing collection of RoleAssignmentResources and their operations over a RoleAssignmentResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRoleAssignmentSchedule">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.Authorization.RoleAssignmentScheduleResource&gt; GetRoleAssignmentSchedule (this Azure.ResourceManager.ArmResource armResource, string roleAssignmentScheduleName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.Authorization.RoleAssignmentScheduleResource&gt; GetRoleAssignmentSchedule(class Azure.ResourceManager.ArmResource armResource, string roleAssignmentScheduleName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleAssignmentSchedule(Azure.ResourceManager.ArmResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRoleAssignmentSchedule (armResource As ArmResource, roleAssignmentScheduleName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of RoleAssignmentScheduleResource)" />
      <MemberSignature Language="F#" Value="static member GetRoleAssignmentSchedule : Azure.ResourceManager.ArmResource * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Authorization.RoleAssignmentScheduleResource&gt;" Usage="Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleAssignmentSchedule (armResource, roleAssignmentScheduleName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Authorization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Authorization.RoleAssignmentScheduleResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="armResource" Type="Azure.ResourceManager.ArmResource" RefType="this" />
        <Parameter Name="roleAssignmentScheduleName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="armResource"> The <see cref="T:Azure.ResourceManager.ArmResource" /> instance the method will execute against. </param>
        <param name="roleAssignmentScheduleName"> The name (guid) of the role assignment schedule to get. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the specified role assignment schedule for a resource scope
            Request Path: /{scope}/providers/Microsoft.Authorization/roleAssignmentSchedules/{roleAssignmentScheduleName}
            Operation Id: RoleAssignmentSchedules_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="roleAssignmentScheduleName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="roleAssignmentScheduleName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRoleAssignmentScheduleAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Authorization.RoleAssignmentScheduleResource&gt;&gt; GetRoleAssignmentScheduleAsync (this Azure.ResourceManager.ArmResource armResource, string roleAssignmentScheduleName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Authorization.RoleAssignmentScheduleResource&gt;&gt; GetRoleAssignmentScheduleAsync(class Azure.ResourceManager.ArmResource armResource, string roleAssignmentScheduleName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleAssignmentScheduleAsync(Azure.ResourceManager.ArmResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRoleAssignmentScheduleAsync (armResource As ArmResource, roleAssignmentScheduleName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of RoleAssignmentScheduleResource))" />
      <MemberSignature Language="F#" Value="static member GetRoleAssignmentScheduleAsync : Azure.ResourceManager.ArmResource * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Authorization.RoleAssignmentScheduleResource&gt;&gt;" Usage="Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleAssignmentScheduleAsync (armResource, roleAssignmentScheduleName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Authorization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Authorization.RoleAssignmentScheduleResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="armResource" Type="Azure.ResourceManager.ArmResource" RefType="this" />
        <Parameter Name="roleAssignmentScheduleName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="armResource"> The <see cref="T:Azure.ResourceManager.ArmResource" /> instance the method will execute against. </param>
        <param name="roleAssignmentScheduleName"> The name (guid) of the role assignment schedule to get. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the specified role assignment schedule for a resource scope
            Request Path: /{scope}/providers/Microsoft.Authorization/roleAssignmentSchedules/{roleAssignmentScheduleName}
            Operation Id: RoleAssignmentSchedules_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="roleAssignmentScheduleName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="roleAssignmentScheduleName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRoleAssignmentScheduleInstance">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceResource&gt; GetRoleAssignmentScheduleInstance (this Azure.ResourceManager.ArmResource armResource, string roleAssignmentScheduleInstanceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceResource&gt; GetRoleAssignmentScheduleInstance(class Azure.ResourceManager.ArmResource armResource, string roleAssignmentScheduleInstanceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleAssignmentScheduleInstance(Azure.ResourceManager.ArmResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRoleAssignmentScheduleInstance (armResource As ArmResource, roleAssignmentScheduleInstanceName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of RoleAssignmentScheduleInstanceResource)" />
      <MemberSignature Language="F#" Value="static member GetRoleAssignmentScheduleInstance : Azure.ResourceManager.ArmResource * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceResource&gt;" Usage="Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleAssignmentScheduleInstance (armResource, roleAssignmentScheduleInstanceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Authorization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="armResource" Type="Azure.ResourceManager.ArmResource" RefType="this" />
        <Parameter Name="roleAssignmentScheduleInstanceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="armResource"> The <see cref="T:Azure.ResourceManager.ArmResource" /> instance the method will execute against. </param>
        <param name="roleAssignmentScheduleInstanceName"> The name (hash of schedule name + time) of the role assignment schedule to get. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the specified role assignment schedule instance.
            Request Path: /{scope}/providers/Microsoft.Authorization/roleAssignmentScheduleInstances/{roleAssignmentScheduleInstanceName}
            Operation Id: RoleAssignmentScheduleInstances_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="roleAssignmentScheduleInstanceName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="roleAssignmentScheduleInstanceName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRoleAssignmentScheduleInstanceAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceResource&gt;&gt; GetRoleAssignmentScheduleInstanceAsync (this Azure.ResourceManager.ArmResource armResource, string roleAssignmentScheduleInstanceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceResource&gt;&gt; GetRoleAssignmentScheduleInstanceAsync(class Azure.ResourceManager.ArmResource armResource, string roleAssignmentScheduleInstanceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleAssignmentScheduleInstanceAsync(Azure.ResourceManager.ArmResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRoleAssignmentScheduleInstanceAsync (armResource As ArmResource, roleAssignmentScheduleInstanceName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of RoleAssignmentScheduleInstanceResource))" />
      <MemberSignature Language="F#" Value="static member GetRoleAssignmentScheduleInstanceAsync : Azure.ResourceManager.ArmResource * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceResource&gt;&gt;" Usage="Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleAssignmentScheduleInstanceAsync (armResource, roleAssignmentScheduleInstanceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Authorization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="armResource" Type="Azure.ResourceManager.ArmResource" RefType="this" />
        <Parameter Name="roleAssignmentScheduleInstanceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="armResource"> The <see cref="T:Azure.ResourceManager.ArmResource" /> instance the method will execute against. </param>
        <param name="roleAssignmentScheduleInstanceName"> The name (hash of schedule name + time) of the role assignment schedule to get. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the specified role assignment schedule instance.
            Request Path: /{scope}/providers/Microsoft.Authorization/roleAssignmentScheduleInstances/{roleAssignmentScheduleInstanceName}
            Operation Id: RoleAssignmentScheduleInstances_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="roleAssignmentScheduleInstanceName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="roleAssignmentScheduleInstanceName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRoleAssignmentScheduleInstanceResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceResource GetRoleAssignmentScheduleInstanceResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceResource GetRoleAssignmentScheduleInstanceResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleAssignmentScheduleInstanceResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRoleAssignmentScheduleInstanceResource (client As ArmClient, id As ResourceIdentifier) As RoleAssignmentScheduleInstanceResource" />
      <MemberSignature Language="F#" Value="static member GetRoleAssignmentScheduleInstanceResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceResource" Usage="Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleAssignmentScheduleInstanceResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Authorization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceResource.CreateResourceIdentifier(System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRoleAssignmentScheduleInstances">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceCollection GetRoleAssignmentScheduleInstances (this Azure.ResourceManager.ArmResource armResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceCollection GetRoleAssignmentScheduleInstances(class Azure.ResourceManager.ArmResource armResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleAssignmentScheduleInstances(Azure.ResourceManager.ArmResource)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRoleAssignmentScheduleInstances (armResource As ArmResource) As RoleAssignmentScheduleInstanceCollection" />
      <MemberSignature Language="F#" Value="static member GetRoleAssignmentScheduleInstances : Azure.ResourceManager.ArmResource -&gt; Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceCollection" Usage="Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleAssignmentScheduleInstances armResource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Authorization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="armResource" Type="Azure.ResourceManager.ArmResource" RefType="this" />
      </Parameters>
      <Docs>
        <param name="armResource"> The <see cref="T:Azure.ResourceManager.ArmResource" /> instance the method will execute against. </param>
        <summary> Gets a collection of RoleAssignmentScheduleInstanceResources in the ArmResource. </summary>
        <returns> An object representing collection of RoleAssignmentScheduleInstanceResources and their operations over a RoleAssignmentScheduleInstanceResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRoleAssignmentScheduleRequest">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestResource&gt; GetRoleAssignmentScheduleRequest (this Azure.ResourceManager.ArmResource armResource, string roleAssignmentScheduleRequestName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestResource&gt; GetRoleAssignmentScheduleRequest(class Azure.ResourceManager.ArmResource armResource, string roleAssignmentScheduleRequestName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleAssignmentScheduleRequest(Azure.ResourceManager.ArmResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRoleAssignmentScheduleRequest (armResource As ArmResource, roleAssignmentScheduleRequestName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of RoleAssignmentScheduleRequestResource)" />
      <MemberSignature Language="F#" Value="static member GetRoleAssignmentScheduleRequest : Azure.ResourceManager.ArmResource * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestResource&gt;" Usage="Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleAssignmentScheduleRequest (armResource, roleAssignmentScheduleRequestName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Authorization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="armResource" Type="Azure.ResourceManager.ArmResource" RefType="this" />
        <Parameter Name="roleAssignmentScheduleRequestName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="armResource"> The <see cref="T:Azure.ResourceManager.ArmResource" /> instance the method will execute against. </param>
        <param name="roleAssignmentScheduleRequestName"> The name (guid) of the role assignment schedule request to get. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the specified role assignment schedule request.
            Request Path: /{scope}/providers/Microsoft.Authorization/roleAssignmentScheduleRequests/{roleAssignmentScheduleRequestName}
            Operation Id: RoleAssignmentScheduleRequests_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="roleAssignmentScheduleRequestName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="roleAssignmentScheduleRequestName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRoleAssignmentScheduleRequestAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestResource&gt;&gt; GetRoleAssignmentScheduleRequestAsync (this Azure.ResourceManager.ArmResource armResource, string roleAssignmentScheduleRequestName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestResource&gt;&gt; GetRoleAssignmentScheduleRequestAsync(class Azure.ResourceManager.ArmResource armResource, string roleAssignmentScheduleRequestName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleAssignmentScheduleRequestAsync(Azure.ResourceManager.ArmResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRoleAssignmentScheduleRequestAsync (armResource As ArmResource, roleAssignmentScheduleRequestName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of RoleAssignmentScheduleRequestResource))" />
      <MemberSignature Language="F#" Value="static member GetRoleAssignmentScheduleRequestAsync : Azure.ResourceManager.ArmResource * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestResource&gt;&gt;" Usage="Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleAssignmentScheduleRequestAsync (armResource, roleAssignmentScheduleRequestName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Authorization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="armResource" Type="Azure.ResourceManager.ArmResource" RefType="this" />
        <Parameter Name="roleAssignmentScheduleRequestName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="armResource"> The <see cref="T:Azure.ResourceManager.ArmResource" /> instance the method will execute against. </param>
        <param name="roleAssignmentScheduleRequestName"> The name (guid) of the role assignment schedule request to get. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the specified role assignment schedule request.
            Request Path: /{scope}/providers/Microsoft.Authorization/roleAssignmentScheduleRequests/{roleAssignmentScheduleRequestName}
            Operation Id: RoleAssignmentScheduleRequests_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="roleAssignmentScheduleRequestName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="roleAssignmentScheduleRequestName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRoleAssignmentScheduleRequestResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestResource GetRoleAssignmentScheduleRequestResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestResource GetRoleAssignmentScheduleRequestResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleAssignmentScheduleRequestResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRoleAssignmentScheduleRequestResource (client As ArmClient, id As ResourceIdentifier) As RoleAssignmentScheduleRequestResource" />
      <MemberSignature Language="F#" Value="static member GetRoleAssignmentScheduleRequestResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestResource" Usage="Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleAssignmentScheduleRequestResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Authorization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestResource.CreateResourceIdentifier(System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRoleAssignmentScheduleRequests">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestCollection GetRoleAssignmentScheduleRequests (this Azure.ResourceManager.ArmResource armResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestCollection GetRoleAssignmentScheduleRequests(class Azure.ResourceManager.ArmResource armResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleAssignmentScheduleRequests(Azure.ResourceManager.ArmResource)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRoleAssignmentScheduleRequests (armResource As ArmResource) As RoleAssignmentScheduleRequestCollection" />
      <MemberSignature Language="F#" Value="static member GetRoleAssignmentScheduleRequests : Azure.ResourceManager.ArmResource -&gt; Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestCollection" Usage="Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleAssignmentScheduleRequests armResource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Authorization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="armResource" Type="Azure.ResourceManager.ArmResource" RefType="this" />
      </Parameters>
      <Docs>
        <param name="armResource"> The <see cref="T:Azure.ResourceManager.ArmResource" /> instance the method will execute against. </param>
        <summary> Gets a collection of RoleAssignmentScheduleRequestResources in the ArmResource. </summary>
        <returns> An object representing collection of RoleAssignmentScheduleRequestResources and their operations over a RoleAssignmentScheduleRequestResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRoleAssignmentScheduleResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Authorization.RoleAssignmentScheduleResource GetRoleAssignmentScheduleResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Authorization.RoleAssignmentScheduleResource GetRoleAssignmentScheduleResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleAssignmentScheduleResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRoleAssignmentScheduleResource (client As ArmClient, id As ResourceIdentifier) As RoleAssignmentScheduleResource" />
      <MemberSignature Language="F#" Value="static member GetRoleAssignmentScheduleResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Authorization.RoleAssignmentScheduleResource" Usage="Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleAssignmentScheduleResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Authorization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Authorization.RoleAssignmentScheduleResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleResource.CreateResourceIdentifier(System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRoleAssignmentSchedules">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Authorization.RoleAssignmentScheduleCollection GetRoleAssignmentSchedules (this Azure.ResourceManager.ArmResource armResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Authorization.RoleAssignmentScheduleCollection GetRoleAssignmentSchedules(class Azure.ResourceManager.ArmResource armResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleAssignmentSchedules(Azure.ResourceManager.ArmResource)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRoleAssignmentSchedules (armResource As ArmResource) As RoleAssignmentScheduleCollection" />
      <MemberSignature Language="F#" Value="static member GetRoleAssignmentSchedules : Azure.ResourceManager.ArmResource -&gt; Azure.ResourceManager.Authorization.RoleAssignmentScheduleCollection" Usage="Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleAssignmentSchedules armResource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Authorization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Authorization.RoleAssignmentScheduleCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="armResource" Type="Azure.ResourceManager.ArmResource" RefType="this" />
      </Parameters>
      <Docs>
        <param name="armResource"> The <see cref="T:Azure.ResourceManager.ArmResource" /> instance the method will execute against. </param>
        <summary> Gets a collection of RoleAssignmentScheduleResources in the ArmResource. </summary>
        <returns> An object representing collection of RoleAssignmentScheduleResources and their operations over a RoleAssignmentScheduleResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRoleDefinition">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.Authorization.RoleDefinitionResource&gt; GetRoleDefinition (this Azure.ResourceManager.ArmResource armResource, string roleDefinitionId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.Authorization.RoleDefinitionResource&gt; GetRoleDefinition(class Azure.ResourceManager.ArmResource armResource, string roleDefinitionId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleDefinition(Azure.ResourceManager.ArmResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRoleDefinition (armResource As ArmResource, roleDefinitionId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of RoleDefinitionResource)" />
      <MemberSignature Language="F#" Value="static member GetRoleDefinition : Azure.ResourceManager.ArmResource * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Authorization.RoleDefinitionResource&gt;" Usage="Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleDefinition (armResource, roleDefinitionId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Authorization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Authorization.RoleDefinitionResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="armResource" Type="Azure.ResourceManager.ArmResource" RefType="this" />
        <Parameter Name="roleDefinitionId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="armResource"> The <see cref="T:Azure.ResourceManager.ArmResource" /> instance the method will execute against. </param>
        <param name="roleDefinitionId"> The ID of the role definition. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get role definition by name (GUID).
            Request Path: /{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}
            Operation Id: RoleDefinitions_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="roleDefinitionId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="roleDefinitionId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRoleDefinitionAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Authorization.RoleDefinitionResource&gt;&gt; GetRoleDefinitionAsync (this Azure.ResourceManager.ArmResource armResource, string roleDefinitionId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Authorization.RoleDefinitionResource&gt;&gt; GetRoleDefinitionAsync(class Azure.ResourceManager.ArmResource armResource, string roleDefinitionId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleDefinitionAsync(Azure.ResourceManager.ArmResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRoleDefinitionAsync (armResource As ArmResource, roleDefinitionId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of RoleDefinitionResource))" />
      <MemberSignature Language="F#" Value="static member GetRoleDefinitionAsync : Azure.ResourceManager.ArmResource * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Authorization.RoleDefinitionResource&gt;&gt;" Usage="Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleDefinitionAsync (armResource, roleDefinitionId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Authorization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Authorization.RoleDefinitionResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="armResource" Type="Azure.ResourceManager.ArmResource" RefType="this" />
        <Parameter Name="roleDefinitionId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="armResource"> The <see cref="T:Azure.ResourceManager.ArmResource" /> instance the method will execute against. </param>
        <param name="roleDefinitionId"> The ID of the role definition. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get role definition by name (GUID).
            Request Path: /{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}
            Operation Id: RoleDefinitions_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="roleDefinitionId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="roleDefinitionId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRoleDefinitionResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Authorization.RoleDefinitionResource GetRoleDefinitionResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Authorization.RoleDefinitionResource GetRoleDefinitionResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleDefinitionResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRoleDefinitionResource (client As ArmClient, id As ResourceIdentifier) As RoleDefinitionResource" />
      <MemberSignature Language="F#" Value="static member GetRoleDefinitionResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Authorization.RoleDefinitionResource" Usage="Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleDefinitionResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Authorization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Authorization.RoleDefinitionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Authorization.RoleDefinitionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Authorization.RoleDefinitionResource.CreateResourceIdentifier(System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Authorization.RoleDefinitionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Authorization.RoleDefinitionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRoleDefinitions">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Authorization.RoleDefinitionCollection GetRoleDefinitions (this Azure.ResourceManager.ArmResource armResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Authorization.RoleDefinitionCollection GetRoleDefinitions(class Azure.ResourceManager.ArmResource armResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleDefinitions(Azure.ResourceManager.ArmResource)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRoleDefinitions (armResource As ArmResource) As RoleDefinitionCollection" />
      <MemberSignature Language="F#" Value="static member GetRoleDefinitions : Azure.ResourceManager.ArmResource -&gt; Azure.ResourceManager.Authorization.RoleDefinitionCollection" Usage="Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleDefinitions armResource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Authorization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Authorization.RoleDefinitionCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="armResource" Type="Azure.ResourceManager.ArmResource" RefType="this" />
      </Parameters>
      <Docs>
        <param name="armResource"> The <see cref="T:Azure.ResourceManager.ArmResource" /> instance the method will execute against. </param>
        <summary> Gets a collection of RoleDefinitionResources in the ArmResource. </summary>
        <returns> An object representing collection of RoleDefinitionResources and their operations over a RoleDefinitionResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRoleEligibilitySchedule">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.Authorization.RoleEligibilityScheduleResource&gt; GetRoleEligibilitySchedule (this Azure.ResourceManager.ArmResource armResource, string roleEligibilityScheduleName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.Authorization.RoleEligibilityScheduleResource&gt; GetRoleEligibilitySchedule(class Azure.ResourceManager.ArmResource armResource, string roleEligibilityScheduleName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleEligibilitySchedule(Azure.ResourceManager.ArmResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRoleEligibilitySchedule (armResource As ArmResource, roleEligibilityScheduleName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of RoleEligibilityScheduleResource)" />
      <MemberSignature Language="F#" Value="static member GetRoleEligibilitySchedule : Azure.ResourceManager.ArmResource * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Authorization.RoleEligibilityScheduleResource&gt;" Usage="Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleEligibilitySchedule (armResource, roleEligibilityScheduleName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Authorization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Authorization.RoleEligibilityScheduleResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="armResource" Type="Azure.ResourceManager.ArmResource" RefType="this" />
        <Parameter Name="roleEligibilityScheduleName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="armResource"> The <see cref="T:Azure.ResourceManager.ArmResource" /> instance the method will execute against. </param>
        <param name="roleEligibilityScheduleName"> The name (guid) of the role eligibility schedule to get. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the specified role eligibility schedule for a resource scope
            Request Path: /{scope}/providers/Microsoft.Authorization/roleEligibilitySchedules/{roleEligibilityScheduleName}
            Operation Id: RoleEligibilitySchedules_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="roleEligibilityScheduleName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="roleEligibilityScheduleName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRoleEligibilityScheduleAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Authorization.RoleEligibilityScheduleResource&gt;&gt; GetRoleEligibilityScheduleAsync (this Azure.ResourceManager.ArmResource armResource, string roleEligibilityScheduleName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Authorization.RoleEligibilityScheduleResource&gt;&gt; GetRoleEligibilityScheduleAsync(class Azure.ResourceManager.ArmResource armResource, string roleEligibilityScheduleName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleEligibilityScheduleAsync(Azure.ResourceManager.ArmResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRoleEligibilityScheduleAsync (armResource As ArmResource, roleEligibilityScheduleName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of RoleEligibilityScheduleResource))" />
      <MemberSignature Language="F#" Value="static member GetRoleEligibilityScheduleAsync : Azure.ResourceManager.ArmResource * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Authorization.RoleEligibilityScheduleResource&gt;&gt;" Usage="Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleEligibilityScheduleAsync (armResource, roleEligibilityScheduleName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Authorization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Authorization.RoleEligibilityScheduleResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="armResource" Type="Azure.ResourceManager.ArmResource" RefType="this" />
        <Parameter Name="roleEligibilityScheduleName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="armResource"> The <see cref="T:Azure.ResourceManager.ArmResource" /> instance the method will execute against. </param>
        <param name="roleEligibilityScheduleName"> The name (guid) of the role eligibility schedule to get. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the specified role eligibility schedule for a resource scope
            Request Path: /{scope}/providers/Microsoft.Authorization/roleEligibilitySchedules/{roleEligibilityScheduleName}
            Operation Id: RoleEligibilitySchedules_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="roleEligibilityScheduleName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="roleEligibilityScheduleName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRoleEligibilityScheduleInstance">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceResource&gt; GetRoleEligibilityScheduleInstance (this Azure.ResourceManager.ArmResource armResource, string roleEligibilityScheduleInstanceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceResource&gt; GetRoleEligibilityScheduleInstance(class Azure.ResourceManager.ArmResource armResource, string roleEligibilityScheduleInstanceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleEligibilityScheduleInstance(Azure.ResourceManager.ArmResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRoleEligibilityScheduleInstance (armResource As ArmResource, roleEligibilityScheduleInstanceName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of RoleEligibilityScheduleInstanceResource)" />
      <MemberSignature Language="F#" Value="static member GetRoleEligibilityScheduleInstance : Azure.ResourceManager.ArmResource * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceResource&gt;" Usage="Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleEligibilityScheduleInstance (armResource, roleEligibilityScheduleInstanceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Authorization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="armResource" Type="Azure.ResourceManager.ArmResource" RefType="this" />
        <Parameter Name="roleEligibilityScheduleInstanceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="armResource"> The <see cref="T:Azure.ResourceManager.ArmResource" /> instance the method will execute against. </param>
        <param name="roleEligibilityScheduleInstanceName"> The name (hash of schedule name + time) of the role eligibility schedule to get. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the specified role eligibility schedule instance.
            Request Path: /{scope}/providers/Microsoft.Authorization/roleEligibilityScheduleInstances/{roleEligibilityScheduleInstanceName}
            Operation Id: RoleEligibilityScheduleInstances_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="roleEligibilityScheduleInstanceName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="roleEligibilityScheduleInstanceName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRoleEligibilityScheduleInstanceAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceResource&gt;&gt; GetRoleEligibilityScheduleInstanceAsync (this Azure.ResourceManager.ArmResource armResource, string roleEligibilityScheduleInstanceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceResource&gt;&gt; GetRoleEligibilityScheduleInstanceAsync(class Azure.ResourceManager.ArmResource armResource, string roleEligibilityScheduleInstanceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleEligibilityScheduleInstanceAsync(Azure.ResourceManager.ArmResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRoleEligibilityScheduleInstanceAsync (armResource As ArmResource, roleEligibilityScheduleInstanceName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of RoleEligibilityScheduleInstanceResource))" />
      <MemberSignature Language="F#" Value="static member GetRoleEligibilityScheduleInstanceAsync : Azure.ResourceManager.ArmResource * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceResource&gt;&gt;" Usage="Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleEligibilityScheduleInstanceAsync (armResource, roleEligibilityScheduleInstanceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Authorization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="armResource" Type="Azure.ResourceManager.ArmResource" RefType="this" />
        <Parameter Name="roleEligibilityScheduleInstanceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="armResource"> The <see cref="T:Azure.ResourceManager.ArmResource" /> instance the method will execute against. </param>
        <param name="roleEligibilityScheduleInstanceName"> The name (hash of schedule name + time) of the role eligibility schedule to get. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the specified role eligibility schedule instance.
            Request Path: /{scope}/providers/Microsoft.Authorization/roleEligibilityScheduleInstances/{roleEligibilityScheduleInstanceName}
            Operation Id: RoleEligibilityScheduleInstances_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="roleEligibilityScheduleInstanceName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="roleEligibilityScheduleInstanceName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRoleEligibilityScheduleInstanceResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceResource GetRoleEligibilityScheduleInstanceResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceResource GetRoleEligibilityScheduleInstanceResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleEligibilityScheduleInstanceResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRoleEligibilityScheduleInstanceResource (client As ArmClient, id As ResourceIdentifier) As RoleEligibilityScheduleInstanceResource" />
      <MemberSignature Language="F#" Value="static member GetRoleEligibilityScheduleInstanceResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceResource" Usage="Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleEligibilityScheduleInstanceResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Authorization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceResource.CreateResourceIdentifier(System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRoleEligibilityScheduleInstances">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceCollection GetRoleEligibilityScheduleInstances (this Azure.ResourceManager.ArmResource armResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceCollection GetRoleEligibilityScheduleInstances(class Azure.ResourceManager.ArmResource armResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleEligibilityScheduleInstances(Azure.ResourceManager.ArmResource)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRoleEligibilityScheduleInstances (armResource As ArmResource) As RoleEligibilityScheduleInstanceCollection" />
      <MemberSignature Language="F#" Value="static member GetRoleEligibilityScheduleInstances : Azure.ResourceManager.ArmResource -&gt; Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceCollection" Usage="Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleEligibilityScheduleInstances armResource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Authorization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="armResource" Type="Azure.ResourceManager.ArmResource" RefType="this" />
      </Parameters>
      <Docs>
        <param name="armResource"> The <see cref="T:Azure.ResourceManager.ArmResource" /> instance the method will execute against. </param>
        <summary> Gets a collection of RoleEligibilityScheduleInstanceResources in the ArmResource. </summary>
        <returns> An object representing collection of RoleEligibilityScheduleInstanceResources and their operations over a RoleEligibilityScheduleInstanceResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRoleEligibilityScheduleRequest">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestResource&gt; GetRoleEligibilityScheduleRequest (this Azure.ResourceManager.ArmResource armResource, string roleEligibilityScheduleRequestName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestResource&gt; GetRoleEligibilityScheduleRequest(class Azure.ResourceManager.ArmResource armResource, string roleEligibilityScheduleRequestName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleEligibilityScheduleRequest(Azure.ResourceManager.ArmResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRoleEligibilityScheduleRequest (armResource As ArmResource, roleEligibilityScheduleRequestName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of RoleEligibilityScheduleRequestResource)" />
      <MemberSignature Language="F#" Value="static member GetRoleEligibilityScheduleRequest : Azure.ResourceManager.ArmResource * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestResource&gt;" Usage="Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleEligibilityScheduleRequest (armResource, roleEligibilityScheduleRequestName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Authorization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="armResource" Type="Azure.ResourceManager.ArmResource" RefType="this" />
        <Parameter Name="roleEligibilityScheduleRequestName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="armResource"> The <see cref="T:Azure.ResourceManager.ArmResource" /> instance the method will execute against. </param>
        <param name="roleEligibilityScheduleRequestName"> The name (guid) of the role eligibility schedule request to get. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the specified role eligibility schedule request.
            Request Path: /{scope}/providers/Microsoft.Authorization/roleEligibilityScheduleRequests/{roleEligibilityScheduleRequestName}
            Operation Id: RoleEligibilityScheduleRequests_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="roleEligibilityScheduleRequestName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="roleEligibilityScheduleRequestName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRoleEligibilityScheduleRequestAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestResource&gt;&gt; GetRoleEligibilityScheduleRequestAsync (this Azure.ResourceManager.ArmResource armResource, string roleEligibilityScheduleRequestName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestResource&gt;&gt; GetRoleEligibilityScheduleRequestAsync(class Azure.ResourceManager.ArmResource armResource, string roleEligibilityScheduleRequestName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleEligibilityScheduleRequestAsync(Azure.ResourceManager.ArmResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRoleEligibilityScheduleRequestAsync (armResource As ArmResource, roleEligibilityScheduleRequestName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of RoleEligibilityScheduleRequestResource))" />
      <MemberSignature Language="F#" Value="static member GetRoleEligibilityScheduleRequestAsync : Azure.ResourceManager.ArmResource * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestResource&gt;&gt;" Usage="Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleEligibilityScheduleRequestAsync (armResource, roleEligibilityScheduleRequestName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Authorization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="armResource" Type="Azure.ResourceManager.ArmResource" RefType="this" />
        <Parameter Name="roleEligibilityScheduleRequestName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="armResource"> The <see cref="T:Azure.ResourceManager.ArmResource" /> instance the method will execute against. </param>
        <param name="roleEligibilityScheduleRequestName"> The name (guid) of the role eligibility schedule request to get. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the specified role eligibility schedule request.
            Request Path: /{scope}/providers/Microsoft.Authorization/roleEligibilityScheduleRequests/{roleEligibilityScheduleRequestName}
            Operation Id: RoleEligibilityScheduleRequests_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="roleEligibilityScheduleRequestName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="roleEligibilityScheduleRequestName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRoleEligibilityScheduleRequestResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestResource GetRoleEligibilityScheduleRequestResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestResource GetRoleEligibilityScheduleRequestResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleEligibilityScheduleRequestResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRoleEligibilityScheduleRequestResource (client As ArmClient, id As ResourceIdentifier) As RoleEligibilityScheduleRequestResource" />
      <MemberSignature Language="F#" Value="static member GetRoleEligibilityScheduleRequestResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestResource" Usage="Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleEligibilityScheduleRequestResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Authorization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestResource.CreateResourceIdentifier(System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRoleEligibilityScheduleRequests">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestCollection GetRoleEligibilityScheduleRequests (this Azure.ResourceManager.ArmResource armResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestCollection GetRoleEligibilityScheduleRequests(class Azure.ResourceManager.ArmResource armResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleEligibilityScheduleRequests(Azure.ResourceManager.ArmResource)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRoleEligibilityScheduleRequests (armResource As ArmResource) As RoleEligibilityScheduleRequestCollection" />
      <MemberSignature Language="F#" Value="static member GetRoleEligibilityScheduleRequests : Azure.ResourceManager.ArmResource -&gt; Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestCollection" Usage="Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleEligibilityScheduleRequests armResource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Authorization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="armResource" Type="Azure.ResourceManager.ArmResource" RefType="this" />
      </Parameters>
      <Docs>
        <param name="armResource"> The <see cref="T:Azure.ResourceManager.ArmResource" /> instance the method will execute against. </param>
        <summary> Gets a collection of RoleEligibilityScheduleRequestResources in the ArmResource. </summary>
        <returns> An object representing collection of RoleEligibilityScheduleRequestResources and their operations over a RoleEligibilityScheduleRequestResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRoleEligibilityScheduleResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Authorization.RoleEligibilityScheduleResource GetRoleEligibilityScheduleResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Authorization.RoleEligibilityScheduleResource GetRoleEligibilityScheduleResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleEligibilityScheduleResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRoleEligibilityScheduleResource (client As ArmClient, id As ResourceIdentifier) As RoleEligibilityScheduleResource" />
      <MemberSignature Language="F#" Value="static member GetRoleEligibilityScheduleResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Authorization.RoleEligibilityScheduleResource" Usage="Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleEligibilityScheduleResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Authorization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Authorization.RoleEligibilityScheduleResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleResource.CreateResourceIdentifier(System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRoleEligibilitySchedules">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Authorization.RoleEligibilityScheduleCollection GetRoleEligibilitySchedules (this Azure.ResourceManager.ArmResource armResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Authorization.RoleEligibilityScheduleCollection GetRoleEligibilitySchedules(class Azure.ResourceManager.ArmResource armResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleEligibilitySchedules(Azure.ResourceManager.ArmResource)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRoleEligibilitySchedules (armResource As ArmResource) As RoleEligibilityScheduleCollection" />
      <MemberSignature Language="F#" Value="static member GetRoleEligibilitySchedules : Azure.ResourceManager.ArmResource -&gt; Azure.ResourceManager.Authorization.RoleEligibilityScheduleCollection" Usage="Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleEligibilitySchedules armResource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Authorization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Authorization.RoleEligibilityScheduleCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="armResource" Type="Azure.ResourceManager.ArmResource" RefType="this" />
      </Parameters>
      <Docs>
        <param name="armResource"> The <see cref="T:Azure.ResourceManager.ArmResource" /> instance the method will execute against. </param>
        <summary> Gets a collection of RoleEligibilityScheduleResources in the ArmResource. </summary>
        <returns> An object representing collection of RoleEligibilityScheduleResources and their operations over a RoleEligibilityScheduleResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRoleManagementPolicies">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Authorization.RoleManagementPolicyCollection GetRoleManagementPolicies (this Azure.ResourceManager.ArmResource armResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Authorization.RoleManagementPolicyCollection GetRoleManagementPolicies(class Azure.ResourceManager.ArmResource armResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleManagementPolicies(Azure.ResourceManager.ArmResource)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRoleManagementPolicies (armResource As ArmResource) As RoleManagementPolicyCollection" />
      <MemberSignature Language="F#" Value="static member GetRoleManagementPolicies : Azure.ResourceManager.ArmResource -&gt; Azure.ResourceManager.Authorization.RoleManagementPolicyCollection" Usage="Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleManagementPolicies armResource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Authorization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Authorization.RoleManagementPolicyCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="armResource" Type="Azure.ResourceManager.ArmResource" RefType="this" />
      </Parameters>
      <Docs>
        <param name="armResource"> The <see cref="T:Azure.ResourceManager.ArmResource" /> instance the method will execute against. </param>
        <summary> Gets a collection of RoleManagementPolicyResources in the ArmResource. </summary>
        <returns> An object representing collection of RoleManagementPolicyResources and their operations over a RoleManagementPolicyResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRoleManagementPolicy">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.Authorization.RoleManagementPolicyResource&gt; GetRoleManagementPolicy (this Azure.ResourceManager.ArmResource armResource, string roleManagementPolicyName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.Authorization.RoleManagementPolicyResource&gt; GetRoleManagementPolicy(class Azure.ResourceManager.ArmResource armResource, string roleManagementPolicyName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleManagementPolicy(Azure.ResourceManager.ArmResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRoleManagementPolicy (armResource As ArmResource, roleManagementPolicyName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of RoleManagementPolicyResource)" />
      <MemberSignature Language="F#" Value="static member GetRoleManagementPolicy : Azure.ResourceManager.ArmResource * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Authorization.RoleManagementPolicyResource&gt;" Usage="Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleManagementPolicy (armResource, roleManagementPolicyName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Authorization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Authorization.RoleManagementPolicyResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="armResource" Type="Azure.ResourceManager.ArmResource" RefType="this" />
        <Parameter Name="roleManagementPolicyName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="armResource"> The <see cref="T:Azure.ResourceManager.ArmResource" /> instance the method will execute against. </param>
        <param name="roleManagementPolicyName"> The name (guid) of the role management policy to get. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the specified role management policy for a resource scope
            Request Path: /{scope}/providers/Microsoft.Authorization/roleManagementPolicies/{roleManagementPolicyName}
            Operation Id: RoleManagementPolicies_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="roleManagementPolicyName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="roleManagementPolicyName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRoleManagementPolicyAssignment">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentResource&gt; GetRoleManagementPolicyAssignment (this Azure.ResourceManager.ArmResource armResource, string roleManagementPolicyAssignmentName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentResource&gt; GetRoleManagementPolicyAssignment(class Azure.ResourceManager.ArmResource armResource, string roleManagementPolicyAssignmentName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleManagementPolicyAssignment(Azure.ResourceManager.ArmResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRoleManagementPolicyAssignment (armResource As ArmResource, roleManagementPolicyAssignmentName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of RoleManagementPolicyAssignmentResource)" />
      <MemberSignature Language="F#" Value="static member GetRoleManagementPolicyAssignment : Azure.ResourceManager.ArmResource * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentResource&gt;" Usage="Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleManagementPolicyAssignment (armResource, roleManagementPolicyAssignmentName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Authorization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="armResource" Type="Azure.ResourceManager.ArmResource" RefType="this" />
        <Parameter Name="roleManagementPolicyAssignmentName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="armResource"> The <see cref="T:Azure.ResourceManager.ArmResource" /> instance the method will execute against. </param>
        <param name="roleManagementPolicyAssignmentName"> The name of format {guid_guid} the role management policy assignment to get. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the specified role management policy assignment for a resource scope
            Request Path: /{scope}/providers/Microsoft.Authorization/roleManagementPolicyAssignments/{roleManagementPolicyAssignmentName}
            Operation Id: RoleManagementPolicyAssignments_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="roleManagementPolicyAssignmentName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="roleManagementPolicyAssignmentName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRoleManagementPolicyAssignmentAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentResource&gt;&gt; GetRoleManagementPolicyAssignmentAsync (this Azure.ResourceManager.ArmResource armResource, string roleManagementPolicyAssignmentName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentResource&gt;&gt; GetRoleManagementPolicyAssignmentAsync(class Azure.ResourceManager.ArmResource armResource, string roleManagementPolicyAssignmentName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleManagementPolicyAssignmentAsync(Azure.ResourceManager.ArmResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRoleManagementPolicyAssignmentAsync (armResource As ArmResource, roleManagementPolicyAssignmentName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of RoleManagementPolicyAssignmentResource))" />
      <MemberSignature Language="F#" Value="static member GetRoleManagementPolicyAssignmentAsync : Azure.ResourceManager.ArmResource * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentResource&gt;&gt;" Usage="Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleManagementPolicyAssignmentAsync (armResource, roleManagementPolicyAssignmentName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Authorization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="armResource" Type="Azure.ResourceManager.ArmResource" RefType="this" />
        <Parameter Name="roleManagementPolicyAssignmentName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="armResource"> The <see cref="T:Azure.ResourceManager.ArmResource" /> instance the method will execute against. </param>
        <param name="roleManagementPolicyAssignmentName"> The name of format {guid_guid} the role management policy assignment to get. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the specified role management policy assignment for a resource scope
            Request Path: /{scope}/providers/Microsoft.Authorization/roleManagementPolicyAssignments/{roleManagementPolicyAssignmentName}
            Operation Id: RoleManagementPolicyAssignments_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="roleManagementPolicyAssignmentName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="roleManagementPolicyAssignmentName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRoleManagementPolicyAssignmentResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentResource GetRoleManagementPolicyAssignmentResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentResource GetRoleManagementPolicyAssignmentResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleManagementPolicyAssignmentResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRoleManagementPolicyAssignmentResource (client As ArmClient, id As ResourceIdentifier) As RoleManagementPolicyAssignmentResource" />
      <MemberSignature Language="F#" Value="static member GetRoleManagementPolicyAssignmentResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentResource" Usage="Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleManagementPolicyAssignmentResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Authorization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentResource.CreateResourceIdentifier(System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRoleManagementPolicyAssignments">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentCollection GetRoleManagementPolicyAssignments (this Azure.ResourceManager.ArmResource armResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentCollection GetRoleManagementPolicyAssignments(class Azure.ResourceManager.ArmResource armResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleManagementPolicyAssignments(Azure.ResourceManager.ArmResource)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRoleManagementPolicyAssignments (armResource As ArmResource) As RoleManagementPolicyAssignmentCollection" />
      <MemberSignature Language="F#" Value="static member GetRoleManagementPolicyAssignments : Azure.ResourceManager.ArmResource -&gt; Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentCollection" Usage="Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleManagementPolicyAssignments armResource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Authorization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="armResource" Type="Azure.ResourceManager.ArmResource" RefType="this" />
      </Parameters>
      <Docs>
        <param name="armResource"> The <see cref="T:Azure.ResourceManager.ArmResource" /> instance the method will execute against. </param>
        <summary> Gets a collection of RoleManagementPolicyAssignmentResources in the ArmResource. </summary>
        <returns> An object representing collection of RoleManagementPolicyAssignmentResources and their operations over a RoleManagementPolicyAssignmentResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRoleManagementPolicyAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Authorization.RoleManagementPolicyResource&gt;&gt; GetRoleManagementPolicyAsync (this Azure.ResourceManager.ArmResource armResource, string roleManagementPolicyName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Authorization.RoleManagementPolicyResource&gt;&gt; GetRoleManagementPolicyAsync(class Azure.ResourceManager.ArmResource armResource, string roleManagementPolicyName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleManagementPolicyAsync(Azure.ResourceManager.ArmResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRoleManagementPolicyAsync (armResource As ArmResource, roleManagementPolicyName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of RoleManagementPolicyResource))" />
      <MemberSignature Language="F#" Value="static member GetRoleManagementPolicyAsync : Azure.ResourceManager.ArmResource * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Authorization.RoleManagementPolicyResource&gt;&gt;" Usage="Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleManagementPolicyAsync (armResource, roleManagementPolicyName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Authorization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Authorization.RoleManagementPolicyResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="armResource" Type="Azure.ResourceManager.ArmResource" RefType="this" />
        <Parameter Name="roleManagementPolicyName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="armResource"> The <see cref="T:Azure.ResourceManager.ArmResource" /> instance the method will execute against. </param>
        <param name="roleManagementPolicyName"> The name (guid) of the role management policy to get. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the specified role management policy for a resource scope
            Request Path: /{scope}/providers/Microsoft.Authorization/roleManagementPolicies/{roleManagementPolicyName}
            Operation Id: RoleManagementPolicies_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="roleManagementPolicyName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="roleManagementPolicyName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRoleManagementPolicyResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Authorization.RoleManagementPolicyResource GetRoleManagementPolicyResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Authorization.RoleManagementPolicyResource GetRoleManagementPolicyResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleManagementPolicyResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRoleManagementPolicyResource (client As ArmClient, id As ResourceIdentifier) As RoleManagementPolicyResource" />
      <MemberSignature Language="F#" Value="static member GetRoleManagementPolicyResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Authorization.RoleManagementPolicyResource" Usage="Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleManagementPolicyResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Authorization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Authorization.RoleManagementPolicyResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Authorization.RoleManagementPolicyResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Authorization.RoleManagementPolicyResource.CreateResourceIdentifier(System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Authorization.RoleManagementPolicyResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Authorization.RoleManagementPolicyResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

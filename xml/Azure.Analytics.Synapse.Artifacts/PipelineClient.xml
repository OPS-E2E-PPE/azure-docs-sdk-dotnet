<Type Name="PipelineClient" FullName="Azure.Analytics.Synapse.Artifacts.PipelineClient">
  <TypeSignature Language="C#" Value="public class PipelineClient" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PipelineClient extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Analytics.Synapse.Artifacts.PipelineClient" />
  <TypeSignature Language="VB.NET" Value="Public Class PipelineClient" />
  <TypeSignature Language="F#" Value="type PipelineClient = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> The Pipeline service client. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PipelineClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Artifacts.PipelineClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of PipelineClient for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PipelineClient (Uri endpoint, Azure.Core.TokenCredential credential);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, class Azure.Core.TokenCredential credential) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Artifacts.PipelineClient.#ctor(System.Uri,Azure.Core.TokenCredential)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, credential As TokenCredential)" />
      <MemberSignature Language="F#" Value="new Azure.Analytics.Synapse.Artifacts.PipelineClient : Uri * Azure.Core.TokenCredential -&gt; Azure.Analytics.Synapse.Artifacts.PipelineClient" Usage="new Azure.Analytics.Synapse.Artifacts.PipelineClient (endpoint, credential)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.Core.TokenCredential" />
      </Parameters>
      <Docs>
        <param name="endpoint">To be added.</param>
        <param name="credential">To be added.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.Analytics.Synapse.Artifacts.PipelineClient" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PipelineClient (Uri endpoint, Azure.Core.TokenCredential credential, Azure.Analytics.Synapse.Artifacts.ArtifactsClientOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, class Azure.Core.TokenCredential credential, class Azure.Analytics.Synapse.Artifacts.ArtifactsClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Artifacts.PipelineClient.#ctor(System.Uri,Azure.Core.TokenCredential,Azure.Analytics.Synapse.Artifacts.ArtifactsClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, credential As TokenCredential, options As ArtifactsClientOptions)" />
      <MemberSignature Language="F#" Value="new Azure.Analytics.Synapse.Artifacts.PipelineClient : Uri * Azure.Core.TokenCredential * Azure.Analytics.Synapse.Artifacts.ArtifactsClientOptions -&gt; Azure.Analytics.Synapse.Artifacts.PipelineClient" Usage="new Azure.Analytics.Synapse.Artifacts.PipelineClient (endpoint, credential, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.Core.TokenCredential" />
        <Parameter Name="options" Type="Azure.Analytics.Synapse.Artifacts.ArtifactsClientOptions" />
      </Parameters>
      <Docs>
        <param name="endpoint">To be added.</param>
        <param name="credential">To be added.</param>
        <param name="options">To be added.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.Analytics.Synapse.Artifacts.PipelineClient" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePipelineRun">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Analytics.Synapse.Artifacts.Models.CreateRunResponse&gt; CreatePipelineRun (string pipelineName, string referencePipelineRunId = default, bool? isRecovery = default, string startActivityName = default, System.Collections.Generic.IDictionary&lt;string,object&gt; parameters = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Analytics.Synapse.Artifacts.Models.CreateRunResponse&gt; CreatePipelineRun(string pipelineName, string referencePipelineRunId, valuetype System.Nullable`1&lt;bool&gt; isRecovery, string startActivityName, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; parameters, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Artifacts.PipelineClient.CreatePipelineRun(System.String,System.String,System.Nullable{System.Boolean},System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreatePipelineRun (pipelineName As String, Optional referencePipelineRunId As String = Nothing, Optional isRecovery As Nullable(Of Boolean) = Nothing, Optional startActivityName As String = Nothing, Optional parameters As IDictionary(Of String, Object) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of CreateRunResponse)" />
      <MemberSignature Language="F#" Value="abstract member CreatePipelineRun : string * string * Nullable&lt;bool&gt; * string * System.Collections.Generic.IDictionary&lt;string, obj&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Analytics.Synapse.Artifacts.Models.CreateRunResponse&gt;&#xA;override this.CreatePipelineRun : string * string * Nullable&lt;bool&gt; * string * System.Collections.Generic.IDictionary&lt;string, obj&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Analytics.Synapse.Artifacts.Models.CreateRunResponse&gt;" Usage="pipelineClient.CreatePipelineRun (pipelineName, referencePipelineRunId, isRecovery, startActivityName, parameters, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Analytics.Synapse.Artifacts.Models.CreateRunResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pipelineName" Type="System.String" />
        <Parameter Name="referencePipelineRunId" Type="System.String" />
        <Parameter Name="isRecovery" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="startActivityName" Type="System.String" />
        <Parameter Name="parameters" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="pipelineName"> The pipeline name. </param>
        <param name="referencePipelineRunId"> The pipeline run identifier. If run ID is specified the parameters of the specified run will be used to create a new run. </param>
        <param name="isRecovery"> Recovery mode flag. If recovery mode is set to true, the specified referenced pipeline run and the new run will be grouped under the same groupId. </param>
        <param name="startActivityName"> In recovery mode, the rerun will start from this activity. If not specified, all activities will run. </param>
        <param name="parameters"> Parameters of the pipeline run. These parameters will be used only if the runId is not specified. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Creates a run of a pipeline. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePipelineRunAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.Artifacts.Models.CreateRunResponse&gt;&gt; CreatePipelineRunAsync (string pipelineName, string referencePipelineRunId = default, bool? isRecovery = default, string startActivityName = default, System.Collections.Generic.IDictionary&lt;string,object&gt; parameters = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Analytics.Synapse.Artifacts.Models.CreateRunResponse&gt;&gt; CreatePipelineRunAsync(string pipelineName, string referencePipelineRunId, valuetype System.Nullable`1&lt;bool&gt; isRecovery, string startActivityName, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; parameters, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Artifacts.PipelineClient.CreatePipelineRunAsync(System.String,System.String,System.Nullable{System.Boolean},System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreatePipelineRunAsync (pipelineName As String, Optional referencePipelineRunId As String = Nothing, Optional isRecovery As Nullable(Of Boolean) = Nothing, Optional startActivityName As String = Nothing, Optional parameters As IDictionary(Of String, Object) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of CreateRunResponse))" />
      <MemberSignature Language="F#" Value="abstract member CreatePipelineRunAsync : string * string * Nullable&lt;bool&gt; * string * System.Collections.Generic.IDictionary&lt;string, obj&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.Artifacts.Models.CreateRunResponse&gt;&gt;&#xA;override this.CreatePipelineRunAsync : string * string * Nullable&lt;bool&gt; * string * System.Collections.Generic.IDictionary&lt;string, obj&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.Artifacts.Models.CreateRunResponse&gt;&gt;" Usage="pipelineClient.CreatePipelineRunAsync (pipelineName, referencePipelineRunId, isRecovery, startActivityName, parameters, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.Artifacts.Models.CreateRunResponse&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pipelineName" Type="System.String" />
        <Parameter Name="referencePipelineRunId" Type="System.String" />
        <Parameter Name="isRecovery" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="startActivityName" Type="System.String" />
        <Parameter Name="parameters" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="pipelineName"> The pipeline name. </param>
        <param name="referencePipelineRunId"> The pipeline run identifier. If run ID is specified the parameters of the specified run will be used to create a new run. </param>
        <param name="isRecovery"> Recovery mode flag. If recovery mode is set to true, the specified referenced pipeline run and the new run will be grouped under the same groupId. </param>
        <param name="startActivityName"> In recovery mode, the rerun will start from this activity. If not specified, all activities will run. </param>
        <param name="parameters"> Parameters of the pipeline run. These parameters will be used only if the runId is not specified. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Creates a run of a pipeline. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPipeline">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Analytics.Synapse.Artifacts.Models.PipelineResource&gt; GetPipeline (string pipelineName, string ifNoneMatch = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Analytics.Synapse.Artifacts.Models.PipelineResource&gt; GetPipeline(string pipelineName, string ifNoneMatch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Artifacts.PipelineClient.GetPipeline(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPipeline (pipelineName As String, Optional ifNoneMatch As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of PipelineResource)" />
      <MemberSignature Language="F#" Value="abstract member GetPipeline : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Analytics.Synapse.Artifacts.Models.PipelineResource&gt;&#xA;override this.GetPipeline : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Analytics.Synapse.Artifacts.Models.PipelineResource&gt;" Usage="pipelineClient.GetPipeline (pipelineName, ifNoneMatch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Analytics.Synapse.Artifacts.Models.PipelineResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pipelineName" Type="System.String" />
        <Parameter Name="ifNoneMatch" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="pipelineName"> The pipeline name. </param>
        <param name="ifNoneMatch"> ETag of the pipeline entity. Should only be specified for get. If the ETag matches the existing entity tag, or if * was provided, then no content will be returned. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets a pipeline. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPipelineAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.Artifacts.Models.PipelineResource&gt;&gt; GetPipelineAsync (string pipelineName, string ifNoneMatch = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Analytics.Synapse.Artifacts.Models.PipelineResource&gt;&gt; GetPipelineAsync(string pipelineName, string ifNoneMatch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Artifacts.PipelineClient.GetPipelineAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPipelineAsync (pipelineName As String, Optional ifNoneMatch As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of PipelineResource))" />
      <MemberSignature Language="F#" Value="abstract member GetPipelineAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.Artifacts.Models.PipelineResource&gt;&gt;&#xA;override this.GetPipelineAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.Artifacts.Models.PipelineResource&gt;&gt;" Usage="pipelineClient.GetPipelineAsync (pipelineName, ifNoneMatch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.Artifacts.Models.PipelineResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pipelineName" Type="System.String" />
        <Parameter Name="ifNoneMatch" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="pipelineName"> The pipeline name. </param>
        <param name="ifNoneMatch"> ETag of the pipeline entity. Should only be specified for get. If the ETag matches the existing entity tag, or if * was provided, then no content will be returned. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets a pipeline. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPipelinesByWorkspace">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.Analytics.Synapse.Artifacts.Models.PipelineResource&gt; GetPipelinesByWorkspace (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.Analytics.Synapse.Artifacts.Models.PipelineResource&gt; GetPipelinesByWorkspace(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Artifacts.PipelineClient.GetPipelinesByWorkspace(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPipelinesByWorkspace (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of PipelineResource)" />
      <MemberSignature Language="F#" Value="abstract member GetPipelinesByWorkspace : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.Analytics.Synapse.Artifacts.Models.PipelineResource&gt;&#xA;override this.GetPipelinesByWorkspace : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.Analytics.Synapse.Artifacts.Models.PipelineResource&gt;" Usage="pipelineClient.GetPipelinesByWorkspace cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.Analytics.Synapse.Artifacts.Models.PipelineResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Lists pipelines. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPipelinesByWorkspaceAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.Analytics.Synapse.Artifacts.Models.PipelineResource&gt; GetPipelinesByWorkspaceAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.Analytics.Synapse.Artifacts.Models.PipelineResource&gt; GetPipelinesByWorkspaceAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Artifacts.PipelineClient.GetPipelinesByWorkspaceAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPipelinesByWorkspaceAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of PipelineResource)" />
      <MemberSignature Language="F#" Value="abstract member GetPipelinesByWorkspaceAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.Analytics.Synapse.Artifacts.Models.PipelineResource&gt;&#xA;override this.GetPipelinesByWorkspaceAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.Analytics.Synapse.Artifacts.Models.PipelineResource&gt;" Usage="pipelineClient.GetPipelinesByWorkspaceAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.Analytics.Synapse.Artifacts.Models.PipelineResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Lists pipelines. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartCreateOrUpdatePipeline">
      <MemberSignature Language="C#" Value="public virtual Azure.Analytics.Synapse.Artifacts.PipelineCreateOrUpdatePipelineOperation StartCreateOrUpdatePipeline (string pipelineName, Azure.Analytics.Synapse.Artifacts.Models.PipelineResource pipeline, string ifMatch = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Analytics.Synapse.Artifacts.PipelineCreateOrUpdatePipelineOperation StartCreateOrUpdatePipeline(string pipelineName, class Azure.Analytics.Synapse.Artifacts.Models.PipelineResource pipeline, string ifMatch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Artifacts.PipelineClient.StartCreateOrUpdatePipeline(System.String,Azure.Analytics.Synapse.Artifacts.Models.PipelineResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartCreateOrUpdatePipeline (pipelineName As String, pipeline As PipelineResource, Optional ifMatch As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As PipelineCreateOrUpdatePipelineOperation" />
      <MemberSignature Language="F#" Value="abstract member StartCreateOrUpdatePipeline : string * Azure.Analytics.Synapse.Artifacts.Models.PipelineResource * string * System.Threading.CancellationToken -&gt; Azure.Analytics.Synapse.Artifacts.PipelineCreateOrUpdatePipelineOperation&#xA;override this.StartCreateOrUpdatePipeline : string * Azure.Analytics.Synapse.Artifacts.Models.PipelineResource * string * System.Threading.CancellationToken -&gt; Azure.Analytics.Synapse.Artifacts.PipelineCreateOrUpdatePipelineOperation" Usage="pipelineClient.StartCreateOrUpdatePipeline (pipelineName, pipeline, ifMatch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Analytics.Synapse.Artifacts.PipelineCreateOrUpdatePipelineOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pipelineName" Type="System.String" />
        <Parameter Name="pipeline" Type="Azure.Analytics.Synapse.Artifacts.Models.PipelineResource" />
        <Parameter Name="ifMatch" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="pipelineName"> The pipeline name. </param>
        <param name="pipeline"> Pipeline resource definition. </param>
        <param name="ifMatch"> ETag of the pipeline entity.  Should only be specified for update, for which it should match existing entity or can be * for unconditional update. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Creates or updates a pipeline. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="pipelineName" /> or <paramref name="pipeline" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="StartCreateOrUpdatePipelineAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Analytics.Synapse.Artifacts.PipelineCreateOrUpdatePipelineOperation&gt; StartCreateOrUpdatePipelineAsync (string pipelineName, Azure.Analytics.Synapse.Artifacts.Models.PipelineResource pipeline, string ifMatch = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Analytics.Synapse.Artifacts.PipelineCreateOrUpdatePipelineOperation&gt; StartCreateOrUpdatePipelineAsync(string pipelineName, class Azure.Analytics.Synapse.Artifacts.Models.PipelineResource pipeline, string ifMatch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Artifacts.PipelineClient.StartCreateOrUpdatePipelineAsync(System.String,Azure.Analytics.Synapse.Artifacts.Models.PipelineResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartCreateOrUpdatePipelineAsync (pipelineName As String, pipeline As PipelineResource, Optional ifMatch As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of PipelineCreateOrUpdatePipelineOperation)" />
      <MemberSignature Language="F#" Value="abstract member StartCreateOrUpdatePipelineAsync : string * Azure.Analytics.Synapse.Artifacts.Models.PipelineResource * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Analytics.Synapse.Artifacts.PipelineCreateOrUpdatePipelineOperation&gt;&#xA;override this.StartCreateOrUpdatePipelineAsync : string * Azure.Analytics.Synapse.Artifacts.Models.PipelineResource * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Analytics.Synapse.Artifacts.PipelineCreateOrUpdatePipelineOperation&gt;" Usage="pipelineClient.StartCreateOrUpdatePipelineAsync (pipelineName, pipeline, ifMatch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Analytics.Synapse.Artifacts.PipelineCreateOrUpdatePipelineOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pipelineName" Type="System.String" />
        <Parameter Name="pipeline" Type="Azure.Analytics.Synapse.Artifacts.Models.PipelineResource" />
        <Parameter Name="ifMatch" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="pipelineName"> The pipeline name. </param>
        <param name="pipeline"> Pipeline resource definition. </param>
        <param name="ifMatch"> ETag of the pipeline entity.  Should only be specified for update, for which it should match existing entity or can be * for unconditional update. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Creates or updates a pipeline. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="pipelineName" /> or <paramref name="pipeline" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="StartDeletePipeline">
      <MemberSignature Language="C#" Value="public virtual Azure.Analytics.Synapse.Artifacts.PipelineDeletePipelineOperation StartDeletePipeline (string pipelineName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Analytics.Synapse.Artifacts.PipelineDeletePipelineOperation StartDeletePipeline(string pipelineName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Artifacts.PipelineClient.StartDeletePipeline(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartDeletePipeline (pipelineName As String, Optional cancellationToken As CancellationToken = Nothing) As PipelineDeletePipelineOperation" />
      <MemberSignature Language="F#" Value="abstract member StartDeletePipeline : string * System.Threading.CancellationToken -&gt; Azure.Analytics.Synapse.Artifacts.PipelineDeletePipelineOperation&#xA;override this.StartDeletePipeline : string * System.Threading.CancellationToken -&gt; Azure.Analytics.Synapse.Artifacts.PipelineDeletePipelineOperation" Usage="pipelineClient.StartDeletePipeline (pipelineName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Analytics.Synapse.Artifacts.PipelineDeletePipelineOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pipelineName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="pipelineName"> The pipeline name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Deletes a pipeline. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="pipelineName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="StartDeletePipelineAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Analytics.Synapse.Artifacts.PipelineDeletePipelineOperation&gt; StartDeletePipelineAsync (string pipelineName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Analytics.Synapse.Artifacts.PipelineDeletePipelineOperation&gt; StartDeletePipelineAsync(string pipelineName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Artifacts.PipelineClient.StartDeletePipelineAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartDeletePipelineAsync (pipelineName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of PipelineDeletePipelineOperation)" />
      <MemberSignature Language="F#" Value="abstract member StartDeletePipelineAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Analytics.Synapse.Artifacts.PipelineDeletePipelineOperation&gt;&#xA;override this.StartDeletePipelineAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Analytics.Synapse.Artifacts.PipelineDeletePipelineOperation&gt;" Usage="pipelineClient.StartDeletePipelineAsync (pipelineName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Analytics.Synapse.Artifacts.PipelineDeletePipelineOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pipelineName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="pipelineName"> The pipeline name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Deletes a pipeline. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="pipelineName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="StartRenamePipeline">
      <MemberSignature Language="C#" Value="public virtual Azure.Analytics.Synapse.Artifacts.PipelineRenamePipelineOperation StartRenamePipeline (string pipelineName, Azure.Analytics.Synapse.Artifacts.Models.ArtifactRenameRequest request, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Analytics.Synapse.Artifacts.PipelineRenamePipelineOperation StartRenamePipeline(string pipelineName, class Azure.Analytics.Synapse.Artifacts.Models.ArtifactRenameRequest request, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Artifacts.PipelineClient.StartRenamePipeline(System.String,Azure.Analytics.Synapse.Artifacts.Models.ArtifactRenameRequest,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartRenamePipeline (pipelineName As String, request As ArtifactRenameRequest, Optional cancellationToken As CancellationToken = Nothing) As PipelineRenamePipelineOperation" />
      <MemberSignature Language="F#" Value="abstract member StartRenamePipeline : string * Azure.Analytics.Synapse.Artifacts.Models.ArtifactRenameRequest * System.Threading.CancellationToken -&gt; Azure.Analytics.Synapse.Artifacts.PipelineRenamePipelineOperation&#xA;override this.StartRenamePipeline : string * Azure.Analytics.Synapse.Artifacts.Models.ArtifactRenameRequest * System.Threading.CancellationToken -&gt; Azure.Analytics.Synapse.Artifacts.PipelineRenamePipelineOperation" Usage="pipelineClient.StartRenamePipeline (pipelineName, request, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Analytics.Synapse.Artifacts.PipelineRenamePipelineOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pipelineName" Type="System.String" />
        <Parameter Name="request" Type="Azure.Analytics.Synapse.Artifacts.Models.ArtifactRenameRequest" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="pipelineName"> The pipeline name. </param>
        <param name="request"> proposed new name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Renames a pipeline. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="pipelineName" /> or <paramref name="request" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="StartRenamePipelineAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Analytics.Synapse.Artifacts.PipelineRenamePipelineOperation&gt; StartRenamePipelineAsync (string pipelineName, Azure.Analytics.Synapse.Artifacts.Models.ArtifactRenameRequest request, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Analytics.Synapse.Artifacts.PipelineRenamePipelineOperation&gt; StartRenamePipelineAsync(string pipelineName, class Azure.Analytics.Synapse.Artifacts.Models.ArtifactRenameRequest request, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Artifacts.PipelineClient.StartRenamePipelineAsync(System.String,Azure.Analytics.Synapse.Artifacts.Models.ArtifactRenameRequest,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartRenamePipelineAsync (pipelineName As String, request As ArtifactRenameRequest, Optional cancellationToken As CancellationToken = Nothing) As Task(Of PipelineRenamePipelineOperation)" />
      <MemberSignature Language="F#" Value="abstract member StartRenamePipelineAsync : string * Azure.Analytics.Synapse.Artifacts.Models.ArtifactRenameRequest * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Analytics.Synapse.Artifacts.PipelineRenamePipelineOperation&gt;&#xA;override this.StartRenamePipelineAsync : string * Azure.Analytics.Synapse.Artifacts.Models.ArtifactRenameRequest * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Analytics.Synapse.Artifacts.PipelineRenamePipelineOperation&gt;" Usage="pipelineClient.StartRenamePipelineAsync (pipelineName, request, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Analytics.Synapse.Artifacts.PipelineRenamePipelineOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pipelineName" Type="System.String" />
        <Parameter Name="request" Type="Azure.Analytics.Synapse.Artifacts.Models.ArtifactRenameRequest" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="pipelineName"> The pipeline name. </param>
        <param name="request"> proposed new name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Renames a pipeline. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="pipelineName" /> or <paramref name="request" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>

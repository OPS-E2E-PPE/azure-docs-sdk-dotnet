<Type Name="LibraryClient" FullName="Azure.Analytics.Synapse.Artifacts.LibraryClient">
  <TypeSignature Language="C#" Value="public class LibraryClient" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LibraryClient extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Analytics.Synapse.Artifacts.LibraryClient" />
  <TypeSignature Language="VB.NET" Value="Public Class LibraryClient" />
  <TypeSignature Language="F#" Value="type LibraryClient = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> The Library service client. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected LibraryClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Artifacts.LibraryClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of LibraryClient for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LibraryClient (Uri endpoint, Azure.Core.TokenCredential credential, Azure.Analytics.Synapse.Artifacts.ArtifactsClientOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, class Azure.Core.TokenCredential credential, class Azure.Analytics.Synapse.Artifacts.ArtifactsClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Artifacts.LibraryClient.#ctor(System.Uri,Azure.Core.TokenCredential,Azure.Analytics.Synapse.Artifacts.ArtifactsClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, credential As TokenCredential, Optional options As ArtifactsClientOptions = Nothing)" />
      <MemberSignature Language="F#" Value="new Azure.Analytics.Synapse.Artifacts.LibraryClient : Uri * Azure.Core.TokenCredential * Azure.Analytics.Synapse.Artifacts.ArtifactsClientOptions -&gt; Azure.Analytics.Synapse.Artifacts.LibraryClient" Usage="new Azure.Analytics.Synapse.Artifacts.LibraryClient (endpoint, credential, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.Core.TokenCredential" />
        <Parameter Name="options" Type="Azure.Analytics.Synapse.Artifacts.ArtifactsClientOptions" />
      </Parameters>
      <Docs>
        <param name="endpoint"> The workspace development endpoint, for example https://myworkspace.dev.azuresynapse.net. </param>
        <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        <param name="options"> The options for configuring the client. </param>
        <summary> Initializes a new instance of LibraryClient. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public virtual Azure.Response Append (string libraryName, System.IO.Stream content, long? blobConditionAppendPosition = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response Append(string libraryName, class System.IO.Stream content, valuetype System.Nullable`1&lt;int64&gt; blobConditionAppendPosition, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Artifacts.LibraryClient.Append(System.String,System.IO.Stream,System.Nullable{System.Int64},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Append (libraryName As String, content As Stream, Optional blobConditionAppendPosition As Nullable(Of Long) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member Append : string * System.IO.Stream * Nullable&lt;int64&gt; * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.Append : string * System.IO.Stream * Nullable&lt;int64&gt; * System.Threading.CancellationToken -&gt; Azure.Response" Usage="libraryClient.Append (libraryName, content, blobConditionAppendPosition, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="libraryName" Type="System.String" />
        <Parameter Name="content" Type="System.IO.Stream" />
        <Parameter Name="blobConditionAppendPosition" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="libraryName"> file name to upload. Minimum length of the filename should be 1 excluding the extension length. </param>
        <param name="content"> Library file chunk. </param>
        <param name="blobConditionAppendPosition"> Set this header to a byte offset at which the block is expected to be appended. The request succeeds only if the current offset matches this value. Otherwise, the request fails with the AppendPositionConditionNotMet error (HTTP status code 412 – Precondition Failed). </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Append the content to the library resource created using the create operation. The maximum content size is 4MiB. Content larger than 4MiB must be appended in 4MiB chunks. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; AppendAsync (string libraryName, System.IO.Stream content, long? blobConditionAppendPosition = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; AppendAsync(string libraryName, class System.IO.Stream content, valuetype System.Nullable`1&lt;int64&gt; blobConditionAppendPosition, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Artifacts.LibraryClient.AppendAsync(System.String,System.IO.Stream,System.Nullable{System.Int64},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AppendAsync (libraryName As String, content As Stream, Optional blobConditionAppendPosition As Nullable(Of Long) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member AppendAsync : string * System.IO.Stream * Nullable&lt;int64&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.AppendAsync : string * System.IO.Stream * Nullable&lt;int64&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="libraryClient.AppendAsync (libraryName, content, blobConditionAppendPosition, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="libraryName" Type="System.String" />
        <Parameter Name="content" Type="System.IO.Stream" />
        <Parameter Name="blobConditionAppendPosition" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="libraryName"> file name to upload. Minimum length of the filename should be 1 excluding the extension length. </param>
        <param name="content"> Library file chunk. </param>
        <param name="blobConditionAppendPosition"> Set this header to a byte offset at which the block is expected to be appended. The request succeeds only if the current offset matches this value. Otherwise, the request fails with the AppendPositionConditionNotMet error (HTTP status code 412 – Precondition Failed). </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Append the content to the library resource created using the create operation. The maximum content size is 4MiB. Content larger than 4MiB must be appended in 4MiB chunks. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Analytics.Synapse.Artifacts.Models.LibraryResource&gt; Get (string libraryName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Analytics.Synapse.Artifacts.Models.LibraryResource&gt; Get(string libraryName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Artifacts.LibraryClient.Get(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Get (libraryName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of LibraryResource)" />
      <MemberSignature Language="F#" Value="abstract member Get : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Analytics.Synapse.Artifacts.Models.LibraryResource&gt;&#xA;override this.Get : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Analytics.Synapse.Artifacts.Models.LibraryResource&gt;" Usage="libraryClient.Get (libraryName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Analytics.Synapse.Artifacts.Models.LibraryResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="libraryName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="libraryName"> file name to upload. Minimum length of the filename should be 1 excluding the extension length. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Get Library. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.Artifacts.Models.LibraryResource&gt;&gt; GetAsync (string libraryName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Analytics.Synapse.Artifacts.Models.LibraryResource&gt;&gt; GetAsync(string libraryName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Artifacts.LibraryClient.GetAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAsync (libraryName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of LibraryResource))" />
      <MemberSignature Language="F#" Value="abstract member GetAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.Artifacts.Models.LibraryResource&gt;&gt;&#xA;override this.GetAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.Artifacts.Models.LibraryResource&gt;&gt;" Usage="libraryClient.GetAsync (libraryName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.Artifacts.Models.LibraryResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="libraryName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="libraryName"> file name to upload. Minimum length of the filename should be 1 excluding the extension length. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Get Library. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOperationResult">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;object&gt; GetOperationResult (string operationId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;object&gt; GetOperationResult(string operationId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Artifacts.LibraryClient.GetOperationResult(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetOperationResult (operationId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of Object)" />
      <MemberSignature Language="F#" Value="abstract member GetOperationResult : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;obj&gt;&#xA;override this.GetOperationResult : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;obj&gt;" Usage="libraryClient.GetOperationResult (operationId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operationId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operationId"> operation id for which status is requested. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Get Operation result for Library. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOperationResultAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;object&gt;&gt; GetOperationResultAsync (string operationId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;object&gt;&gt; GetOperationResultAsync(string operationId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Artifacts.LibraryClient.GetOperationResultAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetOperationResultAsync (operationId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of Object))" />
      <MemberSignature Language="F#" Value="abstract member GetOperationResultAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;obj&gt;&gt;&#xA;override this.GetOperationResultAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;obj&gt;&gt;" Usage="libraryClient.GetOperationResultAsync (operationId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Object&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operationId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operationId"> operation id for which status is requested. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Get Operation result for Library. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="List">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.Analytics.Synapse.Artifacts.Models.LibraryResource&gt; List (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.Analytics.Synapse.Artifacts.Models.LibraryResource&gt; List(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Artifacts.LibraryClient.List(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function List (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of LibraryResource)" />
      <MemberSignature Language="F#" Value="abstract member List : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.Analytics.Synapse.Artifacts.Models.LibraryResource&gt;&#xA;override this.List : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.Analytics.Synapse.Artifacts.Models.LibraryResource&gt;" Usage="libraryClient.List cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.Analytics.Synapse.Artifacts.Models.LibraryResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Lists Library. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.Analytics.Synapse.Artifacts.Models.LibraryResource&gt; ListAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.Analytics.Synapse.Artifacts.Models.LibraryResource&gt; ListAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Artifacts.LibraryClient.ListAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ListAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of LibraryResource)" />
      <MemberSignature Language="F#" Value="abstract member ListAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.Analytics.Synapse.Artifacts.Models.LibraryResource&gt;&#xA;override this.ListAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.Analytics.Synapse.Artifacts.Models.LibraryResource&gt;" Usage="libraryClient.ListAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.Analytics.Synapse.Artifacts.Models.LibraryResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Lists Library. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartCreate">
      <MemberSignature Language="C#" Value="public virtual Azure.Analytics.Synapse.Artifacts.LibraryCreateOperation StartCreate (string libraryName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Analytics.Synapse.Artifacts.LibraryCreateOperation StartCreate(string libraryName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Artifacts.LibraryClient.StartCreate(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartCreate (libraryName As String, Optional cancellationToken As CancellationToken = Nothing) As LibraryCreateOperation" />
      <MemberSignature Language="F#" Value="abstract member StartCreate : string * System.Threading.CancellationToken -&gt; Azure.Analytics.Synapse.Artifacts.LibraryCreateOperation&#xA;override this.StartCreate : string * System.Threading.CancellationToken -&gt; Azure.Analytics.Synapse.Artifacts.LibraryCreateOperation" Usage="libraryClient.StartCreate (libraryName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Analytics.Synapse.Artifacts.LibraryCreateOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="libraryName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="libraryName"> file name to upload. Minimum length of the filename should be 1 excluding the extension length. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Creates a library with the library name. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="libraryName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="StartCreateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Analytics.Synapse.Artifacts.LibraryCreateOperation&gt; StartCreateAsync (string libraryName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Analytics.Synapse.Artifacts.LibraryCreateOperation&gt; StartCreateAsync(string libraryName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Artifacts.LibraryClient.StartCreateAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartCreateAsync (libraryName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of LibraryCreateOperation)" />
      <MemberSignature Language="F#" Value="abstract member StartCreateAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Analytics.Synapse.Artifacts.LibraryCreateOperation&gt;&#xA;override this.StartCreateAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Analytics.Synapse.Artifacts.LibraryCreateOperation&gt;" Usage="libraryClient.StartCreateAsync (libraryName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Analytics.Synapse.Artifacts.LibraryCreateOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="libraryName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="libraryName"> file name to upload. Minimum length of the filename should be 1 excluding the extension length. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Creates a library with the library name. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="libraryName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="StartDelete">
      <MemberSignature Language="C#" Value="public virtual Azure.Analytics.Synapse.Artifacts.LibraryDeleteOperation StartDelete (string libraryName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Analytics.Synapse.Artifacts.LibraryDeleteOperation StartDelete(string libraryName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Artifacts.LibraryClient.StartDelete(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartDelete (libraryName As String, Optional cancellationToken As CancellationToken = Nothing) As LibraryDeleteOperation" />
      <MemberSignature Language="F#" Value="abstract member StartDelete : string * System.Threading.CancellationToken -&gt; Azure.Analytics.Synapse.Artifacts.LibraryDeleteOperation&#xA;override this.StartDelete : string * System.Threading.CancellationToken -&gt; Azure.Analytics.Synapse.Artifacts.LibraryDeleteOperation" Usage="libraryClient.StartDelete (libraryName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Analytics.Synapse.Artifacts.LibraryDeleteOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="libraryName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="libraryName"> file name to upload. Minimum length of the filename should be 1 excluding the extension length. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Delete Library. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="libraryName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="StartDeleteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Analytics.Synapse.Artifacts.LibraryDeleteOperation&gt; StartDeleteAsync (string libraryName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Analytics.Synapse.Artifacts.LibraryDeleteOperation&gt; StartDeleteAsync(string libraryName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Artifacts.LibraryClient.StartDeleteAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartDeleteAsync (libraryName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of LibraryDeleteOperation)" />
      <MemberSignature Language="F#" Value="abstract member StartDeleteAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Analytics.Synapse.Artifacts.LibraryDeleteOperation&gt;&#xA;override this.StartDeleteAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Analytics.Synapse.Artifacts.LibraryDeleteOperation&gt;" Usage="libraryClient.StartDeleteAsync (libraryName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Analytics.Synapse.Artifacts.LibraryDeleteOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="libraryName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="libraryName"> file name to upload. Minimum length of the filename should be 1 excluding the extension length. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Delete Library. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="libraryName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="StartFlush">
      <MemberSignature Language="C#" Value="public virtual Azure.Analytics.Synapse.Artifacts.LibraryFlushOperation StartFlush (string libraryName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Analytics.Synapse.Artifacts.LibraryFlushOperation StartFlush(string libraryName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Artifacts.LibraryClient.StartFlush(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartFlush (libraryName As String, Optional cancellationToken As CancellationToken = Nothing) As LibraryFlushOperation" />
      <MemberSignature Language="F#" Value="abstract member StartFlush : string * System.Threading.CancellationToken -&gt; Azure.Analytics.Synapse.Artifacts.LibraryFlushOperation&#xA;override this.StartFlush : string * System.Threading.CancellationToken -&gt; Azure.Analytics.Synapse.Artifacts.LibraryFlushOperation" Usage="libraryClient.StartFlush (libraryName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Analytics.Synapse.Artifacts.LibraryFlushOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="libraryName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="libraryName"> file name to upload. Minimum length of the filename should be 1 excluding the extension length. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Flush Library. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="libraryName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="StartFlushAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Analytics.Synapse.Artifacts.LibraryFlushOperation&gt; StartFlushAsync (string libraryName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Analytics.Synapse.Artifacts.LibraryFlushOperation&gt; StartFlushAsync(string libraryName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Artifacts.LibraryClient.StartFlushAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartFlushAsync (libraryName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of LibraryFlushOperation)" />
      <MemberSignature Language="F#" Value="abstract member StartFlushAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Analytics.Synapse.Artifacts.LibraryFlushOperation&gt;&#xA;override this.StartFlushAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Analytics.Synapse.Artifacts.LibraryFlushOperation&gt;" Usage="libraryClient.StartFlushAsync (libraryName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Analytics.Synapse.Artifacts.LibraryFlushOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="libraryName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="libraryName"> file name to upload. Minimum length of the filename should be 1 excluding the extension length. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Flush Library. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="libraryName" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>

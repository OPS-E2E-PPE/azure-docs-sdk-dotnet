<Type Name="SqlScriptClient" FullName="Azure.Analytics.Synapse.Artifacts.SqlScriptClient">
  <TypeSignature Language="C#" Value="public class SqlScriptClient" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlScriptClient extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Analytics.Synapse.Artifacts.SqlScriptClient" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlScriptClient" />
  <TypeSignature Language="F#" Value="type SqlScriptClient = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> The SqlScript service client. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SqlScriptClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Artifacts.SqlScriptClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of SqlScriptClient for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlScriptClient (Uri endpoint, Azure.Core.TokenCredential credential);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, class Azure.Core.TokenCredential credential) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Artifacts.SqlScriptClient.#ctor(System.Uri,Azure.Core.TokenCredential)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, credential As TokenCredential)" />
      <MemberSignature Language="F#" Value="new Azure.Analytics.Synapse.Artifacts.SqlScriptClient : Uri * Azure.Core.TokenCredential -&gt; Azure.Analytics.Synapse.Artifacts.SqlScriptClient" Usage="new Azure.Analytics.Synapse.Artifacts.SqlScriptClient (endpoint, credential)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.Core.TokenCredential" />
      </Parameters>
      <Docs>
        <param name="endpoint">To be added.</param>
        <param name="credential">To be added.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.Analytics.Synapse.Artifacts.SqlScriptClient" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlScriptClient (Uri endpoint, Azure.Core.TokenCredential credential, Azure.Analytics.Synapse.Artifacts.ArtifactsClientOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, class Azure.Core.TokenCredential credential, class Azure.Analytics.Synapse.Artifacts.ArtifactsClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Artifacts.SqlScriptClient.#ctor(System.Uri,Azure.Core.TokenCredential,Azure.Analytics.Synapse.Artifacts.ArtifactsClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, credential As TokenCredential, options As ArtifactsClientOptions)" />
      <MemberSignature Language="F#" Value="new Azure.Analytics.Synapse.Artifacts.SqlScriptClient : Uri * Azure.Core.TokenCredential * Azure.Analytics.Synapse.Artifacts.ArtifactsClientOptions -&gt; Azure.Analytics.Synapse.Artifacts.SqlScriptClient" Usage="new Azure.Analytics.Synapse.Artifacts.SqlScriptClient (endpoint, credential, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.Core.TokenCredential" />
        <Parameter Name="options" Type="Azure.Analytics.Synapse.Artifacts.ArtifactsClientOptions" />
      </Parameters>
      <Docs>
        <param name="endpoint">To be added.</param>
        <param name="credential">To be added.</param>
        <param name="options">To be added.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.Analytics.Synapse.Artifacts.SqlScriptClient" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlScript">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Analytics.Synapse.Artifacts.Models.SqlScriptResource&gt; GetSqlScript (string sqlScriptName, string ifNoneMatch = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Analytics.Synapse.Artifacts.Models.SqlScriptResource&gt; GetSqlScript(string sqlScriptName, string ifNoneMatch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Artifacts.SqlScriptClient.GetSqlScript(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlScript (sqlScriptName As String, Optional ifNoneMatch As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SqlScriptResource)" />
      <MemberSignature Language="F#" Value="abstract member GetSqlScript : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Analytics.Synapse.Artifacts.Models.SqlScriptResource&gt;&#xA;override this.GetSqlScript : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Analytics.Synapse.Artifacts.Models.SqlScriptResource&gt;" Usage="sqlScriptClient.GetSqlScript (sqlScriptName, ifNoneMatch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Analytics.Synapse.Artifacts.Models.SqlScriptResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sqlScriptName" Type="System.String" />
        <Parameter Name="ifNoneMatch" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sqlScriptName"> The sql script name. </param>
        <param name="ifNoneMatch"> ETag of the sql compute entity. Should only be specified for get. If the ETag matches the existing entity tag, or if * was provided, then no content will be returned. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets a sql script. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlScriptAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.Artifacts.Models.SqlScriptResource&gt;&gt; GetSqlScriptAsync (string sqlScriptName, string ifNoneMatch = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Analytics.Synapse.Artifacts.Models.SqlScriptResource&gt;&gt; GetSqlScriptAsync(string sqlScriptName, string ifNoneMatch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Artifacts.SqlScriptClient.GetSqlScriptAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlScriptAsync (sqlScriptName As String, Optional ifNoneMatch As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SqlScriptResource))" />
      <MemberSignature Language="F#" Value="abstract member GetSqlScriptAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.Artifacts.Models.SqlScriptResource&gt;&gt;&#xA;override this.GetSqlScriptAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.Artifacts.Models.SqlScriptResource&gt;&gt;" Usage="sqlScriptClient.GetSqlScriptAsync (sqlScriptName, ifNoneMatch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.Artifacts.Models.SqlScriptResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sqlScriptName" Type="System.String" />
        <Parameter Name="ifNoneMatch" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sqlScriptName"> The sql script name. </param>
        <param name="ifNoneMatch"> ETag of the sql compute entity. Should only be specified for get. If the ETag matches the existing entity tag, or if * was provided, then no content will be returned. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets a sql script. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlScriptsByWorkspace">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.Analytics.Synapse.Artifacts.Models.SqlScriptResource&gt; GetSqlScriptsByWorkspace (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.Analytics.Synapse.Artifacts.Models.SqlScriptResource&gt; GetSqlScriptsByWorkspace(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Artifacts.SqlScriptClient.GetSqlScriptsByWorkspace(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlScriptsByWorkspace (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of SqlScriptResource)" />
      <MemberSignature Language="F#" Value="abstract member GetSqlScriptsByWorkspace : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.Analytics.Synapse.Artifacts.Models.SqlScriptResource&gt;&#xA;override this.GetSqlScriptsByWorkspace : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.Analytics.Synapse.Artifacts.Models.SqlScriptResource&gt;" Usage="sqlScriptClient.GetSqlScriptsByWorkspace cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.Analytics.Synapse.Artifacts.Models.SqlScriptResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Lists sql scripts. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlScriptsByWorkspaceAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.Analytics.Synapse.Artifacts.Models.SqlScriptResource&gt; GetSqlScriptsByWorkspaceAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.Analytics.Synapse.Artifacts.Models.SqlScriptResource&gt; GetSqlScriptsByWorkspaceAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Artifacts.SqlScriptClient.GetSqlScriptsByWorkspaceAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlScriptsByWorkspaceAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of SqlScriptResource)" />
      <MemberSignature Language="F#" Value="abstract member GetSqlScriptsByWorkspaceAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.Analytics.Synapse.Artifacts.Models.SqlScriptResource&gt;&#xA;override this.GetSqlScriptsByWorkspaceAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.Analytics.Synapse.Artifacts.Models.SqlScriptResource&gt;" Usage="sqlScriptClient.GetSqlScriptsByWorkspaceAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.Analytics.Synapse.Artifacts.Models.SqlScriptResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Lists sql scripts. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartCreateOrUpdateSqlScript">
      <MemberSignature Language="C#" Value="public virtual Azure.Analytics.Synapse.Artifacts.SqlScriptCreateOrUpdateSqlScriptOperation StartCreateOrUpdateSqlScript (string sqlScriptName, Azure.Analytics.Synapse.Artifacts.Models.SqlScriptResource sqlScript, string ifMatch = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Analytics.Synapse.Artifacts.SqlScriptCreateOrUpdateSqlScriptOperation StartCreateOrUpdateSqlScript(string sqlScriptName, class Azure.Analytics.Synapse.Artifacts.Models.SqlScriptResource sqlScript, string ifMatch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Artifacts.SqlScriptClient.StartCreateOrUpdateSqlScript(System.String,Azure.Analytics.Synapse.Artifacts.Models.SqlScriptResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartCreateOrUpdateSqlScript (sqlScriptName As String, sqlScript As SqlScriptResource, Optional ifMatch As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As SqlScriptCreateOrUpdateSqlScriptOperation" />
      <MemberSignature Language="F#" Value="abstract member StartCreateOrUpdateSqlScript : string * Azure.Analytics.Synapse.Artifacts.Models.SqlScriptResource * string * System.Threading.CancellationToken -&gt; Azure.Analytics.Synapse.Artifacts.SqlScriptCreateOrUpdateSqlScriptOperation&#xA;override this.StartCreateOrUpdateSqlScript : string * Azure.Analytics.Synapse.Artifacts.Models.SqlScriptResource * string * System.Threading.CancellationToken -&gt; Azure.Analytics.Synapse.Artifacts.SqlScriptCreateOrUpdateSqlScriptOperation" Usage="sqlScriptClient.StartCreateOrUpdateSqlScript (sqlScriptName, sqlScript, ifMatch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Analytics.Synapse.Artifacts.SqlScriptCreateOrUpdateSqlScriptOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sqlScriptName" Type="System.String" />
        <Parameter Name="sqlScript" Type="Azure.Analytics.Synapse.Artifacts.Models.SqlScriptResource" />
        <Parameter Name="ifMatch" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sqlScriptName"> The sql script name. </param>
        <param name="sqlScript"> Sql Script resource definition. </param>
        <param name="ifMatch"> ETag of the SQL script entity.  Should only be specified for update, for which it should match existing entity or can be * for unconditional update. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Creates or updates a Sql Script. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="sqlScriptName" /> or <paramref name="sqlScript" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="StartCreateOrUpdateSqlScriptAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Analytics.Synapse.Artifacts.SqlScriptCreateOrUpdateSqlScriptOperation&gt; StartCreateOrUpdateSqlScriptAsync (string sqlScriptName, Azure.Analytics.Synapse.Artifacts.Models.SqlScriptResource sqlScript, string ifMatch = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Analytics.Synapse.Artifacts.SqlScriptCreateOrUpdateSqlScriptOperation&gt; StartCreateOrUpdateSqlScriptAsync(string sqlScriptName, class Azure.Analytics.Synapse.Artifacts.Models.SqlScriptResource sqlScript, string ifMatch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Artifacts.SqlScriptClient.StartCreateOrUpdateSqlScriptAsync(System.String,Azure.Analytics.Synapse.Artifacts.Models.SqlScriptResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartCreateOrUpdateSqlScriptAsync (sqlScriptName As String, sqlScript As SqlScriptResource, Optional ifMatch As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of SqlScriptCreateOrUpdateSqlScriptOperation)" />
      <MemberSignature Language="F#" Value="abstract member StartCreateOrUpdateSqlScriptAsync : string * Azure.Analytics.Synapse.Artifacts.Models.SqlScriptResource * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Analytics.Synapse.Artifacts.SqlScriptCreateOrUpdateSqlScriptOperation&gt;&#xA;override this.StartCreateOrUpdateSqlScriptAsync : string * Azure.Analytics.Synapse.Artifacts.Models.SqlScriptResource * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Analytics.Synapse.Artifacts.SqlScriptCreateOrUpdateSqlScriptOperation&gt;" Usage="sqlScriptClient.StartCreateOrUpdateSqlScriptAsync (sqlScriptName, sqlScript, ifMatch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Analytics.Synapse.Artifacts.SqlScriptCreateOrUpdateSqlScriptOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sqlScriptName" Type="System.String" />
        <Parameter Name="sqlScript" Type="Azure.Analytics.Synapse.Artifacts.Models.SqlScriptResource" />
        <Parameter Name="ifMatch" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sqlScriptName"> The sql script name. </param>
        <param name="sqlScript"> Sql Script resource definition. </param>
        <param name="ifMatch"> ETag of the SQL script entity.  Should only be specified for update, for which it should match existing entity or can be * for unconditional update. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Creates or updates a Sql Script. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="sqlScriptName" /> or <paramref name="sqlScript" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="StartDeleteSqlScript">
      <MemberSignature Language="C#" Value="public virtual Azure.Analytics.Synapse.Artifacts.SqlScriptDeleteSqlScriptOperation StartDeleteSqlScript (string sqlScriptName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Analytics.Synapse.Artifacts.SqlScriptDeleteSqlScriptOperation StartDeleteSqlScript(string sqlScriptName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Artifacts.SqlScriptClient.StartDeleteSqlScript(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartDeleteSqlScript (sqlScriptName As String, Optional cancellationToken As CancellationToken = Nothing) As SqlScriptDeleteSqlScriptOperation" />
      <MemberSignature Language="F#" Value="abstract member StartDeleteSqlScript : string * System.Threading.CancellationToken -&gt; Azure.Analytics.Synapse.Artifacts.SqlScriptDeleteSqlScriptOperation&#xA;override this.StartDeleteSqlScript : string * System.Threading.CancellationToken -&gt; Azure.Analytics.Synapse.Artifacts.SqlScriptDeleteSqlScriptOperation" Usage="sqlScriptClient.StartDeleteSqlScript (sqlScriptName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Analytics.Synapse.Artifacts.SqlScriptDeleteSqlScriptOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sqlScriptName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sqlScriptName"> The sql script name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Deletes a Sql Script. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="sqlScriptName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="StartDeleteSqlScriptAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Analytics.Synapse.Artifacts.SqlScriptDeleteSqlScriptOperation&gt; StartDeleteSqlScriptAsync (string sqlScriptName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Analytics.Synapse.Artifacts.SqlScriptDeleteSqlScriptOperation&gt; StartDeleteSqlScriptAsync(string sqlScriptName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Artifacts.SqlScriptClient.StartDeleteSqlScriptAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartDeleteSqlScriptAsync (sqlScriptName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of SqlScriptDeleteSqlScriptOperation)" />
      <MemberSignature Language="F#" Value="abstract member StartDeleteSqlScriptAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Analytics.Synapse.Artifacts.SqlScriptDeleteSqlScriptOperation&gt;&#xA;override this.StartDeleteSqlScriptAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Analytics.Synapse.Artifacts.SqlScriptDeleteSqlScriptOperation&gt;" Usage="sqlScriptClient.StartDeleteSqlScriptAsync (sqlScriptName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Analytics.Synapse.Artifacts.SqlScriptDeleteSqlScriptOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sqlScriptName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sqlScriptName"> The sql script name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Deletes a Sql Script. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="sqlScriptName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="StartRenameSqlScript">
      <MemberSignature Language="C#" Value="public virtual Azure.Analytics.Synapse.Artifacts.SqlScriptRenameSqlScriptOperation StartRenameSqlScript (string sqlScriptName, Azure.Analytics.Synapse.Artifacts.Models.ArtifactRenameRequest request, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Analytics.Synapse.Artifacts.SqlScriptRenameSqlScriptOperation StartRenameSqlScript(string sqlScriptName, class Azure.Analytics.Synapse.Artifacts.Models.ArtifactRenameRequest request, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Artifacts.SqlScriptClient.StartRenameSqlScript(System.String,Azure.Analytics.Synapse.Artifacts.Models.ArtifactRenameRequest,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartRenameSqlScript (sqlScriptName As String, request As ArtifactRenameRequest, Optional cancellationToken As CancellationToken = Nothing) As SqlScriptRenameSqlScriptOperation" />
      <MemberSignature Language="F#" Value="abstract member StartRenameSqlScript : string * Azure.Analytics.Synapse.Artifacts.Models.ArtifactRenameRequest * System.Threading.CancellationToken -&gt; Azure.Analytics.Synapse.Artifacts.SqlScriptRenameSqlScriptOperation&#xA;override this.StartRenameSqlScript : string * Azure.Analytics.Synapse.Artifacts.Models.ArtifactRenameRequest * System.Threading.CancellationToken -&gt; Azure.Analytics.Synapse.Artifacts.SqlScriptRenameSqlScriptOperation" Usage="sqlScriptClient.StartRenameSqlScript (sqlScriptName, request, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Analytics.Synapse.Artifacts.SqlScriptRenameSqlScriptOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sqlScriptName" Type="System.String" />
        <Parameter Name="request" Type="Azure.Analytics.Synapse.Artifacts.Models.ArtifactRenameRequest" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sqlScriptName"> The sql script name. </param>
        <param name="request"> proposed new name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Renames a sqlScript. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="sqlScriptName" /> or <paramref name="request" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="StartRenameSqlScriptAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Analytics.Synapse.Artifacts.SqlScriptRenameSqlScriptOperation&gt; StartRenameSqlScriptAsync (string sqlScriptName, Azure.Analytics.Synapse.Artifacts.Models.ArtifactRenameRequest request, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Analytics.Synapse.Artifacts.SqlScriptRenameSqlScriptOperation&gt; StartRenameSqlScriptAsync(string sqlScriptName, class Azure.Analytics.Synapse.Artifacts.Models.ArtifactRenameRequest request, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Artifacts.SqlScriptClient.StartRenameSqlScriptAsync(System.String,Azure.Analytics.Synapse.Artifacts.Models.ArtifactRenameRequest,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartRenameSqlScriptAsync (sqlScriptName As String, request As ArtifactRenameRequest, Optional cancellationToken As CancellationToken = Nothing) As Task(Of SqlScriptRenameSqlScriptOperation)" />
      <MemberSignature Language="F#" Value="abstract member StartRenameSqlScriptAsync : string * Azure.Analytics.Synapse.Artifacts.Models.ArtifactRenameRequest * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Analytics.Synapse.Artifacts.SqlScriptRenameSqlScriptOperation&gt;&#xA;override this.StartRenameSqlScriptAsync : string * Azure.Analytics.Synapse.Artifacts.Models.ArtifactRenameRequest * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Analytics.Synapse.Artifacts.SqlScriptRenameSqlScriptOperation&gt;" Usage="sqlScriptClient.StartRenameSqlScriptAsync (sqlScriptName, request, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Analytics.Synapse.Artifacts.SqlScriptRenameSqlScriptOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sqlScriptName" Type="System.String" />
        <Parameter Name="request" Type="Azure.Analytics.Synapse.Artifacts.Models.ArtifactRenameRequest" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sqlScriptName"> The sql script name. </param>
        <param name="request"> proposed new name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Renames a sqlScript. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="sqlScriptName" /> or <paramref name="request" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="NotebookClient" FullName="Azure.Analytics.Synapse.Artifacts.NotebookClient">
  <TypeSignature Language="C#" Value="public class NotebookClient" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NotebookClient extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Analytics.Synapse.Artifacts.NotebookClient" />
  <TypeSignature Language="VB.NET" Value="Public Class NotebookClient" />
  <TypeSignature Language="F#" Value="type NotebookClient = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> The Notebook service client. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected NotebookClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Artifacts.NotebookClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of NotebookClient for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NotebookClient (Uri endpoint, Azure.Core.TokenCredential credential);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, class Azure.Core.TokenCredential credential) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Artifacts.NotebookClient.#ctor(System.Uri,Azure.Core.TokenCredential)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, credential As TokenCredential)" />
      <MemberSignature Language="F#" Value="new Azure.Analytics.Synapse.Artifacts.NotebookClient : Uri * Azure.Core.TokenCredential -&gt; Azure.Analytics.Synapse.Artifacts.NotebookClient" Usage="new Azure.Analytics.Synapse.Artifacts.NotebookClient (endpoint, credential)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.Core.TokenCredential" />
      </Parameters>
      <Docs>
        <param name="endpoint">To be added.</param>
        <param name="credential">To be added.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.Analytics.Synapse.Artifacts.NotebookClient" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NotebookClient (Uri endpoint, Azure.Core.TokenCredential credential, Azure.Analytics.Synapse.Artifacts.ArtifactsClientOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, class Azure.Core.TokenCredential credential, class Azure.Analytics.Synapse.Artifacts.ArtifactsClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Artifacts.NotebookClient.#ctor(System.Uri,Azure.Core.TokenCredential,Azure.Analytics.Synapse.Artifacts.ArtifactsClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, credential As TokenCredential, options As ArtifactsClientOptions)" />
      <MemberSignature Language="F#" Value="new Azure.Analytics.Synapse.Artifacts.NotebookClient : Uri * Azure.Core.TokenCredential * Azure.Analytics.Synapse.Artifacts.ArtifactsClientOptions -&gt; Azure.Analytics.Synapse.Artifacts.NotebookClient" Usage="new Azure.Analytics.Synapse.Artifacts.NotebookClient (endpoint, credential, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.Core.TokenCredential" />
        <Parameter Name="options" Type="Azure.Analytics.Synapse.Artifacts.ArtifactsClientOptions" />
      </Parameters>
      <Docs>
        <param name="endpoint">To be added.</param>
        <param name="credential">To be added.</param>
        <param name="options">To be added.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.Analytics.Synapse.Artifacts.NotebookClient" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNotebook">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Analytics.Synapse.Artifacts.Models.NotebookResource&gt; GetNotebook (string notebookName, string ifNoneMatch = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Analytics.Synapse.Artifacts.Models.NotebookResource&gt; GetNotebook(string notebookName, string ifNoneMatch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Artifacts.NotebookClient.GetNotebook(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNotebook (notebookName As String, Optional ifNoneMatch As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of NotebookResource)" />
      <MemberSignature Language="F#" Value="abstract member GetNotebook : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Analytics.Synapse.Artifacts.Models.NotebookResource&gt;&#xA;override this.GetNotebook : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Analytics.Synapse.Artifacts.Models.NotebookResource&gt;" Usage="notebookClient.GetNotebook (notebookName, ifNoneMatch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Analytics.Synapse.Artifacts.Models.NotebookResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="notebookName" Type="System.String" />
        <Parameter Name="ifNoneMatch" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="notebookName"> The notebook name. </param>
        <param name="ifNoneMatch"> ETag of the Notebook entity. Should only be specified for get. If the ETag matches the existing entity tag, or if * was provided, then no content will be returned. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets a Note Book. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNotebookAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.Artifacts.Models.NotebookResource&gt;&gt; GetNotebookAsync (string notebookName, string ifNoneMatch = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Analytics.Synapse.Artifacts.Models.NotebookResource&gt;&gt; GetNotebookAsync(string notebookName, string ifNoneMatch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Artifacts.NotebookClient.GetNotebookAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNotebookAsync (notebookName As String, Optional ifNoneMatch As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of NotebookResource))" />
      <MemberSignature Language="F#" Value="abstract member GetNotebookAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.Artifacts.Models.NotebookResource&gt;&gt;&#xA;override this.GetNotebookAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.Artifacts.Models.NotebookResource&gt;&gt;" Usage="notebookClient.GetNotebookAsync (notebookName, ifNoneMatch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.Artifacts.Models.NotebookResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="notebookName" Type="System.String" />
        <Parameter Name="ifNoneMatch" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="notebookName"> The notebook name. </param>
        <param name="ifNoneMatch"> ETag of the Notebook entity. Should only be specified for get. If the ETag matches the existing entity tag, or if * was provided, then no content will be returned. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets a Note Book. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNotebooksByWorkspace">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.Analytics.Synapse.Artifacts.Models.NotebookResource&gt; GetNotebooksByWorkspace (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.Analytics.Synapse.Artifacts.Models.NotebookResource&gt; GetNotebooksByWorkspace(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Artifacts.NotebookClient.GetNotebooksByWorkspace(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNotebooksByWorkspace (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of NotebookResource)" />
      <MemberSignature Language="F#" Value="abstract member GetNotebooksByWorkspace : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.Analytics.Synapse.Artifacts.Models.NotebookResource&gt;&#xA;override this.GetNotebooksByWorkspace : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.Analytics.Synapse.Artifacts.Models.NotebookResource&gt;" Usage="notebookClient.GetNotebooksByWorkspace cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.Analytics.Synapse.Artifacts.Models.NotebookResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Lists Notebooks. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNotebooksByWorkspaceAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.Analytics.Synapse.Artifacts.Models.NotebookResource&gt; GetNotebooksByWorkspaceAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.Analytics.Synapse.Artifacts.Models.NotebookResource&gt; GetNotebooksByWorkspaceAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Artifacts.NotebookClient.GetNotebooksByWorkspaceAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNotebooksByWorkspaceAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of NotebookResource)" />
      <MemberSignature Language="F#" Value="abstract member GetNotebooksByWorkspaceAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.Analytics.Synapse.Artifacts.Models.NotebookResource&gt;&#xA;override this.GetNotebooksByWorkspaceAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.Analytics.Synapse.Artifacts.Models.NotebookResource&gt;" Usage="notebookClient.GetNotebooksByWorkspaceAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.Analytics.Synapse.Artifacts.Models.NotebookResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Lists Notebooks. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNotebookSummaryByWorkSpace">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.Analytics.Synapse.Artifacts.Models.NotebookResource&gt; GetNotebookSummaryByWorkSpace (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.Analytics.Synapse.Artifacts.Models.NotebookResource&gt; GetNotebookSummaryByWorkSpace(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Artifacts.NotebookClient.GetNotebookSummaryByWorkSpace(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNotebookSummaryByWorkSpace (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of NotebookResource)" />
      <MemberSignature Language="F#" Value="abstract member GetNotebookSummaryByWorkSpace : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.Analytics.Synapse.Artifacts.Models.NotebookResource&gt;&#xA;override this.GetNotebookSummaryByWorkSpace : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.Analytics.Synapse.Artifacts.Models.NotebookResource&gt;" Usage="notebookClient.GetNotebookSummaryByWorkSpace cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.Analytics.Synapse.Artifacts.Models.NotebookResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Lists a summary of Notebooks. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNotebookSummaryByWorkSpaceAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.Analytics.Synapse.Artifacts.Models.NotebookResource&gt; GetNotebookSummaryByWorkSpaceAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.Analytics.Synapse.Artifacts.Models.NotebookResource&gt; GetNotebookSummaryByWorkSpaceAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Artifacts.NotebookClient.GetNotebookSummaryByWorkSpaceAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNotebookSummaryByWorkSpaceAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of NotebookResource)" />
      <MemberSignature Language="F#" Value="abstract member GetNotebookSummaryByWorkSpaceAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.Analytics.Synapse.Artifacts.Models.NotebookResource&gt;&#xA;override this.GetNotebookSummaryByWorkSpaceAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.Analytics.Synapse.Artifacts.Models.NotebookResource&gt;" Usage="notebookClient.GetNotebookSummaryByWorkSpaceAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.Analytics.Synapse.Artifacts.Models.NotebookResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Lists a summary of Notebooks. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartCreateOrUpdateNotebook">
      <MemberSignature Language="C#" Value="public virtual Azure.Analytics.Synapse.Artifacts.NotebookCreateOrUpdateNotebookOperation StartCreateOrUpdateNotebook (string notebookName, Azure.Analytics.Synapse.Artifacts.Models.NotebookResource notebook, string ifMatch = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Analytics.Synapse.Artifacts.NotebookCreateOrUpdateNotebookOperation StartCreateOrUpdateNotebook(string notebookName, class Azure.Analytics.Synapse.Artifacts.Models.NotebookResource notebook, string ifMatch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Artifacts.NotebookClient.StartCreateOrUpdateNotebook(System.String,Azure.Analytics.Synapse.Artifacts.Models.NotebookResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartCreateOrUpdateNotebook (notebookName As String, notebook As NotebookResource, Optional ifMatch As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As NotebookCreateOrUpdateNotebookOperation" />
      <MemberSignature Language="F#" Value="abstract member StartCreateOrUpdateNotebook : string * Azure.Analytics.Synapse.Artifacts.Models.NotebookResource * string * System.Threading.CancellationToken -&gt; Azure.Analytics.Synapse.Artifacts.NotebookCreateOrUpdateNotebookOperation&#xA;override this.StartCreateOrUpdateNotebook : string * Azure.Analytics.Synapse.Artifacts.Models.NotebookResource * string * System.Threading.CancellationToken -&gt; Azure.Analytics.Synapse.Artifacts.NotebookCreateOrUpdateNotebookOperation" Usage="notebookClient.StartCreateOrUpdateNotebook (notebookName, notebook, ifMatch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Analytics.Synapse.Artifacts.NotebookCreateOrUpdateNotebookOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="notebookName" Type="System.String" />
        <Parameter Name="notebook" Type="Azure.Analytics.Synapse.Artifacts.Models.NotebookResource" />
        <Parameter Name="ifMatch" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="notebookName"> The notebook name. </param>
        <param name="notebook"> Note book resource definition. </param>
        <param name="ifMatch"> ETag of the Note book entity.  Should only be specified for update, for which it should match existing entity or can be * for unconditional update. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Creates or updates a Note Book. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="notebookName" /> or <paramref name="notebook" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="StartCreateOrUpdateNotebookAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Analytics.Synapse.Artifacts.NotebookCreateOrUpdateNotebookOperation&gt; StartCreateOrUpdateNotebookAsync (string notebookName, Azure.Analytics.Synapse.Artifacts.Models.NotebookResource notebook, string ifMatch = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Analytics.Synapse.Artifacts.NotebookCreateOrUpdateNotebookOperation&gt; StartCreateOrUpdateNotebookAsync(string notebookName, class Azure.Analytics.Synapse.Artifacts.Models.NotebookResource notebook, string ifMatch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Artifacts.NotebookClient.StartCreateOrUpdateNotebookAsync(System.String,Azure.Analytics.Synapse.Artifacts.Models.NotebookResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartCreateOrUpdateNotebookAsync (notebookName As String, notebook As NotebookResource, Optional ifMatch As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of NotebookCreateOrUpdateNotebookOperation)" />
      <MemberSignature Language="F#" Value="abstract member StartCreateOrUpdateNotebookAsync : string * Azure.Analytics.Synapse.Artifacts.Models.NotebookResource * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Analytics.Synapse.Artifacts.NotebookCreateOrUpdateNotebookOperation&gt;&#xA;override this.StartCreateOrUpdateNotebookAsync : string * Azure.Analytics.Synapse.Artifacts.Models.NotebookResource * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Analytics.Synapse.Artifacts.NotebookCreateOrUpdateNotebookOperation&gt;" Usage="notebookClient.StartCreateOrUpdateNotebookAsync (notebookName, notebook, ifMatch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Analytics.Synapse.Artifacts.NotebookCreateOrUpdateNotebookOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="notebookName" Type="System.String" />
        <Parameter Name="notebook" Type="Azure.Analytics.Synapse.Artifacts.Models.NotebookResource" />
        <Parameter Name="ifMatch" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="notebookName"> The notebook name. </param>
        <param name="notebook"> Note book resource definition. </param>
        <param name="ifMatch"> ETag of the Note book entity.  Should only be specified for update, for which it should match existing entity or can be * for unconditional update. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Creates or updates a Note Book. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="notebookName" /> or <paramref name="notebook" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="StartDeleteNotebook">
      <MemberSignature Language="C#" Value="public virtual Azure.Analytics.Synapse.Artifacts.NotebookDeleteNotebookOperation StartDeleteNotebook (string notebookName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Analytics.Synapse.Artifacts.NotebookDeleteNotebookOperation StartDeleteNotebook(string notebookName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Artifacts.NotebookClient.StartDeleteNotebook(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartDeleteNotebook (notebookName As String, Optional cancellationToken As CancellationToken = Nothing) As NotebookDeleteNotebookOperation" />
      <MemberSignature Language="F#" Value="abstract member StartDeleteNotebook : string * System.Threading.CancellationToken -&gt; Azure.Analytics.Synapse.Artifacts.NotebookDeleteNotebookOperation&#xA;override this.StartDeleteNotebook : string * System.Threading.CancellationToken -&gt; Azure.Analytics.Synapse.Artifacts.NotebookDeleteNotebookOperation" Usage="notebookClient.StartDeleteNotebook (notebookName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Analytics.Synapse.Artifacts.NotebookDeleteNotebookOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="notebookName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="notebookName"> The notebook name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Deletes a Note book. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="notebookName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="StartDeleteNotebookAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Analytics.Synapse.Artifacts.NotebookDeleteNotebookOperation&gt; StartDeleteNotebookAsync (string notebookName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Analytics.Synapse.Artifacts.NotebookDeleteNotebookOperation&gt; StartDeleteNotebookAsync(string notebookName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Artifacts.NotebookClient.StartDeleteNotebookAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartDeleteNotebookAsync (notebookName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of NotebookDeleteNotebookOperation)" />
      <MemberSignature Language="F#" Value="abstract member StartDeleteNotebookAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Analytics.Synapse.Artifacts.NotebookDeleteNotebookOperation&gt;&#xA;override this.StartDeleteNotebookAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Analytics.Synapse.Artifacts.NotebookDeleteNotebookOperation&gt;" Usage="notebookClient.StartDeleteNotebookAsync (notebookName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Analytics.Synapse.Artifacts.NotebookDeleteNotebookOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="notebookName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="notebookName"> The notebook name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Deletes a Note book. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="notebookName" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>

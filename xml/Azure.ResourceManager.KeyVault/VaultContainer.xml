<Type Name="VaultContainer" FullName="Azure.ResourceManager.KeyVault.VaultContainer">
  <TypeSignature Language="C#" Value="public class VaultContainer : Azure.ResourceManager.Core.ArmContainer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit VaultContainer extends Azure.ResourceManager.Core.ArmContainer" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.KeyVault.VaultContainer" />
  <TypeSignature Language="VB.NET" Value="Public Class VaultContainer&#xA;Inherits ArmContainer" />
  <TypeSignature Language="F#" Value="type VaultContainer = class&#xA;    inherit ArmContainer" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.KeyVault</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.Core.ArmContainer</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class representing collection of Vault and their operations over a ResourceGroup. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected VaultContainer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.KeyVault.VaultContainer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.KeyVault</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.KeyVault.VaultContainer" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAccessPolicy">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.KeyVault.Models.VaultAccessPolicyParameters&gt; AddAccessPolicy (Azure.ResourceManager.KeyVault.Models.VaultAccessPolicyProperties properties, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.KeyVault.Models.VaultAccessPolicyParameters&gt; AddAccessPolicy(class Azure.ResourceManager.KeyVault.Models.VaultAccessPolicyProperties properties, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.KeyVault.VaultContainer.AddAccessPolicy(Azure.ResourceManager.KeyVault.Models.VaultAccessPolicyProperties,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddAccessPolicy (properties As VaultAccessPolicyProperties, Optional cancellationToken As CancellationToken = Nothing) As Response(Of VaultAccessPolicyParameters)" />
      <MemberSignature Language="F#" Value="abstract member AddAccessPolicy : Azure.ResourceManager.KeyVault.Models.VaultAccessPolicyProperties * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.KeyVault.Models.VaultAccessPolicyParameters&gt;&#xA;override this.AddAccessPolicy : Azure.ResourceManager.KeyVault.Models.VaultAccessPolicyProperties * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.KeyVault.Models.VaultAccessPolicyParameters&gt;" Usage="vaultContainer.AddAccessPolicy (properties, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.KeyVault</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.KeyVault.Models.VaultAccessPolicyParameters&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="Azure.ResourceManager.KeyVault.Models.VaultAccessPolicyProperties" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="properties"> Properties of the access policy. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Add access policies in a key vault in the specified subscription. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="properties" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="AddAccessPolicyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.KeyVault.Models.VaultAccessPolicyParameters&gt;&gt; AddAccessPolicyAsync (Azure.ResourceManager.KeyVault.Models.VaultAccessPolicyProperties properties, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.KeyVault.Models.VaultAccessPolicyParameters&gt;&gt; AddAccessPolicyAsync(class Azure.ResourceManager.KeyVault.Models.VaultAccessPolicyProperties properties, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.KeyVault.VaultContainer.AddAccessPolicyAsync(Azure.ResourceManager.KeyVault.Models.VaultAccessPolicyProperties,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddAccessPolicyAsync (properties As VaultAccessPolicyProperties, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of VaultAccessPolicyParameters))" />
      <MemberSignature Language="F#" Value="abstract member AddAccessPolicyAsync : Azure.ResourceManager.KeyVault.Models.VaultAccessPolicyProperties * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.KeyVault.Models.VaultAccessPolicyParameters&gt;&gt;&#xA;override this.AddAccessPolicyAsync : Azure.ResourceManager.KeyVault.Models.VaultAccessPolicyProperties * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.KeyVault.Models.VaultAccessPolicyParameters&gt;&gt;" Usage="vaultContainer.AddAccessPolicyAsync (properties, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.KeyVault</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.KeyVault.Models.VaultAccessPolicyParameters&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="Azure.ResourceManager.KeyVault.Models.VaultAccessPolicyProperties" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="properties"> Properties of the access policy. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Add access policies in a key vault in the specified subscription. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="properties" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CheckIfExists">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;bool&gt; CheckIfExists (string vaultName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;bool&gt; CheckIfExists(string vaultName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.KeyVault.VaultContainer.CheckIfExists(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckIfExists (vaultName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of Boolean)" />
      <MemberSignature Language="F#" Value="abstract member CheckIfExists : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;bool&gt;&#xA;override this.CheckIfExists : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;bool&gt;" Usage="vaultContainer.CheckIfExists (vaultName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.KeyVault</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vaultName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="vaultName"> The name of the vault. </param>
        <param name="cancellationToken"> A token to allow the caller to cancel the call to the service. The default value is <see cref="P:System.Threading.CancellationToken.None" />. </param>
        <summary> Tries to get details for this resource from the service. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckIfExistsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt; CheckIfExistsAsync (string vaultName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;bool&gt;&gt; CheckIfExistsAsync(string vaultName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.KeyVault.VaultContainer.CheckIfExistsAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckIfExistsAsync (vaultName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of Boolean))" />
      <MemberSignature Language="F#" Value="abstract member CheckIfExistsAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt;&#xA;override this.CheckIfExistsAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt;" Usage="vaultContainer.CheckIfExistsAsync (vaultName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.KeyVault</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Boolean&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vaultName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="vaultName"> The name of the vault. </param>
        <param name="cancellationToken"> A token to allow the caller to cancel the call to the service. The default value is <see cref="P:System.Threading.CancellationToken.None" />. </param>
        <summary> Tries to get details for this resource from the service. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdate">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.KeyVault.Models.VaultCreateOrUpdateOperation CreateOrUpdate (string vaultName, Azure.ResourceManager.KeyVault.Models.VaultCreateOrUpdateParameters parameters, bool waitForCompletion = true, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.KeyVault.Models.VaultCreateOrUpdateOperation CreateOrUpdate(string vaultName, class Azure.ResourceManager.KeyVault.Models.VaultCreateOrUpdateParameters parameters, bool waitForCompletion, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.KeyVault.VaultContainer.CreateOrUpdate(System.String,Azure.ResourceManager.KeyVault.Models.VaultCreateOrUpdateParameters,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdate (vaultName As String, parameters As VaultCreateOrUpdateParameters, Optional waitForCompletion As Boolean = true, Optional cancellationToken As CancellationToken = Nothing) As VaultCreateOrUpdateOperation" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdate : string * Azure.ResourceManager.KeyVault.Models.VaultCreateOrUpdateParameters * bool * System.Threading.CancellationToken -&gt; Azure.ResourceManager.KeyVault.Models.VaultCreateOrUpdateOperation&#xA;override this.CreateOrUpdate : string * Azure.ResourceManager.KeyVault.Models.VaultCreateOrUpdateParameters * bool * System.Threading.CancellationToken -&gt; Azure.ResourceManager.KeyVault.Models.VaultCreateOrUpdateOperation" Usage="vaultContainer.CreateOrUpdate (vaultName, parameters, waitForCompletion, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.KeyVault</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.KeyVault.Models.VaultCreateOrUpdateOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vaultName" Type="System.String" />
        <Parameter Name="parameters" Type="Azure.ResourceManager.KeyVault.Models.VaultCreateOrUpdateParameters" />
        <Parameter Name="waitForCompletion" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="vaultName"> Name of the vault. </param>
        <param name="parameters"> Parameters to create or update the vault. </param>
        <param name="waitForCompletion"> Waits for the completion of the long running operations. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Create or update a key vault in the specified subscription. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="vaultName" /> or <paramref name="parameters" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.KeyVault.Models.VaultCreateOrUpdateOperation&gt; CreateOrUpdateAsync (string vaultName, Azure.ResourceManager.KeyVault.Models.VaultCreateOrUpdateParameters parameters, bool waitForCompletion = true, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.KeyVault.Models.VaultCreateOrUpdateOperation&gt; CreateOrUpdateAsync(string vaultName, class Azure.ResourceManager.KeyVault.Models.VaultCreateOrUpdateParameters parameters, bool waitForCompletion, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.KeyVault.VaultContainer.CreateOrUpdateAsync(System.String,Azure.ResourceManager.KeyVault.Models.VaultCreateOrUpdateParameters,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdateAsync (vaultName As String, parameters As VaultCreateOrUpdateParameters, Optional waitForCompletion As Boolean = true, Optional cancellationToken As CancellationToken = Nothing) As Task(Of VaultCreateOrUpdateOperation)" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdateAsync : string * Azure.ResourceManager.KeyVault.Models.VaultCreateOrUpdateParameters * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.KeyVault.Models.VaultCreateOrUpdateOperation&gt;&#xA;override this.CreateOrUpdateAsync : string * Azure.ResourceManager.KeyVault.Models.VaultCreateOrUpdateParameters * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.KeyVault.Models.VaultCreateOrUpdateOperation&gt;" Usage="vaultContainer.CreateOrUpdateAsync (vaultName, parameters, waitForCompletion, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.KeyVault</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.KeyVault.Models.VaultCreateOrUpdateOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vaultName" Type="System.String" />
        <Parameter Name="parameters" Type="Azure.ResourceManager.KeyVault.Models.VaultCreateOrUpdateParameters" />
        <Parameter Name="waitForCompletion" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="vaultName"> Name of the vault. </param>
        <param name="parameters"> Parameters to create or update the vault. </param>
        <param name="waitForCompletion"> Waits for the completion of the long running operations. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Create or update a key vault in the specified subscription. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="vaultName" /> or <paramref name="parameters" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.KeyVault.Vault&gt; Get (string vaultName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.KeyVault.Vault&gt; Get(string vaultName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.KeyVault.VaultContainer.Get(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Get (vaultName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of Vault)" />
      <MemberSignature Language="F#" Value="abstract member Get : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.KeyVault.Vault&gt;&#xA;override this.Get : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.KeyVault.Vault&gt;" Usage="vaultContainer.Get (vaultName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.KeyVault</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.KeyVault.Vault&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vaultName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="vaultName"> The name of the vault. </param>
        <param name="cancellationToken"> A token to allow the caller to cancel the call to the service. The default value is <see cref="P:System.Threading.CancellationToken.None" />. </param>
        <summary> Gets details for this resource from the service. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAll">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.KeyVault.Vault&gt; GetAll (int? top = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.KeyVault.Vault&gt; GetAll(valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.KeyVault.VaultContainer.GetAll(System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAll (Optional top As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of Vault)" />
      <MemberSignature Language="F#" Value="abstract member GetAll : Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.KeyVault.Vault&gt;&#xA;override this.GetAll : Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.KeyVault.Vault&gt;" Usage="vaultContainer.GetAll (top, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.KeyVault</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.KeyVault.Vault&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="top"> Maximum number of results to return. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> The List operation gets information about the vaults associated with the subscription and within the specified resource group. </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.KeyVault.Vault" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllAsGenericResources">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Resources.GenericResource&gt; GetAllAsGenericResources (string nameFilter, string expand = default, int? top = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Resources.GenericResource&gt; GetAllAsGenericResources(string nameFilter, string expand, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.KeyVault.VaultContainer.GetAllAsGenericResources(System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAllAsGenericResources (nameFilter As String, Optional expand As String = Nothing, Optional top As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of GenericResource)" />
      <MemberSignature Language="F#" Value="abstract member GetAllAsGenericResources : string * string * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Resources.GenericResource&gt;&#xA;override this.GetAllAsGenericResources : string * string * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Resources.GenericResource&gt;" Usage="vaultContainer.GetAllAsGenericResources (nameFilter, expand, top, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.KeyVault</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Resources.GenericResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nameFilter" Type="System.String" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="nameFilter"> The filter used in this operation. </param>
        <param name="expand"> Comma-separated list of additional properties to be included in the response. Valid values include `createdTime`, `changedTime` and `provisioningState`. </param>
        <param name="top"> The number of results to return. </param>
        <param name="cancellationToken"> A token to allow the caller to cancel the call to the service. The default value is <see cref="P:System.Threading.CancellationToken.None" />. </param>
        <summary> Filters the list of <see cref="T:Azure.ResourceManager.KeyVault.Vault" /> for this resource group represented as generic resources. </summary>
        <returns> A collection of resource that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllAsGenericResourcesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Resources.GenericResource&gt; GetAllAsGenericResourcesAsync (string nameFilter, string expand = default, int? top = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Resources.GenericResource&gt; GetAllAsGenericResourcesAsync(string nameFilter, string expand, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.KeyVault.VaultContainer.GetAllAsGenericResourcesAsync(System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAllAsGenericResourcesAsync (nameFilter As String, Optional expand As String = Nothing, Optional top As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of GenericResource)" />
      <MemberSignature Language="F#" Value="abstract member GetAllAsGenericResourcesAsync : string * string * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Resources.GenericResource&gt;&#xA;override this.GetAllAsGenericResourcesAsync : string * string * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Resources.GenericResource&gt;" Usage="vaultContainer.GetAllAsGenericResourcesAsync (nameFilter, expand, top, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.KeyVault</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Resources.GenericResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nameFilter" Type="System.String" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="nameFilter"> The filter used in this operation. </param>
        <param name="expand"> Comma-separated list of additional properties to be included in the response. Valid values include `createdTime`, `changedTime` and `provisioningState`. </param>
        <param name="top"> The number of results to return. </param>
        <param name="cancellationToken"> A token to allow the caller to cancel the call to the service. The default value is <see cref="P:System.Threading.CancellationToken.None" />. </param>
        <summary> Filters the list of <see cref="T:Azure.ResourceManager.KeyVault.Vault" /> for this resource group represented as generic resources. </summary>
        <returns> An async collection of resource that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.KeyVault.Vault&gt; GetAllAsync (int? top = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.KeyVault.Vault&gt; GetAllAsync(valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.KeyVault.VaultContainer.GetAllAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAllAsync (Optional top As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of Vault)" />
      <MemberSignature Language="F#" Value="abstract member GetAllAsync : Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.KeyVault.Vault&gt;&#xA;override this.GetAllAsync : Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.KeyVault.Vault&gt;" Usage="vaultContainer.GetAllAsync (top, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.KeyVault</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.KeyVault.Vault&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="top"> Maximum number of results to return. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> The List operation gets information about the vaults associated with the subscription and within the specified resource group. </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.KeyVault.Vault" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.KeyVault.Vault&gt;&gt; GetAsync (string vaultName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.KeyVault.Vault&gt;&gt; GetAsync(string vaultName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.KeyVault.VaultContainer.GetAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAsync (vaultName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of Vault))" />
      <MemberSignature Language="F#" Value="abstract member GetAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.KeyVault.Vault&gt;&gt;&#xA;override this.GetAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.KeyVault.Vault&gt;&gt;" Usage="vaultContainer.GetAsync (vaultName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.KeyVault</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.KeyVault.Vault&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vaultName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="vaultName"> The name of the vault. </param>
        <param name="cancellationToken"> A token to allow the caller to cancel the call to the service. The default value is <see cref="P:System.Threading.CancellationToken.None" />. </param>
        <summary> Gets details for this resource from the service. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIfExists">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.KeyVault.Vault&gt; GetIfExists (string vaultName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.KeyVault.Vault&gt; GetIfExists(string vaultName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.KeyVault.VaultContainer.GetIfExists(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIfExists (vaultName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of Vault)" />
      <MemberSignature Language="F#" Value="abstract member GetIfExists : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.KeyVault.Vault&gt;&#xA;override this.GetIfExists : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.KeyVault.Vault&gt;" Usage="vaultContainer.GetIfExists (vaultName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.KeyVault</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.KeyVault.Vault&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vaultName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="vaultName"> The name of the vault. </param>
        <param name="cancellationToken"> A token to allow the caller to cancel the call to the service. The default value is <see cref="P:System.Threading.CancellationToken.None" />. </param>
        <summary> Tries to get details for this resource from the service. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIfExistsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.KeyVault.Vault&gt;&gt; GetIfExistsAsync (string vaultName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.KeyVault.Vault&gt;&gt; GetIfExistsAsync(string vaultName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.KeyVault.VaultContainer.GetIfExistsAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIfExistsAsync (vaultName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of Vault))" />
      <MemberSignature Language="F#" Value="abstract member GetIfExistsAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.KeyVault.Vault&gt;&gt;&#xA;override this.GetIfExistsAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.KeyVault.Vault&gt;&gt;" Usage="vaultContainer.GetIfExistsAsync (vaultName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.KeyVault</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.KeyVault.Vault&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vaultName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="vaultName"> The name of the vault. </param>
        <param name="cancellationToken"> A token to allow the caller to cancel the call to the service. The default value is <see cref="P:System.Threading.CancellationToken.None" />. </param>
        <summary> Tries to get details for this resource from the service. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAccessPolicy">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.KeyVault.Models.VaultAccessPolicyParameters&gt; RemoveAccessPolicy (Azure.ResourceManager.KeyVault.Models.VaultAccessPolicyProperties properties, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.KeyVault.Models.VaultAccessPolicyParameters&gt; RemoveAccessPolicy(class Azure.ResourceManager.KeyVault.Models.VaultAccessPolicyProperties properties, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.KeyVault.VaultContainer.RemoveAccessPolicy(Azure.ResourceManager.KeyVault.Models.VaultAccessPolicyProperties,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoveAccessPolicy (properties As VaultAccessPolicyProperties, Optional cancellationToken As CancellationToken = Nothing) As Response(Of VaultAccessPolicyParameters)" />
      <MemberSignature Language="F#" Value="abstract member RemoveAccessPolicy : Azure.ResourceManager.KeyVault.Models.VaultAccessPolicyProperties * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.KeyVault.Models.VaultAccessPolicyParameters&gt;&#xA;override this.RemoveAccessPolicy : Azure.ResourceManager.KeyVault.Models.VaultAccessPolicyProperties * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.KeyVault.Models.VaultAccessPolicyParameters&gt;" Usage="vaultContainer.RemoveAccessPolicy (properties, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.KeyVault</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.KeyVault.Models.VaultAccessPolicyParameters&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="Azure.ResourceManager.KeyVault.Models.VaultAccessPolicyProperties" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="properties"> Properties of the access policy. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Remove access policies in a key vault in the specified subscription. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="properties" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAccessPolicyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.KeyVault.Models.VaultAccessPolicyParameters&gt;&gt; RemoveAccessPolicyAsync (Azure.ResourceManager.KeyVault.Models.VaultAccessPolicyProperties properties, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.KeyVault.Models.VaultAccessPolicyParameters&gt;&gt; RemoveAccessPolicyAsync(class Azure.ResourceManager.KeyVault.Models.VaultAccessPolicyProperties properties, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.KeyVault.VaultContainer.RemoveAccessPolicyAsync(Azure.ResourceManager.KeyVault.Models.VaultAccessPolicyProperties,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoveAccessPolicyAsync (properties As VaultAccessPolicyProperties, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of VaultAccessPolicyParameters))" />
      <MemberSignature Language="F#" Value="abstract member RemoveAccessPolicyAsync : Azure.ResourceManager.KeyVault.Models.VaultAccessPolicyProperties * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.KeyVault.Models.VaultAccessPolicyParameters&gt;&gt;&#xA;override this.RemoveAccessPolicyAsync : Azure.ResourceManager.KeyVault.Models.VaultAccessPolicyProperties * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.KeyVault.Models.VaultAccessPolicyParameters&gt;&gt;" Usage="vaultContainer.RemoveAccessPolicyAsync (properties, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.KeyVault</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.KeyVault.Models.VaultAccessPolicyParameters&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="Azure.ResourceManager.KeyVault.Models.VaultAccessPolicyProperties" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="properties"> Properties of the access policy. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Remove access policies in a key vault in the specified subscription. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="properties" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ReplaceAccessPolicy">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.KeyVault.Models.VaultAccessPolicyParameters&gt; ReplaceAccessPolicy (Azure.ResourceManager.KeyVault.Models.VaultAccessPolicyProperties properties, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.KeyVault.Models.VaultAccessPolicyParameters&gt; ReplaceAccessPolicy(class Azure.ResourceManager.KeyVault.Models.VaultAccessPolicyProperties properties, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.KeyVault.VaultContainer.ReplaceAccessPolicy(Azure.ResourceManager.KeyVault.Models.VaultAccessPolicyProperties,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReplaceAccessPolicy (properties As VaultAccessPolicyProperties, Optional cancellationToken As CancellationToken = Nothing) As Response(Of VaultAccessPolicyParameters)" />
      <MemberSignature Language="F#" Value="abstract member ReplaceAccessPolicy : Azure.ResourceManager.KeyVault.Models.VaultAccessPolicyProperties * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.KeyVault.Models.VaultAccessPolicyParameters&gt;&#xA;override this.ReplaceAccessPolicy : Azure.ResourceManager.KeyVault.Models.VaultAccessPolicyProperties * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.KeyVault.Models.VaultAccessPolicyParameters&gt;" Usage="vaultContainer.ReplaceAccessPolicy (properties, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.KeyVault</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.KeyVault.Models.VaultAccessPolicyParameters&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="Azure.ResourceManager.KeyVault.Models.VaultAccessPolicyProperties" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="properties"> Properties of the access policy. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Replace access policies in a key vault in the specified subscription. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="properties" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ReplaceAccessPolicyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.KeyVault.Models.VaultAccessPolicyParameters&gt;&gt; ReplaceAccessPolicyAsync (Azure.ResourceManager.KeyVault.Models.VaultAccessPolicyProperties properties, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.KeyVault.Models.VaultAccessPolicyParameters&gt;&gt; ReplaceAccessPolicyAsync(class Azure.ResourceManager.KeyVault.Models.VaultAccessPolicyProperties properties, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.KeyVault.VaultContainer.ReplaceAccessPolicyAsync(Azure.ResourceManager.KeyVault.Models.VaultAccessPolicyProperties,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReplaceAccessPolicyAsync (properties As VaultAccessPolicyProperties, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of VaultAccessPolicyParameters))" />
      <MemberSignature Language="F#" Value="abstract member ReplaceAccessPolicyAsync : Azure.ResourceManager.KeyVault.Models.VaultAccessPolicyProperties * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.KeyVault.Models.VaultAccessPolicyParameters&gt;&gt;&#xA;override this.ReplaceAccessPolicyAsync : Azure.ResourceManager.KeyVault.Models.VaultAccessPolicyProperties * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.KeyVault.Models.VaultAccessPolicyParameters&gt;&gt;" Usage="vaultContainer.ReplaceAccessPolicyAsync (properties, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.KeyVault</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.KeyVault.Models.VaultAccessPolicyParameters&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="Azure.ResourceManager.KeyVault.Models.VaultAccessPolicyProperties" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="properties"> Properties of the access policy. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Replace access policies in a key vault in the specified subscription. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="properties" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ValidResourceType">
      <MemberSignature Language="C#" Value="protected override Azure.ResourceManager.ResourceType ValidResourceType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.ResourceType ValidResourceType" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.KeyVault.VaultContainer.ValidResourceType" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ValidResourceType As ResourceType" />
      <MemberSignature Language="F#" Value="member this.ValidResourceType : Azure.ResourceManager.ResourceType" Usage="Azure.ResourceManager.KeyVault.VaultContainer.ValidResourceType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.KeyVault</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ResourceType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets the valid resource type for this object. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

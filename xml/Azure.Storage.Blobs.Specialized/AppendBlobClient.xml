<Type Name="AppendBlobClient" FullName="Azure.Storage.Blobs.Specialized.AppendBlobClient">
  <TypeSignature Language="C#" Value="public class AppendBlobClient : Azure.Storage.Blobs.Specialized.BlobBaseClient" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AppendBlobClient extends Azure.Storage.Blobs.Specialized.BlobBaseClient" />
  <TypeSignature Language="DocId" Value="T:Azure.Storage.Blobs.Specialized.AppendBlobClient" />
  <TypeSignature Language="VB.NET" Value="Public Class AppendBlobClient&#xA;Inherits BlobBaseClient" />
  <TypeSignature Language="F#" Value="type AppendBlobClient = class&#xA;    inherit BlobBaseClient" />
  <AssemblyInfo>
    <AssemblyName>Azure.Storage.Blobs</AssemblyName>
    <AssemblyVersion>12.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.Storage.Blobs.Specialized.BlobBaseClient</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AppendBlobClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.AppendBlobClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AppendBlobClient (Uri blobUri, Azure.Storage.Blobs.BlobClientOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri blobUri, class Azure.Storage.Blobs.BlobClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.AppendBlobClient.#ctor(System.Uri,Azure.Storage.Blobs.BlobClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (blobUri As Uri, Optional options As BlobClientOptions = null)" />
      <MemberSignature Language="F#" Value="new Azure.Storage.Blobs.Specialized.AppendBlobClient : Uri * Azure.Storage.Blobs.BlobClientOptions -&gt; Azure.Storage.Blobs.Specialized.AppendBlobClient" Usage="new Azure.Storage.Blobs.Specialized.AppendBlobClient (blobUri, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="blobUri" Type="System.Uri" />
        <Parameter Name="options" Type="Azure.Storage.Blobs.BlobClientOptions" />
      </Parameters>
      <Docs>
        <param name="blobUri">To be added.</param>
        <param name="options">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AppendBlobClient (string connectionString, string containerName, string blobName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString, string containerName, string blobName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.AppendBlobClient.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String, containerName As String, blobName As String)" />
      <MemberSignature Language="F#" Value="new Azure.Storage.Blobs.Specialized.AppendBlobClient : string * string * string -&gt; Azure.Storage.Blobs.Specialized.AppendBlobClient" Usage="new Azure.Storage.Blobs.Specialized.AppendBlobClient (connectionString, containerName, blobName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="containerName" Type="System.String" />
        <Parameter Name="blobName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">To be added.</param>
        <param name="containerName">To be added.</param>
        <param name="blobName">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AppendBlobClient (Uri blobUri, Azure.Core.TokenCredential credential, Azure.Storage.Blobs.BlobClientOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri blobUri, class Azure.Core.TokenCredential credential, class Azure.Storage.Blobs.BlobClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.AppendBlobClient.#ctor(System.Uri,Azure.Core.TokenCredential,Azure.Storage.Blobs.BlobClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (blobUri As Uri, credential As TokenCredential, Optional options As BlobClientOptions = null)" />
      <MemberSignature Language="F#" Value="new Azure.Storage.Blobs.Specialized.AppendBlobClient : Uri * Azure.Core.TokenCredential * Azure.Storage.Blobs.BlobClientOptions -&gt; Azure.Storage.Blobs.Specialized.AppendBlobClient" Usage="new Azure.Storage.Blobs.Specialized.AppendBlobClient (blobUri, credential, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="blobUri" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.Core.TokenCredential" />
        <Parameter Name="options" Type="Azure.Storage.Blobs.BlobClientOptions" />
      </Parameters>
      <Docs>
        <param name="blobUri">To be added.</param>
        <param name="credential">To be added.</param>
        <param name="options">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AppendBlobClient (Uri blobUri, Azure.Storage.StorageSharedKeyCredential credential, Azure.Storage.Blobs.BlobClientOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri blobUri, class Azure.Storage.StorageSharedKeyCredential credential, class Azure.Storage.Blobs.BlobClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.AppendBlobClient.#ctor(System.Uri,Azure.Storage.StorageSharedKeyCredential,Azure.Storage.Blobs.BlobClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (blobUri As Uri, credential As StorageSharedKeyCredential, Optional options As BlobClientOptions = null)" />
      <MemberSignature Language="F#" Value="new Azure.Storage.Blobs.Specialized.AppendBlobClient : Uri * Azure.Storage.StorageSharedKeyCredential * Azure.Storage.Blobs.BlobClientOptions -&gt; Azure.Storage.Blobs.Specialized.AppendBlobClient" Usage="new Azure.Storage.Blobs.Specialized.AppendBlobClient (blobUri, credential, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="blobUri" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.Storage.StorageSharedKeyCredential" />
        <Parameter Name="options" Type="Azure.Storage.Blobs.BlobClientOptions" />
      </Parameters>
      <Docs>
        <param name="blobUri">To be added.</param>
        <param name="credential">To be added.</param>
        <param name="options">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AppendBlobClient (string connectionString, string containerName, string blobName, Azure.Storage.Blobs.BlobClientOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString, string containerName, string blobName, class Azure.Storage.Blobs.BlobClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.AppendBlobClient.#ctor(System.String,System.String,System.String,Azure.Storage.Blobs.BlobClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String, containerName As String, blobName As String, options As BlobClientOptions)" />
      <MemberSignature Language="F#" Value="new Azure.Storage.Blobs.Specialized.AppendBlobClient : string * string * string * Azure.Storage.Blobs.BlobClientOptions -&gt; Azure.Storage.Blobs.Specialized.AppendBlobClient" Usage="new Azure.Storage.Blobs.Specialized.AppendBlobClient (connectionString, containerName, blobName, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="containerName" Type="System.String" />
        <Parameter Name="blobName" Type="System.String" />
        <Parameter Name="options" Type="Azure.Storage.Blobs.BlobClientOptions" />
      </Parameters>
      <Docs>
        <param name="connectionString">To be added.</param>
        <param name="containerName">To be added.</param>
        <param name="blobName">To be added.</param>
        <param name="options">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendBlobMaxAppendBlockBytes">
      <MemberSignature Language="C#" Value="public const int AppendBlobMaxAppendBlockBytes = 4194304;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 AppendBlobMaxAppendBlockBytes = (4194304)" />
      <MemberSignature Language="DocId" Value="F:Azure.Storage.Blobs.Specialized.AppendBlobClient.AppendBlobMaxAppendBlockBytes" />
      <MemberSignature Language="VB.NET" Value="Public Const AppendBlobMaxAppendBlockBytes As Integer  = 4194304" />
      <MemberSignature Language="F#" Value="val mutable AppendBlobMaxAppendBlockBytes : int" Usage="Azure.Storage.Blobs.Specialized.AppendBlobClient.AppendBlobMaxAppendBlockBytes" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>4194304</MemberValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendBlobMaxBlocks">
      <MemberSignature Language="C#" Value="public const int AppendBlobMaxBlocks = 50000;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 AppendBlobMaxBlocks = (50000)" />
      <MemberSignature Language="DocId" Value="F:Azure.Storage.Blobs.Specialized.AppendBlobClient.AppendBlobMaxBlocks" />
      <MemberSignature Language="VB.NET" Value="Public Const AppendBlobMaxBlocks As Integer  = 50000" />
      <MemberSignature Language="F#" Value="val mutable AppendBlobMaxBlocks : int" Usage="Azure.Storage.Blobs.Specialized.AppendBlobClient.AppendBlobMaxBlocks" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>50000</MemberValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendBlock">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Blobs.Models.BlobAppendInfo&gt; AppendBlock (System.IO.Stream content, byte[] transactionalContentHash = null, Nullable&lt;Azure.Storage.Blobs.Models.AppendBlobAccessConditions&gt; accessConditions = null, IProgress&lt;Azure.Storage.Common.StorageProgress&gt; progressHandler = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Azure.Response`1&lt;class Azure.Storage.Blobs.Models.BlobAppendInfo&gt; AppendBlock(class System.IO.Stream content, unsigned int8[] transactionalContentHash, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Blobs.Models.AppendBlobAccessConditions&gt; accessConditions, class System.IProgress`1&lt;class Azure.Storage.Common.StorageProgress&gt; progressHandler, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.AppendBlobClient.AppendBlock(System.IO.Stream,System.Byte[],System.Nullable{Azure.Storage.Blobs.Models.AppendBlobAccessConditions},System.IProgress{Azure.Storage.Common.StorageProgress},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member AppendBlock : System.IO.Stream * byte[] * Nullable&lt;Azure.Storage.Blobs.Models.AppendBlobAccessConditions&gt; * IProgress&lt;Azure.Storage.Common.StorageProgress&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Blobs.Models.BlobAppendInfo&gt;&#xA;override this.AppendBlock : System.IO.Stream * byte[] * Nullable&lt;Azure.Storage.Blobs.Models.AppendBlobAccessConditions&gt; * IProgress&lt;Azure.Storage.Common.StorageProgress&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Blobs.Models.BlobAppendInfo&gt;" Usage="appendBlobClient.AppendBlock (content, transactionalContentHash, accessConditions, progressHandler, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Blobs.Models.BlobAppendInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="System.IO.Stream" />
        <Parameter Name="transactionalContentHash" Type="System.Byte[]" />
        <Parameter Name="accessConditions" Type="System.Nullable&lt;Azure.Storage.Blobs.Models.AppendBlobAccessConditions&gt;" />
        <Parameter Name="progressHandler" Type="System.IProgress&lt;Azure.Storage.Common.StorageProgress&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content">To be added.</param>
        <param name="transactionalContentHash">To be added.</param>
        <param name="accessConditions">To be added.</param>
        <param name="progressHandler">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendBlockAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.BlobAppendInfo&gt;&gt; AppendBlockAsync (System.IO.Stream content, byte[] transactionalContentHash = null, Nullable&lt;Azure.Storage.Blobs.Models.AppendBlobAccessConditions&gt; accessConditions = null, IProgress&lt;Azure.Storage.Common.StorageProgress&gt; progressHandler = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;valuetype Azure.Response`1&lt;class Azure.Storage.Blobs.Models.BlobAppendInfo&gt;&gt; AppendBlockAsync(class System.IO.Stream content, unsigned int8[] transactionalContentHash, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Blobs.Models.AppendBlobAccessConditions&gt; accessConditions, class System.IProgress`1&lt;class Azure.Storage.Common.StorageProgress&gt; progressHandler, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.AppendBlobClient.AppendBlockAsync(System.IO.Stream,System.Byte[],System.Nullable{Azure.Storage.Blobs.Models.AppendBlobAccessConditions},System.IProgress{Azure.Storage.Common.StorageProgress},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member AppendBlockAsync : System.IO.Stream * byte[] * Nullable&lt;Azure.Storage.Blobs.Models.AppendBlobAccessConditions&gt; * IProgress&lt;Azure.Storage.Common.StorageProgress&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.BlobAppendInfo&gt;&gt;&#xA;override this.AppendBlockAsync : System.IO.Stream * byte[] * Nullable&lt;Azure.Storage.Blobs.Models.AppendBlobAccessConditions&gt; * IProgress&lt;Azure.Storage.Common.StorageProgress&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.BlobAppendInfo&gt;&gt;" Usage="appendBlobClient.AppendBlockAsync (content, transactionalContentHash, accessConditions, progressHandler, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.BlobAppendInfo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="System.IO.Stream" />
        <Parameter Name="transactionalContentHash" Type="System.Byte[]" />
        <Parameter Name="accessConditions" Type="System.Nullable&lt;Azure.Storage.Blobs.Models.AppendBlobAccessConditions&gt;" />
        <Parameter Name="progressHandler" Type="System.IProgress&lt;Azure.Storage.Common.StorageProgress&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content">To be added.</param>
        <param name="transactionalContentHash">To be added.</param>
        <param name="accessConditions">To be added.</param>
        <param name="progressHandler">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendBlockFromUri">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Blobs.Models.BlobAppendInfo&gt; AppendBlockFromUri (Uri sourceUri, Azure.Core.Http.HttpRange sourceRange = null, byte[] sourceContentHash = null, Nullable&lt;Azure.Storage.Blobs.Models.AppendBlobAccessConditions&gt; accessConditions = null, Nullable&lt;Azure.Storage.Blobs.Models.AppendBlobAccessConditions&gt; sourceAccessConditions = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Azure.Response`1&lt;class Azure.Storage.Blobs.Models.BlobAppendInfo&gt; AppendBlockFromUri(class System.Uri sourceUri, valuetype Azure.Core.Http.HttpRange sourceRange, unsigned int8[] sourceContentHash, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Blobs.Models.AppendBlobAccessConditions&gt; accessConditions, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Blobs.Models.AppendBlobAccessConditions&gt; sourceAccessConditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.AppendBlobClient.AppendBlockFromUri(System.Uri,Azure.Core.Http.HttpRange,System.Byte[],System.Nullable{Azure.Storage.Blobs.Models.AppendBlobAccessConditions},System.Nullable{Azure.Storage.Blobs.Models.AppendBlobAccessConditions},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member AppendBlockFromUri : Uri * Azure.Core.Http.HttpRange * byte[] * Nullable&lt;Azure.Storage.Blobs.Models.AppendBlobAccessConditions&gt; * Nullable&lt;Azure.Storage.Blobs.Models.AppendBlobAccessConditions&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Blobs.Models.BlobAppendInfo&gt;&#xA;override this.AppendBlockFromUri : Uri * Azure.Core.Http.HttpRange * byte[] * Nullable&lt;Azure.Storage.Blobs.Models.AppendBlobAccessConditions&gt; * Nullable&lt;Azure.Storage.Blobs.Models.AppendBlobAccessConditions&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Blobs.Models.BlobAppendInfo&gt;" Usage="appendBlobClient.AppendBlockFromUri (sourceUri, sourceRange, sourceContentHash, accessConditions, sourceAccessConditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Blobs.Models.BlobAppendInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceUri" Type="System.Uri" />
        <Parameter Name="sourceRange" Type="Azure.Core.Http.HttpRange" />
        <Parameter Name="sourceContentHash" Type="System.Byte[]" />
        <Parameter Name="accessConditions" Type="System.Nullable&lt;Azure.Storage.Blobs.Models.AppendBlobAccessConditions&gt;" />
        <Parameter Name="sourceAccessConditions" Type="System.Nullable&lt;Azure.Storage.Blobs.Models.AppendBlobAccessConditions&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sourceUri">To be added.</param>
        <param name="sourceRange">To be added.</param>
        <param name="sourceContentHash">To be added.</param>
        <param name="accessConditions">To be added.</param>
        <param name="sourceAccessConditions">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendBlockFromUriAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.BlobAppendInfo&gt;&gt; AppendBlockFromUriAsync (Uri sourceUri, Azure.Core.Http.HttpRange sourceRange = null, byte[] sourceContentHash = null, Nullable&lt;Azure.Storage.Blobs.Models.AppendBlobAccessConditions&gt; accessConditions = null, Nullable&lt;Azure.Storage.Blobs.Models.AppendBlobAccessConditions&gt; sourceAccessConditions = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;valuetype Azure.Response`1&lt;class Azure.Storage.Blobs.Models.BlobAppendInfo&gt;&gt; AppendBlockFromUriAsync(class System.Uri sourceUri, valuetype Azure.Core.Http.HttpRange sourceRange, unsigned int8[] sourceContentHash, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Blobs.Models.AppendBlobAccessConditions&gt; accessConditions, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Blobs.Models.AppendBlobAccessConditions&gt; sourceAccessConditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.AppendBlobClient.AppendBlockFromUriAsync(System.Uri,Azure.Core.Http.HttpRange,System.Byte[],System.Nullable{Azure.Storage.Blobs.Models.AppendBlobAccessConditions},System.Nullable{Azure.Storage.Blobs.Models.AppendBlobAccessConditions},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member AppendBlockFromUriAsync : Uri * Azure.Core.Http.HttpRange * byte[] * Nullable&lt;Azure.Storage.Blobs.Models.AppendBlobAccessConditions&gt; * Nullable&lt;Azure.Storage.Blobs.Models.AppendBlobAccessConditions&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.BlobAppendInfo&gt;&gt;&#xA;override this.AppendBlockFromUriAsync : Uri * Azure.Core.Http.HttpRange * byte[] * Nullable&lt;Azure.Storage.Blobs.Models.AppendBlobAccessConditions&gt; * Nullable&lt;Azure.Storage.Blobs.Models.AppendBlobAccessConditions&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.BlobAppendInfo&gt;&gt;" Usage="appendBlobClient.AppendBlockFromUriAsync (sourceUri, sourceRange, sourceContentHash, accessConditions, sourceAccessConditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.BlobAppendInfo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceUri" Type="System.Uri" />
        <Parameter Name="sourceRange" Type="Azure.Core.Http.HttpRange" />
        <Parameter Name="sourceContentHash" Type="System.Byte[]" />
        <Parameter Name="accessConditions" Type="System.Nullable&lt;Azure.Storage.Blobs.Models.AppendBlobAccessConditions&gt;" />
        <Parameter Name="sourceAccessConditions" Type="System.Nullable&lt;Azure.Storage.Blobs.Models.AppendBlobAccessConditions&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sourceUri">To be added.</param>
        <param name="sourceRange">To be added.</param>
        <param name="sourceContentHash">To be added.</param>
        <param name="accessConditions">To be added.</param>
        <param name="sourceAccessConditions">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt; Create (Nullable&lt;Azure.Storage.Blobs.Models.BlobHttpHeaders&gt; httpHeaders = null, System.Collections.Generic.IDictionary&lt;string,string&gt; metadata = null, Nullable&lt;Azure.Storage.Blobs.Models.AppendBlobAccessConditions&gt; accessConditions = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Azure.Response`1&lt;class Azure.Storage.Blobs.Models.BlobContentInfo&gt; Create(valuetype System.Nullable`1&lt;valuetype Azure.Storage.Blobs.Models.BlobHttpHeaders&gt; httpHeaders, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; metadata, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Blobs.Models.AppendBlobAccessConditions&gt; accessConditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.AppendBlobClient.Create(System.Nullable{Azure.Storage.Blobs.Models.BlobHttpHeaders},System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{Azure.Storage.Blobs.Models.AppendBlobAccessConditions},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member Create : Nullable&lt;Azure.Storage.Blobs.Models.BlobHttpHeaders&gt; * System.Collections.Generic.IDictionary&lt;string, string&gt; * Nullable&lt;Azure.Storage.Blobs.Models.AppendBlobAccessConditions&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt;&#xA;override this.Create : Nullable&lt;Azure.Storage.Blobs.Models.BlobHttpHeaders&gt; * System.Collections.Generic.IDictionary&lt;string, string&gt; * Nullable&lt;Azure.Storage.Blobs.Models.AppendBlobAccessConditions&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt;" Usage="appendBlobClient.Create (httpHeaders, metadata, accessConditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="httpHeaders" Type="System.Nullable&lt;Azure.Storage.Blobs.Models.BlobHttpHeaders&gt;" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="accessConditions" Type="System.Nullable&lt;Azure.Storage.Blobs.Models.AppendBlobAccessConditions&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="httpHeaders">To be added.</param>
        <param name="metadata">To be added.</param>
        <param name="accessConditions">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt;&gt; CreateAsync (Nullable&lt;Azure.Storage.Blobs.Models.BlobHttpHeaders&gt; httpHeaders = null, System.Collections.Generic.IDictionary&lt;string,string&gt; metadata = null, Nullable&lt;Azure.Storage.Blobs.Models.AppendBlobAccessConditions&gt; accessConditions = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;valuetype Azure.Response`1&lt;class Azure.Storage.Blobs.Models.BlobContentInfo&gt;&gt; CreateAsync(valuetype System.Nullable`1&lt;valuetype Azure.Storage.Blobs.Models.BlobHttpHeaders&gt; httpHeaders, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; metadata, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Blobs.Models.AppendBlobAccessConditions&gt; accessConditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.AppendBlobClient.CreateAsync(System.Nullable{Azure.Storage.Blobs.Models.BlobHttpHeaders},System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{Azure.Storage.Blobs.Models.AppendBlobAccessConditions},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member CreateAsync : Nullable&lt;Azure.Storage.Blobs.Models.BlobHttpHeaders&gt; * System.Collections.Generic.IDictionary&lt;string, string&gt; * Nullable&lt;Azure.Storage.Blobs.Models.AppendBlobAccessConditions&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt;&gt;&#xA;override this.CreateAsync : Nullable&lt;Azure.Storage.Blobs.Models.BlobHttpHeaders&gt; * System.Collections.Generic.IDictionary&lt;string, string&gt; * Nullable&lt;Azure.Storage.Blobs.Models.AppendBlobAccessConditions&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt;&gt;" Usage="appendBlobClient.CreateAsync (httpHeaders, metadata, accessConditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="httpHeaders" Type="System.Nullable&lt;Azure.Storage.Blobs.Models.BlobHttpHeaders&gt;" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="accessConditions" Type="System.Nullable&lt;Azure.Storage.Blobs.Models.AppendBlobAccessConditions&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="httpHeaders">To be added.</param>
        <param name="metadata">To be added.</param>
        <param name="accessConditions">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithSnapshot">
      <MemberSignature Language="C#" Value="public Azure.Storage.Blobs.Specialized.AppendBlobClient WithSnapshot (string snapshot);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Azure.Storage.Blobs.Specialized.AppendBlobClient WithSnapshot(string snapshot) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.AppendBlobClient.WithSnapshot(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithSnapshot (snapshot As String) As AppendBlobClient" />
      <MemberSignature Language="F#" Value="override this.WithSnapshot : string -&gt; Azure.Storage.Blobs.Specialized.AppendBlobClient" Usage="appendBlobClient.WithSnapshot snapshot" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Storage.Blobs.Specialized.AppendBlobClient</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="snapshot" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="snapshot">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
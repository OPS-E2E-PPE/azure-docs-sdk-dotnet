<Type Name="LeaseClient" FullName="Azure.Storage.Blobs.Specialized.LeaseClient">
  <TypeSignature Language="C#" Value="public class LeaseClient" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LeaseClient extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Storage.Blobs.Specialized.LeaseClient" />
  <TypeSignature Language="VB.NET" Value="Public Class LeaseClient" />
  <TypeSignature Language="F#" Value="type LeaseClient = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Storage.Blobs</AssemblyName>
    <AssemblyVersion>12.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected LeaseClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.LeaseClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LeaseClient (Azure.Storage.Blobs.BlobContainerClient client, string leaseId = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Azure.Storage.Blobs.BlobContainerClient client, string leaseId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.LeaseClient.#ctor(Azure.Storage.Blobs.BlobContainerClient,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (client As BlobContainerClient, Optional leaseId As String = null)" />
      <MemberSignature Language="F#" Value="new Azure.Storage.Blobs.Specialized.LeaseClient : Azure.Storage.Blobs.BlobContainerClient * string -&gt; Azure.Storage.Blobs.Specialized.LeaseClient" Usage="new Azure.Storage.Blobs.Specialized.LeaseClient (client, leaseId)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="client" Type="Azure.Storage.Blobs.BlobContainerClient" />
        <Parameter Name="leaseId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="client">To be added.</param>
        <param name="leaseId">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LeaseClient (Azure.Storage.Blobs.Specialized.BlobBaseClient client, string leaseId = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Azure.Storage.Blobs.Specialized.BlobBaseClient client, string leaseId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.LeaseClient.#ctor(Azure.Storage.Blobs.Specialized.BlobBaseClient,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (client As BlobBaseClient, Optional leaseId As String = null)" />
      <MemberSignature Language="F#" Value="new Azure.Storage.Blobs.Specialized.LeaseClient : Azure.Storage.Blobs.Specialized.BlobBaseClient * string -&gt; Azure.Storage.Blobs.Specialized.LeaseClient" Usage="new Azure.Storage.Blobs.Specialized.LeaseClient (client, leaseId)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="client" Type="Azure.Storage.Blobs.Specialized.BlobBaseClient" />
        <Parameter Name="leaseId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="client">To be added.</param>
        <param name="leaseId">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Acquire">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Blobs.Models.Lease&gt; Acquire (int duration, Nullable&lt;Azure.Storage.Blobs.Models.HttpAccessConditions&gt; httpAccessConditions = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Azure.Response`1&lt;class Azure.Storage.Blobs.Models.Lease&gt; Acquire(int32 duration, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Blobs.Models.HttpAccessConditions&gt; httpAccessConditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.LeaseClient.Acquire(System.Int32,System.Nullable{Azure.Storage.Blobs.Models.HttpAccessConditions},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member Acquire : int * Nullable&lt;Azure.Storage.Blobs.Models.HttpAccessConditions&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Blobs.Models.Lease&gt;&#xA;override this.Acquire : int * Nullable&lt;Azure.Storage.Blobs.Models.HttpAccessConditions&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Blobs.Models.Lease&gt;" Usage="leaseClient.Acquire (duration, httpAccessConditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Blobs.Models.Lease&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="duration" Type="System.Int32" />
        <Parameter Name="httpAccessConditions" Type="System.Nullable&lt;Azure.Storage.Blobs.Models.HttpAccessConditions&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="duration">To be added.</param>
        <param name="httpAccessConditions">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcquireAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.Lease&gt;&gt; AcquireAsync (int duration, Nullable&lt;Azure.Storage.Blobs.Models.HttpAccessConditions&gt; httpAccessConditions = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;valuetype Azure.Response`1&lt;class Azure.Storage.Blobs.Models.Lease&gt;&gt; AcquireAsync(int32 duration, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Blobs.Models.HttpAccessConditions&gt; httpAccessConditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.LeaseClient.AcquireAsync(System.Int32,System.Nullable{Azure.Storage.Blobs.Models.HttpAccessConditions},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member AcquireAsync : int * Nullable&lt;Azure.Storage.Blobs.Models.HttpAccessConditions&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.Lease&gt;&gt;&#xA;override this.AcquireAsync : int * Nullable&lt;Azure.Storage.Blobs.Models.HttpAccessConditions&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.Lease&gt;&gt;" Usage="leaseClient.AcquireAsync (duration, httpAccessConditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.Lease&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="duration" Type="System.Int32" />
        <Parameter Name="httpAccessConditions" Type="System.Nullable&lt;Azure.Storage.Blobs.Models.HttpAccessConditions&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="duration">To be added.</param>
        <param name="httpAccessConditions">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BlobClient">
      <MemberSignature Language="C#" Value="protected virtual Azure.Storage.Blobs.Specialized.BlobBaseClient BlobClient { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Storage.Blobs.Specialized.BlobBaseClient BlobClient" />
      <MemberSignature Language="DocId" Value="P:Azure.Storage.Blobs.Specialized.LeaseClient.BlobClient" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property BlobClient As BlobBaseClient" />
      <MemberSignature Language="F#" Value="member this.BlobClient : Azure.Storage.Blobs.Specialized.BlobBaseClient" Usage="Azure.Storage.Blobs.Specialized.LeaseClient.BlobClient" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Storage.Blobs.Specialized.BlobBaseClient</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Break">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Blobs.Models.Lease&gt; Break (Nullable&lt;int&gt; breakPeriodInSeconds = null, Nullable&lt;Azure.Storage.Blobs.Models.HttpAccessConditions&gt; httpAccessConditions = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Azure.Response`1&lt;class Azure.Storage.Blobs.Models.Lease&gt; Break(valuetype System.Nullable`1&lt;int32&gt; breakPeriodInSeconds, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Blobs.Models.HttpAccessConditions&gt; httpAccessConditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.LeaseClient.Break(System.Nullable{System.Int32},System.Nullable{Azure.Storage.Blobs.Models.HttpAccessConditions},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member Break : Nullable&lt;int&gt; * Nullable&lt;Azure.Storage.Blobs.Models.HttpAccessConditions&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Blobs.Models.Lease&gt;&#xA;override this.Break : Nullable&lt;int&gt; * Nullable&lt;Azure.Storage.Blobs.Models.HttpAccessConditions&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Blobs.Models.Lease&gt;" Usage="leaseClient.Break (breakPeriodInSeconds, httpAccessConditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Blobs.Models.Lease&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="breakPeriodInSeconds" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="httpAccessConditions" Type="System.Nullable&lt;Azure.Storage.Blobs.Models.HttpAccessConditions&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="breakPeriodInSeconds">To be added.</param>
        <param name="httpAccessConditions">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BreakAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.Lease&gt;&gt; BreakAsync (Nullable&lt;int&gt; breakPeriodInSeconds = null, Nullable&lt;Azure.Storage.Blobs.Models.HttpAccessConditions&gt; httpAccessConditions = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;valuetype Azure.Response`1&lt;class Azure.Storage.Blobs.Models.Lease&gt;&gt; BreakAsync(valuetype System.Nullable`1&lt;int32&gt; breakPeriodInSeconds, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Blobs.Models.HttpAccessConditions&gt; httpAccessConditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.LeaseClient.BreakAsync(System.Nullable{System.Int32},System.Nullable{Azure.Storage.Blobs.Models.HttpAccessConditions},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member BreakAsync : Nullable&lt;int&gt; * Nullable&lt;Azure.Storage.Blobs.Models.HttpAccessConditions&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.Lease&gt;&gt;&#xA;override this.BreakAsync : Nullable&lt;int&gt; * Nullable&lt;Azure.Storage.Blobs.Models.HttpAccessConditions&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.Lease&gt;&gt;" Usage="leaseClient.BreakAsync (breakPeriodInSeconds, httpAccessConditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.Lease&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="breakPeriodInSeconds" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="httpAccessConditions" Type="System.Nullable&lt;Azure.Storage.Blobs.Models.HttpAccessConditions&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="breakPeriodInSeconds">To be added.</param>
        <param name="httpAccessConditions">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Change">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Blobs.Models.Lease&gt; Change (string proposedId, Nullable&lt;Azure.Storage.Blobs.Models.HttpAccessConditions&gt; httpAccessConditions = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Azure.Response`1&lt;class Azure.Storage.Blobs.Models.Lease&gt; Change(string proposedId, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Blobs.Models.HttpAccessConditions&gt; httpAccessConditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.LeaseClient.Change(System.String,System.Nullable{Azure.Storage.Blobs.Models.HttpAccessConditions},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member Change : string * Nullable&lt;Azure.Storage.Blobs.Models.HttpAccessConditions&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Blobs.Models.Lease&gt;&#xA;override this.Change : string * Nullable&lt;Azure.Storage.Blobs.Models.HttpAccessConditions&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Blobs.Models.Lease&gt;" Usage="leaseClient.Change (proposedId, httpAccessConditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Blobs.Models.Lease&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="proposedId" Type="System.String" />
        <Parameter Name="httpAccessConditions" Type="System.Nullable&lt;Azure.Storage.Blobs.Models.HttpAccessConditions&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="proposedId">To be added.</param>
        <param name="httpAccessConditions">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.Lease&gt;&gt; ChangeAsync (string proposedId, Nullable&lt;Azure.Storage.Blobs.Models.HttpAccessConditions&gt; httpAccessConditions = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;valuetype Azure.Response`1&lt;class Azure.Storage.Blobs.Models.Lease&gt;&gt; ChangeAsync(string proposedId, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Blobs.Models.HttpAccessConditions&gt; httpAccessConditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.LeaseClient.ChangeAsync(System.String,System.Nullable{Azure.Storage.Blobs.Models.HttpAccessConditions},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member ChangeAsync : string * Nullable&lt;Azure.Storage.Blobs.Models.HttpAccessConditions&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.Lease&gt;&gt;&#xA;override this.ChangeAsync : string * Nullable&lt;Azure.Storage.Blobs.Models.HttpAccessConditions&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.Lease&gt;&gt;" Usage="leaseClient.ChangeAsync (proposedId, httpAccessConditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.Lease&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="proposedId" Type="System.String" />
        <Parameter Name="httpAccessConditions" Type="System.Nullable&lt;Azure.Storage.Blobs.Models.HttpAccessConditions&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="proposedId">To be added.</param>
        <param name="httpAccessConditions">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerClient">
      <MemberSignature Language="C#" Value="protected virtual Azure.Storage.Blobs.BlobContainerClient ContainerClient { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Storage.Blobs.BlobContainerClient ContainerClient" />
      <MemberSignature Language="DocId" Value="P:Azure.Storage.Blobs.Specialized.LeaseClient.ContainerClient" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property ContainerClient As BlobContainerClient" />
      <MemberSignature Language="F#" Value="member this.ContainerClient : Azure.Storage.Blobs.BlobContainerClient" Usage="Azure.Storage.Blobs.Specialized.LeaseClient.ContainerClient" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Storage.Blobs.BlobContainerClient</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LeaseId">
      <MemberSignature Language="C#" Value="public string LeaseId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LeaseId" />
      <MemberSignature Language="DocId" Value="P:Azure.Storage.Blobs.Specialized.LeaseClient.LeaseId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LeaseId As String" />
      <MemberSignature Language="F#" Value="member this.LeaseId : string" Usage="Azure.Storage.Blobs.Specialized.LeaseClient.LeaseId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Release">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Blobs.Models.ReleasedObjectInfo&gt; Release (Nullable&lt;Azure.Storage.Blobs.Models.HttpAccessConditions&gt; httpAccessConditions = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Azure.Response`1&lt;valuetype Azure.Storage.Blobs.Models.ReleasedObjectInfo&gt; Release(valuetype System.Nullable`1&lt;valuetype Azure.Storage.Blobs.Models.HttpAccessConditions&gt; httpAccessConditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.LeaseClient.Release(System.Nullable{Azure.Storage.Blobs.Models.HttpAccessConditions},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member Release : Nullable&lt;Azure.Storage.Blobs.Models.HttpAccessConditions&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Blobs.Models.ReleasedObjectInfo&gt;&#xA;override this.Release : Nullable&lt;Azure.Storage.Blobs.Models.HttpAccessConditions&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Blobs.Models.ReleasedObjectInfo&gt;" Usage="leaseClient.Release (httpAccessConditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Blobs.Models.ReleasedObjectInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="httpAccessConditions" Type="System.Nullable&lt;Azure.Storage.Blobs.Models.HttpAccessConditions&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="httpAccessConditions">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.ReleasedObjectInfo&gt;&gt; ReleaseAsync (Nullable&lt;Azure.Storage.Blobs.Models.HttpAccessConditions&gt; httpAccessConditions = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;valuetype Azure.Response`1&lt;valuetype Azure.Storage.Blobs.Models.ReleasedObjectInfo&gt;&gt; ReleaseAsync(valuetype System.Nullable`1&lt;valuetype Azure.Storage.Blobs.Models.HttpAccessConditions&gt; httpAccessConditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.LeaseClient.ReleaseAsync(System.Nullable{Azure.Storage.Blobs.Models.HttpAccessConditions},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member ReleaseAsync : Nullable&lt;Azure.Storage.Blobs.Models.HttpAccessConditions&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.ReleasedObjectInfo&gt;&gt;&#xA;override this.ReleaseAsync : Nullable&lt;Azure.Storage.Blobs.Models.HttpAccessConditions&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.ReleasedObjectInfo&gt;&gt;" Usage="leaseClient.ReleaseAsync (httpAccessConditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.ReleasedObjectInfo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="httpAccessConditions" Type="System.Nullable&lt;Azure.Storage.Blobs.Models.HttpAccessConditions&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="httpAccessConditions">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.ReleasedObjectInfo&gt;&gt; ReleaseAsync (Nullable&lt;Azure.Storage.Blobs.Models.HttpAccessConditions&gt; httpAccessConditions, bool async, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;valuetype Azure.Response`1&lt;valuetype Azure.Storage.Blobs.Models.ReleasedObjectInfo&gt;&gt; ReleaseAsync(valuetype System.Nullable`1&lt;valuetype Azure.Storage.Blobs.Models.HttpAccessConditions&gt; httpAccessConditions, bool async, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.LeaseClient.ReleaseAsync(System.Nullable{Azure.Storage.Blobs.Models.HttpAccessConditions},System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member ReleaseAsync : Nullable&lt;Azure.Storage.Blobs.Models.HttpAccessConditions&gt; * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.ReleasedObjectInfo&gt;&gt;&#xA;override this.ReleaseAsync : Nullable&lt;Azure.Storage.Blobs.Models.HttpAccessConditions&gt; * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.ReleasedObjectInfo&gt;&gt;" Usage="leaseClient.ReleaseAsync (httpAccessConditions, async, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.ReleasedObjectInfo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="httpAccessConditions" Type="System.Nullable&lt;Azure.Storage.Blobs.Models.HttpAccessConditions&gt;" />
        <Parameter Name="async" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="httpAccessConditions">To be added.</param>
        <param name="async">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Renew">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Blobs.Models.Lease&gt; Renew (Nullable&lt;Azure.Storage.Blobs.Models.HttpAccessConditions&gt; httpAccessConditions = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Azure.Response`1&lt;class Azure.Storage.Blobs.Models.Lease&gt; Renew(valuetype System.Nullable`1&lt;valuetype Azure.Storage.Blobs.Models.HttpAccessConditions&gt; httpAccessConditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.LeaseClient.Renew(System.Nullable{Azure.Storage.Blobs.Models.HttpAccessConditions},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member Renew : Nullable&lt;Azure.Storage.Blobs.Models.HttpAccessConditions&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Blobs.Models.Lease&gt;&#xA;override this.Renew : Nullable&lt;Azure.Storage.Blobs.Models.HttpAccessConditions&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Blobs.Models.Lease&gt;" Usage="leaseClient.Renew (httpAccessConditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Blobs.Models.Lease&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="httpAccessConditions" Type="System.Nullable&lt;Azure.Storage.Blobs.Models.HttpAccessConditions&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="httpAccessConditions">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenewAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.Lease&gt;&gt; RenewAsync (Nullable&lt;Azure.Storage.Blobs.Models.HttpAccessConditions&gt; httpAccessConditions = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;valuetype Azure.Response`1&lt;class Azure.Storage.Blobs.Models.Lease&gt;&gt; RenewAsync(valuetype System.Nullable`1&lt;valuetype Azure.Storage.Blobs.Models.HttpAccessConditions&gt; httpAccessConditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.LeaseClient.RenewAsync(System.Nullable{Azure.Storage.Blobs.Models.HttpAccessConditions},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member RenewAsync : Nullable&lt;Azure.Storage.Blobs.Models.HttpAccessConditions&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.Lease&gt;&gt;&#xA;override this.RenewAsync : Nullable&lt;Azure.Storage.Blobs.Models.HttpAccessConditions&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.Lease&gt;&gt;" Usage="leaseClient.RenewAsync (httpAccessConditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.Lease&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="httpAccessConditions" Type="System.Nullable&lt;Azure.Storage.Blobs.Models.HttpAccessConditions&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="httpAccessConditions">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Uri">
      <MemberSignature Language="C#" Value="public Uri Uri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Uri" />
      <MemberSignature Language="DocId" Value="P:Azure.Storage.Blobs.Specialized.LeaseClient.Uri" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Uri As Uri" />
      <MemberSignature Language="F#" Value="member this.Uri : Uri" Usage="Azure.Storage.Blobs.Specialized.LeaseClient.Uri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
<Type Name="BlockBlobClient" FullName="Azure.Storage.Blobs.Specialized.BlockBlobClient">
  <TypeSignature Language="C#" Value="public class BlockBlobClient : Azure.Storage.Blobs.Specialized.BlobBaseClient" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BlockBlobClient extends Azure.Storage.Blobs.Specialized.BlobBaseClient" />
  <TypeSignature Language="DocId" Value="T:Azure.Storage.Blobs.Specialized.BlockBlobClient" />
  <TypeSignature Language="VB.NET" Value="Public Class BlockBlobClient&#xA;Inherits BlobBaseClient" />
  <TypeSignature Language="F#" Value="type BlockBlobClient = class&#xA;    inherit BlobBaseClient" />
  <AssemblyInfo>
    <AssemblyName>Azure.Storage.Blobs</AssemblyName>
    <AssemblyVersion>12.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.Storage.Blobs.Specialized.BlobBaseClient</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BlockBlobClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BlockBlobClient (Uri blobUri, Azure.Storage.Blobs.BlobClientOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri blobUri, class Azure.Storage.Blobs.BlobClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.#ctor(System.Uri,Azure.Storage.Blobs.BlobClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (blobUri As Uri, Optional options As BlobClientOptions = null)" />
      <MemberSignature Language="F#" Value="new Azure.Storage.Blobs.Specialized.BlockBlobClient : Uri * Azure.Storage.Blobs.BlobClientOptions -&gt; Azure.Storage.Blobs.Specialized.BlockBlobClient" Usage="new Azure.Storage.Blobs.Specialized.BlockBlobClient (blobUri, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="blobUri" Type="System.Uri" />
        <Parameter Name="options" Type="Azure.Storage.Blobs.BlobClientOptions" />
      </Parameters>
      <Docs>
        <param name="blobUri">To be added.</param>
        <param name="options">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BlockBlobClient (string connectionString, string containerName, string blobName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString, string containerName, string blobName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String, containerName As String, blobName As String)" />
      <MemberSignature Language="F#" Value="new Azure.Storage.Blobs.Specialized.BlockBlobClient : string * string * string -&gt; Azure.Storage.Blobs.Specialized.BlockBlobClient" Usage="new Azure.Storage.Blobs.Specialized.BlockBlobClient (connectionString, containerName, blobName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="containerName" Type="System.String" />
        <Parameter Name="blobName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">To be added.</param>
        <param name="containerName">To be added.</param>
        <param name="blobName">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BlockBlobClient (Uri blobUri, Azure.Core.TokenCredential credential, Azure.Storage.Blobs.BlobClientOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri blobUri, class Azure.Core.TokenCredential credential, class Azure.Storage.Blobs.BlobClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.#ctor(System.Uri,Azure.Core.TokenCredential,Azure.Storage.Blobs.BlobClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (blobUri As Uri, credential As TokenCredential, Optional options As BlobClientOptions = null)" />
      <MemberSignature Language="F#" Value="new Azure.Storage.Blobs.Specialized.BlockBlobClient : Uri * Azure.Core.TokenCredential * Azure.Storage.Blobs.BlobClientOptions -&gt; Azure.Storage.Blobs.Specialized.BlockBlobClient" Usage="new Azure.Storage.Blobs.Specialized.BlockBlobClient (blobUri, credential, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="blobUri" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.Core.TokenCredential" />
        <Parameter Name="options" Type="Azure.Storage.Blobs.BlobClientOptions" />
      </Parameters>
      <Docs>
        <param name="blobUri">To be added.</param>
        <param name="credential">To be added.</param>
        <param name="options">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BlockBlobClient (Uri blobUri, Azure.Storage.StorageSharedKeyCredential credential, Azure.Storage.Blobs.BlobClientOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri blobUri, class Azure.Storage.StorageSharedKeyCredential credential, class Azure.Storage.Blobs.BlobClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.#ctor(System.Uri,Azure.Storage.StorageSharedKeyCredential,Azure.Storage.Blobs.BlobClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (blobUri As Uri, credential As StorageSharedKeyCredential, Optional options As BlobClientOptions = null)" />
      <MemberSignature Language="F#" Value="new Azure.Storage.Blobs.Specialized.BlockBlobClient : Uri * Azure.Storage.StorageSharedKeyCredential * Azure.Storage.Blobs.BlobClientOptions -&gt; Azure.Storage.Blobs.Specialized.BlockBlobClient" Usage="new Azure.Storage.Blobs.Specialized.BlockBlobClient (blobUri, credential, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="blobUri" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.Storage.StorageSharedKeyCredential" />
        <Parameter Name="options" Type="Azure.Storage.Blobs.BlobClientOptions" />
      </Parameters>
      <Docs>
        <param name="blobUri">To be added.</param>
        <param name="credential">To be added.</param>
        <param name="options">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BlockBlobClient (string connectionString, string containerName, string blobName, Azure.Storage.Blobs.BlobClientOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString, string containerName, string blobName, class Azure.Storage.Blobs.BlobClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.#ctor(System.String,System.String,System.String,Azure.Storage.Blobs.BlobClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String, containerName As String, blobName As String, options As BlobClientOptions)" />
      <MemberSignature Language="F#" Value="new Azure.Storage.Blobs.Specialized.BlockBlobClient : string * string * string * Azure.Storage.Blobs.BlobClientOptions -&gt; Azure.Storage.Blobs.Specialized.BlockBlobClient" Usage="new Azure.Storage.Blobs.Specialized.BlockBlobClient (connectionString, containerName, blobName, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="containerName" Type="System.String" />
        <Parameter Name="blobName" Type="System.String" />
        <Parameter Name="options" Type="Azure.Storage.Blobs.BlobClientOptions" />
      </Parameters>
      <Docs>
        <param name="connectionString">To be added.</param>
        <param name="containerName">To be added.</param>
        <param name="blobName">To be added.</param>
        <param name="options">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BlockBlobMaxBlocks">
      <MemberSignature Language="C#" Value="public const int BlockBlobMaxBlocks = 50000;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 BlockBlobMaxBlocks = (50000)" />
      <MemberSignature Language="DocId" Value="F:Azure.Storage.Blobs.Specialized.BlockBlobClient.BlockBlobMaxBlocks" />
      <MemberSignature Language="VB.NET" Value="Public Const BlockBlobMaxBlocks As Integer  = 50000" />
      <MemberSignature Language="F#" Value="val mutable BlockBlobMaxBlocks : int" Usage="Azure.Storage.Blobs.Specialized.BlockBlobClient.BlockBlobMaxBlocks" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>50000</MemberValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BlockBlobMaxStageBlockBytes">
      <MemberSignature Language="C#" Value="public const int BlockBlobMaxStageBlockBytes = 104857600;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 BlockBlobMaxStageBlockBytes = (104857600)" />
      <MemberSignature Language="DocId" Value="F:Azure.Storage.Blobs.Specialized.BlockBlobClient.BlockBlobMaxStageBlockBytes" />
      <MemberSignature Language="VB.NET" Value="Public Const BlockBlobMaxStageBlockBytes As Integer  = 104857600" />
      <MemberSignature Language="F#" Value="val mutable BlockBlobMaxStageBlockBytes : int" Usage="Azure.Storage.Blobs.Specialized.BlockBlobClient.BlockBlobMaxStageBlockBytes" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>104857600</MemberValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BlockBlobMaxUploadBlobBytes">
      <MemberSignature Language="C#" Value="public const int BlockBlobMaxUploadBlobBytes = 268435456;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 BlockBlobMaxUploadBlobBytes = (268435456)" />
      <MemberSignature Language="DocId" Value="F:Azure.Storage.Blobs.Specialized.BlockBlobClient.BlockBlobMaxUploadBlobBytes" />
      <MemberSignature Language="VB.NET" Value="Public Const BlockBlobMaxUploadBlobBytes As Integer  = 268435456" />
      <MemberSignature Language="F#" Value="val mutable BlockBlobMaxUploadBlobBytes : int" Usage="Azure.Storage.Blobs.Specialized.BlockBlobClient.BlockBlobMaxUploadBlobBytes" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>268435456</MemberValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommitBlockList">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt; CommitBlockList (System.Collections.Generic.IEnumerable&lt;string&gt; base64BlockIds, Nullable&lt;Azure.Storage.Blobs.Models.BlobHttpHeaders&gt; blobHttpHeaders = null, System.Collections.Generic.IDictionary&lt;string,string&gt; metadata = null, Nullable&lt;Azure.Storage.Blobs.Models.BlobAccessConditions&gt; blobAccessConditions = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Azure.Response`1&lt;class Azure.Storage.Blobs.Models.BlobContentInfo&gt; CommitBlockList(class System.Collections.Generic.IEnumerable`1&lt;string&gt; base64BlockIds, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Blobs.Models.BlobHttpHeaders&gt; blobHttpHeaders, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; metadata, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Blobs.Models.BlobAccessConditions&gt; blobAccessConditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.CommitBlockList(System.Collections.Generic.IEnumerable{System.String},System.Nullable{Azure.Storage.Blobs.Models.BlobHttpHeaders},System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{Azure.Storage.Blobs.Models.BlobAccessConditions},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member CommitBlockList : seq&lt;string&gt; * Nullable&lt;Azure.Storage.Blobs.Models.BlobHttpHeaders&gt; * System.Collections.Generic.IDictionary&lt;string, string&gt; * Nullable&lt;Azure.Storage.Blobs.Models.BlobAccessConditions&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt;&#xA;override this.CommitBlockList : seq&lt;string&gt; * Nullable&lt;Azure.Storage.Blobs.Models.BlobHttpHeaders&gt; * System.Collections.Generic.IDictionary&lt;string, string&gt; * Nullable&lt;Azure.Storage.Blobs.Models.BlobAccessConditions&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt;" Usage="blockBlobClient.CommitBlockList (base64BlockIds, blobHttpHeaders, metadata, blobAccessConditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="base64BlockIds" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="blobHttpHeaders" Type="System.Nullable&lt;Azure.Storage.Blobs.Models.BlobHttpHeaders&gt;" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="blobAccessConditions" Type="System.Nullable&lt;Azure.Storage.Blobs.Models.BlobAccessConditions&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="base64BlockIds">To be added.</param>
        <param name="blobHttpHeaders">To be added.</param>
        <param name="metadata">To be added.</param>
        <param name="blobAccessConditions">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommitBlockListAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt;&gt; CommitBlockListAsync (System.Collections.Generic.IEnumerable&lt;string&gt; base64BlockIds, Nullable&lt;Azure.Storage.Blobs.Models.BlobHttpHeaders&gt; blobHttpHeaders = null, System.Collections.Generic.IDictionary&lt;string,string&gt; metadata = null, Nullable&lt;Azure.Storage.Blobs.Models.BlobAccessConditions&gt; blobAccessConditions = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;valuetype Azure.Response`1&lt;class Azure.Storage.Blobs.Models.BlobContentInfo&gt;&gt; CommitBlockListAsync(class System.Collections.Generic.IEnumerable`1&lt;string&gt; base64BlockIds, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Blobs.Models.BlobHttpHeaders&gt; blobHttpHeaders, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; metadata, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Blobs.Models.BlobAccessConditions&gt; blobAccessConditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.CommitBlockListAsync(System.Collections.Generic.IEnumerable{System.String},System.Nullable{Azure.Storage.Blobs.Models.BlobHttpHeaders},System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{Azure.Storage.Blobs.Models.BlobAccessConditions},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member CommitBlockListAsync : seq&lt;string&gt; * Nullable&lt;Azure.Storage.Blobs.Models.BlobHttpHeaders&gt; * System.Collections.Generic.IDictionary&lt;string, string&gt; * Nullable&lt;Azure.Storage.Blobs.Models.BlobAccessConditions&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt;&gt;&#xA;override this.CommitBlockListAsync : seq&lt;string&gt; * Nullable&lt;Azure.Storage.Blobs.Models.BlobHttpHeaders&gt; * System.Collections.Generic.IDictionary&lt;string, string&gt; * Nullable&lt;Azure.Storage.Blobs.Models.BlobAccessConditions&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt;&gt;" Usage="blockBlobClient.CommitBlockListAsync (base64BlockIds, blobHttpHeaders, metadata, blobAccessConditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="base64BlockIds" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="blobHttpHeaders" Type="System.Nullable&lt;Azure.Storage.Blobs.Models.BlobHttpHeaders&gt;" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="blobAccessConditions" Type="System.Nullable&lt;Azure.Storage.Blobs.Models.BlobAccessConditions&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="base64BlockIds">To be added.</param>
        <param name="blobHttpHeaders">To be added.</param>
        <param name="metadata">To be added.</param>
        <param name="blobAccessConditions">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBlockList">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Blobs.Models.BlockList&gt; GetBlockList (Nullable&lt;Azure.Storage.Blobs.Models.BlockListType&gt; listType = null, string snapshot = null, Nullable&lt;Azure.Storage.Blobs.Models.LeaseAccessConditions&gt; leaseAccessConditions = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Azure.Response`1&lt;class Azure.Storage.Blobs.Models.BlockList&gt; GetBlockList(valuetype System.Nullable`1&lt;valuetype Azure.Storage.Blobs.Models.BlockListType&gt; listType, string snapshot, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Blobs.Models.LeaseAccessConditions&gt; leaseAccessConditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.GetBlockList(System.Nullable{Azure.Storage.Blobs.Models.BlockListType},System.String,System.Nullable{Azure.Storage.Blobs.Models.LeaseAccessConditions},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetBlockList : Nullable&lt;Azure.Storage.Blobs.Models.BlockListType&gt; * string * Nullable&lt;Azure.Storage.Blobs.Models.LeaseAccessConditions&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Blobs.Models.BlockList&gt;&#xA;override this.GetBlockList : Nullable&lt;Azure.Storage.Blobs.Models.BlockListType&gt; * string * Nullable&lt;Azure.Storage.Blobs.Models.LeaseAccessConditions&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Blobs.Models.BlockList&gt;" Usage="blockBlobClient.GetBlockList (listType, snapshot, leaseAccessConditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Blobs.Models.BlockList&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listType" Type="System.Nullable&lt;Azure.Storage.Blobs.Models.BlockListType&gt;" />
        <Parameter Name="snapshot" Type="System.String" />
        <Parameter Name="leaseAccessConditions" Type="System.Nullable&lt;Azure.Storage.Blobs.Models.LeaseAccessConditions&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="listType">To be added.</param>
        <param name="snapshot">To be added.</param>
        <param name="leaseAccessConditions">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBlockListAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.BlockList&gt;&gt; GetBlockListAsync (Nullable&lt;Azure.Storage.Blobs.Models.BlockListType&gt; listType = null, string snapshot = null, Nullable&lt;Azure.Storage.Blobs.Models.LeaseAccessConditions&gt; leaseAccessConditions = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;valuetype Azure.Response`1&lt;class Azure.Storage.Blobs.Models.BlockList&gt;&gt; GetBlockListAsync(valuetype System.Nullable`1&lt;valuetype Azure.Storage.Blobs.Models.BlockListType&gt; listType, string snapshot, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Blobs.Models.LeaseAccessConditions&gt; leaseAccessConditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.GetBlockListAsync(System.Nullable{Azure.Storage.Blobs.Models.BlockListType},System.String,System.Nullable{Azure.Storage.Blobs.Models.LeaseAccessConditions},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetBlockListAsync : Nullable&lt;Azure.Storage.Blobs.Models.BlockListType&gt; * string * Nullable&lt;Azure.Storage.Blobs.Models.LeaseAccessConditions&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.BlockList&gt;&gt;&#xA;override this.GetBlockListAsync : Nullable&lt;Azure.Storage.Blobs.Models.BlockListType&gt; * string * Nullable&lt;Azure.Storage.Blobs.Models.LeaseAccessConditions&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.BlockList&gt;&gt;" Usage="blockBlobClient.GetBlockListAsync (listType, snapshot, leaseAccessConditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.BlockList&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listType" Type="System.Nullable&lt;Azure.Storage.Blobs.Models.BlockListType&gt;" />
        <Parameter Name="snapshot" Type="System.String" />
        <Parameter Name="leaseAccessConditions" Type="System.Nullable&lt;Azure.Storage.Blobs.Models.LeaseAccessConditions&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="listType">To be added.</param>
        <param name="snapshot">To be added.</param>
        <param name="leaseAccessConditions">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StageBlock">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Blobs.Models.BlockInfo&gt; StageBlock (string base64BlockId, System.IO.Stream content, byte[] transactionalContentHash = null, Nullable&lt;Azure.Storage.Blobs.Models.LeaseAccessConditions&gt; leaseAccessConditions = null, IProgress&lt;Azure.Storage.Common.StorageProgress&gt; progressHandler = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Azure.Response`1&lt;class Azure.Storage.Blobs.Models.BlockInfo&gt; StageBlock(string base64BlockId, class System.IO.Stream content, unsigned int8[] transactionalContentHash, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Blobs.Models.LeaseAccessConditions&gt; leaseAccessConditions, class System.IProgress`1&lt;class Azure.Storage.Common.StorageProgress&gt; progressHandler, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.StageBlock(System.String,System.IO.Stream,System.Byte[],System.Nullable{Azure.Storage.Blobs.Models.LeaseAccessConditions},System.IProgress{Azure.Storage.Common.StorageProgress},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member StageBlock : string * System.IO.Stream * byte[] * Nullable&lt;Azure.Storage.Blobs.Models.LeaseAccessConditions&gt; * IProgress&lt;Azure.Storage.Common.StorageProgress&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Blobs.Models.BlockInfo&gt;&#xA;override this.StageBlock : string * System.IO.Stream * byte[] * Nullable&lt;Azure.Storage.Blobs.Models.LeaseAccessConditions&gt; * IProgress&lt;Azure.Storage.Common.StorageProgress&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Blobs.Models.BlockInfo&gt;" Usage="blockBlobClient.StageBlock (base64BlockId, content, transactionalContentHash, leaseAccessConditions, progressHandler, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Blobs.Models.BlockInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="base64BlockId" Type="System.String" />
        <Parameter Name="content" Type="System.IO.Stream" />
        <Parameter Name="transactionalContentHash" Type="System.Byte[]" />
        <Parameter Name="leaseAccessConditions" Type="System.Nullable&lt;Azure.Storage.Blobs.Models.LeaseAccessConditions&gt;" />
        <Parameter Name="progressHandler" Type="System.IProgress&lt;Azure.Storage.Common.StorageProgress&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="base64BlockId">To be added.</param>
        <param name="content">To be added.</param>
        <param name="transactionalContentHash">To be added.</param>
        <param name="leaseAccessConditions">To be added.</param>
        <param name="progressHandler">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StageBlockAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.BlockInfo&gt;&gt; StageBlockAsync (string base64BlockId, System.IO.Stream content, byte[] transactionalContentHash = null, Nullable&lt;Azure.Storage.Blobs.Models.LeaseAccessConditions&gt; leaseAccessConditions = null, IProgress&lt;Azure.Storage.Common.StorageProgress&gt; progressHandler = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;valuetype Azure.Response`1&lt;class Azure.Storage.Blobs.Models.BlockInfo&gt;&gt; StageBlockAsync(string base64BlockId, class System.IO.Stream content, unsigned int8[] transactionalContentHash, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Blobs.Models.LeaseAccessConditions&gt; leaseAccessConditions, class System.IProgress`1&lt;class Azure.Storage.Common.StorageProgress&gt; progressHandler, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.StageBlockAsync(System.String,System.IO.Stream,System.Byte[],System.Nullable{Azure.Storage.Blobs.Models.LeaseAccessConditions},System.IProgress{Azure.Storage.Common.StorageProgress},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member StageBlockAsync : string * System.IO.Stream * byte[] * Nullable&lt;Azure.Storage.Blobs.Models.LeaseAccessConditions&gt; * IProgress&lt;Azure.Storage.Common.StorageProgress&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.BlockInfo&gt;&gt;&#xA;override this.StageBlockAsync : string * System.IO.Stream * byte[] * Nullable&lt;Azure.Storage.Blobs.Models.LeaseAccessConditions&gt; * IProgress&lt;Azure.Storage.Common.StorageProgress&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.BlockInfo&gt;&gt;" Usage="blockBlobClient.StageBlockAsync (base64BlockId, content, transactionalContentHash, leaseAccessConditions, progressHandler, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.BlockInfo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="base64BlockId" Type="System.String" />
        <Parameter Name="content" Type="System.IO.Stream" />
        <Parameter Name="transactionalContentHash" Type="System.Byte[]" />
        <Parameter Name="leaseAccessConditions" Type="System.Nullable&lt;Azure.Storage.Blobs.Models.LeaseAccessConditions&gt;" />
        <Parameter Name="progressHandler" Type="System.IProgress&lt;Azure.Storage.Common.StorageProgress&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="base64BlockId">To be added.</param>
        <param name="content">To be added.</param>
        <param name="transactionalContentHash">To be added.</param>
        <param name="leaseAccessConditions">To be added.</param>
        <param name="progressHandler">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StageBlockFromUri">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Blobs.Models.BlockInfo&gt; StageBlockFromUri (Uri sourceUri, string base64BlockId, Azure.Core.Http.HttpRange sourceRange = null, byte[] sourceContentHash = null, Nullable&lt;Azure.Storage.Blobs.Models.HttpAccessConditions&gt; sourceAccessConditions = null, Nullable&lt;Azure.Storage.Blobs.Models.LeaseAccessConditions&gt; leaseAccessConditions = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Azure.Response`1&lt;class Azure.Storage.Blobs.Models.BlockInfo&gt; StageBlockFromUri(class System.Uri sourceUri, string base64BlockId, valuetype Azure.Core.Http.HttpRange sourceRange, unsigned int8[] sourceContentHash, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Blobs.Models.HttpAccessConditions&gt; sourceAccessConditions, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Blobs.Models.LeaseAccessConditions&gt; leaseAccessConditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.StageBlockFromUri(System.Uri,System.String,Azure.Core.Http.HttpRange,System.Byte[],System.Nullable{Azure.Storage.Blobs.Models.HttpAccessConditions},System.Nullable{Azure.Storage.Blobs.Models.LeaseAccessConditions},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member StageBlockFromUri : Uri * string * Azure.Core.Http.HttpRange * byte[] * Nullable&lt;Azure.Storage.Blobs.Models.HttpAccessConditions&gt; * Nullable&lt;Azure.Storage.Blobs.Models.LeaseAccessConditions&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Blobs.Models.BlockInfo&gt;&#xA;override this.StageBlockFromUri : Uri * string * Azure.Core.Http.HttpRange * byte[] * Nullable&lt;Azure.Storage.Blobs.Models.HttpAccessConditions&gt; * Nullable&lt;Azure.Storage.Blobs.Models.LeaseAccessConditions&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Blobs.Models.BlockInfo&gt;" Usage="blockBlobClient.StageBlockFromUri (sourceUri, base64BlockId, sourceRange, sourceContentHash, sourceAccessConditions, leaseAccessConditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Blobs.Models.BlockInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceUri" Type="System.Uri" />
        <Parameter Name="base64BlockId" Type="System.String" />
        <Parameter Name="sourceRange" Type="Azure.Core.Http.HttpRange" />
        <Parameter Name="sourceContentHash" Type="System.Byte[]" />
        <Parameter Name="sourceAccessConditions" Type="System.Nullable&lt;Azure.Storage.Blobs.Models.HttpAccessConditions&gt;" />
        <Parameter Name="leaseAccessConditions" Type="System.Nullable&lt;Azure.Storage.Blobs.Models.LeaseAccessConditions&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sourceUri">To be added.</param>
        <param name="base64BlockId">To be added.</param>
        <param name="sourceRange">To be added.</param>
        <param name="sourceContentHash">To be added.</param>
        <param name="sourceAccessConditions">To be added.</param>
        <param name="leaseAccessConditions">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StageBlockFromUriAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.BlockInfo&gt;&gt; StageBlockFromUriAsync (Uri sourceUri, string base64BlockId, Azure.Core.Http.HttpRange sourceRange = null, byte[] sourceContentHash = null, Nullable&lt;Azure.Storage.Blobs.Models.HttpAccessConditions&gt; sourceAccessConditions = null, Nullable&lt;Azure.Storage.Blobs.Models.LeaseAccessConditions&gt; leaseAccessConditions = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;valuetype Azure.Response`1&lt;class Azure.Storage.Blobs.Models.BlockInfo&gt;&gt; StageBlockFromUriAsync(class System.Uri sourceUri, string base64BlockId, valuetype Azure.Core.Http.HttpRange sourceRange, unsigned int8[] sourceContentHash, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Blobs.Models.HttpAccessConditions&gt; sourceAccessConditions, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Blobs.Models.LeaseAccessConditions&gt; leaseAccessConditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.StageBlockFromUriAsync(System.Uri,System.String,Azure.Core.Http.HttpRange,System.Byte[],System.Nullable{Azure.Storage.Blobs.Models.HttpAccessConditions},System.Nullable{Azure.Storage.Blobs.Models.LeaseAccessConditions},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member StageBlockFromUriAsync : Uri * string * Azure.Core.Http.HttpRange * byte[] * Nullable&lt;Azure.Storage.Blobs.Models.HttpAccessConditions&gt; * Nullable&lt;Azure.Storage.Blobs.Models.LeaseAccessConditions&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.BlockInfo&gt;&gt;&#xA;override this.StageBlockFromUriAsync : Uri * string * Azure.Core.Http.HttpRange * byte[] * Nullable&lt;Azure.Storage.Blobs.Models.HttpAccessConditions&gt; * Nullable&lt;Azure.Storage.Blobs.Models.LeaseAccessConditions&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.BlockInfo&gt;&gt;" Usage="blockBlobClient.StageBlockFromUriAsync (sourceUri, base64BlockId, sourceRange, sourceContentHash, sourceAccessConditions, leaseAccessConditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.BlockInfo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceUri" Type="System.Uri" />
        <Parameter Name="base64BlockId" Type="System.String" />
        <Parameter Name="sourceRange" Type="Azure.Core.Http.HttpRange" />
        <Parameter Name="sourceContentHash" Type="System.Byte[]" />
        <Parameter Name="sourceAccessConditions" Type="System.Nullable&lt;Azure.Storage.Blobs.Models.HttpAccessConditions&gt;" />
        <Parameter Name="leaseAccessConditions" Type="System.Nullable&lt;Azure.Storage.Blobs.Models.LeaseAccessConditions&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sourceUri">To be added.</param>
        <param name="base64BlockId">To be added.</param>
        <param name="sourceRange">To be added.</param>
        <param name="sourceContentHash">To be added.</param>
        <param name="sourceAccessConditions">To be added.</param>
        <param name="leaseAccessConditions">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Upload">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt; Upload (System.IO.Stream content, Nullable&lt;Azure.Storage.Blobs.Models.BlobHttpHeaders&gt; blobHttpHeaders = null, System.Collections.Generic.IDictionary&lt;string,string&gt; metadata = null, Nullable&lt;Azure.Storage.Blobs.Models.BlobAccessConditions&gt; blobAccessConditions = null, IProgress&lt;Azure.Storage.Common.StorageProgress&gt; progressHandler = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Azure.Response`1&lt;class Azure.Storage.Blobs.Models.BlobContentInfo&gt; Upload(class System.IO.Stream content, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Blobs.Models.BlobHttpHeaders&gt; blobHttpHeaders, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; metadata, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Blobs.Models.BlobAccessConditions&gt; blobAccessConditions, class System.IProgress`1&lt;class Azure.Storage.Common.StorageProgress&gt; progressHandler, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.Upload(System.IO.Stream,System.Nullable{Azure.Storage.Blobs.Models.BlobHttpHeaders},System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{Azure.Storage.Blobs.Models.BlobAccessConditions},System.IProgress{Azure.Storage.Common.StorageProgress},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member Upload : System.IO.Stream * Nullable&lt;Azure.Storage.Blobs.Models.BlobHttpHeaders&gt; * System.Collections.Generic.IDictionary&lt;string, string&gt; * Nullable&lt;Azure.Storage.Blobs.Models.BlobAccessConditions&gt; * IProgress&lt;Azure.Storage.Common.StorageProgress&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt;&#xA;override this.Upload : System.IO.Stream * Nullable&lt;Azure.Storage.Blobs.Models.BlobHttpHeaders&gt; * System.Collections.Generic.IDictionary&lt;string, string&gt; * Nullable&lt;Azure.Storage.Blobs.Models.BlobAccessConditions&gt; * IProgress&lt;Azure.Storage.Common.StorageProgress&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt;" Usage="blockBlobClient.Upload (content, blobHttpHeaders, metadata, blobAccessConditions, progressHandler, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="System.IO.Stream" />
        <Parameter Name="blobHttpHeaders" Type="System.Nullable&lt;Azure.Storage.Blobs.Models.BlobHttpHeaders&gt;" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="blobAccessConditions" Type="System.Nullable&lt;Azure.Storage.Blobs.Models.BlobAccessConditions&gt;" />
        <Parameter Name="progressHandler" Type="System.IProgress&lt;Azure.Storage.Common.StorageProgress&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content">To be added.</param>
        <param name="blobHttpHeaders">To be added.</param>
        <param name="metadata">To be added.</param>
        <param name="blobAccessConditions">To be added.</param>
        <param name="progressHandler">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt;&gt; UploadAsync (System.IO.Stream content, Nullable&lt;Azure.Storage.Blobs.Models.BlobHttpHeaders&gt; blobHttpHeaders = null, System.Collections.Generic.IDictionary&lt;string,string&gt; metadata = null, Nullable&lt;Azure.Storage.Blobs.Models.BlobAccessConditions&gt; blobAccessConditions = null, IProgress&lt;Azure.Storage.Common.StorageProgress&gt; progressHandler = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;valuetype Azure.Response`1&lt;class Azure.Storage.Blobs.Models.BlobContentInfo&gt;&gt; UploadAsync(class System.IO.Stream content, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Blobs.Models.BlobHttpHeaders&gt; blobHttpHeaders, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; metadata, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Blobs.Models.BlobAccessConditions&gt; blobAccessConditions, class System.IProgress`1&lt;class Azure.Storage.Common.StorageProgress&gt; progressHandler, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.UploadAsync(System.IO.Stream,System.Nullable{Azure.Storage.Blobs.Models.BlobHttpHeaders},System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{Azure.Storage.Blobs.Models.BlobAccessConditions},System.IProgress{Azure.Storage.Common.StorageProgress},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member UploadAsync : System.IO.Stream * Nullable&lt;Azure.Storage.Blobs.Models.BlobHttpHeaders&gt; * System.Collections.Generic.IDictionary&lt;string, string&gt; * Nullable&lt;Azure.Storage.Blobs.Models.BlobAccessConditions&gt; * IProgress&lt;Azure.Storage.Common.StorageProgress&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt;&gt;&#xA;override this.UploadAsync : System.IO.Stream * Nullable&lt;Azure.Storage.Blobs.Models.BlobHttpHeaders&gt; * System.Collections.Generic.IDictionary&lt;string, string&gt; * Nullable&lt;Azure.Storage.Blobs.Models.BlobAccessConditions&gt; * IProgress&lt;Azure.Storage.Common.StorageProgress&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt;&gt;" Usage="blockBlobClient.UploadAsync (content, blobHttpHeaders, metadata, blobAccessConditions, progressHandler, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="System.IO.Stream" />
        <Parameter Name="blobHttpHeaders" Type="System.Nullable&lt;Azure.Storage.Blobs.Models.BlobHttpHeaders&gt;" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="blobAccessConditions" Type="System.Nullable&lt;Azure.Storage.Blobs.Models.BlobAccessConditions&gt;" />
        <Parameter Name="progressHandler" Type="System.IProgress&lt;Azure.Storage.Common.StorageProgress&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content">To be added.</param>
        <param name="blobHttpHeaders">To be added.</param>
        <param name="metadata">To be added.</param>
        <param name="blobAccessConditions">To be added.</param>
        <param name="progressHandler">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithSnapshot">
      <MemberSignature Language="C#" Value="public Azure.Storage.Blobs.Specialized.BlockBlobClient WithSnapshot (string snapshot);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Azure.Storage.Blobs.Specialized.BlockBlobClient WithSnapshot(string snapshot) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.WithSnapshot(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithSnapshot (snapshot As String) As BlockBlobClient" />
      <MemberSignature Language="F#" Value="override this.WithSnapshot : string -&gt; Azure.Storage.Blobs.Specialized.BlockBlobClient" Usage="blockBlobClient.WithSnapshot snapshot" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Storage.Blobs.Specialized.BlockBlobClient</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="snapshot" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="snapshot">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithSnapshotImpl">
      <MemberSignature Language="C#" Value="protected override sealed Azure.Storage.Blobs.Specialized.BlobBaseClient WithSnapshotImpl (string snapshot);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class Azure.Storage.Blobs.Specialized.BlobBaseClient WithSnapshotImpl(string snapshot) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.BlockBlobClient.WithSnapshotImpl(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function WithSnapshotImpl (snapshot As String) As BlobBaseClient" />
      <MemberSignature Language="F#" Value="override this.WithSnapshotImpl : string -&gt; Azure.Storage.Blobs.Specialized.BlobBaseClient" Usage="blockBlobClient.WithSnapshotImpl snapshot" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Storage.Blobs.Specialized.BlobBaseClient</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="snapshot" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="snapshot">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
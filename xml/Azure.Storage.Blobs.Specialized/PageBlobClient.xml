<Type Name="PageBlobClient" FullName="Azure.Storage.Blobs.Specialized.PageBlobClient">
  <TypeSignature Language="C#" Value="public class PageBlobClient : Azure.Storage.Blobs.Specialized.BlobBaseClient" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PageBlobClient extends Azure.Storage.Blobs.Specialized.BlobBaseClient" />
  <TypeSignature Language="DocId" Value="T:Azure.Storage.Blobs.Specialized.PageBlobClient" />
  <TypeSignature Language="VB.NET" Value="Public Class PageBlobClient&#xA;Inherits BlobBaseClient" />
  <TypeSignature Language="F#" Value="type PageBlobClient = class&#xA;    inherit BlobBaseClient" />
  <AssemblyInfo>
    <AssemblyName>Azure.Storage.Blobs</AssemblyName>
    <AssemblyVersion>12.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.Storage.Blobs.Specialized.BlobBaseClient</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PageBlobClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.PageBlobClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PageBlobClient (Uri blobUri, Azure.Storage.Blobs.BlobClientOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri blobUri, class Azure.Storage.Blobs.BlobClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.PageBlobClient.#ctor(System.Uri,Azure.Storage.Blobs.BlobClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (blobUri As Uri, Optional options As BlobClientOptions = null)" />
      <MemberSignature Language="F#" Value="new Azure.Storage.Blobs.Specialized.PageBlobClient : Uri * Azure.Storage.Blobs.BlobClientOptions -&gt; Azure.Storage.Blobs.Specialized.PageBlobClient" Usage="new Azure.Storage.Blobs.Specialized.PageBlobClient (blobUri, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="blobUri" Type="System.Uri" />
        <Parameter Name="options" Type="Azure.Storage.Blobs.BlobClientOptions" />
      </Parameters>
      <Docs>
        <param name="blobUri">To be added.</param>
        <param name="options">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PageBlobClient (string connectionString, string containerName, string blobName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString, string containerName, string blobName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.PageBlobClient.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String, containerName As String, blobName As String)" />
      <MemberSignature Language="F#" Value="new Azure.Storage.Blobs.Specialized.PageBlobClient : string * string * string -&gt; Azure.Storage.Blobs.Specialized.PageBlobClient" Usage="new Azure.Storage.Blobs.Specialized.PageBlobClient (connectionString, containerName, blobName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="containerName" Type="System.String" />
        <Parameter Name="blobName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">To be added.</param>
        <param name="containerName">To be added.</param>
        <param name="blobName">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PageBlobClient (Uri blobUri, Azure.Core.TokenCredential credential, Azure.Storage.Blobs.BlobClientOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri blobUri, class Azure.Core.TokenCredential credential, class Azure.Storage.Blobs.BlobClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.PageBlobClient.#ctor(System.Uri,Azure.Core.TokenCredential,Azure.Storage.Blobs.BlobClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (blobUri As Uri, credential As TokenCredential, Optional options As BlobClientOptions = null)" />
      <MemberSignature Language="F#" Value="new Azure.Storage.Blobs.Specialized.PageBlobClient : Uri * Azure.Core.TokenCredential * Azure.Storage.Blobs.BlobClientOptions -&gt; Azure.Storage.Blobs.Specialized.PageBlobClient" Usage="new Azure.Storage.Blobs.Specialized.PageBlobClient (blobUri, credential, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="blobUri" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.Core.TokenCredential" />
        <Parameter Name="options" Type="Azure.Storage.Blobs.BlobClientOptions" />
      </Parameters>
      <Docs>
        <param name="blobUri">To be added.</param>
        <param name="credential">To be added.</param>
        <param name="options">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PageBlobClient (Uri blobUri, Azure.Storage.StorageSharedKeyCredential credential, Azure.Storage.Blobs.BlobClientOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri blobUri, class Azure.Storage.StorageSharedKeyCredential credential, class Azure.Storage.Blobs.BlobClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.PageBlobClient.#ctor(System.Uri,Azure.Storage.StorageSharedKeyCredential,Azure.Storage.Blobs.BlobClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (blobUri As Uri, credential As StorageSharedKeyCredential, Optional options As BlobClientOptions = null)" />
      <MemberSignature Language="F#" Value="new Azure.Storage.Blobs.Specialized.PageBlobClient : Uri * Azure.Storage.StorageSharedKeyCredential * Azure.Storage.Blobs.BlobClientOptions -&gt; Azure.Storage.Blobs.Specialized.PageBlobClient" Usage="new Azure.Storage.Blobs.Specialized.PageBlobClient (blobUri, credential, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="blobUri" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.Storage.StorageSharedKeyCredential" />
        <Parameter Name="options" Type="Azure.Storage.Blobs.BlobClientOptions" />
      </Parameters>
      <Docs>
        <param name="blobUri">To be added.</param>
        <param name="credential">To be added.</param>
        <param name="options">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PageBlobClient (string connectionString, string containerName, string blobName, Azure.Storage.Blobs.BlobClientOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString, string containerName, string blobName, class Azure.Storage.Blobs.BlobClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.PageBlobClient.#ctor(System.String,System.String,System.String,Azure.Storage.Blobs.BlobClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String, containerName As String, blobName As String, options As BlobClientOptions)" />
      <MemberSignature Language="F#" Value="new Azure.Storage.Blobs.Specialized.PageBlobClient : string * string * string * Azure.Storage.Blobs.BlobClientOptions -&gt; Azure.Storage.Blobs.Specialized.PageBlobClient" Usage="new Azure.Storage.Blobs.Specialized.PageBlobClient (connectionString, containerName, blobName, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="containerName" Type="System.String" />
        <Parameter Name="blobName" Type="System.String" />
        <Parameter Name="options" Type="Azure.Storage.Blobs.BlobClientOptions" />
      </Parameters>
      <Docs>
        <param name="connectionString">To be added.</param>
        <param name="containerName">To be added.</param>
        <param name="blobName">To be added.</param>
        <param name="options">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearPages">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Blobs.Models.PageInfo&gt; ClearPages (Azure.Core.Http.HttpRange range, Nullable&lt;Azure.Storage.Blobs.Models.PageBlobAccessConditions&gt; accessConditions = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Azure.Response`1&lt;class Azure.Storage.Blobs.Models.PageInfo&gt; ClearPages(valuetype Azure.Core.Http.HttpRange range, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Blobs.Models.PageBlobAccessConditions&gt; accessConditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.PageBlobClient.ClearPages(Azure.Core.Http.HttpRange,System.Nullable{Azure.Storage.Blobs.Models.PageBlobAccessConditions},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member ClearPages : Azure.Core.Http.HttpRange * Nullable&lt;Azure.Storage.Blobs.Models.PageBlobAccessConditions&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Blobs.Models.PageInfo&gt;&#xA;override this.ClearPages : Azure.Core.Http.HttpRange * Nullable&lt;Azure.Storage.Blobs.Models.PageBlobAccessConditions&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Blobs.Models.PageInfo&gt;" Usage="pageBlobClient.ClearPages (range, accessConditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Blobs.Models.PageInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="range" Type="Azure.Core.Http.HttpRange" />
        <Parameter Name="accessConditions" Type="System.Nullable&lt;Azure.Storage.Blobs.Models.PageBlobAccessConditions&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="range">To be added.</param>
        <param name="accessConditions">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearPagesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.PageInfo&gt;&gt; ClearPagesAsync (Azure.Core.Http.HttpRange range, Nullable&lt;Azure.Storage.Blobs.Models.PageBlobAccessConditions&gt; accessConditions = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;valuetype Azure.Response`1&lt;class Azure.Storage.Blobs.Models.PageInfo&gt;&gt; ClearPagesAsync(valuetype Azure.Core.Http.HttpRange range, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Blobs.Models.PageBlobAccessConditions&gt; accessConditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.PageBlobClient.ClearPagesAsync(Azure.Core.Http.HttpRange,System.Nullable{Azure.Storage.Blobs.Models.PageBlobAccessConditions},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member ClearPagesAsync : Azure.Core.Http.HttpRange * Nullable&lt;Azure.Storage.Blobs.Models.PageBlobAccessConditions&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.PageInfo&gt;&gt;&#xA;override this.ClearPagesAsync : Azure.Core.Http.HttpRange * Nullable&lt;Azure.Storage.Blobs.Models.PageBlobAccessConditions&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.PageInfo&gt;&gt;" Usage="pageBlobClient.ClearPagesAsync (range, accessConditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.PageInfo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="range" Type="Azure.Core.Http.HttpRange" />
        <Parameter Name="accessConditions" Type="System.Nullable&lt;Azure.Storage.Blobs.Models.PageBlobAccessConditions&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="range">To be added.</param>
        <param name="accessConditions">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt; Create (long size, Nullable&lt;long&gt; sequenceNumber = null, Nullable&lt;Azure.Storage.Blobs.Models.BlobHttpHeaders&gt; httpHeaders = null, System.Collections.Generic.IDictionary&lt;string,string&gt; metadata = null, Nullable&lt;Azure.Storage.Blobs.Models.PageBlobAccessConditions&gt; accessConditions = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Azure.Response`1&lt;class Azure.Storage.Blobs.Models.BlobContentInfo&gt; Create(int64 size, valuetype System.Nullable`1&lt;int64&gt; sequenceNumber, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Blobs.Models.BlobHttpHeaders&gt; httpHeaders, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; metadata, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Blobs.Models.PageBlobAccessConditions&gt; accessConditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.PageBlobClient.Create(System.Int64,System.Nullable{System.Int64},System.Nullable{Azure.Storage.Blobs.Models.BlobHttpHeaders},System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{Azure.Storage.Blobs.Models.PageBlobAccessConditions},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member Create : int64 * Nullable&lt;int64&gt; * Nullable&lt;Azure.Storage.Blobs.Models.BlobHttpHeaders&gt; * System.Collections.Generic.IDictionary&lt;string, string&gt; * Nullable&lt;Azure.Storage.Blobs.Models.PageBlobAccessConditions&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt;&#xA;override this.Create : int64 * Nullable&lt;int64&gt; * Nullable&lt;Azure.Storage.Blobs.Models.BlobHttpHeaders&gt; * System.Collections.Generic.IDictionary&lt;string, string&gt; * Nullable&lt;Azure.Storage.Blobs.Models.PageBlobAccessConditions&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt;" Usage="pageBlobClient.Create (size, sequenceNumber, httpHeaders, metadata, accessConditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int64" />
        <Parameter Name="sequenceNumber" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="httpHeaders" Type="System.Nullable&lt;Azure.Storage.Blobs.Models.BlobHttpHeaders&gt;" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="accessConditions" Type="System.Nullable&lt;Azure.Storage.Blobs.Models.PageBlobAccessConditions&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="size">To be added.</param>
        <param name="sequenceNumber">To be added.</param>
        <param name="httpHeaders">To be added.</param>
        <param name="metadata">To be added.</param>
        <param name="accessConditions">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt;&gt; CreateAsync (long size, Nullable&lt;long&gt; sequenceNumber = null, Nullable&lt;Azure.Storage.Blobs.Models.BlobHttpHeaders&gt; httpHeaders = null, System.Collections.Generic.IDictionary&lt;string,string&gt; metadata = null, Nullable&lt;Azure.Storage.Blobs.Models.PageBlobAccessConditions&gt; accessConditions = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;valuetype Azure.Response`1&lt;class Azure.Storage.Blobs.Models.BlobContentInfo&gt;&gt; CreateAsync(int64 size, valuetype System.Nullable`1&lt;int64&gt; sequenceNumber, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Blobs.Models.BlobHttpHeaders&gt; httpHeaders, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; metadata, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Blobs.Models.PageBlobAccessConditions&gt; accessConditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.PageBlobClient.CreateAsync(System.Int64,System.Nullable{System.Int64},System.Nullable{Azure.Storage.Blobs.Models.BlobHttpHeaders},System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{Azure.Storage.Blobs.Models.PageBlobAccessConditions},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member CreateAsync : int64 * Nullable&lt;int64&gt; * Nullable&lt;Azure.Storage.Blobs.Models.BlobHttpHeaders&gt; * System.Collections.Generic.IDictionary&lt;string, string&gt; * Nullable&lt;Azure.Storage.Blobs.Models.PageBlobAccessConditions&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt;&gt;&#xA;override this.CreateAsync : int64 * Nullable&lt;int64&gt; * Nullable&lt;Azure.Storage.Blobs.Models.BlobHttpHeaders&gt; * System.Collections.Generic.IDictionary&lt;string, string&gt; * Nullable&lt;Azure.Storage.Blobs.Models.PageBlobAccessConditions&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt;&gt;" Usage="pageBlobClient.CreateAsync (size, sequenceNumber, httpHeaders, metadata, accessConditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.BlobContentInfo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int64" />
        <Parameter Name="sequenceNumber" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="httpHeaders" Type="System.Nullable&lt;Azure.Storage.Blobs.Models.BlobHttpHeaders&gt;" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="accessConditions" Type="System.Nullable&lt;Azure.Storage.Blobs.Models.PageBlobAccessConditions&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="size">To be added.</param>
        <param name="sequenceNumber">To be added.</param>
        <param name="httpHeaders">To be added.</param>
        <param name="metadata">To be added.</param>
        <param name="accessConditions">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPageRanges">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Blobs.Models.PageRangesInfo&gt; GetPageRanges (Nullable&lt;Azure.Core.Http.HttpRange&gt; range = null, string snapshot = null, Nullable&lt;Azure.Storage.Blobs.Models.PageBlobAccessConditions&gt; accessConditions = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Azure.Response`1&lt;class Azure.Storage.Blobs.Models.PageRangesInfo&gt; GetPageRanges(valuetype System.Nullable`1&lt;valuetype Azure.Core.Http.HttpRange&gt; range, string snapshot, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Blobs.Models.PageBlobAccessConditions&gt; accessConditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.PageBlobClient.GetPageRanges(System.Nullable{Azure.Core.Http.HttpRange},System.String,System.Nullable{Azure.Storage.Blobs.Models.PageBlobAccessConditions},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetPageRanges : Nullable&lt;Azure.Core.Http.HttpRange&gt; * string * Nullable&lt;Azure.Storage.Blobs.Models.PageBlobAccessConditions&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Blobs.Models.PageRangesInfo&gt;&#xA;override this.GetPageRanges : Nullable&lt;Azure.Core.Http.HttpRange&gt; * string * Nullable&lt;Azure.Storage.Blobs.Models.PageBlobAccessConditions&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Blobs.Models.PageRangesInfo&gt;" Usage="pageBlobClient.GetPageRanges (range, snapshot, accessConditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Blobs.Models.PageRangesInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="range" Type="System.Nullable&lt;Azure.Core.Http.HttpRange&gt;" />
        <Parameter Name="snapshot" Type="System.String" />
        <Parameter Name="accessConditions" Type="System.Nullable&lt;Azure.Storage.Blobs.Models.PageBlobAccessConditions&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="range">To be added.</param>
        <param name="snapshot">To be added.</param>
        <param name="accessConditions">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPageRangesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.PageRangesInfo&gt;&gt; GetPageRangesAsync (Nullable&lt;Azure.Core.Http.HttpRange&gt; range = null, string snapshot = null, Nullable&lt;Azure.Storage.Blobs.Models.PageBlobAccessConditions&gt; accessConditions = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;valuetype Azure.Response`1&lt;class Azure.Storage.Blobs.Models.PageRangesInfo&gt;&gt; GetPageRangesAsync(valuetype System.Nullable`1&lt;valuetype Azure.Core.Http.HttpRange&gt; range, string snapshot, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Blobs.Models.PageBlobAccessConditions&gt; accessConditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.PageBlobClient.GetPageRangesAsync(System.Nullable{Azure.Core.Http.HttpRange},System.String,System.Nullable{Azure.Storage.Blobs.Models.PageBlobAccessConditions},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetPageRangesAsync : Nullable&lt;Azure.Core.Http.HttpRange&gt; * string * Nullable&lt;Azure.Storage.Blobs.Models.PageBlobAccessConditions&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.PageRangesInfo&gt;&gt;&#xA;override this.GetPageRangesAsync : Nullable&lt;Azure.Core.Http.HttpRange&gt; * string * Nullable&lt;Azure.Storage.Blobs.Models.PageBlobAccessConditions&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.PageRangesInfo&gt;&gt;" Usage="pageBlobClient.GetPageRangesAsync (range, snapshot, accessConditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.PageRangesInfo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="range" Type="System.Nullable&lt;Azure.Core.Http.HttpRange&gt;" />
        <Parameter Name="snapshot" Type="System.String" />
        <Parameter Name="accessConditions" Type="System.Nullable&lt;Azure.Storage.Blobs.Models.PageBlobAccessConditions&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="range">To be added.</param>
        <param name="snapshot">To be added.</param>
        <param name="accessConditions">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPageRangesDiff">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Blobs.Models.PageRangesInfo&gt; GetPageRangesDiff (Nullable&lt;Azure.Core.Http.HttpRange&gt; range = null, string snapshot = null, string previousSnapshot = null, Nullable&lt;Azure.Storage.Blobs.Models.PageBlobAccessConditions&gt; accessConditions = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Azure.Response`1&lt;class Azure.Storage.Blobs.Models.PageRangesInfo&gt; GetPageRangesDiff(valuetype System.Nullable`1&lt;valuetype Azure.Core.Http.HttpRange&gt; range, string snapshot, string previousSnapshot, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Blobs.Models.PageBlobAccessConditions&gt; accessConditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.PageBlobClient.GetPageRangesDiff(System.Nullable{Azure.Core.Http.HttpRange},System.String,System.String,System.Nullable{Azure.Storage.Blobs.Models.PageBlobAccessConditions},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetPageRangesDiff : Nullable&lt;Azure.Core.Http.HttpRange&gt; * string * string * Nullable&lt;Azure.Storage.Blobs.Models.PageBlobAccessConditions&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Blobs.Models.PageRangesInfo&gt;&#xA;override this.GetPageRangesDiff : Nullable&lt;Azure.Core.Http.HttpRange&gt; * string * string * Nullable&lt;Azure.Storage.Blobs.Models.PageBlobAccessConditions&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Blobs.Models.PageRangesInfo&gt;" Usage="pageBlobClient.GetPageRangesDiff (range, snapshot, previousSnapshot, accessConditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Blobs.Models.PageRangesInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="range" Type="System.Nullable&lt;Azure.Core.Http.HttpRange&gt;" />
        <Parameter Name="snapshot" Type="System.String" />
        <Parameter Name="previousSnapshot" Type="System.String" />
        <Parameter Name="accessConditions" Type="System.Nullable&lt;Azure.Storage.Blobs.Models.PageBlobAccessConditions&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="range">To be added.</param>
        <param name="snapshot">To be added.</param>
        <param name="previousSnapshot">To be added.</param>
        <param name="accessConditions">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPageRangesDiffAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.PageRangesInfo&gt;&gt; GetPageRangesDiffAsync (Nullable&lt;Azure.Core.Http.HttpRange&gt; range = null, string snapshot = null, string previousSnapshot = null, Nullable&lt;Azure.Storage.Blobs.Models.PageBlobAccessConditions&gt; accessConditions = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;valuetype Azure.Response`1&lt;class Azure.Storage.Blobs.Models.PageRangesInfo&gt;&gt; GetPageRangesDiffAsync(valuetype System.Nullable`1&lt;valuetype Azure.Core.Http.HttpRange&gt; range, string snapshot, string previousSnapshot, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Blobs.Models.PageBlobAccessConditions&gt; accessConditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.PageBlobClient.GetPageRangesDiffAsync(System.Nullable{Azure.Core.Http.HttpRange},System.String,System.String,System.Nullable{Azure.Storage.Blobs.Models.PageBlobAccessConditions},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetPageRangesDiffAsync : Nullable&lt;Azure.Core.Http.HttpRange&gt; * string * string * Nullable&lt;Azure.Storage.Blobs.Models.PageBlobAccessConditions&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.PageRangesInfo&gt;&gt;&#xA;override this.GetPageRangesDiffAsync : Nullable&lt;Azure.Core.Http.HttpRange&gt; * string * string * Nullable&lt;Azure.Storage.Blobs.Models.PageBlobAccessConditions&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.PageRangesInfo&gt;&gt;" Usage="pageBlobClient.GetPageRangesDiffAsync (range, snapshot, previousSnapshot, accessConditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.PageRangesInfo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="range" Type="System.Nullable&lt;Azure.Core.Http.HttpRange&gt;" />
        <Parameter Name="snapshot" Type="System.String" />
        <Parameter Name="previousSnapshot" Type="System.String" />
        <Parameter Name="accessConditions" Type="System.Nullable&lt;Azure.Storage.Blobs.Models.PageBlobAccessConditions&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="range">To be added.</param>
        <param name="snapshot">To be added.</param>
        <param name="previousSnapshot">To be added.</param>
        <param name="accessConditions">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PageBlobMaxUploadPagesBytes">
      <MemberSignature Language="C#" Value="public const int PageBlobMaxUploadPagesBytes = 4194304;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 PageBlobMaxUploadPagesBytes = (4194304)" />
      <MemberSignature Language="DocId" Value="F:Azure.Storage.Blobs.Specialized.PageBlobClient.PageBlobMaxUploadPagesBytes" />
      <MemberSignature Language="VB.NET" Value="Public Const PageBlobMaxUploadPagesBytes As Integer  = 4194304" />
      <MemberSignature Language="F#" Value="val mutable PageBlobMaxUploadPagesBytes : int" Usage="Azure.Storage.Blobs.Specialized.PageBlobClient.PageBlobMaxUploadPagesBytes" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>4194304</MemberValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PageBlobPageBytes">
      <MemberSignature Language="C#" Value="public const int PageBlobPageBytes = 512;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 PageBlobPageBytes = (512)" />
      <MemberSignature Language="DocId" Value="F:Azure.Storage.Blobs.Specialized.PageBlobClient.PageBlobPageBytes" />
      <MemberSignature Language="VB.NET" Value="Public Const PageBlobPageBytes As Integer  = 512" />
      <MemberSignature Language="F#" Value="val mutable PageBlobPageBytes : int" Usage="Azure.Storage.Blobs.Specialized.PageBlobClient.PageBlobPageBytes" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>512</MemberValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Resize">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Blobs.Models.PageBlobInfo&gt; Resize (long size, Nullable&lt;Azure.Storage.Blobs.Models.PageBlobAccessConditions&gt; accessConditions = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Azure.Response`1&lt;class Azure.Storage.Blobs.Models.PageBlobInfo&gt; Resize(int64 size, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Blobs.Models.PageBlobAccessConditions&gt; accessConditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.PageBlobClient.Resize(System.Int64,System.Nullable{Azure.Storage.Blobs.Models.PageBlobAccessConditions},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member Resize : int64 * Nullable&lt;Azure.Storage.Blobs.Models.PageBlobAccessConditions&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Blobs.Models.PageBlobInfo&gt;&#xA;override this.Resize : int64 * Nullable&lt;Azure.Storage.Blobs.Models.PageBlobAccessConditions&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Blobs.Models.PageBlobInfo&gt;" Usage="pageBlobClient.Resize (size, accessConditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Blobs.Models.PageBlobInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int64" />
        <Parameter Name="accessConditions" Type="System.Nullable&lt;Azure.Storage.Blobs.Models.PageBlobAccessConditions&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="size">To be added.</param>
        <param name="accessConditions">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResizeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.PageBlobInfo&gt;&gt; ResizeAsync (long size, Nullable&lt;Azure.Storage.Blobs.Models.PageBlobAccessConditions&gt; accessConditions = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;valuetype Azure.Response`1&lt;class Azure.Storage.Blobs.Models.PageBlobInfo&gt;&gt; ResizeAsync(int64 size, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Blobs.Models.PageBlobAccessConditions&gt; accessConditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.PageBlobClient.ResizeAsync(System.Int64,System.Nullable{Azure.Storage.Blobs.Models.PageBlobAccessConditions},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member ResizeAsync : int64 * Nullable&lt;Azure.Storage.Blobs.Models.PageBlobAccessConditions&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.PageBlobInfo&gt;&gt;&#xA;override this.ResizeAsync : int64 * Nullable&lt;Azure.Storage.Blobs.Models.PageBlobAccessConditions&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.PageBlobInfo&gt;&gt;" Usage="pageBlobClient.ResizeAsync (size, accessConditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.PageBlobInfo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int64" />
        <Parameter Name="accessConditions" Type="System.Nullable&lt;Azure.Storage.Blobs.Models.PageBlobAccessConditions&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="size">To be added.</param>
        <param name="accessConditions">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartCopyIncremental">
      <MemberSignature Language="C#" Value="public virtual Azure.Storage.Blobs.Models.CopyFromUriOperation StartCopyIncremental (string copyId, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Storage.Blobs.Models.CopyFromUriOperation StartCopyIncremental(string copyId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.PageBlobClient.StartCopyIncremental(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member StartCopyIncremental : string * System.Threading.CancellationToken -&gt; Azure.Storage.Blobs.Models.CopyFromUriOperation&#xA;override this.StartCopyIncremental : string * System.Threading.CancellationToken -&gt; Azure.Storage.Blobs.Models.CopyFromUriOperation" Usage="pageBlobClient.StartCopyIncremental (copyId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Storage.Blobs.Models.CopyFromUriOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="copyId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="copyId">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartCopyIncremental">
      <MemberSignature Language="C#" Value="public virtual Azure.Storage.Blobs.Models.CopyFromUriOperation StartCopyIncremental (Uri sourceUri, string snapshot, Nullable&lt;Azure.Storage.Blobs.Models.PageBlobAccessConditions&gt; accessConditions = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Storage.Blobs.Models.CopyFromUriOperation StartCopyIncremental(class System.Uri sourceUri, string snapshot, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Blobs.Models.PageBlobAccessConditions&gt; accessConditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.PageBlobClient.StartCopyIncremental(System.Uri,System.String,System.Nullable{Azure.Storage.Blobs.Models.PageBlobAccessConditions},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member StartCopyIncremental : Uri * string * Nullable&lt;Azure.Storage.Blobs.Models.PageBlobAccessConditions&gt; * System.Threading.CancellationToken -&gt; Azure.Storage.Blobs.Models.CopyFromUriOperation&#xA;override this.StartCopyIncremental : Uri * string * Nullable&lt;Azure.Storage.Blobs.Models.PageBlobAccessConditions&gt; * System.Threading.CancellationToken -&gt; Azure.Storage.Blobs.Models.CopyFromUriOperation" Usage="pageBlobClient.StartCopyIncremental (sourceUri, snapshot, accessConditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Storage.Blobs.Models.CopyFromUriOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceUri" Type="System.Uri" />
        <Parameter Name="snapshot" Type="System.String" />
        <Parameter Name="accessConditions" Type="System.Nullable&lt;Azure.Storage.Blobs.Models.PageBlobAccessConditions&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sourceUri">To be added.</param>
        <param name="snapshot">To be added.</param>
        <param name="accessConditions">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartCopyIncrementalAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Storage.Blobs.Models.CopyFromUriOperation&gt; StartCopyIncrementalAsync (string copyId, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Storage.Blobs.Models.CopyFromUriOperation&gt; StartCopyIncrementalAsync(string copyId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.PageBlobClient.StartCopyIncrementalAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member StartCopyIncrementalAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Storage.Blobs.Models.CopyFromUriOperation&gt;&#xA;override this.StartCopyIncrementalAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Storage.Blobs.Models.CopyFromUriOperation&gt;" Usage="pageBlobClient.StartCopyIncrementalAsync (copyId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Storage.Blobs.Models.CopyFromUriOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="copyId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="copyId">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartCopyIncrementalAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Storage.Blobs.Models.CopyFromUriOperation&gt; StartCopyIncrementalAsync (Uri sourceUri, string snapshot, Nullable&lt;Azure.Storage.Blobs.Models.PageBlobAccessConditions&gt; accessConditions = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Storage.Blobs.Models.CopyFromUriOperation&gt; StartCopyIncrementalAsync(class System.Uri sourceUri, string snapshot, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Blobs.Models.PageBlobAccessConditions&gt; accessConditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.PageBlobClient.StartCopyIncrementalAsync(System.Uri,System.String,System.Nullable{Azure.Storage.Blobs.Models.PageBlobAccessConditions},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member StartCopyIncrementalAsync : Uri * string * Nullable&lt;Azure.Storage.Blobs.Models.PageBlobAccessConditions&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Storage.Blobs.Models.CopyFromUriOperation&gt;&#xA;override this.StartCopyIncrementalAsync : Uri * string * Nullable&lt;Azure.Storage.Blobs.Models.PageBlobAccessConditions&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Storage.Blobs.Models.CopyFromUriOperation&gt;" Usage="pageBlobClient.StartCopyIncrementalAsync (sourceUri, snapshot, accessConditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Storage.Blobs.Models.CopyFromUriOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceUri" Type="System.Uri" />
        <Parameter Name="snapshot" Type="System.String" />
        <Parameter Name="accessConditions" Type="System.Nullable&lt;Azure.Storage.Blobs.Models.PageBlobAccessConditions&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sourceUri">To be added.</param>
        <param name="snapshot">To be added.</param>
        <param name="accessConditions">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateSequenceNumber">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Blobs.Models.PageBlobInfo&gt; UpdateSequenceNumber (Azure.Storage.Blobs.Models.SequenceNumberAction action, Nullable&lt;long&gt; sequenceNumber = null, Nullable&lt;Azure.Storage.Blobs.Models.PageBlobAccessConditions&gt; accessConditions = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Azure.Response`1&lt;class Azure.Storage.Blobs.Models.PageBlobInfo&gt; UpdateSequenceNumber(valuetype Azure.Storage.Blobs.Models.SequenceNumberAction action, valuetype System.Nullable`1&lt;int64&gt; sequenceNumber, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Blobs.Models.PageBlobAccessConditions&gt; accessConditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.PageBlobClient.UpdateSequenceNumber(Azure.Storage.Blobs.Models.SequenceNumberAction,System.Nullable{System.Int64},System.Nullable{Azure.Storage.Blobs.Models.PageBlobAccessConditions},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member UpdateSequenceNumber : Azure.Storage.Blobs.Models.SequenceNumberAction * Nullable&lt;int64&gt; * Nullable&lt;Azure.Storage.Blobs.Models.PageBlobAccessConditions&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Blobs.Models.PageBlobInfo&gt;&#xA;override this.UpdateSequenceNumber : Azure.Storage.Blobs.Models.SequenceNumberAction * Nullable&lt;int64&gt; * Nullable&lt;Azure.Storage.Blobs.Models.PageBlobAccessConditions&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Blobs.Models.PageBlobInfo&gt;" Usage="pageBlobClient.UpdateSequenceNumber (action, sequenceNumber, accessConditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Blobs.Models.PageBlobInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="Azure.Storage.Blobs.Models.SequenceNumberAction" />
        <Parameter Name="sequenceNumber" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="accessConditions" Type="System.Nullable&lt;Azure.Storage.Blobs.Models.PageBlobAccessConditions&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="action">To be added.</param>
        <param name="sequenceNumber">To be added.</param>
        <param name="accessConditions">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateSequenceNumberAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.PageBlobInfo&gt;&gt; UpdateSequenceNumberAsync (Azure.Storage.Blobs.Models.SequenceNumberAction action, Nullable&lt;long&gt; sequenceNumber = null, Nullable&lt;Azure.Storage.Blobs.Models.PageBlobAccessConditions&gt; accessConditions = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;valuetype Azure.Response`1&lt;class Azure.Storage.Blobs.Models.PageBlobInfo&gt;&gt; UpdateSequenceNumberAsync(valuetype Azure.Storage.Blobs.Models.SequenceNumberAction action, valuetype System.Nullable`1&lt;int64&gt; sequenceNumber, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Blobs.Models.PageBlobAccessConditions&gt; accessConditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.PageBlobClient.UpdateSequenceNumberAsync(Azure.Storage.Blobs.Models.SequenceNumberAction,System.Nullable{System.Int64},System.Nullable{Azure.Storage.Blobs.Models.PageBlobAccessConditions},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member UpdateSequenceNumberAsync : Azure.Storage.Blobs.Models.SequenceNumberAction * Nullable&lt;int64&gt; * Nullable&lt;Azure.Storage.Blobs.Models.PageBlobAccessConditions&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.PageBlobInfo&gt;&gt;&#xA;override this.UpdateSequenceNumberAsync : Azure.Storage.Blobs.Models.SequenceNumberAction * Nullable&lt;int64&gt; * Nullable&lt;Azure.Storage.Blobs.Models.PageBlobAccessConditions&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.PageBlobInfo&gt;&gt;" Usage="pageBlobClient.UpdateSequenceNumberAsync (action, sequenceNumber, accessConditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.PageBlobInfo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="Azure.Storage.Blobs.Models.SequenceNumberAction" />
        <Parameter Name="sequenceNumber" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="accessConditions" Type="System.Nullable&lt;Azure.Storage.Blobs.Models.PageBlobAccessConditions&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="action">To be added.</param>
        <param name="sequenceNumber">To be added.</param>
        <param name="accessConditions">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadPages">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Blobs.Models.PageInfo&gt; UploadPages (System.IO.Stream content, long offset, byte[] transactionalContentHash = null, Nullable&lt;Azure.Storage.Blobs.Models.PageBlobAccessConditions&gt; accessConditions = null, IProgress&lt;Azure.Storage.Common.StorageProgress&gt; progressHandler = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Azure.Response`1&lt;class Azure.Storage.Blobs.Models.PageInfo&gt; UploadPages(class System.IO.Stream content, int64 offset, unsigned int8[] transactionalContentHash, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Blobs.Models.PageBlobAccessConditions&gt; accessConditions, class System.IProgress`1&lt;class Azure.Storage.Common.StorageProgress&gt; progressHandler, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.PageBlobClient.UploadPages(System.IO.Stream,System.Int64,System.Byte[],System.Nullable{Azure.Storage.Blobs.Models.PageBlobAccessConditions},System.IProgress{Azure.Storage.Common.StorageProgress},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member UploadPages : System.IO.Stream * int64 * byte[] * Nullable&lt;Azure.Storage.Blobs.Models.PageBlobAccessConditions&gt; * IProgress&lt;Azure.Storage.Common.StorageProgress&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Blobs.Models.PageInfo&gt;&#xA;override this.UploadPages : System.IO.Stream * int64 * byte[] * Nullable&lt;Azure.Storage.Blobs.Models.PageBlobAccessConditions&gt; * IProgress&lt;Azure.Storage.Common.StorageProgress&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Blobs.Models.PageInfo&gt;" Usage="pageBlobClient.UploadPages (content, offset, transactionalContentHash, accessConditions, progressHandler, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Blobs.Models.PageInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="System.IO.Stream" />
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="transactionalContentHash" Type="System.Byte[]" />
        <Parameter Name="accessConditions" Type="System.Nullable&lt;Azure.Storage.Blobs.Models.PageBlobAccessConditions&gt;" />
        <Parameter Name="progressHandler" Type="System.IProgress&lt;Azure.Storage.Common.StorageProgress&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content">To be added.</param>
        <param name="offset">To be added.</param>
        <param name="transactionalContentHash">To be added.</param>
        <param name="accessConditions">To be added.</param>
        <param name="progressHandler">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadPagesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.PageInfo&gt;&gt; UploadPagesAsync (System.IO.Stream content, long offset, byte[] transactionalContentHash = null, Nullable&lt;Azure.Storage.Blobs.Models.PageBlobAccessConditions&gt; accessConditions = null, IProgress&lt;Azure.Storage.Common.StorageProgress&gt; progressHandler = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;valuetype Azure.Response`1&lt;class Azure.Storage.Blobs.Models.PageInfo&gt;&gt; UploadPagesAsync(class System.IO.Stream content, int64 offset, unsigned int8[] transactionalContentHash, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Blobs.Models.PageBlobAccessConditions&gt; accessConditions, class System.IProgress`1&lt;class Azure.Storage.Common.StorageProgress&gt; progressHandler, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.PageBlobClient.UploadPagesAsync(System.IO.Stream,System.Int64,System.Byte[],System.Nullable{Azure.Storage.Blobs.Models.PageBlobAccessConditions},System.IProgress{Azure.Storage.Common.StorageProgress},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member UploadPagesAsync : System.IO.Stream * int64 * byte[] * Nullable&lt;Azure.Storage.Blobs.Models.PageBlobAccessConditions&gt; * IProgress&lt;Azure.Storage.Common.StorageProgress&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.PageInfo&gt;&gt;&#xA;override this.UploadPagesAsync : System.IO.Stream * int64 * byte[] * Nullable&lt;Azure.Storage.Blobs.Models.PageBlobAccessConditions&gt; * IProgress&lt;Azure.Storage.Common.StorageProgress&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.PageInfo&gt;&gt;" Usage="pageBlobClient.UploadPagesAsync (content, offset, transactionalContentHash, accessConditions, progressHandler, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.PageInfo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="System.IO.Stream" />
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="transactionalContentHash" Type="System.Byte[]" />
        <Parameter Name="accessConditions" Type="System.Nullable&lt;Azure.Storage.Blobs.Models.PageBlobAccessConditions&gt;" />
        <Parameter Name="progressHandler" Type="System.IProgress&lt;Azure.Storage.Common.StorageProgress&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content">To be added.</param>
        <param name="offset">To be added.</param>
        <param name="transactionalContentHash">To be added.</param>
        <param name="accessConditions">To be added.</param>
        <param name="progressHandler">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadPagesFromUri">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Blobs.Models.PageInfo&gt; UploadPagesFromUri (Uri sourceUri, Azure.Core.Http.HttpRange sourceRange, Azure.Core.Http.HttpRange range, byte[] sourceContentHash = null, Nullable&lt;Azure.Storage.Blobs.Models.PageBlobAccessConditions&gt; accessConditions = null, Nullable&lt;Azure.Storage.Blobs.Models.PageBlobAccessConditions&gt; sourceAccessConditions = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Azure.Response`1&lt;class Azure.Storage.Blobs.Models.PageInfo&gt; UploadPagesFromUri(class System.Uri sourceUri, valuetype Azure.Core.Http.HttpRange sourceRange, valuetype Azure.Core.Http.HttpRange range, unsigned int8[] sourceContentHash, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Blobs.Models.PageBlobAccessConditions&gt; accessConditions, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Blobs.Models.PageBlobAccessConditions&gt; sourceAccessConditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.PageBlobClient.UploadPagesFromUri(System.Uri,Azure.Core.Http.HttpRange,Azure.Core.Http.HttpRange,System.Byte[],System.Nullable{Azure.Storage.Blobs.Models.PageBlobAccessConditions},System.Nullable{Azure.Storage.Blobs.Models.PageBlobAccessConditions},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member UploadPagesFromUri : Uri * Azure.Core.Http.HttpRange * Azure.Core.Http.HttpRange * byte[] * Nullable&lt;Azure.Storage.Blobs.Models.PageBlobAccessConditions&gt; * Nullable&lt;Azure.Storage.Blobs.Models.PageBlobAccessConditions&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Blobs.Models.PageInfo&gt;&#xA;override this.UploadPagesFromUri : Uri * Azure.Core.Http.HttpRange * Azure.Core.Http.HttpRange * byte[] * Nullable&lt;Azure.Storage.Blobs.Models.PageBlobAccessConditions&gt; * Nullable&lt;Azure.Storage.Blobs.Models.PageBlobAccessConditions&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Blobs.Models.PageInfo&gt;" Usage="pageBlobClient.UploadPagesFromUri (sourceUri, sourceRange, range, sourceContentHash, accessConditions, sourceAccessConditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Blobs.Models.PageInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceUri" Type="System.Uri" />
        <Parameter Name="sourceRange" Type="Azure.Core.Http.HttpRange" />
        <Parameter Name="range" Type="Azure.Core.Http.HttpRange" />
        <Parameter Name="sourceContentHash" Type="System.Byte[]" />
        <Parameter Name="accessConditions" Type="System.Nullable&lt;Azure.Storage.Blobs.Models.PageBlobAccessConditions&gt;" />
        <Parameter Name="sourceAccessConditions" Type="System.Nullable&lt;Azure.Storage.Blobs.Models.PageBlobAccessConditions&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sourceUri">To be added.</param>
        <param name="sourceRange">To be added.</param>
        <param name="range">To be added.</param>
        <param name="sourceContentHash">To be added.</param>
        <param name="accessConditions">To be added.</param>
        <param name="sourceAccessConditions">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadPagesFromUriAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.PageInfo&gt;&gt; UploadPagesFromUriAsync (Uri sourceUri, Azure.Core.Http.HttpRange sourceRange, Azure.Core.Http.HttpRange range, byte[] sourceContentHash = null, Nullable&lt;Azure.Storage.Blobs.Models.PageBlobAccessConditions&gt; accessConditions = null, Nullable&lt;Azure.Storage.Blobs.Models.PageBlobAccessConditions&gt; sourceAccessConditions = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;valuetype Azure.Response`1&lt;class Azure.Storage.Blobs.Models.PageInfo&gt;&gt; UploadPagesFromUriAsync(class System.Uri sourceUri, valuetype Azure.Core.Http.HttpRange sourceRange, valuetype Azure.Core.Http.HttpRange range, unsigned int8[] sourceContentHash, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Blobs.Models.PageBlobAccessConditions&gt; accessConditions, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Blobs.Models.PageBlobAccessConditions&gt; sourceAccessConditions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.PageBlobClient.UploadPagesFromUriAsync(System.Uri,Azure.Core.Http.HttpRange,Azure.Core.Http.HttpRange,System.Byte[],System.Nullable{Azure.Storage.Blobs.Models.PageBlobAccessConditions},System.Nullable{Azure.Storage.Blobs.Models.PageBlobAccessConditions},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member UploadPagesFromUriAsync : Uri * Azure.Core.Http.HttpRange * Azure.Core.Http.HttpRange * byte[] * Nullable&lt;Azure.Storage.Blobs.Models.PageBlobAccessConditions&gt; * Nullable&lt;Azure.Storage.Blobs.Models.PageBlobAccessConditions&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.PageInfo&gt;&gt;&#xA;override this.UploadPagesFromUriAsync : Uri * Azure.Core.Http.HttpRange * Azure.Core.Http.HttpRange * byte[] * Nullable&lt;Azure.Storage.Blobs.Models.PageBlobAccessConditions&gt; * Nullable&lt;Azure.Storage.Blobs.Models.PageBlobAccessConditions&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.PageInfo&gt;&gt;" Usage="pageBlobClient.UploadPagesFromUriAsync (sourceUri, sourceRange, range, sourceContentHash, accessConditions, sourceAccessConditions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Blobs.Models.PageInfo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceUri" Type="System.Uri" />
        <Parameter Name="sourceRange" Type="Azure.Core.Http.HttpRange" />
        <Parameter Name="range" Type="Azure.Core.Http.HttpRange" />
        <Parameter Name="sourceContentHash" Type="System.Byte[]" />
        <Parameter Name="accessConditions" Type="System.Nullable&lt;Azure.Storage.Blobs.Models.PageBlobAccessConditions&gt;" />
        <Parameter Name="sourceAccessConditions" Type="System.Nullable&lt;Azure.Storage.Blobs.Models.PageBlobAccessConditions&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sourceUri">To be added.</param>
        <param name="sourceRange">To be added.</param>
        <param name="range">To be added.</param>
        <param name="sourceContentHash">To be added.</param>
        <param name="accessConditions">To be added.</param>
        <param name="sourceAccessConditions">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithSnapshot">
      <MemberSignature Language="C#" Value="public Azure.Storage.Blobs.Specialized.PageBlobClient WithSnapshot (string snapshot);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Azure.Storage.Blobs.Specialized.PageBlobClient WithSnapshot(string snapshot) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.PageBlobClient.WithSnapshot(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithSnapshot (snapshot As String) As PageBlobClient" />
      <MemberSignature Language="F#" Value="override this.WithSnapshot : string -&gt; Azure.Storage.Blobs.Specialized.PageBlobClient" Usage="pageBlobClient.WithSnapshot snapshot" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Storage.Blobs.Specialized.PageBlobClient</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="snapshot" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="snapshot">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithSnapshotImpl">
      <MemberSignature Language="C#" Value="protected override sealed Azure.Storage.Blobs.Specialized.BlobBaseClient WithSnapshotImpl (string snapshot);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class Azure.Storage.Blobs.Specialized.BlobBaseClient WithSnapshotImpl(string snapshot) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Specialized.PageBlobClient.WithSnapshotImpl(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function WithSnapshotImpl (snapshot As String) As BlobBaseClient" />
      <MemberSignature Language="F#" Value="override this.WithSnapshotImpl : string -&gt; Azure.Storage.Blobs.Specialized.BlobBaseClient" Usage="pageBlobClient.WithSnapshotImpl snapshot" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Storage.Blobs.Specialized.BlobBaseClient</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="snapshot" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="snapshot">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
<Type Name="BasePartitionProcessor" FullName="Azure.Messaging.EventHubs.Processor.BasePartitionProcessor">
  <TypeSignature Language="C#" Value="public abstract class BasePartitionProcessor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit BasePartitionProcessor extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Messaging.EventHubs.Processor.BasePartitionProcessor" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class BasePartitionProcessor" />
  <TypeSignature Language="F#" Value="type BasePartitionProcessor = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
               Processes events received from the Azure Event Hubs service.  An instance of this class or of a derived class
               will be created by the associated <see cref="T:Azure.Messaging.EventHubs.Processor.EventProcessor`1" /> for every partition it owns.  This class does
               not perform any kind of processing by itself and a useful partition processor is expected to be derived from it.
             </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BasePartitionProcessor ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.Processor.BasePartitionProcessor.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task CloseAsync (Azure.Messaging.EventHubs.Processor.PartitionContext partitionContext, Azure.Messaging.EventHubs.Processor.PartitionProcessorCloseReason reason);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task CloseAsync(class Azure.Messaging.EventHubs.Processor.PartitionContext partitionContext, valuetype Azure.Messaging.EventHubs.Processor.PartitionProcessorCloseReason reason) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.Processor.BasePartitionProcessor.CloseAsync(Azure.Messaging.EventHubs.Processor.PartitionContext,Azure.Messaging.EventHubs.Processor.PartitionProcessorCloseReason)" />
      <MemberSignature Language="F#" Value="abstract member CloseAsync : Azure.Messaging.EventHubs.Processor.PartitionContext * Azure.Messaging.EventHubs.Processor.PartitionProcessorCloseReason -&gt; System.Threading.Tasks.Task&#xA;override this.CloseAsync : Azure.Messaging.EventHubs.Processor.PartitionContext * Azure.Messaging.EventHubs.Processor.PartitionProcessorCloseReason -&gt; System.Threading.Tasks.Task" Usage="basePartitionProcessor.CloseAsync (partitionContext, reason)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partitionContext" Type="Azure.Messaging.EventHubs.Processor.PartitionContext" />
        <Parameter Name="reason" Type="Azure.Messaging.EventHubs.Processor.PartitionProcessorCloseReason" />
      </Parameters>
      <Docs>
        <param name="partitionContext">Contains information about the partition from which events are sourced and provides a means of creating checkpoints for that partition.</param>
        <param name="reason">The reason why the partition processor is being closed.</param>
        <summary>
               Closes the partition processor.
             </summary>
        <returns>A task to be resolved on when the operation has completed.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task InitializeAsync (Azure.Messaging.EventHubs.Processor.PartitionContext partitionContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task InitializeAsync(class Azure.Messaging.EventHubs.Processor.PartitionContext partitionContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.Processor.BasePartitionProcessor.InitializeAsync(Azure.Messaging.EventHubs.Processor.PartitionContext)" />
      <MemberSignature Language="F#" Value="abstract member InitializeAsync : Azure.Messaging.EventHubs.Processor.PartitionContext -&gt; System.Threading.Tasks.Task&#xA;override this.InitializeAsync : Azure.Messaging.EventHubs.Processor.PartitionContext -&gt; System.Threading.Tasks.Task" Usage="basePartitionProcessor.InitializeAsync partitionContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partitionContext" Type="Azure.Messaging.EventHubs.Processor.PartitionContext" />
      </Parameters>
      <Docs>
        <param name="partitionContext">Contains information about the partition from which events are sourced and provides a means of creating checkpoints for that partition.</param>
        <summary>
               Initializes the partition processor.
             </summary>
        <returns>A task to be resolved on when the operation has completed.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessErrorAsync">
      <MemberSignature Language="C#" Value="public abstract System.Threading.Tasks.Task ProcessErrorAsync (Azure.Messaging.EventHubs.Processor.PartitionContext partitionContext, Exception exception, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task ProcessErrorAsync(class Azure.Messaging.EventHubs.Processor.PartitionContext partitionContext, class System.Exception exception, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.Processor.BasePartitionProcessor.ProcessErrorAsync(Azure.Messaging.EventHubs.Processor.PartitionContext,System.Exception,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member ProcessErrorAsync : Azure.Messaging.EventHubs.Processor.PartitionContext * Exception * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="basePartitionProcessor.ProcessErrorAsync (partitionContext, exception, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partitionContext" Type="Azure.Messaging.EventHubs.Processor.PartitionContext" />
        <Parameter Name="exception" Type="System.Exception" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="partitionContext">Contains information about the partition from which events are sourced and provides a means of creating checkpoints for that partition.</param>
        <param name="exception">The exception to be processed.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> instance to signal the request to cancel the operation.</param>
        <summary>
               Processes an unexpected exception thrown while the associated <see cref="T:Azure.Messaging.EventHubs.Processor.EventProcessor`1" /> is running.
             </summary>
        <returns>A task to be resolved on when the operation has completed.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessEventsAsync">
      <MemberSignature Language="C#" Value="public abstract System.Threading.Tasks.Task ProcessEventsAsync (Azure.Messaging.EventHubs.Processor.PartitionContext partitionContext, System.Collections.Generic.IEnumerable&lt;Azure.Messaging.EventHubs.EventData&gt; events, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task ProcessEventsAsync(class Azure.Messaging.EventHubs.Processor.PartitionContext partitionContext, class System.Collections.Generic.IEnumerable`1&lt;class Azure.Messaging.EventHubs.EventData&gt; events, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.Processor.BasePartitionProcessor.ProcessEventsAsync(Azure.Messaging.EventHubs.Processor.PartitionContext,System.Collections.Generic.IEnumerable{Azure.Messaging.EventHubs.EventData},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member ProcessEventsAsync : Azure.Messaging.EventHubs.Processor.PartitionContext * seq&lt;Azure.Messaging.EventHubs.EventData&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="basePartitionProcessor.ProcessEventsAsync (partitionContext, events, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partitionContext" Type="Azure.Messaging.EventHubs.Processor.PartitionContext" />
        <Parameter Name="events" Type="System.Collections.Generic.IEnumerable&lt;Azure.Messaging.EventHubs.EventData&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="partitionContext">Contains information about the partition from which events are sourced and provides a means of creating checkpoints for that partition.</param>
        <param name="events">The received events to be processed.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> instance to signal the request to cancel the operation.</param>
        <summary>
               Processes a set of received <see cref="T:Azure.Messaging.EventHubs.EventData" />.
             </summary>
        <returns>A task to be resolved on when the operation has completed.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

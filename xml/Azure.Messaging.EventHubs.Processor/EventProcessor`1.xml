<Type Name="EventProcessor&lt;T&gt;" FullName="Azure.Messaging.EventHubs.Processor.EventProcessor&lt;T&gt;">
  <TypeSignature Language="C#" Value="public class EventProcessor&lt;T&gt; where T : BasePartitionProcessornew()" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EventProcessor`1&lt;.ctor (class Azure.Messaging.EventHubs.Processor.BasePartitionProcessor) T&gt; extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Messaging.EventHubs.Processor.EventProcessor`1" />
  <TypeSignature Language="VB.NET" Value="Public Class EventProcessor(Of T)" />
  <TypeSignature Language="F#" Value="type EventProcessor&lt;'T (requires 'T :&gt; BasePartitionProcessor and 'T : (new : unit -&gt; 'T))&gt; = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
        <BaseTypeName>Azure.Messaging.EventHubs.Processor.BasePartitionProcessor</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="T">The type of partition processor used by this instance by default; the type must be derived from <see cref="T:Azure.Messaging.EventHubs.Processor.BasePartitionProcessor" /> and must have a parameterless constructor.</typeparam>
    <summary>
               Receives <see cref="T:Azure.Messaging.EventHubs.EventData" /> as they are available for a partition, in the context of a consumer group, and routes
               them to a partition processor instance to be processed.
             </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EventProcessor ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.Processor.EventProcessor`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
               Initializes a new instance of the <see cref="T:Azure.Messaging.EventHubs.Processor.EventProcessor`1" /> class.
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventProcessor (string consumerGroup, Azure.Messaging.EventHubs.EventHubClient eventHubClient, Azure.Messaging.EventHubs.Processor.PartitionManager partitionManager, Azure.Messaging.EventHubs.Processor.EventProcessorOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string consumerGroup, class Azure.Messaging.EventHubs.EventHubClient eventHubClient, class Azure.Messaging.EventHubs.Processor.PartitionManager partitionManager, class Azure.Messaging.EventHubs.Processor.EventProcessorOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.Processor.EventProcessor`1.#ctor(System.String,Azure.Messaging.EventHubs.EventHubClient,Azure.Messaging.EventHubs.Processor.PartitionManager,Azure.Messaging.EventHubs.Processor.EventProcessorOptions)" />
      <MemberSignature Language="F#" Value="new Azure.Messaging.EventHubs.Processor.EventProcessor&lt;'T (requires 'T :&gt; Azure.Messaging.EventHubs.Processor.BasePartitionProcessor and 'T : (new : unit -&gt; 'T))&gt; : string * Azure.Messaging.EventHubs.EventHubClient * Azure.Messaging.EventHubs.Processor.PartitionManager * Azure.Messaging.EventHubs.Processor.EventProcessorOptions -&gt; Azure.Messaging.EventHubs.Processor.EventProcessor&lt;'T (requires 'T :&gt; Azure.Messaging.EventHubs.Processor.BasePartitionProcessor and 'T : (new : unit -&gt; 'T))&gt;" Usage="new Azure.Messaging.EventHubs.Processor.EventProcessor&lt;'T (requires 'T :&gt; Azure.Messaging.EventHubs.Processor.BasePartitionProcessor and 'T : (new : unit -&gt; 'T))&gt; (consumerGroup, eventHubClient, partitionManager, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="consumerGroup" Type="System.String" />
        <Parameter Name="eventHubClient" Type="Azure.Messaging.EventHubs.EventHubClient" />
        <Parameter Name="partitionManager" Type="Azure.Messaging.EventHubs.Processor.PartitionManager" />
        <Parameter Name="options" Type="Azure.Messaging.EventHubs.Processor.EventProcessorOptions" />
      </Parameters>
      <Docs>
        <param name="consumerGroup">The name of the consumer group this event processor is associated with.  Events are read in the context of this group.</param>
        <param name="eventHubClient">The client used to interact with the Azure Event Hubs service.</param>
        <param name="partitionManager">Interacts with the storage system with responsibility for creation of checkpoints and for ownership claim.</param>
        <param name="options">The set of options to use for this event processor.</param>
        <summary>
               Initializes a new instance of the <see cref="T:Azure.Messaging.EventHubs.Processor.EventProcessor`1" /> class.
             </summary>
        <remarks>
               Ownership of the <paramref name="eventHubClient" /> is assumed to be responsibility of the caller; this
               processor will delegate operations to it, but will not perform any clean-up tasks, such as closing or
               disposing of the instance.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventProcessor (string consumerGroup, Azure.Messaging.EventHubs.EventHubClient eventHubClient, Func&lt;Azure.Messaging.EventHubs.Processor.PartitionContext,Azure.Messaging.EventHubs.Processor.BasePartitionProcessor&gt; partitionProcessorFactory, Azure.Messaging.EventHubs.Processor.PartitionManager partitionManager, Azure.Messaging.EventHubs.Processor.EventProcessorOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string consumerGroup, class Azure.Messaging.EventHubs.EventHubClient eventHubClient, class System.Func`2&lt;class Azure.Messaging.EventHubs.Processor.PartitionContext, class Azure.Messaging.EventHubs.Processor.BasePartitionProcessor&gt; partitionProcessorFactory, class Azure.Messaging.EventHubs.Processor.PartitionManager partitionManager, class Azure.Messaging.EventHubs.Processor.EventProcessorOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.Processor.EventProcessor`1.#ctor(System.String,Azure.Messaging.EventHubs.EventHubClient,System.Func{Azure.Messaging.EventHubs.Processor.PartitionContext,Azure.Messaging.EventHubs.Processor.BasePartitionProcessor},Azure.Messaging.EventHubs.Processor.PartitionManager,Azure.Messaging.EventHubs.Processor.EventProcessorOptions)" />
      <MemberSignature Language="F#" Value="new Azure.Messaging.EventHubs.Processor.EventProcessor&lt;'T (requires 'T :&gt; Azure.Messaging.EventHubs.Processor.BasePartitionProcessor and 'T : (new : unit -&gt; 'T))&gt; : string * Azure.Messaging.EventHubs.EventHubClient * Func&lt;Azure.Messaging.EventHubs.Processor.PartitionContext, Azure.Messaging.EventHubs.Processor.BasePartitionProcessor&gt; * Azure.Messaging.EventHubs.Processor.PartitionManager * Azure.Messaging.EventHubs.Processor.EventProcessorOptions -&gt; Azure.Messaging.EventHubs.Processor.EventProcessor&lt;'T (requires 'T :&gt; Azure.Messaging.EventHubs.Processor.BasePartitionProcessor and 'T : (new : unit -&gt; 'T))&gt;" Usage="new Azure.Messaging.EventHubs.Processor.EventProcessor&lt;'T (requires 'T :&gt; Azure.Messaging.EventHubs.Processor.BasePartitionProcessor and 'T : (new : unit -&gt; 'T))&gt; (consumerGroup, eventHubClient, partitionProcessorFactory, partitionManager, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="consumerGroup" Type="System.String" />
        <Parameter Name="eventHubClient" Type="Azure.Messaging.EventHubs.EventHubClient" />
        <Parameter Name="partitionProcessorFactory" Type="System.Func&lt;Azure.Messaging.EventHubs.Processor.PartitionContext,Azure.Messaging.EventHubs.Processor.BasePartitionProcessor&gt;" />
        <Parameter Name="partitionManager" Type="Azure.Messaging.EventHubs.Processor.PartitionManager" />
        <Parameter Name="options" Type="Azure.Messaging.EventHubs.Processor.EventProcessorOptions" />
      </Parameters>
      <Docs>
        <param name="consumerGroup">The name of the consumer group this event processor is associated with.  Events are read in the context of this group.</param>
        <param name="eventHubClient">The client used to interact with the Azure Event Hubs service.</param>
        <param name="partitionProcessorFactory">Creates a partition processor instance for the associated <see cref="T:Azure.Messaging.EventHubs.Processor.PartitionContext" />.</param>
        <param name="partitionManager">Interacts with the storage system with responsibility for creation of checkpoints and for ownership claim.</param>
        <param name="options">The set of options to use for this event processor.</param>
        <summary>
               Initializes a new instance of the <see cref="T:Azure.Messaging.EventHubs.Processor.EventProcessor`1" /> class.
             </summary>
        <remarks>
               Ownership of the <paramref name="eventHubClient" /> is assumed to be responsibility of the caller; this
               processor will delegate operations to it, but will not perform any clean-up tasks, such as closing or
               disposing of the instance.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="Identifier">
      <MemberSignature Language="C#" Value="public virtual string Identifier { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Identifier" />
      <MemberSignature Language="DocId" Value="P:Azure.Messaging.EventHubs.Processor.EventProcessor`1.Identifier" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Identifier As String" />
      <MemberSignature Language="F#" Value="member this.Identifier : string" Usage="Azure.Messaging.EventHubs.Processor.EventProcessor&lt;'T (requires 'T :&gt; Azure.Messaging.EventHubs.Processor.BasePartitionProcessor and 'T : (new : unit -&gt; 'T))&gt;.Identifier" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
               A unique name used to identify this event processor.
             </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadBalanceUpdate">
      <MemberSignature Language="C#" Value="protected virtual TimeSpan LoadBalanceUpdate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan LoadBalanceUpdate" />
      <MemberSignature Language="DocId" Value="P:Azure.Messaging.EventHubs.Processor.EventProcessor`1.LoadBalanceUpdate" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property LoadBalanceUpdate As TimeSpan" />
      <MemberSignature Language="F#" Value="member this.LoadBalanceUpdate : TimeSpan" Usage="Azure.Messaging.EventHubs.Processor.EventProcessor&lt;'T (requires 'T :&gt; Azure.Messaging.EventHubs.Processor.BasePartitionProcessor and 'T : (new : unit -&gt; 'T))&gt;.LoadBalanceUpdate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
               The minimum amount of time to be elapsed between two load balancing verifications.
             </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OwnershipExpiration">
      <MemberSignature Language="C#" Value="protected virtual TimeSpan OwnershipExpiration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan OwnershipExpiration" />
      <MemberSignature Language="DocId" Value="P:Azure.Messaging.EventHubs.Processor.EventProcessor`1.OwnershipExpiration" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property OwnershipExpiration As TimeSpan" />
      <MemberSignature Language="F#" Value="member this.OwnershipExpiration : TimeSpan" Usage="Azure.Messaging.EventHubs.Processor.EventProcessor&lt;'T (requires 'T :&gt; Azure.Messaging.EventHubs.Processor.BasePartitionProcessor and 'T : (new : unit -&gt; 'T))&gt;.OwnershipExpiration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
               The minimum amount of time for an ownership to be considered expired without further updates.
             </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task StartAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task StartAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.Processor.EventProcessor`1.StartAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartAsync () As Task" />
      <MemberSignature Language="F#" Value="abstract member StartAsync : unit -&gt; System.Threading.Tasks.Task&#xA;override this.StartAsync : unit -&gt; System.Threading.Tasks.Task" Usage="eventProcessor.StartAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
               Starts the event processor.  In case it's already running, nothing happens.
             </summary>
        <returns>A task to be resolved on when the operation has completed.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StopAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task StopAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task StopAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.Processor.EventProcessor`1.StopAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StopAsync () As Task" />
      <MemberSignature Language="F#" Value="abstract member StopAsync : unit -&gt; System.Threading.Tasks.Task&#xA;override this.StopAsync : unit -&gt; System.Threading.Tasks.Task" Usage="eventProcessor.StopAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
               Stops the event processor.  In case it isn't running, nothing happens.
             </summary>
        <returns>A task to be resolved on when the operation has completed.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

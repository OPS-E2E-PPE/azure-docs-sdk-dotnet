<Type Name="SearchServiceClient" FullName="Azure.Search.Documents.SearchServiceClient">
  <TypeSignature Language="C#" Value="public class SearchServiceClient" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SearchServiceClient extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Search.Documents.SearchServiceClient" />
  <TypeSignature Language="VB.NET" Value="Public Class SearchServiceClient" />
  <TypeSignature Language="F#" Value="type SearchServiceClient = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Search.Documents</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Azure Cognitive Search client that can be used to manage and query
            indexes and documents, as well as manage other resources, on a Search
            Service.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SearchServiceClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.SearchServiceClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the SearchServiceClient class for
            mocking.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SearchServiceClient (Uri endpoint, Azure.AzureKeyCredential credential);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, class Azure.AzureKeyCredential credential) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.SearchServiceClient.#ctor(System.Uri,Azure.AzureKeyCredential)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, credential As AzureKeyCredential)" />
      <MemberSignature Language="F#" Value="new Azure.Search.Documents.SearchServiceClient : Uri * Azure.AzureKeyCredential -&gt; Azure.Search.Documents.SearchServiceClient" Usage="new Azure.Search.Documents.SearchServiceClient (endpoint, credential)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.AzureKeyCredential" />
      </Parameters>
      <Docs>
        <param name="endpoint">Required. The URI endpoint of the Search service. This is likely to be similar to "https://{search_service}.search.windows.net". The URI must use HTTPS.</param>
        <param name="credential">
            Required. The API key credential used to authenticate requests against the Search service.
            You need to use an admin key to perform any operations on the SearchServiceClient.
            See <see href="https://docs.microsoft.com/azure/search/search-security-api-keys" /> for more information about API keys in Azure Cognitive Search.
            </param>
        <summary>
            Initializes a new instance of the SearchServiceClient class.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when the <paramref name="endpoint" /> or <paramref name="credential" /> is null.</exception>
        <exception cref="T:System.ArgumentException">Thrown when the <paramref name="endpoint" /> is not using HTTPS.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SearchServiceClient (Uri endpoint, Azure.AzureKeyCredential credential, Azure.Search.Documents.SearchClientOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, class Azure.AzureKeyCredential credential, class Azure.Search.Documents.SearchClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.SearchServiceClient.#ctor(System.Uri,Azure.AzureKeyCredential,Azure.Search.Documents.SearchClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, credential As AzureKeyCredential, options As SearchClientOptions)" />
      <MemberSignature Language="F#" Value="new Azure.Search.Documents.SearchServiceClient : Uri * Azure.AzureKeyCredential * Azure.Search.Documents.SearchClientOptions -&gt; Azure.Search.Documents.SearchServiceClient" Usage="new Azure.Search.Documents.SearchServiceClient (endpoint, credential, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.AzureKeyCredential" />
        <Parameter Name="options" Type="Azure.Search.Documents.SearchClientOptions" />
      </Parameters>
      <Docs>
        <param name="endpoint">Required. The URI endpoint of the Search service. This is likely to be similar to "https://{search_service}.search.windows.net". The URI must use HTTPS.</param>
        <param name="credential">
            Required. The API key credential used to authenticate requests against the Search service.
            You need to use an admin key to perform any operations on the SearchServiceClient.
            See <see href="https://docs.microsoft.com/azure/search/search-security-api-keys" /> for more information about API keys in Azure Cognitive Search.
            </param>
        <param name="options">Client configuration options for connecting to Azure Cognitive Search.</param>
        <summary>
            Initializes a new instance of the SearchServiceClient class.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when the <paramref name="endpoint" /> or <paramref name="credential" /> is null.</exception>
        <exception cref="T:System.ArgumentException">Thrown when the <paramref name="endpoint" /> is not using HTTPS.</exception>
      </Docs>
    </Member>
    <Member MemberName="AnalyzeText">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.Search.Documents.Models.AnalyzedTokenInfo&gt;&gt; AnalyzeText (string indexName, Azure.Search.Documents.Models.AnalyzeRequest analyzeRequest, Azure.Search.Documents.SearchRequestOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class System.Collections.Generic.IReadOnlyList`1&lt;class Azure.Search.Documents.Models.AnalyzedTokenInfo&gt;&gt; AnalyzeText(string indexName, class Azure.Search.Documents.Models.AnalyzeRequest analyzeRequest, class Azure.Search.Documents.SearchRequestOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.SearchServiceClient.AnalyzeText(System.String,Azure.Search.Documents.Models.AnalyzeRequest,Azure.Search.Documents.SearchRequestOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AnalyzeText (indexName As String, analyzeRequest As AnalyzeRequest, Optional options As SearchRequestOptions = null, Optional cancellationToken As CancellationToken = null) As Response(Of IReadOnlyList(Of AnalyzedTokenInfo))" />
      <MemberSignature Language="F#" Value="abstract member AnalyzeText : string * Azure.Search.Documents.Models.AnalyzeRequest * Azure.Search.Documents.SearchRequestOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.Search.Documents.Models.AnalyzedTokenInfo&gt;&gt;&#xA;override this.AnalyzeText : string * Azure.Search.Documents.Models.AnalyzeRequest * Azure.Search.Documents.SearchRequestOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.Search.Documents.Models.AnalyzedTokenInfo&gt;&gt;" Usage="searchServiceClient.AnalyzeText (indexName, analyzeRequest, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.Search.Documents.Models.AnalyzedTokenInfo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexName" Type="System.String" />
        <Parameter Name="analyzeRequest" Type="Azure.Search.Documents.Models.AnalyzeRequest" />
        <Parameter Name="options" Type="Azure.Search.Documents.SearchRequestOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexName">The name of the index used to test an analyzer.</param>
        <param name="analyzeRequest">The <see cref="T:Azure.Search.Documents.Models.AnalyzeRequest" /> containing the text and analyzer or analyzer components to test.</param>
        <param name="options">Optional <see cref="T:Azure.Search.Documents.SearchRequestOptions" /> to customize the operation's behavior.</param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Shows how an analyzer breaks text into tokens.
            </summary>
        <returns>
            The <see cref="T:Azure.Response`1" /> from the server containing a list of <see cref="T:Azure.Search.Documents.Models.AnalyzedTokenInfo" /> for analyzed text.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="indexName" /> or <paramref name="analyzeRequest" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="AnalyzeTextAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.Search.Documents.Models.AnalyzedTokenInfo&gt;&gt;&gt; AnalyzeTextAsync (string indexName, Azure.Search.Documents.Models.AnalyzeRequest analyzeRequest, Azure.Search.Documents.SearchRequestOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class System.Collections.Generic.IReadOnlyList`1&lt;class Azure.Search.Documents.Models.AnalyzedTokenInfo&gt;&gt;&gt; AnalyzeTextAsync(string indexName, class Azure.Search.Documents.Models.AnalyzeRequest analyzeRequest, class Azure.Search.Documents.SearchRequestOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.SearchServiceClient.AnalyzeTextAsync(System.String,Azure.Search.Documents.Models.AnalyzeRequest,Azure.Search.Documents.SearchRequestOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AnalyzeTextAsync (indexName As String, analyzeRequest As AnalyzeRequest, Optional options As SearchRequestOptions = null, Optional cancellationToken As CancellationToken = null) As Task(Of Response(Of IReadOnlyList(Of AnalyzedTokenInfo)))" />
      <MemberSignature Language="F#" Value="abstract member AnalyzeTextAsync : string * Azure.Search.Documents.Models.AnalyzeRequest * Azure.Search.Documents.SearchRequestOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.Search.Documents.Models.AnalyzedTokenInfo&gt;&gt;&gt;&#xA;override this.AnalyzeTextAsync : string * Azure.Search.Documents.Models.AnalyzeRequest * Azure.Search.Documents.SearchRequestOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.Search.Documents.Models.AnalyzedTokenInfo&gt;&gt;&gt;" Usage="searchServiceClient.AnalyzeTextAsync (indexName, analyzeRequest, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.Search.Documents.Models.AnalyzedTokenInfo&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexName" Type="System.String" />
        <Parameter Name="analyzeRequest" Type="Azure.Search.Documents.Models.AnalyzeRequest" />
        <Parameter Name="options" Type="Azure.Search.Documents.SearchRequestOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexName">The name of the index used to test an analyzer.</param>
        <param name="analyzeRequest">The <see cref="T:Azure.Search.Documents.Models.AnalyzeRequest" /> containing the text and analyzer or analyzer components to test.</param>
        <param name="options">Optional <see cref="T:Azure.Search.Documents.SearchRequestOptions" /> to customize the operation's behavior.</param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Shows how an analyzer breaks text into tokens.
            </summary>
        <returns>
            The <see cref="T:Azure.Response`1" /> from the server containing a list of <see cref="T:Azure.Search.Documents.Models.AnalyzedTokenInfo" /> for analyzed text.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="indexName" /> or <paramref name="analyzeRequest" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateDataSource">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Search.Documents.Models.SearchIndexerDataSource&gt; CreateDataSource (Azure.Search.Documents.Models.SearchIndexerDataSource dataSource, Azure.Search.Documents.SearchRequestOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Search.Documents.Models.SearchIndexerDataSource&gt; CreateDataSource(class Azure.Search.Documents.Models.SearchIndexerDataSource dataSource, class Azure.Search.Documents.SearchRequestOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.SearchServiceClient.CreateDataSource(Azure.Search.Documents.Models.SearchIndexerDataSource,Azure.Search.Documents.SearchRequestOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateDataSource (dataSource As SearchIndexerDataSource, Optional options As SearchRequestOptions = null, Optional cancellationToken As CancellationToken = null) As Response(Of SearchIndexerDataSource)" />
      <MemberSignature Language="F#" Value="abstract member CreateDataSource : Azure.Search.Documents.Models.SearchIndexerDataSource * Azure.Search.Documents.SearchRequestOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Search.Documents.Models.SearchIndexerDataSource&gt;&#xA;override this.CreateDataSource : Azure.Search.Documents.Models.SearchIndexerDataSource * Azure.Search.Documents.SearchRequestOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Search.Documents.Models.SearchIndexerDataSource&gt;" Usage="searchServiceClient.CreateDataSource (dataSource, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Search.Documents.Models.SearchIndexerDataSource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="Azure.Search.Documents.Models.SearchIndexerDataSource" />
        <Parameter Name="options" Type="Azure.Search.Documents.SearchRequestOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="dataSource">Required. The <see cref="T:Azure.Search.Documents.Models.SearchIndexerDataSource" /> to create.</param>
        <param name="options">Optional <see cref="T:Azure.Search.Documents.SearchRequestOptions" /> to customize the operation's behavior.</param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Creates a new data source.
            </summary>
        <returns>
            The <see cref="T:Azure.Response`1" /> from the server containing the <see cref="T:Azure.Search.Documents.Models.SearchIndexerDataSource" /> that was created.
            This may differ slightly from what was passed in since the service may return back properties set to their default values.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="dataSource" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateDataSourceAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Models.SearchIndexerDataSource&gt;&gt; CreateDataSourceAsync (Azure.Search.Documents.Models.SearchIndexerDataSource dataSource, Azure.Search.Documents.SearchRequestOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Search.Documents.Models.SearchIndexerDataSource&gt;&gt; CreateDataSourceAsync(class Azure.Search.Documents.Models.SearchIndexerDataSource dataSource, class Azure.Search.Documents.SearchRequestOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.SearchServiceClient.CreateDataSourceAsync(Azure.Search.Documents.Models.SearchIndexerDataSource,Azure.Search.Documents.SearchRequestOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateDataSourceAsync (dataSource As SearchIndexerDataSource, Optional options As SearchRequestOptions = null, Optional cancellationToken As CancellationToken = null) As Task(Of Response(Of SearchIndexerDataSource))" />
      <MemberSignature Language="F#" Value="abstract member CreateDataSourceAsync : Azure.Search.Documents.Models.SearchIndexerDataSource * Azure.Search.Documents.SearchRequestOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Models.SearchIndexerDataSource&gt;&gt;&#xA;override this.CreateDataSourceAsync : Azure.Search.Documents.Models.SearchIndexerDataSource * Azure.Search.Documents.SearchRequestOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Models.SearchIndexerDataSource&gt;&gt;" Usage="searchServiceClient.CreateDataSourceAsync (dataSource, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Models.SearchIndexerDataSource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="Azure.Search.Documents.Models.SearchIndexerDataSource" />
        <Parameter Name="options" Type="Azure.Search.Documents.SearchRequestOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="dataSource">Required. The <see cref="T:Azure.Search.Documents.Models.SearchIndexerDataSource" /> to create.</param>
        <param name="options">Optional <see cref="T:Azure.Search.Documents.SearchRequestOptions" /> to customize the operation's behavior.</param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Creates a new data source.
            </summary>
        <returns>
            The <see cref="T:Azure.Response`1" /> from the server containing the <see cref="T:Azure.Search.Documents.Models.SearchIndexerDataSource" /> that was created.
            This may differ slightly from what was passed in since the service may return back properties set to their default values.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="dataSource" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateIndex">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Search.Documents.Models.SearchIndex&gt; CreateIndex (Azure.Search.Documents.Models.SearchIndex index, Azure.Search.Documents.SearchRequestOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Search.Documents.Models.SearchIndex&gt; CreateIndex(class Azure.Search.Documents.Models.SearchIndex index, class Azure.Search.Documents.SearchRequestOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.SearchServiceClient.CreateIndex(Azure.Search.Documents.Models.SearchIndex,Azure.Search.Documents.SearchRequestOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateIndex (index As SearchIndex, Optional options As SearchRequestOptions = null, Optional cancellationToken As CancellationToken = null) As Response(Of SearchIndex)" />
      <MemberSignature Language="F#" Value="abstract member CreateIndex : Azure.Search.Documents.Models.SearchIndex * Azure.Search.Documents.SearchRequestOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Search.Documents.Models.SearchIndex&gt;&#xA;override this.CreateIndex : Azure.Search.Documents.Models.SearchIndex * Azure.Search.Documents.SearchRequestOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Search.Documents.Models.SearchIndex&gt;" Usage="searchServiceClient.CreateIndex (index, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Search.Documents.Models.SearchIndex&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="Azure.Search.Documents.Models.SearchIndex" />
        <Parameter Name="options" Type="Azure.Search.Documents.SearchRequestOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="index">Required. The <see cref="T:Azure.Search.Documents.Models.SearchIndex" /> to create.</param>
        <param name="options">Optional <see cref="T:Azure.Search.Documents.SearchRequestOptions" /> to customize the operation's behavior.</param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Creates a new search index.
            </summary>
        <returns>
            The <see cref="T:Azure.Response`1" /> from the server containing the <see cref="T:Azure.Search.Documents.Models.SearchIndex" /> that was created.
            This may differ slightly from what was passed in since the service may return back fields set to their default values depending on the field type and other properties.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="index" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateIndexAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Models.SearchIndex&gt;&gt; CreateIndexAsync (Azure.Search.Documents.Models.SearchIndex index, Azure.Search.Documents.SearchRequestOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Search.Documents.Models.SearchIndex&gt;&gt; CreateIndexAsync(class Azure.Search.Documents.Models.SearchIndex index, class Azure.Search.Documents.SearchRequestOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.SearchServiceClient.CreateIndexAsync(Azure.Search.Documents.Models.SearchIndex,Azure.Search.Documents.SearchRequestOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateIndexAsync (index As SearchIndex, Optional options As SearchRequestOptions = null, Optional cancellationToken As CancellationToken = null) As Task(Of Response(Of SearchIndex))" />
      <MemberSignature Language="F#" Value="abstract member CreateIndexAsync : Azure.Search.Documents.Models.SearchIndex * Azure.Search.Documents.SearchRequestOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Models.SearchIndex&gt;&gt;&#xA;override this.CreateIndexAsync : Azure.Search.Documents.Models.SearchIndex * Azure.Search.Documents.SearchRequestOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Models.SearchIndex&gt;&gt;" Usage="searchServiceClient.CreateIndexAsync (index, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Models.SearchIndex&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="Azure.Search.Documents.Models.SearchIndex" />
        <Parameter Name="options" Type="Azure.Search.Documents.SearchRequestOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="index">Required. The <see cref="T:Azure.Search.Documents.Models.SearchIndex" /> to create.</param>
        <param name="options">Optional <see cref="T:Azure.Search.Documents.SearchRequestOptions" /> to customize the operation's behavior.</param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Creates a new search index.
            </summary>
        <returns>
            The <see cref="T:Azure.Response`1" /> from the server containing the <see cref="T:Azure.Search.Documents.Models.SearchIndex" /> that was created.
            This may differ slightly from what was passed in since the service may return back fields set to their default values depending on the field type and other properties.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="index" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateIndexer">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Search.Documents.Models.SearchIndexer&gt; CreateIndexer (Azure.Search.Documents.Models.SearchIndexer indexer, Azure.Search.Documents.SearchRequestOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Search.Documents.Models.SearchIndexer&gt; CreateIndexer(class Azure.Search.Documents.Models.SearchIndexer indexer, class Azure.Search.Documents.SearchRequestOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.SearchServiceClient.CreateIndexer(Azure.Search.Documents.Models.SearchIndexer,Azure.Search.Documents.SearchRequestOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateIndexer (indexer As SearchIndexer, Optional options As SearchRequestOptions = null, Optional cancellationToken As CancellationToken = null) As Response(Of SearchIndexer)" />
      <MemberSignature Language="F#" Value="abstract member CreateIndexer : Azure.Search.Documents.Models.SearchIndexer * Azure.Search.Documents.SearchRequestOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Search.Documents.Models.SearchIndexer&gt;&#xA;override this.CreateIndexer : Azure.Search.Documents.Models.SearchIndexer * Azure.Search.Documents.SearchRequestOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Search.Documents.Models.SearchIndexer&gt;" Usage="searchServiceClient.CreateIndexer (indexer, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Search.Documents.Models.SearchIndexer&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexer" Type="Azure.Search.Documents.Models.SearchIndexer" />
        <Parameter Name="options" Type="Azure.Search.Documents.SearchRequestOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexer">Required. The <see cref="T:Azure.Search.Documents.Models.SearchIndex" /> to create.</param>
        <param name="options">Optional <see cref="T:Azure.Search.Documents.SearchRequestOptions" /> to customize the operation's behavior.</param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Creates a new indexer.
            </summary>
        <returns>
            The <see cref="T:Azure.Response`1" /> from the server containing the <see cref="T:Azure.Search.Documents.Models.SearchIndexer" /> created.
            This may differ slightly from what was passed into the service.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="indexer" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateIndexerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Models.SearchIndexer&gt;&gt; CreateIndexerAsync (Azure.Search.Documents.Models.SearchIndexer indexer, Azure.Search.Documents.SearchRequestOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Search.Documents.Models.SearchIndexer&gt;&gt; CreateIndexerAsync(class Azure.Search.Documents.Models.SearchIndexer indexer, class Azure.Search.Documents.SearchRequestOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.SearchServiceClient.CreateIndexerAsync(Azure.Search.Documents.Models.SearchIndexer,Azure.Search.Documents.SearchRequestOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateIndexerAsync (indexer As SearchIndexer, Optional options As SearchRequestOptions = null, Optional cancellationToken As CancellationToken = null) As Task(Of Response(Of SearchIndexer))" />
      <MemberSignature Language="F#" Value="abstract member CreateIndexerAsync : Azure.Search.Documents.Models.SearchIndexer * Azure.Search.Documents.SearchRequestOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Models.SearchIndexer&gt;&gt;&#xA;override this.CreateIndexerAsync : Azure.Search.Documents.Models.SearchIndexer * Azure.Search.Documents.SearchRequestOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Models.SearchIndexer&gt;&gt;" Usage="searchServiceClient.CreateIndexerAsync (indexer, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Models.SearchIndexer&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexer" Type="Azure.Search.Documents.Models.SearchIndexer" />
        <Parameter Name="options" Type="Azure.Search.Documents.SearchRequestOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexer">Required. The <see cref="T:Azure.Search.Documents.Models.SearchIndexer" /> to create.</param>
        <param name="options">Optional <see cref="T:Azure.Search.Documents.SearchRequestOptions" /> to customize the operation's behavior.</param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Creates a new indexer.
            </summary>
        <returns>
            The <see cref="T:Azure.Response`1" /> from the server containing the <see cref="T:Azure.Search.Documents.Models.SearchIndexer" /> created.
            This may differ slightly from what was passed into the service.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="indexer" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdateDataSource">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Search.Documents.Models.SearchIndexerDataSource&gt; CreateOrUpdateDataSource (Azure.Search.Documents.Models.SearchIndexerDataSource dataSource, Azure.Search.Documents.SearchConditionalOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Search.Documents.Models.SearchIndexerDataSource&gt; CreateOrUpdateDataSource(class Azure.Search.Documents.Models.SearchIndexerDataSource dataSource, class Azure.Search.Documents.SearchConditionalOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.SearchServiceClient.CreateOrUpdateDataSource(Azure.Search.Documents.Models.SearchIndexerDataSource,Azure.Search.Documents.SearchConditionalOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdateDataSource (dataSource As SearchIndexerDataSource, Optional options As SearchConditionalOptions = null, Optional cancellationToken As CancellationToken = null) As Response(Of SearchIndexerDataSource)" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdateDataSource : Azure.Search.Documents.Models.SearchIndexerDataSource * Azure.Search.Documents.SearchConditionalOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Search.Documents.Models.SearchIndexerDataSource&gt;&#xA;override this.CreateOrUpdateDataSource : Azure.Search.Documents.Models.SearchIndexerDataSource * Azure.Search.Documents.SearchConditionalOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Search.Documents.Models.SearchIndexerDataSource&gt;" Usage="searchServiceClient.CreateOrUpdateDataSource (dataSource, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Search.Documents.Models.SearchIndexerDataSource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="Azure.Search.Documents.Models.SearchIndexerDataSource" />
        <Parameter Name="options" Type="Azure.Search.Documents.SearchConditionalOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="dataSource">Required. The <see cref="T:Azure.Search.Documents.Models.SearchIndexerDataSource" /> to create or update.</param>
        <param name="options">Optional <see cref="T:Azure.Search.Documents.SearchConditionalOptions" /> to customize the operation's behavior.</param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Creates a new data source or updates an existing data source.
            </summary>
        <returns>
            The <see cref="T:Azure.Response`1" /> from the server containing the <see cref="T:Azure.Search.Documents.Models.SearchIndexerDataSource" /> that was created.
            This may differ slightly from what was passed in since the service may return back properties set to their default values.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="dataSource" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdateDataSourceAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Models.SearchIndexerDataSource&gt;&gt; CreateOrUpdateDataSourceAsync (Azure.Search.Documents.Models.SearchIndexerDataSource dataSource, Azure.Search.Documents.SearchConditionalOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Search.Documents.Models.SearchIndexerDataSource&gt;&gt; CreateOrUpdateDataSourceAsync(class Azure.Search.Documents.Models.SearchIndexerDataSource dataSource, class Azure.Search.Documents.SearchConditionalOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.SearchServiceClient.CreateOrUpdateDataSourceAsync(Azure.Search.Documents.Models.SearchIndexerDataSource,Azure.Search.Documents.SearchConditionalOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdateDataSourceAsync (dataSource As SearchIndexerDataSource, Optional options As SearchConditionalOptions = null, Optional cancellationToken As CancellationToken = null) As Task(Of Response(Of SearchIndexerDataSource))" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdateDataSourceAsync : Azure.Search.Documents.Models.SearchIndexerDataSource * Azure.Search.Documents.SearchConditionalOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Models.SearchIndexerDataSource&gt;&gt;&#xA;override this.CreateOrUpdateDataSourceAsync : Azure.Search.Documents.Models.SearchIndexerDataSource * Azure.Search.Documents.SearchConditionalOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Models.SearchIndexerDataSource&gt;&gt;" Usage="searchServiceClient.CreateOrUpdateDataSourceAsync (dataSource, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Models.SearchIndexerDataSource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="Azure.Search.Documents.Models.SearchIndexerDataSource" />
        <Parameter Name="options" Type="Azure.Search.Documents.SearchConditionalOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="dataSource">Required. The <see cref="T:Azure.Search.Documents.Models.SearchIndexerDataSource" /> to create or update.</param>
        <param name="options">Optional <see cref="T:Azure.Search.Documents.SearchConditionalOptions" /> to customize the operation's behavior.</param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Creates a new data source or updates an existing data source.
            </summary>
        <returns>
            The <see cref="T:Azure.Response`1" /> from the server containing the <see cref="T:Azure.Search.Documents.Models.SearchIndexerDataSource" /> that was created.
            This may differ slightly from what was passed in since the service may return back properties set to their default values.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="dataSource" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdateIndex">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Search.Documents.Models.SearchIndex&gt; CreateOrUpdateIndex (Azure.Search.Documents.Models.SearchIndex index, bool allowIndexDowntime = false, Azure.Search.Documents.SearchConditionalOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Search.Documents.Models.SearchIndex&gt; CreateOrUpdateIndex(class Azure.Search.Documents.Models.SearchIndex index, bool allowIndexDowntime, class Azure.Search.Documents.SearchConditionalOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.SearchServiceClient.CreateOrUpdateIndex(Azure.Search.Documents.Models.SearchIndex,System.Boolean,Azure.Search.Documents.SearchConditionalOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdateIndex (index As SearchIndex, Optional allowIndexDowntime As Boolean = false, Optional options As SearchConditionalOptions = null, Optional cancellationToken As CancellationToken = null) As Response(Of SearchIndex)" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdateIndex : Azure.Search.Documents.Models.SearchIndex * bool * Azure.Search.Documents.SearchConditionalOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Search.Documents.Models.SearchIndex&gt;&#xA;override this.CreateOrUpdateIndex : Azure.Search.Documents.Models.SearchIndex * bool * Azure.Search.Documents.SearchConditionalOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Search.Documents.Models.SearchIndex&gt;" Usage="searchServiceClient.CreateOrUpdateIndex (index, allowIndexDowntime, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Search.Documents.Models.SearchIndex&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="Azure.Search.Documents.Models.SearchIndex" />
        <Parameter Name="allowIndexDowntime" Type="System.Boolean" />
        <Parameter Name="options" Type="Azure.Search.Documents.SearchConditionalOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="index">Required. The <see cref="T:Azure.Search.Documents.Models.SearchIndex" /> to create or update.</param>
        <param name="allowIndexDowntime">
            Optional value indicating whether to allow analyzers, tokenizers, token filters, or character filters to be added to the index by temporarily taking the index
            offline for a few seconds. The default is false. This temporarily causes indexing and queries to fail.
            Performance and write availability of the index can be impaired for several minutes after the index is updated, or longer for very large indexes.
            </param>
        <param name="options">Optional <see cref="T:Azure.Search.Documents.SearchConditionalOptions" /> to customize the operation's behavior.</param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Creates a new search index or updates an existing index.
            </summary>
        <returns>
            The <see cref="T:Azure.Response`1" /> from the server containing the <see cref="T:Azure.Search.Documents.Models.SearchIndex" /> that was created or updated.
            This may differ slightly from what was passed in since the service may return back fields set to their default values depending on the field type and other properties.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="index" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdateIndexAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Models.SearchIndex&gt;&gt; CreateOrUpdateIndexAsync (Azure.Search.Documents.Models.SearchIndex index, bool allowIndexDowntime = false, Azure.Search.Documents.SearchConditionalOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Search.Documents.Models.SearchIndex&gt;&gt; CreateOrUpdateIndexAsync(class Azure.Search.Documents.Models.SearchIndex index, bool allowIndexDowntime, class Azure.Search.Documents.SearchConditionalOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.SearchServiceClient.CreateOrUpdateIndexAsync(Azure.Search.Documents.Models.SearchIndex,System.Boolean,Azure.Search.Documents.SearchConditionalOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdateIndexAsync (index As SearchIndex, Optional allowIndexDowntime As Boolean = false, Optional options As SearchConditionalOptions = null, Optional cancellationToken As CancellationToken = null) As Task(Of Response(Of SearchIndex))" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdateIndexAsync : Azure.Search.Documents.Models.SearchIndex * bool * Azure.Search.Documents.SearchConditionalOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Models.SearchIndex&gt;&gt;&#xA;override this.CreateOrUpdateIndexAsync : Azure.Search.Documents.Models.SearchIndex * bool * Azure.Search.Documents.SearchConditionalOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Models.SearchIndex&gt;&gt;" Usage="searchServiceClient.CreateOrUpdateIndexAsync (index, allowIndexDowntime, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Models.SearchIndex&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="Azure.Search.Documents.Models.SearchIndex" />
        <Parameter Name="allowIndexDowntime" Type="System.Boolean" />
        <Parameter Name="options" Type="Azure.Search.Documents.SearchConditionalOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="index">Required. The <see cref="T:Azure.Search.Documents.Models.SearchIndex" /> to create or update.</param>
        <param name="allowIndexDowntime">
            Optional value indicating whether to allow analyzers, tokenizers, token filters, or character filters to be added to the index by temporarily taking the index
            offline for a few seconds. The default is false. This temporarily causes indexing and queries to fail.
            Performance and write availability of the index can be impaired for several minutes after the index is updated, or longer for very large indexes.
            </param>
        <param name="options">Optional <see cref="T:Azure.Search.Documents.SearchConditionalOptions" /> to customize the operation's behavior.</param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Creates a new search index or updates an existing index.
            </summary>
        <returns>
            The <see cref="T:Azure.Response`1" /> from the server containing the <see cref="T:Azure.Search.Documents.Models.SearchIndex" /> that was created or updated.
            This may differ slightly from what was passed in since the service may return back fields set to their default values depending on the field type and other properties.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="index" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdateIndexer">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Search.Documents.Models.SearchIndexer&gt; CreateOrUpdateIndexer (Azure.Search.Documents.Models.SearchIndexer indexer, Azure.Search.Documents.SearchConditionalOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Search.Documents.Models.SearchIndexer&gt; CreateOrUpdateIndexer(class Azure.Search.Documents.Models.SearchIndexer indexer, class Azure.Search.Documents.SearchConditionalOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.SearchServiceClient.CreateOrUpdateIndexer(Azure.Search.Documents.Models.SearchIndexer,Azure.Search.Documents.SearchConditionalOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdateIndexer (indexer As SearchIndexer, Optional options As SearchConditionalOptions = null, Optional cancellationToken As CancellationToken = null) As Response(Of SearchIndexer)" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdateIndexer : Azure.Search.Documents.Models.SearchIndexer * Azure.Search.Documents.SearchConditionalOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Search.Documents.Models.SearchIndexer&gt;&#xA;override this.CreateOrUpdateIndexer : Azure.Search.Documents.Models.SearchIndexer * Azure.Search.Documents.SearchConditionalOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Search.Documents.Models.SearchIndexer&gt;" Usage="searchServiceClient.CreateOrUpdateIndexer (indexer, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Search.Documents.Models.SearchIndexer&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexer" Type="Azure.Search.Documents.Models.SearchIndexer" />
        <Parameter Name="options" Type="Azure.Search.Documents.SearchConditionalOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexer">Required. The <see cref="T:Azure.Search.Documents.Models.SearchIndexer" /> to create or update.</param>
        <param name="options">Optional <see cref="T:Azure.Search.Documents.SearchConditionalOptions" /> to customize the operation's behavior.</param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Creates a new indexer or updates an existing indexer.
            </summary>
        <returns>
            The <see cref="T:Azure.Response`1" /> from the server containing the <see cref="T:Azure.Search.Documents.Models.SearchIndexer" /> created.
            This may differ slightly from what was passed into the service.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="indexer" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdateIndexerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Models.SearchIndexer&gt;&gt; CreateOrUpdateIndexerAsync (Azure.Search.Documents.Models.SearchIndexer indexer, Azure.Search.Documents.SearchConditionalOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Search.Documents.Models.SearchIndexer&gt;&gt; CreateOrUpdateIndexerAsync(class Azure.Search.Documents.Models.SearchIndexer indexer, class Azure.Search.Documents.SearchConditionalOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.SearchServiceClient.CreateOrUpdateIndexerAsync(Azure.Search.Documents.Models.SearchIndexer,Azure.Search.Documents.SearchConditionalOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdateIndexerAsync (indexer As SearchIndexer, Optional options As SearchConditionalOptions = null, Optional cancellationToken As CancellationToken = null) As Task(Of Response(Of SearchIndexer))" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdateIndexerAsync : Azure.Search.Documents.Models.SearchIndexer * Azure.Search.Documents.SearchConditionalOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Models.SearchIndexer&gt;&gt;&#xA;override this.CreateOrUpdateIndexerAsync : Azure.Search.Documents.Models.SearchIndexer * Azure.Search.Documents.SearchConditionalOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Models.SearchIndexer&gt;&gt;" Usage="searchServiceClient.CreateOrUpdateIndexerAsync (indexer, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Models.SearchIndexer&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexer" Type="Azure.Search.Documents.Models.SearchIndexer" />
        <Parameter Name="options" Type="Azure.Search.Documents.SearchConditionalOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexer">Required. The <see cref="T:Azure.Search.Documents.Models.SearchIndexer" /> to create or update.</param>
        <param name="options">Optional <see cref="T:Azure.Search.Documents.SearchConditionalOptions" /> to customize the operation's behavior.</param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Creates a new indexer or updates an existing indexer.
            </summary>
        <returns>
            The <see cref="T:Azure.Response`1" /> from the server containing the <see cref="T:Azure.Search.Documents.Models.SearchIndexer" /> created.
            This may differ slightly from what was passed into the service.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="indexer" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdateSkillset">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Search.Documents.Models.SearchIndexerSkillset&gt; CreateOrUpdateSkillset (Azure.Search.Documents.Models.SearchIndexerSkillset skillset, Azure.Search.Documents.SearchConditionalOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Search.Documents.Models.SearchIndexerSkillset&gt; CreateOrUpdateSkillset(class Azure.Search.Documents.Models.SearchIndexerSkillset skillset, class Azure.Search.Documents.SearchConditionalOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.SearchServiceClient.CreateOrUpdateSkillset(Azure.Search.Documents.Models.SearchIndexerSkillset,Azure.Search.Documents.SearchConditionalOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdateSkillset (skillset As SearchIndexerSkillset, Optional options As SearchConditionalOptions = null, Optional cancellationToken As CancellationToken = null) As Response(Of SearchIndexerSkillset)" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdateSkillset : Azure.Search.Documents.Models.SearchIndexerSkillset * Azure.Search.Documents.SearchConditionalOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Search.Documents.Models.SearchIndexerSkillset&gt;&#xA;override this.CreateOrUpdateSkillset : Azure.Search.Documents.Models.SearchIndexerSkillset * Azure.Search.Documents.SearchConditionalOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Search.Documents.Models.SearchIndexerSkillset&gt;" Usage="searchServiceClient.CreateOrUpdateSkillset (skillset, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Search.Documents.Models.SearchIndexerSkillset&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="skillset" Type="Azure.Search.Documents.Models.SearchIndexerSkillset" />
        <Parameter Name="options" Type="Azure.Search.Documents.SearchConditionalOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="skillset">Required. The <see cref="T:Azure.Search.Documents.Models.SearchIndexerSkillset" /> to create or update.</param>
        <param name="options">Optional <see cref="T:Azure.Search.Documents.SearchConditionalOptions" /> to customize the operation's behavior.</param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Creates a new skillset or updates an existing skillset.
            </summary>
        <returns>
            The <see cref="T:Azure.Response`1" /> from the server containing the <see cref="T:Azure.Search.Documents.Models.SearchIndexerSkillset" /> that was created.
            This may differ slightly from what was passed in since the service may return back properties set to their default values.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="skillset" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdateSkillsetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Models.SearchIndexerSkillset&gt;&gt; CreateOrUpdateSkillsetAsync (Azure.Search.Documents.Models.SearchIndexerSkillset skillset, Azure.Search.Documents.SearchConditionalOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Search.Documents.Models.SearchIndexerSkillset&gt;&gt; CreateOrUpdateSkillsetAsync(class Azure.Search.Documents.Models.SearchIndexerSkillset skillset, class Azure.Search.Documents.SearchConditionalOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.SearchServiceClient.CreateOrUpdateSkillsetAsync(Azure.Search.Documents.Models.SearchIndexerSkillset,Azure.Search.Documents.SearchConditionalOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdateSkillsetAsync (skillset As SearchIndexerSkillset, Optional options As SearchConditionalOptions = null, Optional cancellationToken As CancellationToken = null) As Task(Of Response(Of SearchIndexerSkillset))" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdateSkillsetAsync : Azure.Search.Documents.Models.SearchIndexerSkillset * Azure.Search.Documents.SearchConditionalOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Models.SearchIndexerSkillset&gt;&gt;&#xA;override this.CreateOrUpdateSkillsetAsync : Azure.Search.Documents.Models.SearchIndexerSkillset * Azure.Search.Documents.SearchConditionalOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Models.SearchIndexerSkillset&gt;&gt;" Usage="searchServiceClient.CreateOrUpdateSkillsetAsync (skillset, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Models.SearchIndexerSkillset&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="skillset" Type="Azure.Search.Documents.Models.SearchIndexerSkillset" />
        <Parameter Name="options" Type="Azure.Search.Documents.SearchConditionalOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="skillset">Required. The <see cref="T:Azure.Search.Documents.Models.SearchIndexerSkillset" /> to create or update.</param>
        <param name="options">Optional <see cref="T:Azure.Search.Documents.SearchConditionalOptions" /> to customize the operation's behavior.</param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Creates a new skillset or updates an existing skillset.
            </summary>
        <returns>
            The <see cref="T:Azure.Response`1" /> from the server containing the <see cref="T:Azure.Search.Documents.Models.SearchIndexerSkillset" /> that was created.
            This may differ slightly from what was passed in since the service may return back properties set to their default values.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="skillset" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdateSynonymMap">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Search.Documents.Models.SynonymMap&gt; CreateOrUpdateSynonymMap (Azure.Search.Documents.Models.SynonymMap synonymMap, bool onlyIfUnchanged = false, Azure.Search.Documents.SearchRequestOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Search.Documents.Models.SynonymMap&gt; CreateOrUpdateSynonymMap(class Azure.Search.Documents.Models.SynonymMap synonymMap, bool onlyIfUnchanged, class Azure.Search.Documents.SearchRequestOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.SearchServiceClient.CreateOrUpdateSynonymMap(Azure.Search.Documents.Models.SynonymMap,System.Boolean,Azure.Search.Documents.SearchRequestOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdateSynonymMap (synonymMap As SynonymMap, Optional onlyIfUnchanged As Boolean = false, Optional options As SearchRequestOptions = null, Optional cancellationToken As CancellationToken = null) As Response(Of SynonymMap)" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdateSynonymMap : Azure.Search.Documents.Models.SynonymMap * bool * Azure.Search.Documents.SearchRequestOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Search.Documents.Models.SynonymMap&gt;&#xA;override this.CreateOrUpdateSynonymMap : Azure.Search.Documents.Models.SynonymMap * bool * Azure.Search.Documents.SearchRequestOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Search.Documents.Models.SynonymMap&gt;" Usage="searchServiceClient.CreateOrUpdateSynonymMap (synonymMap, onlyIfUnchanged, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Search.Documents.Models.SynonymMap&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="synonymMap" Type="Azure.Search.Documents.Models.SynonymMap" />
        <Parameter Name="onlyIfUnchanged" Type="System.Boolean" />
        <Parameter Name="options" Type="Azure.Search.Documents.SearchRequestOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="synonymMap">Required. The <see cref="T:Azure.Search.Documents.Models.SynonymMap" /> to create or update.</param>
        <param name="onlyIfUnchanged">
            True to throw a <see cref="T:Azure.RequestFailedException" /> if the <see cref="P:Azure.Search.Documents.Models.SynonymMap.ETag" /> does not match the current service version;
            otherwise, the current service version will be overwritten.
            </param>
        <param name="options">Optional <see cref="T:Azure.Search.Documents.SearchRequestOptions" /> to customize the operation's behavior.</param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Creates a new synonym map or updates an existing synonym map.
            </summary>
        <returns>
            The <see cref="T:Azure.Response`1" /> from the server containing the <see cref="T:Azure.Search.Documents.Models.SynonymMap" /> that was created.
            This may differ slightly from what was passed in since the service may return back properties set to their default values.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="synonymMap" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdateSynonymMapAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Models.SynonymMap&gt;&gt; CreateOrUpdateSynonymMapAsync (Azure.Search.Documents.Models.SynonymMap synonymMap, bool onlyIfUnchanged = false, Azure.Search.Documents.SearchConditionalOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Search.Documents.Models.SynonymMap&gt;&gt; CreateOrUpdateSynonymMapAsync(class Azure.Search.Documents.Models.SynonymMap synonymMap, bool onlyIfUnchanged, class Azure.Search.Documents.SearchConditionalOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.SearchServiceClient.CreateOrUpdateSynonymMapAsync(Azure.Search.Documents.Models.SynonymMap,System.Boolean,Azure.Search.Documents.SearchConditionalOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdateSynonymMapAsync (synonymMap As SynonymMap, Optional onlyIfUnchanged As Boolean = false, Optional options As SearchConditionalOptions = null, Optional cancellationToken As CancellationToken = null) As Task(Of Response(Of SynonymMap))" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdateSynonymMapAsync : Azure.Search.Documents.Models.SynonymMap * bool * Azure.Search.Documents.SearchConditionalOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Models.SynonymMap&gt;&gt;&#xA;override this.CreateOrUpdateSynonymMapAsync : Azure.Search.Documents.Models.SynonymMap * bool * Azure.Search.Documents.SearchConditionalOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Models.SynonymMap&gt;&gt;" Usage="searchServiceClient.CreateOrUpdateSynonymMapAsync (synonymMap, onlyIfUnchanged, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Models.SynonymMap&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="synonymMap" Type="Azure.Search.Documents.Models.SynonymMap" />
        <Parameter Name="onlyIfUnchanged" Type="System.Boolean" />
        <Parameter Name="options" Type="Azure.Search.Documents.SearchConditionalOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="synonymMap">Required. The <see cref="T:Azure.Search.Documents.Models.SynonymMap" /> to create or update.</param>
        <param name="onlyIfUnchanged">
            True to throw a <see cref="T:Azure.RequestFailedException" /> if the <see cref="P:Azure.Search.Documents.Models.SynonymMap.ETag" /> does not match the current service version;
            otherwise, the current service version will be overwritten.
            </param>
        <param name="options">Optional <see cref="T:Azure.Search.Documents.SearchConditionalOptions" /> to customize the operation's behavior.</param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Creates a new synonym map or updates an existing synonym map.
            </summary>
        <returns>
            The <see cref="T:Azure.Response`1" /> from the server containing the <see cref="T:Azure.Search.Documents.Models.SynonymMap" /> that was created.
            This may differ slightly from what was passed in since the service may return back properties set to their default values.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="synonymMap" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateSkillset">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Search.Documents.Models.SearchIndexerSkillset&gt; CreateSkillset (Azure.Search.Documents.Models.SearchIndexerSkillset skillset, Azure.Search.Documents.SearchRequestOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Search.Documents.Models.SearchIndexerSkillset&gt; CreateSkillset(class Azure.Search.Documents.Models.SearchIndexerSkillset skillset, class Azure.Search.Documents.SearchRequestOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.SearchServiceClient.CreateSkillset(Azure.Search.Documents.Models.SearchIndexerSkillset,Azure.Search.Documents.SearchRequestOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateSkillset (skillset As SearchIndexerSkillset, Optional options As SearchRequestOptions = null, Optional cancellationToken As CancellationToken = null) As Response(Of SearchIndexerSkillset)" />
      <MemberSignature Language="F#" Value="abstract member CreateSkillset : Azure.Search.Documents.Models.SearchIndexerSkillset * Azure.Search.Documents.SearchRequestOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Search.Documents.Models.SearchIndexerSkillset&gt;&#xA;override this.CreateSkillset : Azure.Search.Documents.Models.SearchIndexerSkillset * Azure.Search.Documents.SearchRequestOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Search.Documents.Models.SearchIndexerSkillset&gt;" Usage="searchServiceClient.CreateSkillset (skillset, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Search.Documents.Models.SearchIndexerSkillset&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="skillset" Type="Azure.Search.Documents.Models.SearchIndexerSkillset" />
        <Parameter Name="options" Type="Azure.Search.Documents.SearchRequestOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="skillset">Required. The <see cref="T:Azure.Search.Documents.Models.SearchIndexerSkillset" /> to create.</param>
        <param name="options">Optional <see cref="T:Azure.Search.Documents.SearchRequestOptions" /> to customize the operation's behavior.</param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Creates a new skillset.
            </summary>
        <returns>
            The <see cref="T:Azure.Response`1" /> from the server containing the <see cref="T:Azure.Search.Documents.Models.SearchIndexerSkillset" /> that was created.
            This may differ slightly from what was passed in since the service may return back properties set to their default values.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="skillset" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateSkillsetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Models.SearchIndexerSkillset&gt;&gt; CreateSkillsetAsync (Azure.Search.Documents.Models.SearchIndexerSkillset skillset, Azure.Search.Documents.SearchRequestOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Search.Documents.Models.SearchIndexerSkillset&gt;&gt; CreateSkillsetAsync(class Azure.Search.Documents.Models.SearchIndexerSkillset skillset, class Azure.Search.Documents.SearchRequestOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.SearchServiceClient.CreateSkillsetAsync(Azure.Search.Documents.Models.SearchIndexerSkillset,Azure.Search.Documents.SearchRequestOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateSkillsetAsync (skillset As SearchIndexerSkillset, Optional options As SearchRequestOptions = null, Optional cancellationToken As CancellationToken = null) As Task(Of Response(Of SearchIndexerSkillset))" />
      <MemberSignature Language="F#" Value="abstract member CreateSkillsetAsync : Azure.Search.Documents.Models.SearchIndexerSkillset * Azure.Search.Documents.SearchRequestOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Models.SearchIndexerSkillset&gt;&gt;&#xA;override this.CreateSkillsetAsync : Azure.Search.Documents.Models.SearchIndexerSkillset * Azure.Search.Documents.SearchRequestOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Models.SearchIndexerSkillset&gt;&gt;" Usage="searchServiceClient.CreateSkillsetAsync (skillset, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Models.SearchIndexerSkillset&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="skillset" Type="Azure.Search.Documents.Models.SearchIndexerSkillset" />
        <Parameter Name="options" Type="Azure.Search.Documents.SearchRequestOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="skillset">Required. The <see cref="T:Azure.Search.Documents.Models.SearchIndexerSkillset" /> to create.</param>
        <param name="options">Optional <see cref="T:Azure.Search.Documents.SearchRequestOptions" /> to customize the operation's behavior.</param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Creates a new skillset.
            </summary>
        <returns>
            The <see cref="T:Azure.Response`1" /> from the server containing the <see cref="T:Azure.Search.Documents.Models.SearchIndexerSkillset" /> that was created.
            This may differ slightly from what was passed in since the service may return back properties set to their default values.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="skillset" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateSynonymMap">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Search.Documents.Models.SynonymMap&gt; CreateSynonymMap (Azure.Search.Documents.Models.SynonymMap synonymMap, Azure.Search.Documents.SearchRequestOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Search.Documents.Models.SynonymMap&gt; CreateSynonymMap(class Azure.Search.Documents.Models.SynonymMap synonymMap, class Azure.Search.Documents.SearchRequestOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.SearchServiceClient.CreateSynonymMap(Azure.Search.Documents.Models.SynonymMap,Azure.Search.Documents.SearchRequestOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateSynonymMap (synonymMap As SynonymMap, Optional options As SearchRequestOptions = null, Optional cancellationToken As CancellationToken = null) As Response(Of SynonymMap)" />
      <MemberSignature Language="F#" Value="abstract member CreateSynonymMap : Azure.Search.Documents.Models.SynonymMap * Azure.Search.Documents.SearchRequestOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Search.Documents.Models.SynonymMap&gt;&#xA;override this.CreateSynonymMap : Azure.Search.Documents.Models.SynonymMap * Azure.Search.Documents.SearchRequestOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Search.Documents.Models.SynonymMap&gt;" Usage="searchServiceClient.CreateSynonymMap (synonymMap, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Search.Documents.Models.SynonymMap&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="synonymMap" Type="Azure.Search.Documents.Models.SynonymMap" />
        <Parameter Name="options" Type="Azure.Search.Documents.SearchRequestOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="synonymMap">Required. The <see cref="T:Azure.Search.Documents.Models.SynonymMap" /> to create.</param>
        <param name="options">Optional <see cref="T:Azure.Search.Documents.SearchRequestOptions" /> to customize the operation's behavior.</param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Creates a new synonym map.
            </summary>
        <returns>
            The <see cref="T:Azure.Response`1" /> from the server containing the <see cref="T:Azure.Search.Documents.Models.SynonymMap" /> that was created.
            This may differ slightly from what was passed in since the service may return back properties set to their default values.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="synonymMap" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateSynonymMapAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Models.SynonymMap&gt;&gt; CreateSynonymMapAsync (Azure.Search.Documents.Models.SynonymMap synonymMap, Azure.Search.Documents.SearchRequestOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Search.Documents.Models.SynonymMap&gt;&gt; CreateSynonymMapAsync(class Azure.Search.Documents.Models.SynonymMap synonymMap, class Azure.Search.Documents.SearchRequestOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.SearchServiceClient.CreateSynonymMapAsync(Azure.Search.Documents.Models.SynonymMap,Azure.Search.Documents.SearchRequestOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateSynonymMapAsync (synonymMap As SynonymMap, Optional options As SearchRequestOptions = null, Optional cancellationToken As CancellationToken = null) As Task(Of Response(Of SynonymMap))" />
      <MemberSignature Language="F#" Value="abstract member CreateSynonymMapAsync : Azure.Search.Documents.Models.SynonymMap * Azure.Search.Documents.SearchRequestOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Models.SynonymMap&gt;&gt;&#xA;override this.CreateSynonymMapAsync : Azure.Search.Documents.Models.SynonymMap * Azure.Search.Documents.SearchRequestOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Models.SynonymMap&gt;&gt;" Usage="searchServiceClient.CreateSynonymMapAsync (synonymMap, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Models.SynonymMap&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="synonymMap" Type="Azure.Search.Documents.Models.SynonymMap" />
        <Parameter Name="options" Type="Azure.Search.Documents.SearchRequestOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="synonymMap">Required. The <see cref="T:Azure.Search.Documents.Models.SynonymMap" /> to create.</param>
        <param name="options">Optional <see cref="T:Azure.Search.Documents.SearchRequestOptions" /> to customize the operation's behavior.</param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Creates a new synonym map.
            </summary>
        <returns>
            The <see cref="T:Azure.Response`1" /> from the server containing the <see cref="T:Azure.Search.Documents.Models.SynonymMap" /> that was created.
            This may differ slightly from what was passed in since the service may return back properties set to their default values.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="synonymMap" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteDataSource">
      <MemberSignature Language="C#" Value="public virtual Azure.Response DeleteDataSource (string dataSourceName, Azure.Search.Documents.SearchConditionalOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response DeleteDataSource(string dataSourceName, class Azure.Search.Documents.SearchConditionalOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.SearchServiceClient.DeleteDataSource(System.String,Azure.Search.Documents.SearchConditionalOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteDataSource (dataSourceName As String, Optional options As SearchConditionalOptions = null, Optional cancellationToken As CancellationToken = null) As Response" />
      <MemberSignature Language="F#" Value="abstract member DeleteDataSource : string * Azure.Search.Documents.SearchConditionalOptions * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.DeleteDataSource : string * Azure.Search.Documents.SearchConditionalOptions * System.Threading.CancellationToken -&gt; Azure.Response" Usage="searchServiceClient.DeleteDataSource (dataSourceName, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSourceName" Type="System.String" />
        <Parameter Name="options" Type="Azure.Search.Documents.SearchConditionalOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="dataSourceName">The name of the data source to delete.</param>
        <param name="options">Optional <see cref="T:Azure.Search.Documents.SearchConditionalOptions" /> to customize the operation's behavior.</param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Deletes a data source.
            </summary>
        <returns>The <see cref="T:Azure.Response" /> from the server.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="dataSourceName" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteDataSourceAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DeleteDataSourceAsync (string dataSourceName, Azure.Search.Documents.SearchConditionalOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeleteDataSourceAsync(string dataSourceName, class Azure.Search.Documents.SearchConditionalOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.SearchServiceClient.DeleteDataSourceAsync(System.String,Azure.Search.Documents.SearchConditionalOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteDataSourceAsync (dataSourceName As String, Optional options As SearchConditionalOptions = null, Optional cancellationToken As CancellationToken = null) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DeleteDataSourceAsync : string * Azure.Search.Documents.SearchConditionalOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DeleteDataSourceAsync : string * Azure.Search.Documents.SearchConditionalOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="searchServiceClient.DeleteDataSourceAsync (dataSourceName, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSourceName" Type="System.String" />
        <Parameter Name="options" Type="Azure.Search.Documents.SearchConditionalOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="dataSourceName">The name of the data source to delete.</param>
        <param name="options">Optional <see cref="T:Azure.Search.Documents.SearchConditionalOptions" /> to customize the operation's behavior.</param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Deletes a data source.
            </summary>
        <returns>The <see cref="T:Azure.Response" /> from the server.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="dataSourceName" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteIndex">
      <MemberSignature Language="C#" Value="public virtual Azure.Response DeleteIndex (string indexName, Azure.Search.Documents.SearchConditionalOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response DeleteIndex(string indexName, class Azure.Search.Documents.SearchConditionalOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.SearchServiceClient.DeleteIndex(System.String,Azure.Search.Documents.SearchConditionalOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteIndex (indexName As String, Optional options As SearchConditionalOptions = null, Optional cancellationToken As CancellationToken = null) As Response" />
      <MemberSignature Language="F#" Value="abstract member DeleteIndex : string * Azure.Search.Documents.SearchConditionalOptions * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.DeleteIndex : string * Azure.Search.Documents.SearchConditionalOptions * System.Threading.CancellationToken -&gt; Azure.Response" Usage="searchServiceClient.DeleteIndex (indexName, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexName" Type="System.String" />
        <Parameter Name="options" Type="Azure.Search.Documents.SearchConditionalOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexName">Required. The name of the index to delete.</param>
        <param name="options">Optional <see cref="T:Azure.Search.Documents.SearchConditionalOptions" /> to customize the operation's behavior.</param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Deletes a search index and all the documents it contains.
            </summary>
        <returns>The <see cref="T:Azure.Response" /> from the server.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="indexName" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteIndexAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DeleteIndexAsync (string indexName, Azure.Search.Documents.SearchConditionalOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeleteIndexAsync(string indexName, class Azure.Search.Documents.SearchConditionalOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.SearchServiceClient.DeleteIndexAsync(System.String,Azure.Search.Documents.SearchConditionalOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteIndexAsync (indexName As String, Optional options As SearchConditionalOptions = null, Optional cancellationToken As CancellationToken = null) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DeleteIndexAsync : string * Azure.Search.Documents.SearchConditionalOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DeleteIndexAsync : string * Azure.Search.Documents.SearchConditionalOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="searchServiceClient.DeleteIndexAsync (indexName, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexName" Type="System.String" />
        <Parameter Name="options" Type="Azure.Search.Documents.SearchConditionalOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexName">Required. The name of the index to delete.</param>
        <param name="options">Optional <see cref="T:Azure.Search.Documents.SearchConditionalOptions" /> to customize the operation's behavior.</param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Deletes a search index and all the documents it contains.
            </summary>
        <returns>The <see cref="T:Azure.Response" /> from the server.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="indexName" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteIndexer">
      <MemberSignature Language="C#" Value="public virtual Azure.Response DeleteIndexer (string indexerName, Azure.Search.Documents.SearchConditionalOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response DeleteIndexer(string indexerName, class Azure.Search.Documents.SearchConditionalOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.SearchServiceClient.DeleteIndexer(System.String,Azure.Search.Documents.SearchConditionalOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteIndexer (indexerName As String, Optional options As SearchConditionalOptions = null, Optional cancellationToken As CancellationToken = null) As Response" />
      <MemberSignature Language="F#" Value="abstract member DeleteIndexer : string * Azure.Search.Documents.SearchConditionalOptions * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.DeleteIndexer : string * Azure.Search.Documents.SearchConditionalOptions * System.Threading.CancellationToken -&gt; Azure.Response" Usage="searchServiceClient.DeleteIndexer (indexerName, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexerName" Type="System.String" />
        <Parameter Name="options" Type="Azure.Search.Documents.SearchConditionalOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexerName">The name of the indexer to delete.</param>
        <param name="options">Optional <see cref="T:Azure.Search.Documents.SearchConditionalOptions" /> to customize the operation's behavior.</param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Deletes an indexer.
            </summary>
        <returns>The <see cref="T:Azure.Response" /> from the server.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="indexerName" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteIndexerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DeleteIndexerAsync (string indexerName, Azure.Search.Documents.SearchConditionalOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeleteIndexerAsync(string indexerName, class Azure.Search.Documents.SearchConditionalOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.SearchServiceClient.DeleteIndexerAsync(System.String,Azure.Search.Documents.SearchConditionalOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteIndexerAsync (indexerName As String, Optional options As SearchConditionalOptions = null, Optional cancellationToken As CancellationToken = null) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DeleteIndexerAsync : string * Azure.Search.Documents.SearchConditionalOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DeleteIndexerAsync : string * Azure.Search.Documents.SearchConditionalOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="searchServiceClient.DeleteIndexerAsync (indexerName, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexerName" Type="System.String" />
        <Parameter Name="options" Type="Azure.Search.Documents.SearchConditionalOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexerName">The name of the indexer to delete.</param>
        <param name="options">Optional <see cref="T:Azure.Search.Documents.SearchConditionalOptions" /> to customize the operation's behavior.</param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Deletes an indexer.
            </summary>
        <returns>The <see cref="T:Azure.Response" /> from the server.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="indexerName" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteSkillset">
      <MemberSignature Language="C#" Value="public virtual Azure.Response DeleteSkillset (string skillsetName, Azure.Search.Documents.SearchConditionalOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response DeleteSkillset(string skillsetName, class Azure.Search.Documents.SearchConditionalOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.SearchServiceClient.DeleteSkillset(System.String,Azure.Search.Documents.SearchConditionalOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteSkillset (skillsetName As String, Optional options As SearchConditionalOptions = null, Optional cancellationToken As CancellationToken = null) As Response" />
      <MemberSignature Language="F#" Value="abstract member DeleteSkillset : string * Azure.Search.Documents.SearchConditionalOptions * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.DeleteSkillset : string * Azure.Search.Documents.SearchConditionalOptions * System.Threading.CancellationToken -&gt; Azure.Response" Usage="searchServiceClient.DeleteSkillset (skillsetName, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="skillsetName" Type="System.String" />
        <Parameter Name="options" Type="Azure.Search.Documents.SearchConditionalOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="skillsetName">The name of the skillset to delete.</param>
        <param name="options">Optional <see cref="T:Azure.Search.Documents.SearchConditionalOptions" /> to customize the operation's behavior.</param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Deletes a skillset.
            </summary>
        <returns>The <see cref="T:Azure.Response" /> from the server.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="skillsetName" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteSkillsetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DeleteSkillsetAsync (string skillsetName, Azure.Search.Documents.SearchConditionalOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeleteSkillsetAsync(string skillsetName, class Azure.Search.Documents.SearchConditionalOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.SearchServiceClient.DeleteSkillsetAsync(System.String,Azure.Search.Documents.SearchConditionalOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteSkillsetAsync (skillsetName As String, Optional options As SearchConditionalOptions = null, Optional cancellationToken As CancellationToken = null) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DeleteSkillsetAsync : string * Azure.Search.Documents.SearchConditionalOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DeleteSkillsetAsync : string * Azure.Search.Documents.SearchConditionalOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="searchServiceClient.DeleteSkillsetAsync (skillsetName, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="skillsetName" Type="System.String" />
        <Parameter Name="options" Type="Azure.Search.Documents.SearchConditionalOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="skillsetName">The name of the skillset to delete.</param>
        <param name="options">Optional <see cref="T:Azure.Search.Documents.SearchConditionalOptions" /> to customize the operation's behavior.</param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Deletes a skillset.
            </summary>
        <returns>The <see cref="T:Azure.Response" /> from the server.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="skillsetName" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteSynonymMap">
      <MemberSignature Language="C#" Value="public virtual Azure.Response DeleteSynonymMap (Azure.Search.Documents.Models.SynonymMap synonymMap, bool onlyIfUnchanged = false, Azure.Search.Documents.SearchRequestOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response DeleteSynonymMap(class Azure.Search.Documents.Models.SynonymMap synonymMap, bool onlyIfUnchanged, class Azure.Search.Documents.SearchRequestOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.SearchServiceClient.DeleteSynonymMap(Azure.Search.Documents.Models.SynonymMap,System.Boolean,Azure.Search.Documents.SearchRequestOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteSynonymMap (synonymMap As SynonymMap, Optional onlyIfUnchanged As Boolean = false, Optional options As SearchRequestOptions = null, Optional cancellationToken As CancellationToken = null) As Response" />
      <MemberSignature Language="F#" Value="abstract member DeleteSynonymMap : Azure.Search.Documents.Models.SynonymMap * bool * Azure.Search.Documents.SearchRequestOptions * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.DeleteSynonymMap : Azure.Search.Documents.Models.SynonymMap * bool * Azure.Search.Documents.SearchRequestOptions * System.Threading.CancellationToken -&gt; Azure.Response" Usage="searchServiceClient.DeleteSynonymMap (synonymMap, onlyIfUnchanged, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="synonymMap" Type="Azure.Search.Documents.Models.SynonymMap" />
        <Parameter Name="onlyIfUnchanged" Type="System.Boolean" />
        <Parameter Name="options" Type="Azure.Search.Documents.SearchRequestOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="synonymMap">The <see cref="T:Azure.Search.Documents.Models.SynonymMap" /> to delete.</param>
        <param name="onlyIfUnchanged">
            True to throw a <see cref="T:Azure.RequestFailedException" /> if the <see cref="P:Azure.Search.Documents.Models.SynonymMap.ETag" /> does not match the current service version;
            otherwise, the current service version will be overwritten.
            </param>
        <param name="options">Optional <see cref="T:Azure.Search.Documents.SearchRequestOptions" /> to customize the operation's behavior.</param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Deletes a synonym map.
            </summary>
        <returns>The <see cref="T:Azure.Response" /> from the server.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="synonymMap" /> or <see cref="P:Azure.Search.Documents.Models.SynonymMap.Name" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteSynonymMapAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DeleteSynonymMapAsync (Azure.Search.Documents.Models.SynonymMap synonymMap, bool onlyIfUnchanged = false, Azure.Search.Documents.SearchRequestOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeleteSynonymMapAsync(class Azure.Search.Documents.Models.SynonymMap synonymMap, bool onlyIfUnchanged, class Azure.Search.Documents.SearchRequestOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.SearchServiceClient.DeleteSynonymMapAsync(Azure.Search.Documents.Models.SynonymMap,System.Boolean,Azure.Search.Documents.SearchRequestOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteSynonymMapAsync (synonymMap As SynonymMap, Optional onlyIfUnchanged As Boolean = false, Optional options As SearchRequestOptions = null, Optional cancellationToken As CancellationToken = null) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DeleteSynonymMapAsync : Azure.Search.Documents.Models.SynonymMap * bool * Azure.Search.Documents.SearchRequestOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DeleteSynonymMapAsync : Azure.Search.Documents.Models.SynonymMap * bool * Azure.Search.Documents.SearchRequestOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="searchServiceClient.DeleteSynonymMapAsync (synonymMap, onlyIfUnchanged, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="synonymMap" Type="Azure.Search.Documents.Models.SynonymMap" />
        <Parameter Name="onlyIfUnchanged" Type="System.Boolean" />
        <Parameter Name="options" Type="Azure.Search.Documents.SearchRequestOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="synonymMap">The <see cref="T:Azure.Search.Documents.Models.SynonymMap" /> to delete.</param>
        <param name="onlyIfUnchanged">
            True to throw a <see cref="T:Azure.RequestFailedException" /> if the <see cref="P:Azure.Search.Documents.Models.SynonymMap.ETag" /> does not match the current service version;
            otherwise, the current service version will be overwritten.
            </param>
        <param name="options">Optional <see cref="T:Azure.Search.Documents.SearchRequestOptions" /> to customize the operation's behavior.</param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Deletes a synonym map.
            </summary>
        <returns>The <see cref="T:Azure.Response" /> from the server.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="synonymMap" /> or <see cref="P:Azure.Search.Documents.Models.SynonymMap.Name" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="Endpoint">
      <MemberSignature Language="C#" Value="public virtual Uri Endpoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Endpoint" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.SearchServiceClient.Endpoint" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Endpoint As Uri" />
      <MemberSignature Language="F#" Value="member this.Endpoint : Uri" Usage="Azure.Search.Documents.SearchServiceClient.Endpoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the URI endpoint of the Search service.  This is likely
            to be similar to "https://{search_service}.search.windows.net".
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataSource">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Search.Documents.Models.SearchIndexerDataSource&gt; GetDataSource (string dataSourceName, Azure.Search.Documents.SearchRequestOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Search.Documents.Models.SearchIndexerDataSource&gt; GetDataSource(string dataSourceName, class Azure.Search.Documents.SearchRequestOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.SearchServiceClient.GetDataSource(System.String,Azure.Search.Documents.SearchRequestOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataSource (dataSourceName As String, Optional options As SearchRequestOptions = null, Optional cancellationToken As CancellationToken = null) As Response(Of SearchIndexerDataSource)" />
      <MemberSignature Language="F#" Value="abstract member GetDataSource : string * Azure.Search.Documents.SearchRequestOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Search.Documents.Models.SearchIndexerDataSource&gt;&#xA;override this.GetDataSource : string * Azure.Search.Documents.SearchRequestOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Search.Documents.Models.SearchIndexerDataSource&gt;" Usage="searchServiceClient.GetDataSource (dataSourceName, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Search.Documents.Models.SearchIndexerDataSource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSourceName" Type="System.String" />
        <Parameter Name="options" Type="Azure.Search.Documents.SearchRequestOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="dataSourceName">Required. The name of the <see cref="T:Azure.Search.Documents.Models.SearchIndexerDataSource" /> to get.</param>
        <param name="options">Optional <see cref="T:Azure.Search.Documents.SearchRequestOptions" /> to customize the operation's behavior.</param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Gets a specific <see cref="T:Azure.Search.Documents.Models.SearchIndexerDataSource" />.
            </summary>
        <returns>The <see cref="T:Azure.Response`1" /> from the server containing the requested <see cref="T:Azure.Search.Documents.Models.SearchIndexerDataSource" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="dataSourceName" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataSourceAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Models.SearchIndexerDataSource&gt;&gt; GetDataSourceAsync (string dataSourceName, Azure.Search.Documents.SearchRequestOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Search.Documents.Models.SearchIndexerDataSource&gt;&gt; GetDataSourceAsync(string dataSourceName, class Azure.Search.Documents.SearchRequestOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.SearchServiceClient.GetDataSourceAsync(System.String,Azure.Search.Documents.SearchRequestOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataSourceAsync (dataSourceName As String, Optional options As SearchRequestOptions = null, Optional cancellationToken As CancellationToken = null) As Task(Of Response(Of SearchIndexerDataSource))" />
      <MemberSignature Language="F#" Value="abstract member GetDataSourceAsync : string * Azure.Search.Documents.SearchRequestOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Models.SearchIndexerDataSource&gt;&gt;&#xA;override this.GetDataSourceAsync : string * Azure.Search.Documents.SearchRequestOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Models.SearchIndexerDataSource&gt;&gt;" Usage="searchServiceClient.GetDataSourceAsync (dataSourceName, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Models.SearchIndexerDataSource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSourceName" Type="System.String" />
        <Parameter Name="options" Type="Azure.Search.Documents.SearchRequestOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="dataSourceName">Required. The name of the <see cref="T:Azure.Search.Documents.Models.SearchIndexerDataSource" /> to get.</param>
        <param name="options">Optional <see cref="T:Azure.Search.Documents.SearchRequestOptions" /> to customize the operation's behavior.</param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Gets a specific <see cref="T:Azure.Search.Documents.Models.SearchIndexerDataSource" />.
            </summary>
        <returns>The <see cref="T:Azure.Response`1" /> from the server containing the requested <see cref="T:Azure.Search.Documents.Models.SearchIndexerDataSource" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="dataSourceName" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataSources">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.Search.Documents.Models.SearchIndexerDataSource&gt;&gt; GetDataSources (System.Collections.Generic.IEnumerable&lt;string&gt; selectProperties = default, Azure.Search.Documents.SearchRequestOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class System.Collections.Generic.IReadOnlyList`1&lt;class Azure.Search.Documents.Models.SearchIndexerDataSource&gt;&gt; GetDataSources(class System.Collections.Generic.IEnumerable`1&lt;string&gt; selectProperties, class Azure.Search.Documents.SearchRequestOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.SearchServiceClient.GetDataSources(System.Collections.Generic.IEnumerable{System.String},Azure.Search.Documents.SearchRequestOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataSources (Optional selectProperties As IEnumerable(Of String) = null, Optional options As SearchRequestOptions = null, Optional cancellationToken As CancellationToken = null) As Response(Of IReadOnlyList(Of SearchIndexerDataSource))" />
      <MemberSignature Language="F#" Value="abstract member GetDataSources : seq&lt;string&gt; * Azure.Search.Documents.SearchRequestOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.Search.Documents.Models.SearchIndexerDataSource&gt;&gt;&#xA;override this.GetDataSources : seq&lt;string&gt; * Azure.Search.Documents.SearchRequestOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.Search.Documents.Models.SearchIndexerDataSource&gt;&gt;" Usage="searchServiceClient.GetDataSources (selectProperties, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.Search.Documents.Models.SearchIndexerDataSource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selectProperties" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="options" Type="Azure.Search.Documents.SearchRequestOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="selectProperties">Optional property names to select. The default is all properties.</param>
        <param name="options">Optional <see cref="T:Azure.Search.Documents.SearchRequestOptions" /> to customize the operation's behavior.</param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Gets a list of all data sources.
            </summary>
        <returns>The <see cref="T:Azure.Response`1" /> from the server containing a list of <see cref="T:Azure.Search.Documents.Models.SearchIndexerDataSource" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataSourcesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.Search.Documents.Models.SearchIndexerDataSource&gt;&gt;&gt; GetDataSourcesAsync (System.Collections.Generic.IEnumerable&lt;string&gt; selectProperties = default, Azure.Search.Documents.SearchRequestOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class System.Collections.Generic.IReadOnlyList`1&lt;class Azure.Search.Documents.Models.SearchIndexerDataSource&gt;&gt;&gt; GetDataSourcesAsync(class System.Collections.Generic.IEnumerable`1&lt;string&gt; selectProperties, class Azure.Search.Documents.SearchRequestOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.SearchServiceClient.GetDataSourcesAsync(System.Collections.Generic.IEnumerable{System.String},Azure.Search.Documents.SearchRequestOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataSourcesAsync (Optional selectProperties As IEnumerable(Of String) = null, Optional options As SearchRequestOptions = null, Optional cancellationToken As CancellationToken = null) As Task(Of Response(Of IReadOnlyList(Of SearchIndexerDataSource)))" />
      <MemberSignature Language="F#" Value="abstract member GetDataSourcesAsync : seq&lt;string&gt; * Azure.Search.Documents.SearchRequestOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.Search.Documents.Models.SearchIndexerDataSource&gt;&gt;&gt;&#xA;override this.GetDataSourcesAsync : seq&lt;string&gt; * Azure.Search.Documents.SearchRequestOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.Search.Documents.Models.SearchIndexerDataSource&gt;&gt;&gt;" Usage="searchServiceClient.GetDataSourcesAsync (selectProperties, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.Search.Documents.Models.SearchIndexerDataSource&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selectProperties" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="options" Type="Azure.Search.Documents.SearchRequestOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="selectProperties">Optional property names to select. The default is all properties.</param>
        <param name="options">Optional <see cref="T:Azure.Search.Documents.SearchRequestOptions" /> to customize the operation's behavior.</param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Gets a list of all data sources.
            </summary>
        <returns>The <see cref="T:Azure.Response`1" /> from the server containing a list of <see cref="T:Azure.Search.Documents.Models.SearchIndexerDataSource" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetIndex">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Search.Documents.Models.SearchIndex&gt; GetIndex (string indexName, Azure.Search.Documents.SearchRequestOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Search.Documents.Models.SearchIndex&gt; GetIndex(string indexName, class Azure.Search.Documents.SearchRequestOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.SearchServiceClient.GetIndex(System.String,Azure.Search.Documents.SearchRequestOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIndex (indexName As String, Optional options As SearchRequestOptions = null, Optional cancellationToken As CancellationToken = null) As Response(Of SearchIndex)" />
      <MemberSignature Language="F#" Value="abstract member GetIndex : string * Azure.Search.Documents.SearchRequestOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Search.Documents.Models.SearchIndex&gt;&#xA;override this.GetIndex : string * Azure.Search.Documents.SearchRequestOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Search.Documents.Models.SearchIndex&gt;" Usage="searchServiceClient.GetIndex (indexName, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Search.Documents.Models.SearchIndex&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexName" Type="System.String" />
        <Parameter Name="options" Type="Azure.Search.Documents.SearchRequestOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexName">Required. The name of the index to get.</param>
        <param name="options">Optional <see cref="T:Azure.Search.Documents.SearchRequestOptions" /> to customize the operation's behavior.</param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Gets a specific <see cref="T:Azure.Search.Documents.Models.SearchIndex" />.
            </summary>
        <returns>The <see cref="T:Azure.Response`1" /> from the server containing the requested <see cref="T:Azure.Search.Documents.Models.SearchIndex" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="indexName" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetIndexAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Models.SearchIndex&gt;&gt; GetIndexAsync (string indexName, Azure.Search.Documents.SearchRequestOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Search.Documents.Models.SearchIndex&gt;&gt; GetIndexAsync(string indexName, class Azure.Search.Documents.SearchRequestOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.SearchServiceClient.GetIndexAsync(System.String,Azure.Search.Documents.SearchRequestOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIndexAsync (indexName As String, Optional options As SearchRequestOptions = null, Optional cancellationToken As CancellationToken = null) As Task(Of Response(Of SearchIndex))" />
      <MemberSignature Language="F#" Value="abstract member GetIndexAsync : string * Azure.Search.Documents.SearchRequestOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Models.SearchIndex&gt;&gt;&#xA;override this.GetIndexAsync : string * Azure.Search.Documents.SearchRequestOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Models.SearchIndex&gt;&gt;" Usage="searchServiceClient.GetIndexAsync (indexName, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Models.SearchIndex&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexName" Type="System.String" />
        <Parameter Name="options" Type="Azure.Search.Documents.SearchRequestOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexName">Required. The name of the index to get.</param>
        <param name="options">Optional <see cref="T:Azure.Search.Documents.SearchRequestOptions" /> to customize the operation's behavior.</param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Gets a specific <see cref="T:Azure.Search.Documents.Models.SearchIndex" />.
            </summary>
        <returns>The <see cref="T:Azure.Response`1" /> from the server containing the requested <see cref="T:Azure.Search.Documents.Models.SearchIndex" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="indexName" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetIndexer">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Search.Documents.Models.SearchIndexer&gt; GetIndexer (string indexerName, Azure.Search.Documents.SearchRequestOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Search.Documents.Models.SearchIndexer&gt; GetIndexer(string indexerName, class Azure.Search.Documents.SearchRequestOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.SearchServiceClient.GetIndexer(System.String,Azure.Search.Documents.SearchRequestOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIndexer (indexerName As String, Optional options As SearchRequestOptions = null, Optional cancellationToken As CancellationToken = null) As Response(Of SearchIndexer)" />
      <MemberSignature Language="F#" Value="abstract member GetIndexer : string * Azure.Search.Documents.SearchRequestOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Search.Documents.Models.SearchIndexer&gt;&#xA;override this.GetIndexer : string * Azure.Search.Documents.SearchRequestOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Search.Documents.Models.SearchIndexer&gt;" Usage="searchServiceClient.GetIndexer (indexerName, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Search.Documents.Models.SearchIndexer&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexerName" Type="System.String" />
        <Parameter Name="options" Type="Azure.Search.Documents.SearchRequestOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexerName">Required. The name of the <see cref="T:Azure.Search.Documents.Models.SearchIndexer" /> to get.</param>
        <param name="options">Optional <see cref="T:Azure.Search.Documents.SearchRequestOptions" /> to customize the operation's behavior.</param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Gets a specific <see cref="T:Azure.Search.Documents.Models.SearchIndexer" />.
            </summary>
        <returns>The <see cref="T:Azure.Response`1" /> from the server containing the requested <see cref="T:Azure.Search.Documents.Models.SearchIndexer" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="indexerName" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetIndexerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Models.SearchIndexer&gt;&gt; GetIndexerAsync (string indexerName, Azure.Search.Documents.SearchRequestOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Search.Documents.Models.SearchIndexer&gt;&gt; GetIndexerAsync(string indexerName, class Azure.Search.Documents.SearchRequestOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.SearchServiceClient.GetIndexerAsync(System.String,Azure.Search.Documents.SearchRequestOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIndexerAsync (indexerName As String, Optional options As SearchRequestOptions = null, Optional cancellationToken As CancellationToken = null) As Task(Of Response(Of SearchIndexer))" />
      <MemberSignature Language="F#" Value="abstract member GetIndexerAsync : string * Azure.Search.Documents.SearchRequestOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Models.SearchIndexer&gt;&gt;&#xA;override this.GetIndexerAsync : string * Azure.Search.Documents.SearchRequestOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Models.SearchIndexer&gt;&gt;" Usage="searchServiceClient.GetIndexerAsync (indexerName, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Models.SearchIndexer&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexerName" Type="System.String" />
        <Parameter Name="options" Type="Azure.Search.Documents.SearchRequestOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexerName">Required. The name of the <see cref="T:Azure.Search.Documents.Models.SearchIndexer" /> to get.</param>
        <param name="options">Optional <see cref="T:Azure.Search.Documents.SearchRequestOptions" /> to customize the operation's behavior.</param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Gets a specific <see cref="T:Azure.Search.Documents.Models.SearchIndexer" />.
            </summary>
        <returns>The <see cref="T:Azure.Response`1" /> from the server containing the requested <see cref="T:Azure.Search.Documents.Models.SearchIndexer" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="indexerName" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetIndexers">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.Search.Documents.Models.SearchIndexer&gt;&gt; GetIndexers (System.Collections.Generic.IEnumerable&lt;string&gt; selectProperties = default, Azure.Search.Documents.SearchRequestOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class System.Collections.Generic.IReadOnlyList`1&lt;class Azure.Search.Documents.Models.SearchIndexer&gt;&gt; GetIndexers(class System.Collections.Generic.IEnumerable`1&lt;string&gt; selectProperties, class Azure.Search.Documents.SearchRequestOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.SearchServiceClient.GetIndexers(System.Collections.Generic.IEnumerable{System.String},Azure.Search.Documents.SearchRequestOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIndexers (Optional selectProperties As IEnumerable(Of String) = null, Optional options As SearchRequestOptions = null, Optional cancellationToken As CancellationToken = null) As Response(Of IReadOnlyList(Of SearchIndexer))" />
      <MemberSignature Language="F#" Value="abstract member GetIndexers : seq&lt;string&gt; * Azure.Search.Documents.SearchRequestOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.Search.Documents.Models.SearchIndexer&gt;&gt;&#xA;override this.GetIndexers : seq&lt;string&gt; * Azure.Search.Documents.SearchRequestOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.Search.Documents.Models.SearchIndexer&gt;&gt;" Usage="searchServiceClient.GetIndexers (selectProperties, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.Search.Documents.Models.SearchIndexer&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selectProperties" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="options" Type="Azure.Search.Documents.SearchRequestOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="selectProperties">Optional property names to select. The default is all properties.</param>
        <param name="options">Optional <see cref="T:Azure.Search.Documents.SearchRequestOptions" /> to customize the operation's behavior.</param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Gets a list of all indexers.
            </summary>
        <returns>The <see cref="T:Azure.Response`1" /> from the server containing a list of <see cref="T:Azure.Search.Documents.Models.SearchIndexer" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetIndexersAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.Search.Documents.Models.SearchIndexer&gt;&gt;&gt; GetIndexersAsync (System.Collections.Generic.IEnumerable&lt;string&gt; selectProperties = default, Azure.Search.Documents.SearchRequestOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class System.Collections.Generic.IReadOnlyList`1&lt;class Azure.Search.Documents.Models.SearchIndexer&gt;&gt;&gt; GetIndexersAsync(class System.Collections.Generic.IEnumerable`1&lt;string&gt; selectProperties, class Azure.Search.Documents.SearchRequestOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.SearchServiceClient.GetIndexersAsync(System.Collections.Generic.IEnumerable{System.String},Azure.Search.Documents.SearchRequestOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIndexersAsync (Optional selectProperties As IEnumerable(Of String) = null, Optional options As SearchRequestOptions = null, Optional cancellationToken As CancellationToken = null) As Task(Of Response(Of IReadOnlyList(Of SearchIndexer)))" />
      <MemberSignature Language="F#" Value="abstract member GetIndexersAsync : seq&lt;string&gt; * Azure.Search.Documents.SearchRequestOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.Search.Documents.Models.SearchIndexer&gt;&gt;&gt;&#xA;override this.GetIndexersAsync : seq&lt;string&gt; * Azure.Search.Documents.SearchRequestOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.Search.Documents.Models.SearchIndexer&gt;&gt;&gt;" Usage="searchServiceClient.GetIndexersAsync (selectProperties, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.Search.Documents.Models.SearchIndexer&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selectProperties" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="options" Type="Azure.Search.Documents.SearchRequestOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="selectProperties">Optional property names to select. The default is all properties.</param>
        <param name="options">Optional <see cref="T:Azure.Search.Documents.SearchRequestOptions" /> to customize the operation's behavior.</param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Gets a list of all indexers.
            </summary>
        <returns>The <see cref="T:Azure.Response`1" /> from the server containing a list of <see cref="T:Azure.Search.Documents.Models.SearchIndexer" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetIndexerStatus">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Search.Documents.Models.SearchIndexerStatus&gt; GetIndexerStatus (string indexerName, Azure.Search.Documents.SearchRequestOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Search.Documents.Models.SearchIndexerStatus&gt; GetIndexerStatus(string indexerName, class Azure.Search.Documents.SearchRequestOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.SearchServiceClient.GetIndexerStatus(System.String,Azure.Search.Documents.SearchRequestOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIndexerStatus (indexerName As String, Optional options As SearchRequestOptions = null, Optional cancellationToken As CancellationToken = null) As Response(Of SearchIndexerStatus)" />
      <MemberSignature Language="F#" Value="abstract member GetIndexerStatus : string * Azure.Search.Documents.SearchRequestOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Search.Documents.Models.SearchIndexerStatus&gt;&#xA;override this.GetIndexerStatus : string * Azure.Search.Documents.SearchRequestOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Search.Documents.Models.SearchIndexerStatus&gt;" Usage="searchServiceClient.GetIndexerStatus (indexerName, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Search.Documents.Models.SearchIndexerStatus&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexerName" Type="System.String" />
        <Parameter Name="options" Type="Azure.Search.Documents.SearchRequestOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexerName">Required. The name of the indexer for which to retrieve status.</param>
        <param name="options">Optional <see cref="T:Azure.Search.Documents.SearchRequestOptions" /> to customize the operation's behavior.</param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Gets the current status and execution history of an indexer.
            </summary>
        <returns>The <see cref="T:Azure.Response`1" /> from the server containing the requested <see cref="T:Azure.Search.Documents.Models.SearchIndexerStatus" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="indexerName" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetIndexerStatusAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Models.SearchIndexerStatus&gt;&gt; GetIndexerStatusAsync (string indexerName, Azure.Search.Documents.SearchRequestOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Search.Documents.Models.SearchIndexerStatus&gt;&gt; GetIndexerStatusAsync(string indexerName, class Azure.Search.Documents.SearchRequestOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.SearchServiceClient.GetIndexerStatusAsync(System.String,Azure.Search.Documents.SearchRequestOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIndexerStatusAsync (indexerName As String, Optional options As SearchRequestOptions = null, Optional cancellationToken As CancellationToken = null) As Task(Of Response(Of SearchIndexerStatus))" />
      <MemberSignature Language="F#" Value="abstract member GetIndexerStatusAsync : string * Azure.Search.Documents.SearchRequestOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Models.SearchIndexerStatus&gt;&gt;&#xA;override this.GetIndexerStatusAsync : string * Azure.Search.Documents.SearchRequestOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Models.SearchIndexerStatus&gt;&gt;" Usage="searchServiceClient.GetIndexerStatusAsync (indexerName, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Models.SearchIndexerStatus&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexerName" Type="System.String" />
        <Parameter Name="options" Type="Azure.Search.Documents.SearchRequestOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexerName">Required. The name of the indexer for which to retrieve status.</param>
        <param name="options">Optional <see cref="T:Azure.Search.Documents.SearchRequestOptions" /> to customize the operation's behavior.</param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Gets the current status and execution history of an indexer.
            </summary>
        <returns>The <see cref="T:Azure.Response`1" /> from the server containing the requested <see cref="T:Azure.Search.Documents.Models.SearchIndexerStatus" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="indexerName" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetIndexes">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.Search.Documents.Models.SearchIndex&gt; GetIndexes (System.Collections.Generic.IEnumerable&lt;string&gt; selectProperties = default, Azure.Search.Documents.SearchRequestOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.Search.Documents.Models.SearchIndex&gt; GetIndexes(class System.Collections.Generic.IEnumerable`1&lt;string&gt; selectProperties, class Azure.Search.Documents.SearchRequestOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.SearchServiceClient.GetIndexes(System.Collections.Generic.IEnumerable{System.String},Azure.Search.Documents.SearchRequestOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIndexes (Optional selectProperties As IEnumerable(Of String) = null, Optional options As SearchRequestOptions = null, Optional cancellationToken As CancellationToken = null) As Pageable(Of SearchIndex)" />
      <MemberSignature Language="F#" Value="abstract member GetIndexes : seq&lt;string&gt; * Azure.Search.Documents.SearchRequestOptions * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.Search.Documents.Models.SearchIndex&gt;&#xA;override this.GetIndexes : seq&lt;string&gt; * Azure.Search.Documents.SearchRequestOptions * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.Search.Documents.Models.SearchIndex&gt;" Usage="searchServiceClient.GetIndexes (selectProperties, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.Search.Documents.Models.SearchIndex&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selectProperties" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="options" Type="Azure.Search.Documents.SearchRequestOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="selectProperties">Optional property names to select. The default is all properties.</param>
        <param name="options">Optional <see cref="T:Azure.Search.Documents.SearchRequestOptions" /> to customize the operation's behavior.</param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Gets a list of all indexes.
            </summary>
        <returns>The <see cref="T:Azure.Pageable`1" /> from the server containing a list of <see cref="T:Azure.Search.Documents.Models.SearchIndex" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetIndexesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.Search.Documents.Models.SearchIndex&gt; GetIndexesAsync (System.Collections.Generic.IEnumerable&lt;string&gt; selectProperties = default, Azure.Search.Documents.SearchRequestOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.Search.Documents.Models.SearchIndex&gt; GetIndexesAsync(class System.Collections.Generic.IEnumerable`1&lt;string&gt; selectProperties, class Azure.Search.Documents.SearchRequestOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.SearchServiceClient.GetIndexesAsync(System.Collections.Generic.IEnumerable{System.String},Azure.Search.Documents.SearchRequestOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIndexesAsync (Optional selectProperties As IEnumerable(Of String) = null, Optional options As SearchRequestOptions = null, Optional cancellationToken As CancellationToken = null) As AsyncPageable(Of SearchIndex)" />
      <MemberSignature Language="F#" Value="abstract member GetIndexesAsync : seq&lt;string&gt; * Azure.Search.Documents.SearchRequestOptions * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.Search.Documents.Models.SearchIndex&gt;&#xA;override this.GetIndexesAsync : seq&lt;string&gt; * Azure.Search.Documents.SearchRequestOptions * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.Search.Documents.Models.SearchIndex&gt;" Usage="searchServiceClient.GetIndexesAsync (selectProperties, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.Search.Documents.Models.SearchIndex&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selectProperties" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="options" Type="Azure.Search.Documents.SearchRequestOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="selectProperties">Optional property names to select. The default is all properties.</param>
        <param name="options">Optional <see cref="T:Azure.Search.Documents.SearchRequestOptions" /> to customize the operation's behavior.</param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Gets a list of all indexes.
            </summary>
        <returns>The <see cref="T:Azure.Response`1" /> from the server containing a list of <see cref="T:Azure.Search.Documents.Models.SearchIndex" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetIndexStatistics">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Search.Documents.Models.SearchIndexStatistics&gt; GetIndexStatistics (string indexName, Azure.Search.Documents.SearchRequestOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Search.Documents.Models.SearchIndexStatistics&gt; GetIndexStatistics(string indexName, class Azure.Search.Documents.SearchRequestOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.SearchServiceClient.GetIndexStatistics(System.String,Azure.Search.Documents.SearchRequestOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIndexStatistics (indexName As String, Optional options As SearchRequestOptions = null, Optional cancellationToken As CancellationToken = null) As Response(Of SearchIndexStatistics)" />
      <MemberSignature Language="F#" Value="abstract member GetIndexStatistics : string * Azure.Search.Documents.SearchRequestOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Search.Documents.Models.SearchIndexStatistics&gt;&#xA;override this.GetIndexStatistics : string * Azure.Search.Documents.SearchRequestOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Search.Documents.Models.SearchIndexStatistics&gt;" Usage="searchServiceClient.GetIndexStatistics (indexName, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Search.Documents.Models.SearchIndexStatistics&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexName" Type="System.String" />
        <Parameter Name="options" Type="Azure.Search.Documents.SearchRequestOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexName">Required. The name of the index.</param>
        <param name="options">Optional <see cref="T:Azure.Search.Documents.SearchRequestOptions" /> to customize the operation's behavior.</param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Gets <see cref="T:Azure.Search.Documents.Models.SearchIndexStatistics" /> for the given index, including a document count and storage usage.
            </summary>
        <returns>The <see cref="T:Azure.Response`1" /> from the server containing <see cref="T:Azure.Search.Documents.Models.SearchIndexStatistics" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="indexName" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetIndexStatisticsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Models.SearchIndexStatistics&gt;&gt; GetIndexStatisticsAsync (string indexName, Azure.Search.Documents.SearchRequestOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Search.Documents.Models.SearchIndexStatistics&gt;&gt; GetIndexStatisticsAsync(string indexName, class Azure.Search.Documents.SearchRequestOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.SearchServiceClient.GetIndexStatisticsAsync(System.String,Azure.Search.Documents.SearchRequestOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIndexStatisticsAsync (indexName As String, Optional options As SearchRequestOptions = null, Optional cancellationToken As CancellationToken = null) As Task(Of Response(Of SearchIndexStatistics))" />
      <MemberSignature Language="F#" Value="abstract member GetIndexStatisticsAsync : string * Azure.Search.Documents.SearchRequestOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Models.SearchIndexStatistics&gt;&gt;&#xA;override this.GetIndexStatisticsAsync : string * Azure.Search.Documents.SearchRequestOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Models.SearchIndexStatistics&gt;&gt;" Usage="searchServiceClient.GetIndexStatisticsAsync (indexName, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Models.SearchIndexStatistics&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexName" Type="System.String" />
        <Parameter Name="options" Type="Azure.Search.Documents.SearchRequestOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexName">Required. The name of the index.</param>
        <param name="options">Optional <see cref="T:Azure.Search.Documents.SearchRequestOptions" /> to customize the operation's behavior.</param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Gets <see cref="T:Azure.Search.Documents.Models.SearchIndexStatistics" /> for the given index, including a document count and storage usage.
            </summary>
        <returns>The <see cref="T:Azure.Response`1" /> from the server containing <see cref="T:Azure.Search.Documents.Models.SearchIndexStatistics" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="indexName" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSearchClient">
      <MemberSignature Language="C#" Value="public virtual Azure.Search.Documents.SearchClient GetSearchClient (string indexName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Search.Documents.SearchClient GetSearchClient(string indexName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.SearchServiceClient.GetSearchClient(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSearchClient (indexName As String) As SearchClient" />
      <MemberSignature Language="F#" Value="abstract member GetSearchClient : string -&gt; Azure.Search.Documents.SearchClient&#xA;override this.GetSearchClient : string -&gt; Azure.Search.Documents.SearchClient" Usage="searchServiceClient.GetSearchClient indexName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Search.Documents.SearchClient</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="indexName">The name of the desired Search Index.</param>
        <summary>
            Get a <see cref="T:Azure.Search.Documents.SearchClient" /> for the given <paramref name="indexName" /> to use for document operations like querying or adding documents to a Search Index.
            </summary>
        <returns>A SearchClient for the desired Search Index.</returns>
        <remarks>
            The same request <see cref="T:Azure.Core.Pipeline.HttpPipeline" /> (including authentication and any other configuration) will be used for the
            <see cref="T:Azure.Search.Documents.SearchClient" />.
            </remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when the <paramref name="indexName" /> is null.</exception>
        <exception cref="T:System.ArgumentException">Thrown when the <paramref name="indexName" /> is empty.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetServiceStatistics">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Search.Documents.Models.SearchServiceStatistics&gt; GetServiceStatistics (Azure.Search.Documents.SearchRequestOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Search.Documents.Models.SearchServiceStatistics&gt; GetServiceStatistics(class Azure.Search.Documents.SearchRequestOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.SearchServiceClient.GetServiceStatistics(Azure.Search.Documents.SearchRequestOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetServiceStatistics (Optional options As SearchRequestOptions = null, Optional cancellationToken As CancellationToken = null) As Response(Of SearchServiceStatistics)" />
      <MemberSignature Language="F#" Value="abstract member GetServiceStatistics : Azure.Search.Documents.SearchRequestOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Search.Documents.Models.SearchServiceStatistics&gt;&#xA;override this.GetServiceStatistics : Azure.Search.Documents.SearchRequestOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Search.Documents.Models.SearchServiceStatistics&gt;" Usage="searchServiceClient.GetServiceStatistics (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Search.Documents.Models.SearchServiceStatistics&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.Search.Documents.SearchRequestOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options">Optional <see cref="T:Azure.Search.Documents.SearchRequestOptions" /> to customize the operation's behavior.</param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
          <para>
            Gets service level statistics for a Search service.
            </para>
          <para>
            This operation returns the number and type of objects in your
            service, the maximum allowed for each object type given the service
            tier, actual and maximum storage, and other limits that vary by
            tier. This request pulls information from the service so that you
            don't have to look up or calculate service limits.
            </para>
          <para>
            Statistics on document count and storage size are collected every
            few minutes, not in real time. Therefore, the statistics returned
            by this API may not reflect changes caused by recent indexing
            operations.
            </para>
        </summary>
        <returns>The <see cref="T:Azure.Response`1" /> from the server containing <see cref="T:Azure.Search.Documents.Models.SearchServiceStatistics" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetServiceStatisticsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Models.SearchServiceStatistics&gt;&gt; GetServiceStatisticsAsync (Azure.Search.Documents.SearchRequestOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Search.Documents.Models.SearchServiceStatistics&gt;&gt; GetServiceStatisticsAsync(class Azure.Search.Documents.SearchRequestOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.SearchServiceClient.GetServiceStatisticsAsync(Azure.Search.Documents.SearchRequestOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetServiceStatisticsAsync (Optional options As SearchRequestOptions = null, Optional cancellationToken As CancellationToken = null) As Task(Of Response(Of SearchServiceStatistics))" />
      <MemberSignature Language="F#" Value="abstract member GetServiceStatisticsAsync : Azure.Search.Documents.SearchRequestOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Models.SearchServiceStatistics&gt;&gt;&#xA;override this.GetServiceStatisticsAsync : Azure.Search.Documents.SearchRequestOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Models.SearchServiceStatistics&gt;&gt;" Usage="searchServiceClient.GetServiceStatisticsAsync (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Models.SearchServiceStatistics&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.Search.Documents.SearchRequestOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options">Optional <see cref="T:Azure.Search.Documents.SearchRequestOptions" /> to customize the operation's behavior.</param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
          <para>
            Gets service level statistics for a Search service.
            </para>
          <para>
            This operation returns the number and type of objects in your
            service, the maximum allowed for each object type given the service
            tier, actual and maximum storage, and other limits that vary by
            tier. This request pulls information from the service so that you
            don't have to look up or calculate service limits.
            </para>
          <para>
            Statistics on document count and storage size are collected every
            few minutes, not in real time. Therefore, the statistics returned
            by this API may not reflect changes caused by recent indexing
            operations.
            </para>
        </summary>
        <returns>The <see cref="T:Azure.Response`1" /> from the server containing <see cref="T:Azure.Search.Documents.Models.SearchServiceStatistics" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSkillset">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Search.Documents.Models.SearchIndexerSkillset&gt; GetSkillset (string skillsetName, Azure.Search.Documents.SearchRequestOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Search.Documents.Models.SearchIndexerSkillset&gt; GetSkillset(string skillsetName, class Azure.Search.Documents.SearchRequestOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.SearchServiceClient.GetSkillset(System.String,Azure.Search.Documents.SearchRequestOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSkillset (skillsetName As String, Optional options As SearchRequestOptions = null, Optional cancellationToken As CancellationToken = null) As Response(Of SearchIndexerSkillset)" />
      <MemberSignature Language="F#" Value="abstract member GetSkillset : string * Azure.Search.Documents.SearchRequestOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Search.Documents.Models.SearchIndexerSkillset&gt;&#xA;override this.GetSkillset : string * Azure.Search.Documents.SearchRequestOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Search.Documents.Models.SearchIndexerSkillset&gt;" Usage="searchServiceClient.GetSkillset (skillsetName, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Search.Documents.Models.SearchIndexerSkillset&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="skillsetName" Type="System.String" />
        <Parameter Name="options" Type="Azure.Search.Documents.SearchRequestOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="skillsetName">Required. The name of the <see cref="T:Azure.Search.Documents.Models.SearchIndexerSkillset" /> to get.</param>
        <param name="options">Optional <see cref="T:Azure.Search.Documents.SearchRequestOptions" /> to customize the operation's behavior.</param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Gets a specific <see cref="T:Azure.Search.Documents.Models.SearchIndexerSkillset" />.
            </summary>
        <returns>The <see cref="T:Azure.Response`1" /> from the server containing the requested <see cref="T:Azure.Search.Documents.Models.SearchIndexerSkillset" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="skillsetName" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSkillsetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Models.SearchIndexerSkillset&gt;&gt; GetSkillsetAsync (string skillsetName, Azure.Search.Documents.SearchRequestOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Search.Documents.Models.SearchIndexerSkillset&gt;&gt; GetSkillsetAsync(string skillsetName, class Azure.Search.Documents.SearchRequestOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.SearchServiceClient.GetSkillsetAsync(System.String,Azure.Search.Documents.SearchRequestOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSkillsetAsync (skillsetName As String, Optional options As SearchRequestOptions = null, Optional cancellationToken As CancellationToken = null) As Task(Of Response(Of SearchIndexerSkillset))" />
      <MemberSignature Language="F#" Value="abstract member GetSkillsetAsync : string * Azure.Search.Documents.SearchRequestOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Models.SearchIndexerSkillset&gt;&gt;&#xA;override this.GetSkillsetAsync : string * Azure.Search.Documents.SearchRequestOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Models.SearchIndexerSkillset&gt;&gt;" Usage="searchServiceClient.GetSkillsetAsync (skillsetName, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Models.SearchIndexerSkillset&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="skillsetName" Type="System.String" />
        <Parameter Name="options" Type="Azure.Search.Documents.SearchRequestOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="skillsetName">Required. The name of the <see cref="T:Azure.Search.Documents.Models.SearchIndexerSkillset" /> to get.</param>
        <param name="options">Optional <see cref="T:Azure.Search.Documents.SearchRequestOptions" /> to customize the operation's behavior.</param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Gets a specific <see cref="T:Azure.Search.Documents.Models.SearchIndexerSkillset" />.
            </summary>
        <returns>The <see cref="T:Azure.Response`1" /> from the server containing the requested <see cref="T:Azure.Search.Documents.Models.SearchIndexerSkillset" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="skillsetName" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSkillsets">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.Search.Documents.Models.SearchIndexerSkillset&gt;&gt; GetSkillsets (System.Collections.Generic.IEnumerable&lt;string&gt; selectProperties = default, Azure.Search.Documents.SearchRequestOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class System.Collections.Generic.IReadOnlyList`1&lt;class Azure.Search.Documents.Models.SearchIndexerSkillset&gt;&gt; GetSkillsets(class System.Collections.Generic.IEnumerable`1&lt;string&gt; selectProperties, class Azure.Search.Documents.SearchRequestOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.SearchServiceClient.GetSkillsets(System.Collections.Generic.IEnumerable{System.String},Azure.Search.Documents.SearchRequestOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSkillsets (Optional selectProperties As IEnumerable(Of String) = null, Optional options As SearchRequestOptions = null, Optional cancellationToken As CancellationToken = null) As Response(Of IReadOnlyList(Of SearchIndexerSkillset))" />
      <MemberSignature Language="F#" Value="abstract member GetSkillsets : seq&lt;string&gt; * Azure.Search.Documents.SearchRequestOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.Search.Documents.Models.SearchIndexerSkillset&gt;&gt;&#xA;override this.GetSkillsets : seq&lt;string&gt; * Azure.Search.Documents.SearchRequestOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.Search.Documents.Models.SearchIndexerSkillset&gt;&gt;" Usage="searchServiceClient.GetSkillsets (selectProperties, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.Search.Documents.Models.SearchIndexerSkillset&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selectProperties" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="options" Type="Azure.Search.Documents.SearchRequestOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="selectProperties">Optional property names to select. The default is all properties.</param>
        <param name="options">Optional <see cref="T:Azure.Search.Documents.SearchRequestOptions" /> to customize the operation's behavior.</param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Gets a list of all skillsets.
            </summary>
        <returns>The <see cref="T:Azure.Response`1" /> from the server containing a list of <see cref="T:Azure.Search.Documents.Models.SearchIndexerSkillset" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSkillsetsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.Search.Documents.Models.SearchIndexerSkillset&gt;&gt;&gt; GetSkillsetsAsync (System.Collections.Generic.IEnumerable&lt;string&gt; selectProperties = default, Azure.Search.Documents.SearchRequestOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class System.Collections.Generic.IReadOnlyList`1&lt;class Azure.Search.Documents.Models.SearchIndexerSkillset&gt;&gt;&gt; GetSkillsetsAsync(class System.Collections.Generic.IEnumerable`1&lt;string&gt; selectProperties, class Azure.Search.Documents.SearchRequestOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.SearchServiceClient.GetSkillsetsAsync(System.Collections.Generic.IEnumerable{System.String},Azure.Search.Documents.SearchRequestOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSkillsetsAsync (Optional selectProperties As IEnumerable(Of String) = null, Optional options As SearchRequestOptions = null, Optional cancellationToken As CancellationToken = null) As Task(Of Response(Of IReadOnlyList(Of SearchIndexerSkillset)))" />
      <MemberSignature Language="F#" Value="abstract member GetSkillsetsAsync : seq&lt;string&gt; * Azure.Search.Documents.SearchRequestOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.Search.Documents.Models.SearchIndexerSkillset&gt;&gt;&gt;&#xA;override this.GetSkillsetsAsync : seq&lt;string&gt; * Azure.Search.Documents.SearchRequestOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.Search.Documents.Models.SearchIndexerSkillset&gt;&gt;&gt;" Usage="searchServiceClient.GetSkillsetsAsync (selectProperties, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.Search.Documents.Models.SearchIndexerSkillset&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selectProperties" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="options" Type="Azure.Search.Documents.SearchRequestOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="selectProperties">Optional property names to select. The default is all properties.</param>
        <param name="options">Optional <see cref="T:Azure.Search.Documents.SearchRequestOptions" /> to customize the operation's behavior.</param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Gets a list of all skillsets.
            </summary>
        <returns>The <see cref="T:Azure.Response`1" /> from the server containing a list of <see cref="T:Azure.Search.Documents.Models.SearchIndexerSkillset" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSynonymMap">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Search.Documents.Models.SynonymMap&gt; GetSynonymMap (string synonymMapName, Azure.Search.Documents.SearchRequestOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Search.Documents.Models.SynonymMap&gt; GetSynonymMap(string synonymMapName, class Azure.Search.Documents.SearchRequestOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.SearchServiceClient.GetSynonymMap(System.String,Azure.Search.Documents.SearchRequestOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynonymMap (synonymMapName As String, Optional options As SearchRequestOptions = null, Optional cancellationToken As CancellationToken = null) As Response(Of SynonymMap)" />
      <MemberSignature Language="F#" Value="abstract member GetSynonymMap : string * Azure.Search.Documents.SearchRequestOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Search.Documents.Models.SynonymMap&gt;&#xA;override this.GetSynonymMap : string * Azure.Search.Documents.SearchRequestOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Search.Documents.Models.SynonymMap&gt;" Usage="searchServiceClient.GetSynonymMap (synonymMapName, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Search.Documents.Models.SynonymMap&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="synonymMapName" Type="System.String" />
        <Parameter Name="options" Type="Azure.Search.Documents.SearchRequestOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="synonymMapName">Required. The name of the <see cref="T:Azure.Search.Documents.Models.SynonymMap" /> to get.</param>
        <param name="options">Optional <see cref="T:Azure.Search.Documents.SearchRequestOptions" /> to customize the operation's behavior.</param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Gets a specific <see cref="T:Azure.Search.Documents.Models.SynonymMap" />.
            </summary>
        <returns>The <see cref="T:Azure.Response`1" /> from the server containing the requested <see cref="T:Azure.Search.Documents.Models.SynonymMap" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="synonymMapName" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSynonymMapAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Models.SynonymMap&gt;&gt; GetSynonymMapAsync (string synonymMapName, Azure.Search.Documents.SearchRequestOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Search.Documents.Models.SynonymMap&gt;&gt; GetSynonymMapAsync(string synonymMapName, class Azure.Search.Documents.SearchRequestOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.SearchServiceClient.GetSynonymMapAsync(System.String,Azure.Search.Documents.SearchRequestOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynonymMapAsync (synonymMapName As String, Optional options As SearchRequestOptions = null, Optional cancellationToken As CancellationToken = null) As Task(Of Response(Of SynonymMap))" />
      <MemberSignature Language="F#" Value="abstract member GetSynonymMapAsync : string * Azure.Search.Documents.SearchRequestOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Models.SynonymMap&gt;&gt;&#xA;override this.GetSynonymMapAsync : string * Azure.Search.Documents.SearchRequestOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Models.SynonymMap&gt;&gt;" Usage="searchServiceClient.GetSynonymMapAsync (synonymMapName, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Documents.Models.SynonymMap&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="synonymMapName" Type="System.String" />
        <Parameter Name="options" Type="Azure.Search.Documents.SearchRequestOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="synonymMapName">Required. The name of the <see cref="T:Azure.Search.Documents.Models.SynonymMap" /> to get.</param>
        <param name="options">Optional <see cref="T:Azure.Search.Documents.SearchRequestOptions" /> to customize the operation's behavior.</param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Gets a specific <see cref="T:Azure.Search.Documents.Models.SynonymMap" />.
            </summary>
        <returns>The <see cref="T:Azure.Response`1" /> from the server containing the requested <see cref="T:Azure.Search.Documents.Models.SynonymMap" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="synonymMapName" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSynonymMaps">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.Search.Documents.Models.SynonymMap&gt;&gt; GetSynonymMaps (System.Collections.Generic.IEnumerable&lt;string&gt; selectProperties = default, Azure.Search.Documents.SearchRequestOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class System.Collections.Generic.IReadOnlyList`1&lt;class Azure.Search.Documents.Models.SynonymMap&gt;&gt; GetSynonymMaps(class System.Collections.Generic.IEnumerable`1&lt;string&gt; selectProperties, class Azure.Search.Documents.SearchRequestOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.SearchServiceClient.GetSynonymMaps(System.Collections.Generic.IEnumerable{System.String},Azure.Search.Documents.SearchRequestOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynonymMaps (Optional selectProperties As IEnumerable(Of String) = null, Optional options As SearchRequestOptions = null, Optional cancellationToken As CancellationToken = null) As Response(Of IReadOnlyList(Of SynonymMap))" />
      <MemberSignature Language="F#" Value="abstract member GetSynonymMaps : seq&lt;string&gt; * Azure.Search.Documents.SearchRequestOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.Search.Documents.Models.SynonymMap&gt;&gt;&#xA;override this.GetSynonymMaps : seq&lt;string&gt; * Azure.Search.Documents.SearchRequestOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.Search.Documents.Models.SynonymMap&gt;&gt;" Usage="searchServiceClient.GetSynonymMaps (selectProperties, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.Search.Documents.Models.SynonymMap&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selectProperties" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="options" Type="Azure.Search.Documents.SearchRequestOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="selectProperties">Optional property names to select. The default is all properties.</param>
        <param name="options">Optional <see cref="T:Azure.Search.Documents.SearchRequestOptions" /> to customize the operation's behavior.</param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Gets a list of all synonym maps.
            </summary>
        <returns>The <see cref="T:Azure.Response`1" /> from the server containing a list of <see cref="T:Azure.Search.Documents.Models.SynonymMap" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSynonymMapsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.Search.Documents.Models.SynonymMap&gt;&gt;&gt; GetSynonymMapsAsync (System.Collections.Generic.IEnumerable&lt;string&gt; selectProperties = default, Azure.Search.Documents.SearchRequestOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class System.Collections.Generic.IReadOnlyList`1&lt;class Azure.Search.Documents.Models.SynonymMap&gt;&gt;&gt; GetSynonymMapsAsync(class System.Collections.Generic.IEnumerable`1&lt;string&gt; selectProperties, class Azure.Search.Documents.SearchRequestOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.SearchServiceClient.GetSynonymMapsAsync(System.Collections.Generic.IEnumerable{System.String},Azure.Search.Documents.SearchRequestOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSynonymMapsAsync (Optional selectProperties As IEnumerable(Of String) = null, Optional options As SearchRequestOptions = null, Optional cancellationToken As CancellationToken = null) As Task(Of Response(Of IReadOnlyList(Of SynonymMap)))" />
      <MemberSignature Language="F#" Value="abstract member GetSynonymMapsAsync : seq&lt;string&gt; * Azure.Search.Documents.SearchRequestOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.Search.Documents.Models.SynonymMap&gt;&gt;&gt;&#xA;override this.GetSynonymMapsAsync : seq&lt;string&gt; * Azure.Search.Documents.SearchRequestOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.Search.Documents.Models.SynonymMap&gt;&gt;&gt;" Usage="searchServiceClient.GetSynonymMapsAsync (selectProperties, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.Search.Documents.Models.SynonymMap&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selectProperties" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="options" Type="Azure.Search.Documents.SearchRequestOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="selectProperties">Optional property names to select. The default is all properties.</param>
        <param name="options">Optional <see cref="T:Azure.Search.Documents.SearchRequestOptions" /> to customize the operation's behavior.</param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Gets a list of all synonym maps.
            </summary>
        <returns>The <see cref="T:Azure.Response`1" /> from the server containing a list of <see cref="T:Azure.Search.Documents.Models.SynonymMap" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="ResetIndexer">
      <MemberSignature Language="C#" Value="public virtual Azure.Response ResetIndexer (string indexerName, Azure.Search.Documents.SearchRequestOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response ResetIndexer(string indexerName, class Azure.Search.Documents.SearchRequestOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.SearchServiceClient.ResetIndexer(System.String,Azure.Search.Documents.SearchRequestOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ResetIndexer (indexerName As String, Optional options As SearchRequestOptions = null, Optional cancellationToken As CancellationToken = null) As Response" />
      <MemberSignature Language="F#" Value="abstract member ResetIndexer : string * Azure.Search.Documents.SearchRequestOptions * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.ResetIndexer : string * Azure.Search.Documents.SearchRequestOptions * System.Threading.CancellationToken -&gt; Azure.Response" Usage="searchServiceClient.ResetIndexer (indexerName, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexerName" Type="System.String" />
        <Parameter Name="options" Type="Azure.Search.Documents.SearchRequestOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexerName">Required. The name of the indexer to reset.</param>
        <param name="options">Optional <see cref="T:Azure.Search.Documents.SearchRequestOptions" /> to customize the operation's behavior.</param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Resets the change tracking state associated with an indexer.
            </summary>
        <returns>The <see cref="T:Azure.Response" /> from the server.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="indexerName" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="ResetIndexerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; ResetIndexerAsync (string indexerName, Azure.Search.Documents.SearchRequestOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; ResetIndexerAsync(string indexerName, class Azure.Search.Documents.SearchRequestOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.SearchServiceClient.ResetIndexerAsync(System.String,Azure.Search.Documents.SearchRequestOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ResetIndexerAsync (indexerName As String, Optional options As SearchRequestOptions = null, Optional cancellationToken As CancellationToken = null) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member ResetIndexerAsync : string * Azure.Search.Documents.SearchRequestOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.ResetIndexerAsync : string * Azure.Search.Documents.SearchRequestOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="searchServiceClient.ResetIndexerAsync (indexerName, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexerName" Type="System.String" />
        <Parameter Name="options" Type="Azure.Search.Documents.SearchRequestOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexerName">Required. The name of the indexer to reset.</param>
        <param name="options">Optional <see cref="T:Azure.Search.Documents.SearchRequestOptions" /> to customize the operation's behavior.</param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Resets the change tracking state associated with an indexer.
            </summary>
        <returns>The <see cref="T:Azure.Response" /> from the server.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="indexerName" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="RunIndexer">
      <MemberSignature Language="C#" Value="public virtual Azure.Response RunIndexer (string indexerName, Azure.Search.Documents.SearchRequestOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response RunIndexer(string indexerName, class Azure.Search.Documents.SearchRequestOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.SearchServiceClient.RunIndexer(System.String,Azure.Search.Documents.SearchRequestOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RunIndexer (indexerName As String, Optional options As SearchRequestOptions = null, Optional cancellationToken As CancellationToken = null) As Response" />
      <MemberSignature Language="F#" Value="abstract member RunIndexer : string * Azure.Search.Documents.SearchRequestOptions * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.RunIndexer : string * Azure.Search.Documents.SearchRequestOptions * System.Threading.CancellationToken -&gt; Azure.Response" Usage="searchServiceClient.RunIndexer (indexerName, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexerName" Type="System.String" />
        <Parameter Name="options" Type="Azure.Search.Documents.SearchRequestOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexerName">Required. The name of the indexer to run.</param>
        <param name="options">Optional <see cref="T:Azure.Search.Documents.SearchRequestOptions" /> to customize the operation's behavior.</param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Run an indexer now.
            </summary>
        <returns>The <see cref="T:Azure.Response" /> from the server.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="indexerName" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="RunIndexerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; RunIndexerAsync (string indexerName, Azure.Search.Documents.SearchRequestOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; RunIndexerAsync(string indexerName, class Azure.Search.Documents.SearchRequestOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.SearchServiceClient.RunIndexerAsync(System.String,Azure.Search.Documents.SearchRequestOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RunIndexerAsync (indexerName As String, Optional options As SearchRequestOptions = null, Optional cancellationToken As CancellationToken = null) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member RunIndexerAsync : string * Azure.Search.Documents.SearchRequestOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.RunIndexerAsync : string * Azure.Search.Documents.SearchRequestOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="searchServiceClient.RunIndexerAsync (indexerName, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexerName" Type="System.String" />
        <Parameter Name="options" Type="Azure.Search.Documents.SearchRequestOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexerName">Required. The name of the indexer to run.</param>
        <param name="options">Optional <see cref="T:Azure.Search.Documents.SearchRequestOptions" /> to customize the operation's behavior.</param>
        <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
        <summary>
            Run an indexer now.
            </summary>
        <returns>The <see cref="T:Azure.Response" /> from the server.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="indexerName" /> is null.</exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
      </Docs>
    </Member>
    <Member MemberName="ServiceName">
      <MemberSignature Language="C#" Value="public virtual string ServiceName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ServiceName" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.SearchServiceClient.ServiceName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ServiceName As String" />
      <MemberSignature Language="F#" Value="member this.ServiceName : string" Usage="Azure.Search.Documents.SearchServiceClient.ServiceName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the name of the Search service.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="SearchIndexingBufferedSender&lt;T&gt;" FullName="Azure.Search.Documents.SearchIndexingBufferedSender&lt;T&gt;">
  <TypeSignature Language="C#" Value="public class SearchIndexingBufferedSender&lt;T&gt; : IAsyncDisposable, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SearchIndexingBufferedSender`1&lt;T&gt; extends System.Object implements class System.IAsyncDisposable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Azure.Search.Documents.SearchIndexingBufferedSender`1" />
  <TypeSignature Language="VB.NET" Value="Public Class SearchIndexingBufferedSender(Of T)&#xA;Implements IAsyncDisposable, IDisposable" />
  <TypeSignature Language="F#" Value="type SearchIndexingBufferedSender&lt;'T&gt; = class&#xA;    interface IDisposable&#xA;    interface IAsyncDisposable" />
  <AssemblyInfo>
    <AssemblyName>Azure.Search.Documents</AssemblyName>
    <AssemblyVersion>11.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IAsyncDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T">
            The .NET type that maps to the index schema.  Instances of this
            type can be retrieved as documents from the index. You can use
            <see cref="T:Azure.Search.Documents.Models.SearchDocument" /> for dynamic documents.
            </typeparam>
    <summary>
            Index search documents with intelligent batching, automatic flushing,
            and retries for failed indexing actions.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SearchIndexingBufferedSender ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.SearchIndexingBufferedSender`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>11.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Protected constructor for mocking.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActionAddedAsync">
      <MemberSignature Language="C#" Value="public event Func&lt;Azure.Search.Documents.Models.IndexDocumentsAction&lt;T&gt;,System.Threading.CancellationToken,System.Threading.Tasks.Task&gt; ActionAddedAsync;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Func`3&lt;class Azure.Search.Documents.Models.IndexDocumentsAction`1&lt;!T&gt;, valuetype System.Threading.CancellationToken, class System.Threading.Tasks.Task&gt; ActionAddedAsync" />
      <MemberSignature Language="DocId" Value="E:Azure.Search.Documents.SearchIndexingBufferedSender`1.ActionAddedAsync" />
      <MemberSignature Language="VB.NET" Value="Public Event ActionAddedAsync As Func(Of IndexDocumentsAction(Of T), CancellationToken, Task) " />
      <MemberSignature Language="F#" Value="member this.ActionAddedAsync : Func&lt;Azure.Search.Documents.Models.IndexDocumentsAction&lt;'T&gt;, System.Threading.CancellationToken, System.Threading.Tasks.Task&gt; " Usage="member this.ActionAddedAsync : System.Func&lt;Azure.Search.Documents.Models.IndexDocumentsAction&lt;'T&gt;, System.Threading.CancellationToken, System.Threading.Tasks.Task&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>11.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;Azure.Search.Documents.Models.IndexDocumentsAction&lt;T&gt;,System.Threading.CancellationToken,System.Threading.Tasks.Task&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Async event raised whenever an indexing action is added to the
            sender.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActionCompletedAsync">
      <MemberSignature Language="C#" Value="public event Func&lt;Azure.Search.Documents.Models.IndexDocumentsAction&lt;T&gt;,Azure.Search.Documents.Models.IndexingResult,System.Threading.CancellationToken,System.Threading.Tasks.Task&gt; ActionCompletedAsync;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Func`4&lt;class Azure.Search.Documents.Models.IndexDocumentsAction`1&lt;!T&gt;, class Azure.Search.Documents.Models.IndexingResult, valuetype System.Threading.CancellationToken, class System.Threading.Tasks.Task&gt; ActionCompletedAsync" />
      <MemberSignature Language="DocId" Value="E:Azure.Search.Documents.SearchIndexingBufferedSender`1.ActionCompletedAsync" />
      <MemberSignature Language="VB.NET" Value="Public Event ActionCompletedAsync As Func(Of IndexDocumentsAction(Of T), IndexingResult, CancellationToken, Task) " />
      <MemberSignature Language="F#" Value="member this.ActionCompletedAsync : Func&lt;Azure.Search.Documents.Models.IndexDocumentsAction&lt;'T&gt;, Azure.Search.Documents.Models.IndexingResult, System.Threading.CancellationToken, System.Threading.Tasks.Task&gt; " Usage="member this.ActionCompletedAsync : System.Func&lt;Azure.Search.Documents.Models.IndexDocumentsAction&lt;'T&gt;, Azure.Search.Documents.Models.IndexingResult, System.Threading.CancellationToken, System.Threading.Tasks.Task&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>11.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;Azure.Search.Documents.Models.IndexDocumentsAction&lt;T&gt;,Azure.Search.Documents.Models.IndexingResult,System.Threading.CancellationToken,System.Threading.Tasks.Task&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Async event raised whenever an indexing action was submitted
            successfully.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActionFailedAsync">
      <MemberSignature Language="C#" Value="public event Func&lt;Azure.Search.Documents.Models.IndexDocumentsAction&lt;T&gt;,Azure.Search.Documents.Models.IndexingResult,Exception,System.Threading.CancellationToken,System.Threading.Tasks.Task&gt; ActionFailedAsync;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Func`5&lt;class Azure.Search.Documents.Models.IndexDocumentsAction`1&lt;!T&gt;, class Azure.Search.Documents.Models.IndexingResult, class System.Exception, valuetype System.Threading.CancellationToken, class System.Threading.Tasks.Task&gt; ActionFailedAsync" />
      <MemberSignature Language="DocId" Value="E:Azure.Search.Documents.SearchIndexingBufferedSender`1.ActionFailedAsync" />
      <MemberSignature Language="VB.NET" Value="Public Event ActionFailedAsync As Func(Of IndexDocumentsAction(Of T), IndexingResult, Exception, CancellationToken, Task) " />
      <MemberSignature Language="F#" Value="member this.ActionFailedAsync : Func&lt;Azure.Search.Documents.Models.IndexDocumentsAction&lt;'T&gt;, Azure.Search.Documents.Models.IndexingResult, Exception, System.Threading.CancellationToken, System.Threading.Tasks.Task&gt; " Usage="member this.ActionFailedAsync : System.Func&lt;Azure.Search.Documents.Models.IndexDocumentsAction&lt;'T&gt;, Azure.Search.Documents.Models.IndexingResult, System.Exception, System.Threading.CancellationToken, System.Threading.Tasks.Task&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>11.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;Azure.Search.Documents.Models.IndexDocumentsAction&lt;T&gt;,Azure.Search.Documents.Models.IndexingResult,System.Exception,System.Threading.CancellationToken,System.Threading.Tasks.Task&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Async event raised whenever an indexing action failed.  The
            <see cref="T:Azure.Search.Documents.Models.IndexingResult" /> or <see cref="T:System.Exception" /> may be null
            depending on the failure.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActionSentAsync">
      <MemberSignature Language="C#" Value="public event Func&lt;Azure.Search.Documents.Models.IndexDocumentsAction&lt;T&gt;,System.Threading.CancellationToken,System.Threading.Tasks.Task&gt; ActionSentAsync;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Func`3&lt;class Azure.Search.Documents.Models.IndexDocumentsAction`1&lt;!T&gt;, valuetype System.Threading.CancellationToken, class System.Threading.Tasks.Task&gt; ActionSentAsync" />
      <MemberSignature Language="DocId" Value="E:Azure.Search.Documents.SearchIndexingBufferedSender`1.ActionSentAsync" />
      <MemberSignature Language="VB.NET" Value="Public Event ActionSentAsync As Func(Of IndexDocumentsAction(Of T), CancellationToken, Task) " />
      <MemberSignature Language="F#" Value="member this.ActionSentAsync : Func&lt;Azure.Search.Documents.Models.IndexDocumentsAction&lt;'T&gt;, System.Threading.CancellationToken, System.Threading.Tasks.Task&gt; " Usage="member this.ActionSentAsync : System.Func&lt;Azure.Search.Documents.Models.IndexDocumentsAction&lt;'T&gt;, System.Threading.CancellationToken, System.Threading.Tasks.Task&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>11.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;Azure.Search.Documents.Models.IndexDocumentsAction&lt;T&gt;,System.Threading.CancellationToken,System.Threading.Tasks.Task&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Async event raised whenever an indexing action is sent by the
            sender.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteDocuments">
      <MemberSignature Language="C#" Value="public virtual void DeleteDocuments (System.Collections.Generic.IEnumerable&lt;T&gt; documents, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteDocuments(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; documents, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.SearchIndexingBufferedSender`1.DeleteDocuments(System.Collections.Generic.IEnumerable{`0},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DeleteDocuments (documents As IEnumerable(Of T), Optional cancellationToken As CancellationToken = Nothing)" />
      <MemberSignature Language="F#" Value="abstract member DeleteDocuments : seq&lt;'T&gt; * System.Threading.CancellationToken -&gt; unit&#xA;override this.DeleteDocuments : seq&lt;'T&gt; * System.Threading.CancellationToken -&gt; unit" Usage="searchIndexingBufferedSender.DeleteDocuments (documents, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>11.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documents" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="documents">The documents to delete.</param>
        <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications
            that the operation should be canceled.
            </param>
        <summary>
            Adds a batch of delete actions to eventually send to the search
            index.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteDocumentsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task DeleteDocumentsAsync (System.Collections.Generic.IEnumerable&lt;T&gt; documents, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task DeleteDocumentsAsync(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; documents, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.SearchIndexingBufferedSender`1.DeleteDocumentsAsync(System.Collections.Generic.IEnumerable{`0},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteDocumentsAsync (documents As IEnumerable(Of T), Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="abstract member DeleteDocumentsAsync : seq&lt;'T&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.DeleteDocumentsAsync : seq&lt;'T&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="searchIndexingBufferedSender.DeleteDocumentsAsync (documents, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>11.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documents" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="documents">The documents to delete.</param>
        <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications
            that the operation should be canceled.
            </param>
        <summary>
            Adds a batch of delete actions to eventually send to the search
            index.
            </summary>
        <returns>
            A task that completes when the indexing actions have been added but
            not yet sent.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Endpoint">
      <MemberSignature Language="C#" Value="public virtual Uri Endpoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Endpoint" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.SearchIndexingBufferedSender`1.Endpoint" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Endpoint As Uri" />
      <MemberSignature Language="F#" Value="member this.Endpoint : Uri" Usage="Azure.Search.Documents.SearchIndexingBufferedSender&lt;'T&gt;.Endpoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>11.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the URI endpoint of the Search Service.  This is likely
            to be similar to "https://{search_service}.search.windows.net".
            </summary>
        <value>To be added.</value>
        <remarks>
            This is not the URI of the Search Index.  You could construct that
            URI with "{Endpoint}/indexes/{IndexName}" if needed.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~SearchIndexingBufferedSender ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.SearchIndexingBufferedSender`1.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="searchIndexingBufferedSender.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>11.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Ensure the sender was properly disposed.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public void Flush (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Flush(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.SearchIndexingBufferedSender`1.Flush(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Flush (Optional cancellationToken As CancellationToken = Nothing)" />
      <MemberSignature Language="F#" Value="member this.Flush : System.Threading.CancellationToken -&gt; unit" Usage="searchIndexingBufferedSender.Flush cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>11.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications
            that the operation should be canceled.
            </param>
        <summary>
            Flush any pending indexing actions.  This will wait until
            everything has been sent before returning.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FlushAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task FlushAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task FlushAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.SearchIndexingBufferedSender`1.FlushAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function FlushAsync (Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="member this.FlushAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="searchIndexingBufferedSender.FlushAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>11.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications
            that the operation should be canceled.
            </param>
        <summary>
            Flush any pending indexing actions.  This will wait until
            everything has been sent before returning.
            </summary>
        <returns>A Task that will complete after flushing.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexDocuments">
      <MemberSignature Language="C#" Value="public virtual void IndexDocuments (Azure.Search.Documents.Models.IndexDocumentsBatch&lt;T&gt; batch, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void IndexDocuments(class Azure.Search.Documents.Models.IndexDocumentsBatch`1&lt;!T&gt; batch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.SearchIndexingBufferedSender`1.IndexDocuments(Azure.Search.Documents.Models.IndexDocumentsBatch{`0},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub IndexDocuments (batch As IndexDocumentsBatch(Of T), Optional cancellationToken As CancellationToken = Nothing)" />
      <MemberSignature Language="F#" Value="abstract member IndexDocuments : Azure.Search.Documents.Models.IndexDocumentsBatch&lt;'T&gt; * System.Threading.CancellationToken -&gt; unit&#xA;override this.IndexDocuments : Azure.Search.Documents.Models.IndexDocumentsBatch&lt;'T&gt; * System.Threading.CancellationToken -&gt; unit" Usage="searchIndexingBufferedSender.IndexDocuments (batch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>11.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="batch" Type="Azure.Search.Documents.Models.IndexDocumentsBatch&lt;T&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="batch">The batch of document index actions.</param>
        <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications
            that the operation should be canceled.
            </param>
        <summary>
            Adds a batch of upload, merge, and/or delete actions to eventually
            send to the search index.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexDocumentsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task IndexDocumentsAsync (Azure.Search.Documents.Models.IndexDocumentsBatch&lt;T&gt; batch, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task IndexDocumentsAsync(class Azure.Search.Documents.Models.IndexDocumentsBatch`1&lt;!T&gt; batch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.SearchIndexingBufferedSender`1.IndexDocumentsAsync(Azure.Search.Documents.Models.IndexDocumentsBatch{`0},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexDocumentsAsync (batch As IndexDocumentsBatch(Of T), Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="abstract member IndexDocumentsAsync : Azure.Search.Documents.Models.IndexDocumentsBatch&lt;'T&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.IndexDocumentsAsync : Azure.Search.Documents.Models.IndexDocumentsBatch&lt;'T&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="searchIndexingBufferedSender.IndexDocumentsAsync (batch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>11.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="batch" Type="Azure.Search.Documents.Models.IndexDocumentsBatch&lt;T&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="batch">The batch of document index actions.</param>
        <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications
            that the operation should be canceled.
            </param>
        <summary>
            Adds a batch of upload, merge, and/or delete actions to eventually
            send to the search index.
            </summary>
        <returns>
            A task that completes when the indexing actions have been added but
            not yet sent.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexName">
      <MemberSignature Language="C#" Value="public virtual string IndexName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string IndexName" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.SearchIndexingBufferedSender`1.IndexName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IndexName As String" />
      <MemberSignature Language="F#" Value="member this.IndexName : string" Usage="Azure.Search.Documents.SearchIndexingBufferedSender&lt;'T&gt;.IndexName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>11.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the name of the Search Index.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MergeDocuments">
      <MemberSignature Language="C#" Value="public virtual void MergeDocuments (System.Collections.Generic.IEnumerable&lt;T&gt; documents, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MergeDocuments(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; documents, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.SearchIndexingBufferedSender`1.MergeDocuments(System.Collections.Generic.IEnumerable{`0},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub MergeDocuments (documents As IEnumerable(Of T), Optional cancellationToken As CancellationToken = Nothing)" />
      <MemberSignature Language="F#" Value="abstract member MergeDocuments : seq&lt;'T&gt; * System.Threading.CancellationToken -&gt; unit&#xA;override this.MergeDocuments : seq&lt;'T&gt; * System.Threading.CancellationToken -&gt; unit" Usage="searchIndexingBufferedSender.MergeDocuments (documents, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>11.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documents" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="documents">The documents to merge.</param>
        <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications
            that the operation should be canceled.
            </param>
        <summary>
            Adds a batch of merge actions to eventually send to the search
            index.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MergeDocumentsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task MergeDocumentsAsync (System.Collections.Generic.IEnumerable&lt;T&gt; documents, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task MergeDocumentsAsync(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; documents, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.SearchIndexingBufferedSender`1.MergeDocumentsAsync(System.Collections.Generic.IEnumerable{`0},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MergeDocumentsAsync (documents As IEnumerable(Of T), Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="abstract member MergeDocumentsAsync : seq&lt;'T&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.MergeDocumentsAsync : seq&lt;'T&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="searchIndexingBufferedSender.MergeDocumentsAsync (documents, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>11.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documents" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="documents">The documents to merge.</param>
        <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications
            that the operation should be canceled.
            </param>
        <summary>
            Adds a batch of merge actions to eventually send to the search
            index.
            </summary>
        <returns>
            A task that completes when the indexing actions have been added but
            not yet sent.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MergeOrUploadDocuments">
      <MemberSignature Language="C#" Value="public virtual void MergeOrUploadDocuments (System.Collections.Generic.IEnumerable&lt;T&gt; documents, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MergeOrUploadDocuments(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; documents, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.SearchIndexingBufferedSender`1.MergeOrUploadDocuments(System.Collections.Generic.IEnumerable{`0},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub MergeOrUploadDocuments (documents As IEnumerable(Of T), Optional cancellationToken As CancellationToken = Nothing)" />
      <MemberSignature Language="F#" Value="abstract member MergeOrUploadDocuments : seq&lt;'T&gt; * System.Threading.CancellationToken -&gt; unit&#xA;override this.MergeOrUploadDocuments : seq&lt;'T&gt; * System.Threading.CancellationToken -&gt; unit" Usage="searchIndexingBufferedSender.MergeOrUploadDocuments (documents, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>11.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documents" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="documents">The documents to merge or upload.</param>
        <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications
            that the operation should be canceled.
            </param>
        <summary>
            Adds a batch of merge or upload actions to eventually send to the
            search index.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MergeOrUploadDocumentsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task MergeOrUploadDocumentsAsync (System.Collections.Generic.IEnumerable&lt;T&gt; documents, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task MergeOrUploadDocumentsAsync(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; documents, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.SearchIndexingBufferedSender`1.MergeOrUploadDocumentsAsync(System.Collections.Generic.IEnumerable{`0},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MergeOrUploadDocumentsAsync (documents As IEnumerable(Of T), Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="abstract member MergeOrUploadDocumentsAsync : seq&lt;'T&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.MergeOrUploadDocumentsAsync : seq&lt;'T&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="searchIndexingBufferedSender.MergeOrUploadDocumentsAsync (documents, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>11.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documents" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="documents">The documents to merge or upload.</param>
        <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications
            that the operation should be canceled.
            </param>
        <summary>
            Adds a batch of merge or upload actions to eventually send to the
            search index.
            </summary>
        <returns>
            A task that completes when the indexing actions have been added but
            not yet sent.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceName">
      <MemberSignature Language="C#" Value="public virtual string ServiceName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ServiceName" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.SearchIndexingBufferedSender`1.ServiceName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ServiceName As String" />
      <MemberSignature Language="F#" Value="member this.ServiceName : string" Usage="Azure.Search.Documents.SearchIndexingBufferedSender&lt;'T&gt;.ServiceName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>11.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the name of the Search Service.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IAsyncDisposable.DisposeAsync">
      <MemberSignature Language="C#" Value="System.Threading.Tasks.ValueTask IAsyncDisposable.DisposeAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask System.IAsyncDisposable.DisposeAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.SearchIndexingBufferedSender`1.System#IAsyncDisposable#DisposeAsync" />
      <MemberSignature Language="VB.NET" Value="Function DisposeAsync () As ValueTask Implements IAsyncDisposable.DisposeAsync" />
      <MemberSignature Language="F#" Value="abstract member System.IAsyncDisposable.DisposeAsync : unit -&gt; System.Threading.Tasks.ValueTask&#xA;override this.System.IAsyncDisposable.DisposeAsync : unit -&gt; System.Threading.Tasks.ValueTask" Usage="searchIndexingBufferedSender.System.IAsyncDisposable.DisposeAsync " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IAsyncDisposable.DisposeAsync</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>11.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Flush any remaining work and clean up resources.
            </summary>
        <returns>
            A task that will complete when the object has finished disposing.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.SearchIndexingBufferedSender`1.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="F#" Value="abstract member System.IDisposable.Dispose : unit -&gt; unit&#xA;override this.System.IDisposable.Dispose : unit -&gt; unit" Usage="searchIndexingBufferedSender.System.IDisposable.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>11.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Flush any remaining work and clean up resources.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadDocuments">
      <MemberSignature Language="C#" Value="public virtual void UploadDocuments (System.Collections.Generic.IEnumerable&lt;T&gt; documents, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UploadDocuments(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; documents, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.SearchIndexingBufferedSender`1.UploadDocuments(System.Collections.Generic.IEnumerable{`0},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub UploadDocuments (documents As IEnumerable(Of T), Optional cancellationToken As CancellationToken = Nothing)" />
      <MemberSignature Language="F#" Value="abstract member UploadDocuments : seq&lt;'T&gt; * System.Threading.CancellationToken -&gt; unit&#xA;override this.UploadDocuments : seq&lt;'T&gt; * System.Threading.CancellationToken -&gt; unit" Usage="searchIndexingBufferedSender.UploadDocuments (documents, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>11.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documents" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="documents">The documents to upload.</param>
        <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications
            that the operation should be canceled.
            </param>
        <summary>
            Adds a batch of upload actions to eventually send to the search
            index.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadDocumentsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task UploadDocumentsAsync (System.Collections.Generic.IEnumerable&lt;T&gt; documents, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task UploadDocumentsAsync(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; documents, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.SearchIndexingBufferedSender`1.UploadDocumentsAsync(System.Collections.Generic.IEnumerable{`0},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UploadDocumentsAsync (documents As IEnumerable(Of T), Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="abstract member UploadDocumentsAsync : seq&lt;'T&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.UploadDocumentsAsync : seq&lt;'T&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="searchIndexingBufferedSender.UploadDocumentsAsync (documents, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>11.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documents" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="documents">The documents to upload.</param>
        <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications
            that the operation should be canceled.
            </param>
        <summary>
            Adds a batch of upload actions to eventually send to the search
            index.
            </summary>
        <returns>
            A task that completes when the indexing actions have been added but
            not yet sent.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

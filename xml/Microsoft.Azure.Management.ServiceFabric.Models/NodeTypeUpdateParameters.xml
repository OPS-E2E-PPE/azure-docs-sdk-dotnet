<Type Name="NodeTypeUpdateParameters" FullName="Microsoft.Azure.Management.ServiceFabric.Models.NodeTypeUpdateParameters">
  <TypeSignature Language="C#" Value="public class NodeTypeUpdateParameters" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NodeTypeUpdateParameters extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Management.ServiceFabric.Models.NodeTypeUpdateParameters" />
  <TypeSignature Language="VB.NET" Value="Public Class NodeTypeUpdateParameters" />
  <TypeSignature Language="F#" Value="type NodeTypeUpdateParameters = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Management.ServiceFabric</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Microsoft.Rest.Serialization.JsonTransformation]</AttributeName>
      <AttributeName Language="F#">[&lt;Microsoft.Rest.Serialization.JsonTransformation&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Node type update request
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NodeTypeUpdateParameters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ServiceFabric.Models.NodeTypeUpdateParameters.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ServiceFabric</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the NodeTypeUpdateParameters class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NodeTypeUpdateParameters (int? vmInstanceCount = default, System.Collections.Generic.IDictionary&lt;string,string&gt; placementProperties = default, System.Collections.Generic.IDictionary&lt;string,string&gt; capacities = default, Microsoft.Azure.Management.ServiceFabric.Models.EndpointRangeDescription applicationPorts = default, Microsoft.Azure.Management.ServiceFabric.Models.EndpointRangeDescription ephemeralPorts = default, System.Collections.Generic.IList&lt;Microsoft.Azure.Management.ServiceFabric.Models.VaultSecretGroup&gt; vmSecrets = default, System.Collections.Generic.IList&lt;Microsoft.Azure.Management.ServiceFabric.Models.VMSSExtension&gt; vmExtensions = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Nullable`1&lt;int32&gt; vmInstanceCount, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; placementProperties, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; capacities, class Microsoft.Azure.Management.ServiceFabric.Models.EndpointRangeDescription applicationPorts, class Microsoft.Azure.Management.ServiceFabric.Models.EndpointRangeDescription ephemeralPorts, class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.Management.ServiceFabric.Models.VaultSecretGroup&gt; vmSecrets, class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.Management.ServiceFabric.Models.VMSSExtension&gt; vmExtensions, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ServiceFabric.Models.NodeTypeUpdateParameters.#ctor(System.Nullable{System.Int32},System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Management.ServiceFabric.Models.EndpointRangeDescription,Microsoft.Azure.Management.ServiceFabric.Models.EndpointRangeDescription,System.Collections.Generic.IList{Microsoft.Azure.Management.ServiceFabric.Models.VaultSecretGroup},System.Collections.Generic.IList{Microsoft.Azure.Management.ServiceFabric.Models.VMSSExtension},System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Optional vmInstanceCount As Nullable(Of Integer) = Nothing, Optional placementProperties As IDictionary(Of String, String) = Nothing, Optional capacities As IDictionary(Of String, String) = Nothing, Optional applicationPorts As EndpointRangeDescription = Nothing, Optional ephemeralPorts As EndpointRangeDescription = Nothing, Optional vmSecrets As IList(Of VaultSecretGroup) = Nothing, Optional vmExtensions As IList(Of VMSSExtension) = Nothing, Optional tags As IDictionary(Of String, String) = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.Management.ServiceFabric.Models.NodeTypeUpdateParameters : Nullable&lt;int&gt; * System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Collections.Generic.IDictionary&lt;string, string&gt; * Microsoft.Azure.Management.ServiceFabric.Models.EndpointRangeDescription * Microsoft.Azure.Management.ServiceFabric.Models.EndpointRangeDescription * System.Collections.Generic.IList&lt;Microsoft.Azure.Management.ServiceFabric.Models.VaultSecretGroup&gt; * System.Collections.Generic.IList&lt;Microsoft.Azure.Management.ServiceFabric.Models.VMSSExtension&gt; * System.Collections.Generic.IDictionary&lt;string, string&gt; -&gt; Microsoft.Azure.Management.ServiceFabric.Models.NodeTypeUpdateParameters" Usage="new Microsoft.Azure.Management.ServiceFabric.Models.NodeTypeUpdateParameters (vmInstanceCount, placementProperties, capacities, applicationPorts, ephemeralPorts, vmSecrets, vmExtensions, tags)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ServiceFabric</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="vmInstanceCount" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="placementProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="capacities" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="applicationPorts" Type="Microsoft.Azure.Management.ServiceFabric.Models.EndpointRangeDescription" />
        <Parameter Name="ephemeralPorts" Type="Microsoft.Azure.Management.ServiceFabric.Models.EndpointRangeDescription" />
        <Parameter Name="vmSecrets" Type="System.Collections.Generic.IList&lt;Microsoft.Azure.Management.ServiceFabric.Models.VaultSecretGroup&gt;" />
        <Parameter Name="vmExtensions" Type="System.Collections.Generic.IList&lt;Microsoft.Azure.Management.ServiceFabric.Models.VMSSExtension&gt;" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="vmInstanceCount">The number of nodes in the node type.
            This count should match the capacity property in the corresponding
            VirtualMachineScaleSet resource.</param>
        <param name="placementProperties">The placement tags applied to
            nodes in the node type, which can be used to indicate where certain
            services (workload) should run.</param>
        <param name="capacities">The capacity tags applied to the nodes in
            the node type, the cluster resource manager uses these tags to
            understand how much resource a node has.</param>
        <param name="applicationPorts">The range of ports from which
            cluster assigned port to Service Fabric applications.</param>
        <param name="ephemeralPorts">The range of ephemeral ports that
            nodes in this node type should be configured with.</param>
        <param name="vmSecrets">virtual machine secretes.</param>
        <param name="vmExtensions">virtual machine extensions.</param>
        <param name="tags">Node type update parameters</param>
        <summary>
            Initializes a new instance of the NodeTypeUpdateParameters class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationPorts">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.ServiceFabric.Models.EndpointRangeDescription ApplicationPorts { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Azure.Management.ServiceFabric.Models.EndpointRangeDescription ApplicationPorts" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ServiceFabric.Models.NodeTypeUpdateParameters.ApplicationPorts" />
      <MemberSignature Language="VB.NET" Value="Public Property ApplicationPorts As EndpointRangeDescription" />
      <MemberSignature Language="F#" Value="member this.ApplicationPorts : Microsoft.Azure.Management.ServiceFabric.Models.EndpointRangeDescription with get, set" Usage="Microsoft.Azure.Management.ServiceFabric.Models.NodeTypeUpdateParameters.ApplicationPorts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ServiceFabric</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.applicationPorts")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.applicationPorts")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.ServiceFabric.Models.EndpointRangeDescription</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the range of ports from which cluster assigned port to
            Service Fabric applications.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Capacities">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,string&gt; Capacities { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; Capacities" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ServiceFabric.Models.NodeTypeUpdateParameters.Capacities" />
      <MemberSignature Language="VB.NET" Value="Public Property Capacities As IDictionary(Of String, String)" />
      <MemberSignature Language="F#" Value="member this.Capacities : System.Collections.Generic.IDictionary&lt;string, string&gt; with get, set" Usage="Microsoft.Azure.Management.ServiceFabric.Models.NodeTypeUpdateParameters.Capacities" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ServiceFabric</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.capacities")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.capacities")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the capacity tags applied to the nodes in the node
            type, the cluster resource manager uses these tags to understand
            how much resource a node has.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EphemeralPorts">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.ServiceFabric.Models.EndpointRangeDescription EphemeralPorts { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Azure.Management.ServiceFabric.Models.EndpointRangeDescription EphemeralPorts" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ServiceFabric.Models.NodeTypeUpdateParameters.EphemeralPorts" />
      <MemberSignature Language="VB.NET" Value="Public Property EphemeralPorts As EndpointRangeDescription" />
      <MemberSignature Language="F#" Value="member this.EphemeralPorts : Microsoft.Azure.Management.ServiceFabric.Models.EndpointRangeDescription with get, set" Usage="Microsoft.Azure.Management.ServiceFabric.Models.NodeTypeUpdateParameters.EphemeralPorts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ServiceFabric</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.ephemeralPorts")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.ephemeralPorts")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.ServiceFabric.Models.EndpointRangeDescription</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the range of ephemeral ports that nodes in this node
            type should be configured with.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PlacementProperties">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,string&gt; PlacementProperties { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; PlacementProperties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ServiceFabric.Models.NodeTypeUpdateParameters.PlacementProperties" />
      <MemberSignature Language="VB.NET" Value="Public Property PlacementProperties As IDictionary(Of String, String)" />
      <MemberSignature Language="F#" Value="member this.PlacementProperties : System.Collections.Generic.IDictionary&lt;string, string&gt; with get, set" Usage="Microsoft.Azure.Management.ServiceFabric.Models.NodeTypeUpdateParameters.PlacementProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ServiceFabric</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.placementProperties")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.placementProperties")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the placement tags applied to nodes in the node type,
            which can be used to indicate where certain services (workload)
            should run.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Tags">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,string&gt; Tags { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; Tags" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ServiceFabric.Models.NodeTypeUpdateParameters.Tags" />
      <MemberSignature Language="VB.NET" Value="Public Property Tags As IDictionary(Of String, String)" />
      <MemberSignature Language="F#" Value="member this.Tags : System.Collections.Generic.IDictionary&lt;string, string&gt; with get, set" Usage="Microsoft.Azure.Management.ServiceFabric.Models.NodeTypeUpdateParameters.Tags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ServiceFabric</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="tags")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="tags")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets node type update parameters
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public virtual void Validate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Validate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ServiceFabric.Models.NodeTypeUpdateParameters.Validate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Validate ()" />
      <MemberSignature Language="F#" Value="abstract member Validate : unit -&gt; unit&#xA;override this.Validate : unit -&gt; unit" Usage="nodeTypeUpdateParameters.Validate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ServiceFabric</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Validate the object.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
      </Docs>
    </Member>
    <Member MemberName="VmExtensions">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Azure.Management.ServiceFabric.Models.VMSSExtension&gt; VmExtensions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.Management.ServiceFabric.Models.VMSSExtension&gt; VmExtensions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ServiceFabric.Models.NodeTypeUpdateParameters.VmExtensions" />
      <MemberSignature Language="VB.NET" Value="Public Property VmExtensions As IList(Of VMSSExtension)" />
      <MemberSignature Language="F#" Value="member this.VmExtensions : System.Collections.Generic.IList&lt;Microsoft.Azure.Management.ServiceFabric.Models.VMSSExtension&gt; with get, set" Usage="Microsoft.Azure.Management.ServiceFabric.Models.NodeTypeUpdateParameters.VmExtensions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ServiceFabric</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.vmExtensions")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.vmExtensions")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Azure.Management.ServiceFabric.Models.VMSSExtension&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets virtual machine extensions.
            </summary>
        <value>To be added.</value>
        <remarks>
            Set of extensions that should be installed onto the virtual
            machines.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="VmInstanceCount">
      <MemberSignature Language="C#" Value="public int? VmInstanceCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; VmInstanceCount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ServiceFabric.Models.NodeTypeUpdateParameters.VmInstanceCount" />
      <MemberSignature Language="VB.NET" Value="Public Property VmInstanceCount As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="member this.VmInstanceCount : Nullable&lt;int&gt; with get, set" Usage="Microsoft.Azure.Management.ServiceFabric.Models.NodeTypeUpdateParameters.VmInstanceCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ServiceFabric</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.vmInstanceCount")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.vmInstanceCount")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the number of nodes in the node type. This count
            should match the capacity property in the corresponding
            VirtualMachineScaleSet resource.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VmSecrets">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Azure.Management.ServiceFabric.Models.VaultSecretGroup&gt; VmSecrets { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.Management.ServiceFabric.Models.VaultSecretGroup&gt; VmSecrets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.ServiceFabric.Models.NodeTypeUpdateParameters.VmSecrets" />
      <MemberSignature Language="VB.NET" Value="Public Property VmSecrets As IList(Of VaultSecretGroup)" />
      <MemberSignature Language="F#" Value="member this.VmSecrets : System.Collections.Generic.IList&lt;Microsoft.Azure.Management.ServiceFabric.Models.VaultSecretGroup&gt; with get, set" Usage="Microsoft.Azure.Management.ServiceFabric.Models.NodeTypeUpdateParameters.VmSecrets" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ServiceFabric</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="properties.vmSecrets")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="properties.vmSecrets")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Azure.Management.ServiceFabric.Models.VaultSecretGroup&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets virtual machine secretes.
            </summary>
        <value>To be added.</value>
        <remarks>
            The secrets to install in the virtual machines.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>

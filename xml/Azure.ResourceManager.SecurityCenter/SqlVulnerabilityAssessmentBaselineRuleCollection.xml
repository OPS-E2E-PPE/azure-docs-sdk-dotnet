<Type Name="SqlVulnerabilityAssessmentBaselineRuleCollection" FullName="Azure.ResourceManager.SecurityCenter.SqlVulnerabilityAssessmentBaselineRuleCollection">
  <TypeSignature Language="C#" Value="public class SqlVulnerabilityAssessmentBaselineRuleCollection : Azure.ResourceManager.ArmCollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlVulnerabilityAssessmentBaselineRuleCollection extends Azure.ResourceManager.ArmCollection" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.SecurityCenter.SqlVulnerabilityAssessmentBaselineRuleCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlVulnerabilityAssessmentBaselineRuleCollection&#xA;Inherits ArmCollection" />
  <TypeSignature Language="F#" Value="type SqlVulnerabilityAssessmentBaselineRuleCollection = class&#xA;    inherit ArmCollection" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmCollection</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            A class representing a collection of <see cref="T:Azure.ResourceManager.SecurityCenter.SqlVulnerabilityAssessmentBaselineRuleResource" /> and their operations.
            Each <see cref="T:Azure.ResourceManager.SecurityCenter.SqlVulnerabilityAssessmentBaselineRuleResource" /> in the collection will belong to the same instance of <see cref="T:Azure.ResourceManager.ArmResource" />.
            To get a <see cref="T:Azure.ResourceManager.SecurityCenter.SqlVulnerabilityAssessmentBaselineRuleCollection" /> instance call the GetSqlVulnerabilityAssessmentBaselineRules method from an instance of <see cref="T:Azure.ResourceManager.ArmResource" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SqlVulnerabilityAssessmentBaselineRuleCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.SqlVulnerabilityAssessmentBaselineRuleCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.SecurityCenter.SqlVulnerabilityAssessmentBaselineRuleCollection" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdate">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.SecurityCenter.SqlVulnerabilityAssessmentBaselineRuleResource&gt; CreateOrUpdate (Azure.WaitUntil waitUntil, string ruleId, Guid workspaceId, Azure.ResourceManager.SecurityCenter.Models.SqlVulnerabilityAssessmentBaselineRuleCreateOrUpdateContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.SecurityCenter.SqlVulnerabilityAssessmentBaselineRuleResource&gt; CreateOrUpdate(valuetype Azure.WaitUntil waitUntil, string ruleId, valuetype System.Guid workspaceId, class Azure.ResourceManager.SecurityCenter.Models.SqlVulnerabilityAssessmentBaselineRuleCreateOrUpdateContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.SqlVulnerabilityAssessmentBaselineRuleCollection.CreateOrUpdate(Azure.WaitUntil,System.String,System.Guid,Azure.ResourceManager.SecurityCenter.Models.SqlVulnerabilityAssessmentBaselineRuleCreateOrUpdateContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdate (waitUntil As WaitUntil, ruleId As String, workspaceId As Guid, content As SqlVulnerabilityAssessmentBaselineRuleCreateOrUpdateContent, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of SqlVulnerabilityAssessmentBaselineRuleResource)" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdate : Azure.WaitUntil * string * Guid * Azure.ResourceManager.SecurityCenter.Models.SqlVulnerabilityAssessmentBaselineRuleCreateOrUpdateContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.SecurityCenter.SqlVulnerabilityAssessmentBaselineRuleResource&gt;&#xA;override this.CreateOrUpdate : Azure.WaitUntil * string * Guid * Azure.ResourceManager.SecurityCenter.Models.SqlVulnerabilityAssessmentBaselineRuleCreateOrUpdateContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.SecurityCenter.SqlVulnerabilityAssessmentBaselineRuleResource&gt;" Usage="sqlVulnerabilityAssessmentBaselineRuleCollection.CreateOrUpdate (waitUntil, ruleId, workspaceId, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.SecurityCenter.SqlVulnerabilityAssessmentBaselineRuleResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="ruleId" Type="System.String" />
        <Parameter Name="workspaceId" Type="System.Guid" />
        <Parameter Name="content" Type="Azure.ResourceManager.SecurityCenter.Models.SqlVulnerabilityAssessmentBaselineRuleCreateOrUpdateContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="ruleId"> The rule Id. </param>
        <param name="workspaceId"> The workspace Id. </param>
        <param name="content"> The baseline results for this rule. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Creates a Baseline for a rule in a database. Will overwrite any previously existing results.
            Request Path: /{resourceId}/providers/Microsoft.Security/sqlVulnerabilityAssessments/default/baselineRules/{ruleId}
            Operation Id: SqlVulnerabilityAssessmentBaselineRules_CreateOrUpdate
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="ruleId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="ruleId" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.SecurityCenter.SqlVulnerabilityAssessmentBaselineRuleResource&gt;&gt; CreateOrUpdateAsync (Azure.WaitUntil waitUntil, string ruleId, Guid workspaceId, Azure.ResourceManager.SecurityCenter.Models.SqlVulnerabilityAssessmentBaselineRuleCreateOrUpdateContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.SecurityCenter.SqlVulnerabilityAssessmentBaselineRuleResource&gt;&gt; CreateOrUpdateAsync(valuetype Azure.WaitUntil waitUntil, string ruleId, valuetype System.Guid workspaceId, class Azure.ResourceManager.SecurityCenter.Models.SqlVulnerabilityAssessmentBaselineRuleCreateOrUpdateContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.SqlVulnerabilityAssessmentBaselineRuleCollection.CreateOrUpdateAsync(Azure.WaitUntil,System.String,System.Guid,Azure.ResourceManager.SecurityCenter.Models.SqlVulnerabilityAssessmentBaselineRuleCreateOrUpdateContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdateAsync (waitUntil As WaitUntil, ruleId As String, workspaceId As Guid, content As SqlVulnerabilityAssessmentBaselineRuleCreateOrUpdateContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of SqlVulnerabilityAssessmentBaselineRuleResource))" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdateAsync : Azure.WaitUntil * string * Guid * Azure.ResourceManager.SecurityCenter.Models.SqlVulnerabilityAssessmentBaselineRuleCreateOrUpdateContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.SecurityCenter.SqlVulnerabilityAssessmentBaselineRuleResource&gt;&gt;&#xA;override this.CreateOrUpdateAsync : Azure.WaitUntil * string * Guid * Azure.ResourceManager.SecurityCenter.Models.SqlVulnerabilityAssessmentBaselineRuleCreateOrUpdateContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.SecurityCenter.SqlVulnerabilityAssessmentBaselineRuleResource&gt;&gt;" Usage="sqlVulnerabilityAssessmentBaselineRuleCollection.CreateOrUpdateAsync (waitUntil, ruleId, workspaceId, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.SecurityCenter.SqlVulnerabilityAssessmentBaselineRuleResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="ruleId" Type="System.String" />
        <Parameter Name="workspaceId" Type="System.Guid" />
        <Parameter Name="content" Type="Azure.ResourceManager.SecurityCenter.Models.SqlVulnerabilityAssessmentBaselineRuleCreateOrUpdateContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="ruleId"> The rule Id. </param>
        <param name="workspaceId"> The workspace Id. </param>
        <param name="content"> The baseline results for this rule. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Creates a Baseline for a rule in a database. Will overwrite any previously existing results.
            Request Path: /{resourceId}/providers/Microsoft.Security/sqlVulnerabilityAssessments/default/baselineRules/{ruleId}
            Operation Id: SqlVulnerabilityAssessmentBaselineRules_CreateOrUpdate
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="ruleId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="ruleId" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;bool&gt; Exists (string ruleId, Guid workspaceId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;bool&gt; Exists(string ruleId, valuetype System.Guid workspaceId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.SqlVulnerabilityAssessmentBaselineRuleCollection.Exists(System.String,System.Guid,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Exists (ruleId As String, workspaceId As Guid, Optional cancellationToken As CancellationToken = Nothing) As Response(Of Boolean)" />
      <MemberSignature Language="F#" Value="abstract member Exists : string * Guid * System.Threading.CancellationToken -&gt; Azure.Response&lt;bool&gt;&#xA;override this.Exists : string * Guid * System.Threading.CancellationToken -&gt; Azure.Response&lt;bool&gt;" Usage="sqlVulnerabilityAssessmentBaselineRuleCollection.Exists (ruleId, workspaceId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ruleId" Type="System.String" />
        <Parameter Name="workspaceId" Type="System.Guid" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="ruleId"> The rule Id. </param>
        <param name="workspaceId"> The workspace Id. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Checks to see if the resource exists in azure.
            Request Path: /{resourceId}/providers/Microsoft.Security/sqlVulnerabilityAssessments/default/baselineRules/{ruleId}
            Operation Id: SqlVulnerabilityAssessmentBaselineRules_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="ruleId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="ruleId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ExistsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt; ExistsAsync (string ruleId, Guid workspaceId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;bool&gt;&gt; ExistsAsync(string ruleId, valuetype System.Guid workspaceId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.SqlVulnerabilityAssessmentBaselineRuleCollection.ExistsAsync(System.String,System.Guid,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ExistsAsync (ruleId As String, workspaceId As Guid, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of Boolean))" />
      <MemberSignature Language="F#" Value="abstract member ExistsAsync : string * Guid * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt;&#xA;override this.ExistsAsync : string * Guid * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt;" Usage="sqlVulnerabilityAssessmentBaselineRuleCollection.ExistsAsync (ruleId, workspaceId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Boolean&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ruleId" Type="System.String" />
        <Parameter Name="workspaceId" Type="System.Guid" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="ruleId"> The rule Id. </param>
        <param name="workspaceId"> The workspace Id. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Checks to see if the resource exists in azure.
            Request Path: /{resourceId}/providers/Microsoft.Security/sqlVulnerabilityAssessments/default/baselineRules/{ruleId}
            Operation Id: SqlVulnerabilityAssessmentBaselineRules_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="ruleId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="ruleId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SqlVulnerabilityAssessmentBaselineRuleResource&gt; Get (string ruleId, Guid workspaceId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.SecurityCenter.SqlVulnerabilityAssessmentBaselineRuleResource&gt; Get(string ruleId, valuetype System.Guid workspaceId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.SqlVulnerabilityAssessmentBaselineRuleCollection.Get(System.String,System.Guid,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Get (ruleId As String, workspaceId As Guid, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SqlVulnerabilityAssessmentBaselineRuleResource)" />
      <MemberSignature Language="F#" Value="abstract member Get : string * Guid * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SqlVulnerabilityAssessmentBaselineRuleResource&gt;&#xA;override this.Get : string * Guid * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SqlVulnerabilityAssessmentBaselineRuleResource&gt;" Usage="sqlVulnerabilityAssessmentBaselineRuleCollection.Get (ruleId, workspaceId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SqlVulnerabilityAssessmentBaselineRuleResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ruleId" Type="System.String" />
        <Parameter Name="workspaceId" Type="System.Guid" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="ruleId"> The rule Id. </param>
        <param name="workspaceId"> The workspace Id. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the results for a given rule in the Baseline.
            Request Path: /{resourceId}/providers/Microsoft.Security/sqlVulnerabilityAssessments/default/baselineRules/{ruleId}
            Operation Id: SqlVulnerabilityAssessmentBaselineRules_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="ruleId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="ruleId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAll">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.SqlVulnerabilityAssessmentBaselineRuleResource&gt; GetAll (Guid workspaceId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.SecurityCenter.SqlVulnerabilityAssessmentBaselineRuleResource&gt; GetAll(valuetype System.Guid workspaceId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.SqlVulnerabilityAssessmentBaselineRuleCollection.GetAll(System.Guid,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAll (workspaceId As Guid, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of SqlVulnerabilityAssessmentBaselineRuleResource)" />
      <MemberSignature Language="F#" Value="abstract member GetAll : Guid * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.SqlVulnerabilityAssessmentBaselineRuleResource&gt;&#xA;override this.GetAll : Guid * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.SqlVulnerabilityAssessmentBaselineRuleResource&gt;" Usage="sqlVulnerabilityAssessmentBaselineRuleCollection.GetAll (workspaceId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.SqlVulnerabilityAssessmentBaselineRuleResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workspaceId" Type="System.Guid" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="workspaceId"> The workspace Id. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the results for all rules in the Baseline.
            Request Path: /{resourceId}/providers/Microsoft.Security/sqlVulnerabilityAssessments/default/baselineRules
            Operation Id: SqlVulnerabilityAssessmentBaselineRules_List
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.SecurityCenter.SqlVulnerabilityAssessmentBaselineRuleResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAll">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.SqlVulnerabilityAssessmentBaselineRuleResource&gt; GetAll (Guid workspaceId, Azure.ResourceManager.SecurityCenter.Models.RulesResultsContent content = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.SecurityCenter.SqlVulnerabilityAssessmentBaselineRuleResource&gt; GetAll(valuetype System.Guid workspaceId, class Azure.ResourceManager.SecurityCenter.Models.RulesResultsContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.SqlVulnerabilityAssessmentBaselineRuleCollection.GetAll(System.Guid,Azure.ResourceManager.SecurityCenter.Models.RulesResultsContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAll (workspaceId As Guid, Optional content As RulesResultsContent = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of SqlVulnerabilityAssessmentBaselineRuleResource)" />
      <MemberSignature Language="F#" Value="abstract member GetAll : Guid * Azure.ResourceManager.SecurityCenter.Models.RulesResultsContent * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.SqlVulnerabilityAssessmentBaselineRuleResource&gt;&#xA;override this.GetAll : Guid * Azure.ResourceManager.SecurityCenter.Models.RulesResultsContent * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.SqlVulnerabilityAssessmentBaselineRuleResource&gt;" Usage="sqlVulnerabilityAssessmentBaselineRuleCollection.GetAll (workspaceId, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.SqlVulnerabilityAssessmentBaselineRuleResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workspaceId" Type="System.Guid" />
        <Parameter Name="content" Type="Azure.ResourceManager.SecurityCenter.Models.RulesResultsContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="workspaceId"> The workspace Id. </param>
        <param name="content"> The baseline rules. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Add a list of baseline rules. Will overwrite any previously existing results (for all rules).
            Request Path: /{resourceId}/providers/Microsoft.Security/sqlVulnerabilityAssessments/default/baselineRules
            Operation Id: SqlVulnerabilityAssessmentBaselineRules_Add
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.SecurityCenter.SqlVulnerabilityAssessmentBaselineRuleResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.SqlVulnerabilityAssessmentBaselineRuleResource&gt; GetAllAsync (Guid workspaceId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.SecurityCenter.SqlVulnerabilityAssessmentBaselineRuleResource&gt; GetAllAsync(valuetype System.Guid workspaceId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.SqlVulnerabilityAssessmentBaselineRuleCollection.GetAllAsync(System.Guid,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAllAsync (workspaceId As Guid, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of SqlVulnerabilityAssessmentBaselineRuleResource)" />
      <MemberSignature Language="F#" Value="abstract member GetAllAsync : Guid * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.SqlVulnerabilityAssessmentBaselineRuleResource&gt;&#xA;override this.GetAllAsync : Guid * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.SqlVulnerabilityAssessmentBaselineRuleResource&gt;" Usage="sqlVulnerabilityAssessmentBaselineRuleCollection.GetAllAsync (workspaceId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.SqlVulnerabilityAssessmentBaselineRuleResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workspaceId" Type="System.Guid" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="workspaceId"> The workspace Id. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the results for all rules in the Baseline.
            Request Path: /{resourceId}/providers/Microsoft.Security/sqlVulnerabilityAssessments/default/baselineRules
            Operation Id: SqlVulnerabilityAssessmentBaselineRules_List
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.SecurityCenter.SqlVulnerabilityAssessmentBaselineRuleResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.SqlVulnerabilityAssessmentBaselineRuleResource&gt; GetAllAsync (Guid workspaceId, Azure.ResourceManager.SecurityCenter.Models.RulesResultsContent content = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.SecurityCenter.SqlVulnerabilityAssessmentBaselineRuleResource&gt; GetAllAsync(valuetype System.Guid workspaceId, class Azure.ResourceManager.SecurityCenter.Models.RulesResultsContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.SqlVulnerabilityAssessmentBaselineRuleCollection.GetAllAsync(System.Guid,Azure.ResourceManager.SecurityCenter.Models.RulesResultsContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAllAsync (workspaceId As Guid, Optional content As RulesResultsContent = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of SqlVulnerabilityAssessmentBaselineRuleResource)" />
      <MemberSignature Language="F#" Value="abstract member GetAllAsync : Guid * Azure.ResourceManager.SecurityCenter.Models.RulesResultsContent * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.SqlVulnerabilityAssessmentBaselineRuleResource&gt;&#xA;override this.GetAllAsync : Guid * Azure.ResourceManager.SecurityCenter.Models.RulesResultsContent * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.SqlVulnerabilityAssessmentBaselineRuleResource&gt;" Usage="sqlVulnerabilityAssessmentBaselineRuleCollection.GetAllAsync (workspaceId, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.SqlVulnerabilityAssessmentBaselineRuleResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workspaceId" Type="System.Guid" />
        <Parameter Name="content" Type="Azure.ResourceManager.SecurityCenter.Models.RulesResultsContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="workspaceId"> The workspace Id. </param>
        <param name="content"> The baseline rules. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Add a list of baseline rules. Will overwrite any previously existing results (for all rules).
            Request Path: /{resourceId}/providers/Microsoft.Security/sqlVulnerabilityAssessments/default/baselineRules
            Operation Id: SqlVulnerabilityAssessmentBaselineRules_Add
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.SecurityCenter.SqlVulnerabilityAssessmentBaselineRuleResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SqlVulnerabilityAssessmentBaselineRuleResource&gt;&gt; GetAsync (string ruleId, Guid workspaceId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.SecurityCenter.SqlVulnerabilityAssessmentBaselineRuleResource&gt;&gt; GetAsync(string ruleId, valuetype System.Guid workspaceId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.SqlVulnerabilityAssessmentBaselineRuleCollection.GetAsync(System.String,System.Guid,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAsync (ruleId As String, workspaceId As Guid, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SqlVulnerabilityAssessmentBaselineRuleResource))" />
      <MemberSignature Language="F#" Value="abstract member GetAsync : string * Guid * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SqlVulnerabilityAssessmentBaselineRuleResource&gt;&gt;&#xA;override this.GetAsync : string * Guid * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SqlVulnerabilityAssessmentBaselineRuleResource&gt;&gt;" Usage="sqlVulnerabilityAssessmentBaselineRuleCollection.GetAsync (ruleId, workspaceId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SqlVulnerabilityAssessmentBaselineRuleResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ruleId" Type="System.String" />
        <Parameter Name="workspaceId" Type="System.Guid" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="ruleId"> The rule Id. </param>
        <param name="workspaceId"> The workspace Id. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the results for a given rule in the Baseline.
            Request Path: /{resourceId}/providers/Microsoft.Security/sqlVulnerabilityAssessments/default/baselineRules/{ruleId}
            Operation Id: SqlVulnerabilityAssessmentBaselineRules_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="ruleId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="ruleId" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>

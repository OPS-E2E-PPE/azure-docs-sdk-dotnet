<Type Name="SecurityAssessmentCollection" FullName="Azure.ResourceManager.SecurityCenter.SecurityAssessmentCollection">
  <TypeSignature Language="C#" Value="public class SecurityAssessmentCollection : Azure.ResourceManager.ArmCollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SecurityAssessmentCollection extends Azure.ResourceManager.ArmCollection" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.SecurityCenter.SecurityAssessmentCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class SecurityAssessmentCollection&#xA;Inherits ArmCollection" />
  <TypeSignature Language="F#" Value="type SecurityAssessmentCollection = class&#xA;    inherit ArmCollection" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmCollection</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            A class representing a collection of <see cref="T:Azure.ResourceManager.SecurityCenter.SecurityAssessmentResource" /> and their operations.
            Each <see cref="T:Azure.ResourceManager.SecurityCenter.SecurityAssessmentResource" /> in the collection will belong to the same instance of <see cref="T:Azure.ResourceManager.ArmResource" />.
            To get a <see cref="T:Azure.ResourceManager.SecurityCenter.SecurityAssessmentCollection" /> instance call the GetSecurityAssessments method from an instance of <see cref="T:Azure.ResourceManager.ArmResource" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SecurityAssessmentCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.SecurityAssessmentCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.SecurityCenter.SecurityAssessmentCollection" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdate">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.SecurityCenter.SecurityAssessmentResource&gt; CreateOrUpdate (Azure.WaitUntil waitUntil, string assessmentName, Azure.ResourceManager.SecurityCenter.Models.SecurityAssessmentCreateOrUpdateContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.SecurityCenter.SecurityAssessmentResource&gt; CreateOrUpdate(valuetype Azure.WaitUntil waitUntil, string assessmentName, class Azure.ResourceManager.SecurityCenter.Models.SecurityAssessmentCreateOrUpdateContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.SecurityAssessmentCollection.CreateOrUpdate(Azure.WaitUntil,System.String,Azure.ResourceManager.SecurityCenter.Models.SecurityAssessmentCreateOrUpdateContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdate (waitUntil As WaitUntil, assessmentName As String, content As SecurityAssessmentCreateOrUpdateContent, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of SecurityAssessmentResource)" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdate : Azure.WaitUntil * string * Azure.ResourceManager.SecurityCenter.Models.SecurityAssessmentCreateOrUpdateContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.SecurityCenter.SecurityAssessmentResource&gt;&#xA;override this.CreateOrUpdate : Azure.WaitUntil * string * Azure.ResourceManager.SecurityCenter.Models.SecurityAssessmentCreateOrUpdateContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.SecurityCenter.SecurityAssessmentResource&gt;" Usage="securityAssessmentCollection.CreateOrUpdate (waitUntil, assessmentName, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.SecurityCenter.SecurityAssessmentResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="assessmentName" Type="System.String" />
        <Parameter Name="content" Type="Azure.ResourceManager.SecurityCenter.Models.SecurityAssessmentCreateOrUpdateContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="assessmentName"> The Assessment Key - Unique key for the assessment type. </param>
        <param name="content"> Calculated assessment on a pre-defined assessment metadata. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Create a security assessment on your resource. An assessment metadata that describes this assessment must be predefined with the same name before inserting the assessment result
            Request Path: /{resourceId}/providers/Microsoft.Security/assessments/{assessmentName}
            Operation Id: Assessments_CreateOrUpdate
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="assessmentName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="assessmentName" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.SecurityCenter.SecurityAssessmentResource&gt;&gt; CreateOrUpdateAsync (Azure.WaitUntil waitUntil, string assessmentName, Azure.ResourceManager.SecurityCenter.Models.SecurityAssessmentCreateOrUpdateContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.SecurityCenter.SecurityAssessmentResource&gt;&gt; CreateOrUpdateAsync(valuetype Azure.WaitUntil waitUntil, string assessmentName, class Azure.ResourceManager.SecurityCenter.Models.SecurityAssessmentCreateOrUpdateContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.SecurityAssessmentCollection.CreateOrUpdateAsync(Azure.WaitUntil,System.String,Azure.ResourceManager.SecurityCenter.Models.SecurityAssessmentCreateOrUpdateContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdateAsync (waitUntil As WaitUntil, assessmentName As String, content As SecurityAssessmentCreateOrUpdateContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of SecurityAssessmentResource))" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdateAsync : Azure.WaitUntil * string * Azure.ResourceManager.SecurityCenter.Models.SecurityAssessmentCreateOrUpdateContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.SecurityCenter.SecurityAssessmentResource&gt;&gt;&#xA;override this.CreateOrUpdateAsync : Azure.WaitUntil * string * Azure.ResourceManager.SecurityCenter.Models.SecurityAssessmentCreateOrUpdateContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.SecurityCenter.SecurityAssessmentResource&gt;&gt;" Usage="securityAssessmentCollection.CreateOrUpdateAsync (waitUntil, assessmentName, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.SecurityCenter.SecurityAssessmentResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="assessmentName" Type="System.String" />
        <Parameter Name="content" Type="Azure.ResourceManager.SecurityCenter.Models.SecurityAssessmentCreateOrUpdateContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="assessmentName"> The Assessment Key - Unique key for the assessment type. </param>
        <param name="content"> Calculated assessment on a pre-defined assessment metadata. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Create a security assessment on your resource. An assessment metadata that describes this assessment must be predefined with the same name before inserting the assessment result
            Request Path: /{resourceId}/providers/Microsoft.Security/assessments/{assessmentName}
            Operation Id: Assessments_CreateOrUpdate
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="assessmentName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="assessmentName" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;bool&gt; Exists (string assessmentName, Azure.ResourceManager.SecurityCenter.Models.SecurityAssessmentODataExpand? expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;bool&gt; Exists(string assessmentName, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.SecurityCenter.Models.SecurityAssessmentODataExpand&gt; expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.SecurityAssessmentCollection.Exists(System.String,System.Nullable{Azure.ResourceManager.SecurityCenter.Models.SecurityAssessmentODataExpand},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Exists (assessmentName As String, Optional expand As Nullable(Of SecurityAssessmentODataExpand) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of Boolean)" />
      <MemberSignature Language="F#" Value="abstract member Exists : string * Nullable&lt;Azure.ResourceManager.SecurityCenter.Models.SecurityAssessmentODataExpand&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;bool&gt;&#xA;override this.Exists : string * Nullable&lt;Azure.ResourceManager.SecurityCenter.Models.SecurityAssessmentODataExpand&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;bool&gt;" Usage="securityAssessmentCollection.Exists (assessmentName, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assessmentName" Type="System.String" />
        <Parameter Name="expand" Type="System.Nullable&lt;Azure.ResourceManager.SecurityCenter.Models.SecurityAssessmentODataExpand&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="assessmentName"> The Assessment Key - Unique key for the assessment type. </param>
        <param name="expand"> OData expand. Optional. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Checks to see if the resource exists in azure.
            Request Path: /{resourceId}/providers/Microsoft.Security/assessments/{assessmentName}
            Operation Id: Assessments_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="assessmentName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="assessmentName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ExistsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt; ExistsAsync (string assessmentName, Azure.ResourceManager.SecurityCenter.Models.SecurityAssessmentODataExpand? expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;bool&gt;&gt; ExistsAsync(string assessmentName, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.SecurityCenter.Models.SecurityAssessmentODataExpand&gt; expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.SecurityAssessmentCollection.ExistsAsync(System.String,System.Nullable{Azure.ResourceManager.SecurityCenter.Models.SecurityAssessmentODataExpand},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ExistsAsync (assessmentName As String, Optional expand As Nullable(Of SecurityAssessmentODataExpand) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of Boolean))" />
      <MemberSignature Language="F#" Value="abstract member ExistsAsync : string * Nullable&lt;Azure.ResourceManager.SecurityCenter.Models.SecurityAssessmentODataExpand&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt;&#xA;override this.ExistsAsync : string * Nullable&lt;Azure.ResourceManager.SecurityCenter.Models.SecurityAssessmentODataExpand&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt;" Usage="securityAssessmentCollection.ExistsAsync (assessmentName, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Boolean&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assessmentName" Type="System.String" />
        <Parameter Name="expand" Type="System.Nullable&lt;Azure.ResourceManager.SecurityCenter.Models.SecurityAssessmentODataExpand&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="assessmentName"> The Assessment Key - Unique key for the assessment type. </param>
        <param name="expand"> OData expand. Optional. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Checks to see if the resource exists in azure.
            Request Path: /{resourceId}/providers/Microsoft.Security/assessments/{assessmentName}
            Operation Id: Assessments_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="assessmentName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="assessmentName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecurityAssessmentResource&gt; Get (string assessmentName, Azure.ResourceManager.SecurityCenter.Models.SecurityAssessmentODataExpand? expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.SecurityCenter.SecurityAssessmentResource&gt; Get(string assessmentName, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.SecurityCenter.Models.SecurityAssessmentODataExpand&gt; expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.SecurityAssessmentCollection.Get(System.String,System.Nullable{Azure.ResourceManager.SecurityCenter.Models.SecurityAssessmentODataExpand},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Get (assessmentName As String, Optional expand As Nullable(Of SecurityAssessmentODataExpand) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SecurityAssessmentResource)" />
      <MemberSignature Language="F#" Value="abstract member Get : string * Nullable&lt;Azure.ResourceManager.SecurityCenter.Models.SecurityAssessmentODataExpand&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecurityAssessmentResource&gt;&#xA;override this.Get : string * Nullable&lt;Azure.ResourceManager.SecurityCenter.Models.SecurityAssessmentODataExpand&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecurityAssessmentResource&gt;" Usage="securityAssessmentCollection.Get (assessmentName, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecurityAssessmentResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assessmentName" Type="System.String" />
        <Parameter Name="expand" Type="System.Nullable&lt;Azure.ResourceManager.SecurityCenter.Models.SecurityAssessmentODataExpand&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="assessmentName"> The Assessment Key - Unique key for the assessment type. </param>
        <param name="expand"> OData expand. Optional. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a security assessment on your scanned resource
            Request Path: /{resourceId}/providers/Microsoft.Security/assessments/{assessmentName}
            Operation Id: Assessments_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="assessmentName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="assessmentName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecurityAssessmentResource&gt;&gt; GetAsync (string assessmentName, Azure.ResourceManager.SecurityCenter.Models.SecurityAssessmentODataExpand? expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.SecurityCenter.SecurityAssessmentResource&gt;&gt; GetAsync(string assessmentName, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.SecurityCenter.Models.SecurityAssessmentODataExpand&gt; expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.SecurityAssessmentCollection.GetAsync(System.String,System.Nullable{Azure.ResourceManager.SecurityCenter.Models.SecurityAssessmentODataExpand},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAsync (assessmentName As String, Optional expand As Nullable(Of SecurityAssessmentODataExpand) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SecurityAssessmentResource))" />
      <MemberSignature Language="F#" Value="abstract member GetAsync : string * Nullable&lt;Azure.ResourceManager.SecurityCenter.Models.SecurityAssessmentODataExpand&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecurityAssessmentResource&gt;&gt;&#xA;override this.GetAsync : string * Nullable&lt;Azure.ResourceManager.SecurityCenter.Models.SecurityAssessmentODataExpand&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecurityAssessmentResource&gt;&gt;" Usage="securityAssessmentCollection.GetAsync (assessmentName, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecurityAssessmentResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assessmentName" Type="System.String" />
        <Parameter Name="expand" Type="System.Nullable&lt;Azure.ResourceManager.SecurityCenter.Models.SecurityAssessmentODataExpand&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="assessmentName"> The Assessment Key - Unique key for the assessment type. </param>
        <param name="expand"> OData expand. Optional. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a security assessment on your scanned resource
            Request Path: /{resourceId}/providers/Microsoft.Security/assessments/{assessmentName}
            Operation Id: Assessments_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="assessmentName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="assessmentName" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>

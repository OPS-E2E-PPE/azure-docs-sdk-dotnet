<Type Name="SecurityAlertsSuppressionRuleCollection" FullName="Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleCollection">
  <TypeSignature Language="C#" Value="public class SecurityAlertsSuppressionRuleCollection : Azure.ResourceManager.ArmCollection, System.Collections.Generic.IAsyncEnumerable&lt;Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleResource&gt;, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleResource&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SecurityAlertsSuppressionRuleCollection extends Azure.ResourceManager.ArmCollection implements class System.Collections.Generic.IAsyncEnumerable`1&lt;class Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleResource&gt;, class System.Collections.Generic.IEnumerable`1&lt;class Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleResource&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class SecurityAlertsSuppressionRuleCollection&#xA;Inherits ArmCollection&#xA;Implements IAsyncEnumerable(Of SecurityAlertsSuppressionRuleResource), IEnumerable(Of SecurityAlertsSuppressionRuleResource)" />
  <TypeSignature Language="F#" Value="type SecurityAlertsSuppressionRuleCollection = class&#xA;    inherit ArmCollection&#xA;    interface seq&lt;SecurityAlertsSuppressionRuleResource&gt;&#xA;    interface IEnumerable&#xA;    interface IAsyncEnumerable&lt;SecurityAlertsSuppressionRuleResource&gt;" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmCollection</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IAsyncEnumerable&lt;Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleResource&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleResource&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            A class representing a collection of <see cref="T:Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleResource" /> and their operations.
            Each <see cref="T:Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleResource" /> in the collection will belong to the same instance of <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" />.
            To get a <see cref="T:Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleCollection" /> instance call the GetSecurityAlertsSuppressionRules method from an instance of <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SecurityAlertsSuppressionRuleCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleCollection" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdate">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleResource&gt; CreateOrUpdate (Azure.WaitUntil waitUntil, string alertsSuppressionRuleName, Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleData data, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleResource&gt; CreateOrUpdate(valuetype Azure.WaitUntil waitUntil, string alertsSuppressionRuleName, class Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleData data, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleCollection.CreateOrUpdate(Azure.WaitUntil,System.String,Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleData,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdate (waitUntil As WaitUntil, alertsSuppressionRuleName As String, data As SecurityAlertsSuppressionRuleData, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of SecurityAlertsSuppressionRuleResource)" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdate : Azure.WaitUntil * string * Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleData * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleResource&gt;&#xA;override this.CreateOrUpdate : Azure.WaitUntil * string * Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleData * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleResource&gt;" Usage="securityAlertsSuppressionRuleCollection.CreateOrUpdate (waitUntil, alertsSuppressionRuleName, data, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="alertsSuppressionRuleName" Type="System.String" />
        <Parameter Name="data" Type="Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleData" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="alertsSuppressionRuleName"> The unique name of the suppression alert rule. </param>
        <param name="data"> Suppression rule object. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Update existing rule or create new rule if it doesn't exist
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Security/alertsSuppressionRules/{alertsSuppressionRuleName}
            Operation Id: AlertsSuppressionRules_Update
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="alertsSuppressionRuleName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="alertsSuppressionRuleName" /> or <paramref name="data" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleResource&gt;&gt; CreateOrUpdateAsync (Azure.WaitUntil waitUntil, string alertsSuppressionRuleName, Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleData data, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleResource&gt;&gt; CreateOrUpdateAsync(valuetype Azure.WaitUntil waitUntil, string alertsSuppressionRuleName, class Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleData data, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleCollection.CreateOrUpdateAsync(Azure.WaitUntil,System.String,Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleData,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdateAsync (waitUntil As WaitUntil, alertsSuppressionRuleName As String, data As SecurityAlertsSuppressionRuleData, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of SecurityAlertsSuppressionRuleResource))" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdateAsync : Azure.WaitUntil * string * Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleData * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleResource&gt;&gt;&#xA;override this.CreateOrUpdateAsync : Azure.WaitUntil * string * Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleData * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleResource&gt;&gt;" Usage="securityAlertsSuppressionRuleCollection.CreateOrUpdateAsync (waitUntil, alertsSuppressionRuleName, data, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="alertsSuppressionRuleName" Type="System.String" />
        <Parameter Name="data" Type="Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleData" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="alertsSuppressionRuleName"> The unique name of the suppression alert rule. </param>
        <param name="data"> Suppression rule object. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Update existing rule or create new rule if it doesn't exist
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Security/alertsSuppressionRules/{alertsSuppressionRuleName}
            Operation Id: AlertsSuppressionRules_Update
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="alertsSuppressionRuleName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="alertsSuppressionRuleName" /> or <paramref name="data" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;bool&gt; Exists (string alertsSuppressionRuleName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;bool&gt; Exists(string alertsSuppressionRuleName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleCollection.Exists(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Exists (alertsSuppressionRuleName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of Boolean)" />
      <MemberSignature Language="F#" Value="abstract member Exists : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;bool&gt;&#xA;override this.Exists : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;bool&gt;" Usage="securityAlertsSuppressionRuleCollection.Exists (alertsSuppressionRuleName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="alertsSuppressionRuleName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="alertsSuppressionRuleName"> The unique name of the suppression alert rule. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Checks to see if the resource exists in azure.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Security/alertsSuppressionRules/{alertsSuppressionRuleName}
            Operation Id: AlertsSuppressionRules_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="alertsSuppressionRuleName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="alertsSuppressionRuleName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ExistsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt; ExistsAsync (string alertsSuppressionRuleName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;bool&gt;&gt; ExistsAsync(string alertsSuppressionRuleName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleCollection.ExistsAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ExistsAsync (alertsSuppressionRuleName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of Boolean))" />
      <MemberSignature Language="F#" Value="abstract member ExistsAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt;&#xA;override this.ExistsAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt;" Usage="securityAlertsSuppressionRuleCollection.ExistsAsync (alertsSuppressionRuleName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Boolean&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="alertsSuppressionRuleName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="alertsSuppressionRuleName"> The unique name of the suppression alert rule. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Checks to see if the resource exists in azure.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Security/alertsSuppressionRules/{alertsSuppressionRuleName}
            Operation Id: AlertsSuppressionRules_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="alertsSuppressionRuleName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="alertsSuppressionRuleName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleResource&gt; Get (string alertsSuppressionRuleName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleResource&gt; Get(string alertsSuppressionRuleName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleCollection.Get(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Get (alertsSuppressionRuleName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SecurityAlertsSuppressionRuleResource)" />
      <MemberSignature Language="F#" Value="abstract member Get : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleResource&gt;&#xA;override this.Get : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleResource&gt;" Usage="securityAlertsSuppressionRuleCollection.Get (alertsSuppressionRuleName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="alertsSuppressionRuleName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="alertsSuppressionRuleName"> The unique name of the suppression alert rule. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get dismiss rule, with name: {alertsSuppressionRuleName}, for the given subscription
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Security/alertsSuppressionRules/{alertsSuppressionRuleName}
            Operation Id: AlertsSuppressionRules_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="alertsSuppressionRuleName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="alertsSuppressionRuleName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAll">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleResource&gt; GetAll (string alertType = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleResource&gt; GetAll(string alertType, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleCollection.GetAll(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAll (Optional alertType As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of SecurityAlertsSuppressionRuleResource)" />
      <MemberSignature Language="F#" Value="abstract member GetAll : string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleResource&gt;&#xA;override this.GetAll : string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleResource&gt;" Usage="securityAlertsSuppressionRuleCollection.GetAll (alertType, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="alertType" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="alertType"> Type of the alert to get rules for. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List of all the dismiss rules for the given subscription
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Security/alertsSuppressionRules
            Operation Id: AlertsSuppressionRules_List
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleResource&gt; GetAllAsync (string alertType = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleResource&gt; GetAllAsync(string alertType, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleCollection.GetAllAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAllAsync (Optional alertType As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of SecurityAlertsSuppressionRuleResource)" />
      <MemberSignature Language="F#" Value="abstract member GetAllAsync : string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleResource&gt;&#xA;override this.GetAllAsync : string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleResource&gt;" Usage="securityAlertsSuppressionRuleCollection.GetAllAsync (alertType, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="alertType" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="alertType"> Type of the alert to get rules for. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List of all the dismiss rules for the given subscription
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Security/alertsSuppressionRules
            Operation Id: AlertsSuppressionRules_List
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleResource&gt;&gt; GetAsync (string alertsSuppressionRuleName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleResource&gt;&gt; GetAsync(string alertsSuppressionRuleName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleCollection.GetAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAsync (alertsSuppressionRuleName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SecurityAlertsSuppressionRuleResource))" />
      <MemberSignature Language="F#" Value="abstract member GetAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleResource&gt;&gt;&#xA;override this.GetAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleResource&gt;&gt;" Usage="securityAlertsSuppressionRuleCollection.GetAsync (alertsSuppressionRuleName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="alertsSuppressionRuleName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="alertsSuppressionRuleName"> The unique name of the suppression alert rule. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get dismiss rule, with name: {alertsSuppressionRuleName}, for the given subscription
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Security/alertsSuppressionRules/{alertsSuppressionRuleName}
            Operation Id: AlertsSuppressionRules_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="alertsSuppressionRuleName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="alertsSuppressionRuleName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IAsyncEnumerable&lt;Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleResource&gt;.GetAsyncEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IAsyncEnumerator&lt;Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleResource&gt; IAsyncEnumerable&lt;SecurityAlertsSuppressionRuleResource&gt;.GetAsyncEnumerator (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IAsyncEnumerator`1&lt;class Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleResource&gt; System.Collections.Generic.IAsyncEnumerable&lt;Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleResource&gt;.GetAsyncEnumerator(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleCollection.System#Collections#Generic#IAsyncEnumerable&lt;Azure#ResourceManager#SecurityCenter#SecurityAlertsSuppressionRuleResource&gt;#GetAsyncEnumerator(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Function GetAsyncEnumerator (cancellationToken As CancellationToken) As IAsyncEnumerator(Of SecurityAlertsSuppressionRuleResource) Implements IAsyncEnumerable(Of SecurityAlertsSuppressionRuleResource).GetAsyncEnumerator" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.Generic.IAsyncEnumerable&lt;Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleResource&gt;.GetAsyncEnumerator : System.Threading.CancellationToken -&gt; System.Collections.Generic.IAsyncEnumerator&lt;Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleResource&gt;&#xA;override this.System.Collections.Generic.IAsyncEnumerable&lt;Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleResource&gt;.GetAsyncEnumerator : System.Threading.CancellationToken -&gt; System.Collections.Generic.IAsyncEnumerator&lt;Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleResource&gt;" Usage="securityAlertsSuppressionRuleCollection.System.Collections.Generic.IAsyncEnumerable&lt;Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleResource&gt;.GetAsyncEnumerator cancellationToken" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IAsyncEnumerable`1.GetAsyncEnumerator(System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IAsyncEnumerator&lt;Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> that may be used to cancel the asynchronous iteration.</param>
        <summary>Returns an enumerator that iterates asynchronously through the collection.</summary>
        <returns>An enumerator that can be used to iterate asynchronously through the collection.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleResource&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleResource&gt; IEnumerable&lt;SecurityAlertsSuppressionRuleResource&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;class Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleResource&gt; System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleResource&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleCollection.System#Collections#Generic#IEnumerable&lt;Azure#ResourceManager#SecurityCenter#SecurityAlertsSuppressionRuleResource&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of SecurityAlertsSuppressionRuleResource) Implements IEnumerable(Of SecurityAlertsSuppressionRuleResource).GetEnumerator" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleResource&gt;.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleResource&gt;&#xA;override this.System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleResource&gt;.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleResource&gt;" Usage="securityAlertsSuppressionRuleCollection.System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleResource&gt;.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns an enumerator that iterates through the collection.</summary>
        <returns>An enumerator that can be used to iterate through the collection.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="securityAlertsSuppressionRuleCollection.System.Collections.IEnumerable.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns an enumerator that iterates through a collection.</summary>
        <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

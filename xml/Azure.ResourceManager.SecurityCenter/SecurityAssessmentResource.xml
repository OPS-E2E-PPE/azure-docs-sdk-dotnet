<Type Name="SecurityAssessmentResource" FullName="Azure.ResourceManager.SecurityCenter.SecurityAssessmentResource">
  <TypeSignature Language="C#" Value="public class SecurityAssessmentResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SecurityAssessmentResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.SecurityCenter.SecurityAssessmentResource" />
  <TypeSignature Language="VB.NET" Value="Public Class SecurityAssessmentResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type SecurityAssessmentResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            A Class representing a SecurityAssessment along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct a <see cref="T:Azure.ResourceManager.SecurityCenter.SecurityAssessmentResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetSecurityAssessmentResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.ArmResource" /> using the GetSecurityAssessment method.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SecurityAssessmentResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.SecurityAssessmentResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.SecurityCenter.SecurityAssessmentResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateResourceIdentifier">
      <MemberSignature Language="C#" Value="public static Azure.Core.ResourceIdentifier CreateResourceIdentifier (string resourceId, string assessmentName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Core.ResourceIdentifier CreateResourceIdentifier(string resourceId, string assessmentName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.SecurityAssessmentResource.CreateResourceIdentifier(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateResourceIdentifier (resourceId As String, assessmentName As String) As ResourceIdentifier" />
      <MemberSignature Language="F#" Value="static member CreateResourceIdentifier : string * string -&gt; Azure.Core.ResourceIdentifier" Usage="Azure.ResourceManager.SecurityCenter.SecurityAssessmentResource.CreateResourceIdentifier (resourceId, assessmentName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.ResourceIdentifier</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceId" Type="System.String" />
        <Parameter Name="assessmentName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="resourceId">To be added.</param>
        <param name="assessmentName">To be added.</param>
        <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.SecurityCenter.SecurityAssessmentResource" /> instance. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.SecurityCenter.SecurityAssessmentData Data { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.SecurityCenter.SecurityAssessmentData Data" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.SecurityCenter.SecurityAssessmentResource.Data" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Data As SecurityAssessmentData" />
      <MemberSignature Language="F#" Value="member this.Data : Azure.ResourceManager.SecurityCenter.SecurityAssessmentData" Usage="Azure.ResourceManager.SecurityCenter.SecurityAssessmentResource.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SecurityCenter.SecurityAssessmentData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets the data representing this Feature. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation Delete (Azure.WaitUntil waitUntil, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation Delete(valuetype Azure.WaitUntil waitUntil, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.SecurityAssessmentResource.Delete(Azure.WaitUntil,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Delete (waitUntil As WaitUntil, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation" />
      <MemberSignature Language="F#" Value="abstract member Delete : Azure.WaitUntil * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&#xA;override this.Delete : Azure.WaitUntil * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation" Usage="securityAssessmentResource.Delete (waitUntil, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Delete a security assessment on your resource. An assessment metadata that describes this assessment must be predefined with the same name before inserting the assessment result
            Request Path: /{resourceId}/providers/Microsoft.Security/assessments/{assessmentName}
            Operation Id: Assessments_Delete
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt; DeleteAsync (Azure.WaitUntil waitUntil, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation&gt; DeleteAsync(valuetype Azure.WaitUntil waitUntil, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.SecurityAssessmentResource.DeleteAsync(Azure.WaitUntil,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteAsync (waitUntil As WaitUntil, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation)" />
      <MemberSignature Language="F#" Value="abstract member DeleteAsync : Azure.WaitUntil * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;&#xA;override this.DeleteAsync : Azure.WaitUntil * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;" Usage="securityAssessmentResource.DeleteAsync (waitUntil, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Delete a security assessment on your resource. An assessment metadata that describes this assessment must be predefined with the same name before inserting the assessment result
            Request Path: /{resourceId}/providers/Microsoft.Security/assessments/{assessmentName}
            Operation Id: Assessments_Delete
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecurityAssessmentResource&gt; Get (Azure.ResourceManager.SecurityCenter.Models.SecurityAssessmentODataExpand? expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.SecurityCenter.SecurityAssessmentResource&gt; Get(valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.SecurityCenter.Models.SecurityAssessmentODataExpand&gt; expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.SecurityAssessmentResource.Get(System.Nullable{Azure.ResourceManager.SecurityCenter.Models.SecurityAssessmentODataExpand},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Get (Optional expand As Nullable(Of SecurityAssessmentODataExpand) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SecurityAssessmentResource)" />
      <MemberSignature Language="F#" Value="abstract member Get : Nullable&lt;Azure.ResourceManager.SecurityCenter.Models.SecurityAssessmentODataExpand&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecurityAssessmentResource&gt;&#xA;override this.Get : Nullable&lt;Azure.ResourceManager.SecurityCenter.Models.SecurityAssessmentODataExpand&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecurityAssessmentResource&gt;" Usage="securityAssessmentResource.Get (expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecurityAssessmentResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expand" Type="System.Nullable&lt;Azure.ResourceManager.SecurityCenter.Models.SecurityAssessmentODataExpand&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="expand"> OData expand. Optional. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a security assessment on your scanned resource
            Request Path: /{resourceId}/providers/Microsoft.Security/assessments/{assessmentName}
            Operation Id: Assessments_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecurityAssessmentResource&gt;&gt; GetAsync (Azure.ResourceManager.SecurityCenter.Models.SecurityAssessmentODataExpand? expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.SecurityCenter.SecurityAssessmentResource&gt;&gt; GetAsync(valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.SecurityCenter.Models.SecurityAssessmentODataExpand&gt; expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.SecurityAssessmentResource.GetAsync(System.Nullable{Azure.ResourceManager.SecurityCenter.Models.SecurityAssessmentODataExpand},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAsync (Optional expand As Nullable(Of SecurityAssessmentODataExpand) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SecurityAssessmentResource))" />
      <MemberSignature Language="F#" Value="abstract member GetAsync : Nullable&lt;Azure.ResourceManager.SecurityCenter.Models.SecurityAssessmentODataExpand&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecurityAssessmentResource&gt;&gt;&#xA;override this.GetAsync : Nullable&lt;Azure.ResourceManager.SecurityCenter.Models.SecurityAssessmentODataExpand&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecurityAssessmentResource&gt;&gt;" Usage="securityAssessmentResource.GetAsync (expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecurityAssessmentResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expand" Type="System.Nullable&lt;Azure.ResourceManager.SecurityCenter.Models.SecurityAssessmentODataExpand&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="expand"> OData expand. Optional. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a security assessment on your scanned resource
            Request Path: /{resourceId}/providers/Microsoft.Security/assessments/{assessmentName}
            Operation Id: Assessments_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGovernanceAssignment">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.SecurityCenter.GovernanceAssignmentResource&gt; GetGovernanceAssignment (string assignmentKey, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.SecurityCenter.GovernanceAssignmentResource&gt; GetGovernanceAssignment(string assignmentKey, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.SecurityAssessmentResource.GetGovernanceAssignment(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGovernanceAssignment (assignmentKey As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of GovernanceAssignmentResource)" />
      <MemberSignature Language="F#" Value="abstract member GetGovernanceAssignment : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SecurityCenter.GovernanceAssignmentResource&gt;&#xA;override this.GetGovernanceAssignment : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SecurityCenter.GovernanceAssignmentResource&gt;" Usage="securityAssessmentResource.GetGovernanceAssignment (assignmentKey, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.SecurityCenter.GovernanceAssignmentResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assignmentKey" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="assignmentKey"> The security governance assignment key - the assessment key of the required governance assignment. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a specific governanceAssignment for the requested scope by AssignmentKey
            Request Path: /{scope}/providers/Microsoft.Security/assessments/{assessmentName}/governanceAssignments/{assignmentKey}
            Operation Id: GovernanceAssignments_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="assignmentKey" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="assignmentKey" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetGovernanceAssignmentAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.GovernanceAssignmentResource&gt;&gt; GetGovernanceAssignmentAsync (string assignmentKey, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.SecurityCenter.GovernanceAssignmentResource&gt;&gt; GetGovernanceAssignmentAsync(string assignmentKey, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.SecurityAssessmentResource.GetGovernanceAssignmentAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGovernanceAssignmentAsync (assignmentKey As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of GovernanceAssignmentResource))" />
      <MemberSignature Language="F#" Value="abstract member GetGovernanceAssignmentAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.GovernanceAssignmentResource&gt;&gt;&#xA;override this.GetGovernanceAssignmentAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.GovernanceAssignmentResource&gt;&gt;" Usage="securityAssessmentResource.GetGovernanceAssignmentAsync (assignmentKey, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.GovernanceAssignmentResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assignmentKey" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="assignmentKey"> The security governance assignment key - the assessment key of the required governance assignment. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a specific governanceAssignment for the requested scope by AssignmentKey
            Request Path: /{scope}/providers/Microsoft.Security/assessments/{assessmentName}/governanceAssignments/{assignmentKey}
            Operation Id: GovernanceAssignments_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="assignmentKey" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="assignmentKey" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetGovernanceAssignments">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.SecurityCenter.GovernanceAssignmentCollection GetGovernanceAssignments ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.SecurityCenter.GovernanceAssignmentCollection GetGovernanceAssignments() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.SecurityAssessmentResource.GetGovernanceAssignments" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGovernanceAssignments () As GovernanceAssignmentCollection" />
      <MemberSignature Language="F#" Value="abstract member GetGovernanceAssignments : unit -&gt; Azure.ResourceManager.SecurityCenter.GovernanceAssignmentCollection&#xA;override this.GetGovernanceAssignments : unit -&gt; Azure.ResourceManager.SecurityCenter.GovernanceAssignmentCollection" Usage="securityAssessmentResource.GetGovernanceAssignments " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SecurityCenter.GovernanceAssignmentCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of GovernanceAssignmentResources in the SecurityAssessment. </summary>
        <returns> An object representing collection of GovernanceAssignmentResources and their operations over a GovernanceAssignmentResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSecuritySubAssessment">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecuritySubAssessmentResource&gt; GetSecuritySubAssessment (string subAssessmentName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.SecurityCenter.SecuritySubAssessmentResource&gt; GetSecuritySubAssessment(string subAssessmentName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.SecurityAssessmentResource.GetSecuritySubAssessment(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecuritySubAssessment (subAssessmentName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SecuritySubAssessmentResource)" />
      <MemberSignature Language="F#" Value="abstract member GetSecuritySubAssessment : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecuritySubAssessmentResource&gt;&#xA;override this.GetSecuritySubAssessment : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecuritySubAssessmentResource&gt;" Usage="securityAssessmentResource.GetSecuritySubAssessment (subAssessmentName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecuritySubAssessmentResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subAssessmentName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subAssessmentName"> The Sub-Assessment Key - Unique key for the sub-assessment type. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a security sub-assessment on your scanned resource
            Request Path: /{scope}/providers/Microsoft.Security/assessments/{assessmentName}/subAssessments/{subAssessmentName}
            Operation Id: SubAssessments_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="subAssessmentName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subAssessmentName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSecuritySubAssessmentAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecuritySubAssessmentResource&gt;&gt; GetSecuritySubAssessmentAsync (string subAssessmentName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.SecurityCenter.SecuritySubAssessmentResource&gt;&gt; GetSecuritySubAssessmentAsync(string subAssessmentName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.SecurityAssessmentResource.GetSecuritySubAssessmentAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecuritySubAssessmentAsync (subAssessmentName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SecuritySubAssessmentResource))" />
      <MemberSignature Language="F#" Value="abstract member GetSecuritySubAssessmentAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecuritySubAssessmentResource&gt;&gt;&#xA;override this.GetSecuritySubAssessmentAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecuritySubAssessmentResource&gt;&gt;" Usage="securityAssessmentResource.GetSecuritySubAssessmentAsync (subAssessmentName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecuritySubAssessmentResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subAssessmentName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subAssessmentName"> The Sub-Assessment Key - Unique key for the sub-assessment type. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a security sub-assessment on your scanned resource
            Request Path: /{scope}/providers/Microsoft.Security/assessments/{assessmentName}/subAssessments/{subAssessmentName}
            Operation Id: SubAssessments_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="subAssessmentName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subAssessmentName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSecuritySubAssessments">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.SecurityCenter.SecuritySubAssessmentCollection GetSecuritySubAssessments ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.SecurityCenter.SecuritySubAssessmentCollection GetSecuritySubAssessments() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.SecurityAssessmentResource.GetSecuritySubAssessments" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecuritySubAssessments () As SecuritySubAssessmentCollection" />
      <MemberSignature Language="F#" Value="abstract member GetSecuritySubAssessments : unit -&gt; Azure.ResourceManager.SecurityCenter.SecuritySubAssessmentCollection&#xA;override this.GetSecuritySubAssessments : unit -&gt; Azure.ResourceManager.SecurityCenter.SecuritySubAssessmentCollection" Usage="securityAssessmentResource.GetSecuritySubAssessments " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SecurityCenter.SecuritySubAssessmentCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of SecuritySubAssessmentResources in the SecurityAssessment. </summary>
        <returns> An object representing collection of SecuritySubAssessmentResources and their operations over a SecuritySubAssessmentResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasData">
      <MemberSignature Language="C#" Value="public virtual bool HasData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasData" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.SecurityCenter.SecurityAssessmentResource.HasData" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HasData As Boolean" />
      <MemberSignature Language="F#" Value="member this.HasData : bool" Usage="Azure.ResourceManager.SecurityCenter.SecurityAssessmentResource.HasData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets whether or not the current instance has data. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResourceType">
      <MemberSignature Language="C#" Value="public static readonly Azure.Core.ResourceType ResourceType;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype Azure.Core.ResourceType ResourceType" />
      <MemberSignature Language="DocId" Value="F:Azure.ResourceManager.SecurityCenter.SecurityAssessmentResource.ResourceType" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ResourceType As ResourceType " />
      <MemberSignature Language="F#" Value=" staticval mutable ResourceType : Azure.Core.ResourceType" Usage="Azure.ResourceManager.SecurityCenter.SecurityAssessmentResource.ResourceType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.ResourceType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets the resource type for the operations. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.SecurityCenter.SecurityAssessmentResource&gt; Update (Azure.WaitUntil waitUntil, Azure.ResourceManager.SecurityCenter.Models.SecurityAssessmentCreateOrUpdateContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.SecurityCenter.SecurityAssessmentResource&gt; Update(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.SecurityCenter.Models.SecurityAssessmentCreateOrUpdateContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.SecurityAssessmentResource.Update(Azure.WaitUntil,Azure.ResourceManager.SecurityCenter.Models.SecurityAssessmentCreateOrUpdateContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Update (waitUntil As WaitUntil, content As SecurityAssessmentCreateOrUpdateContent, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of SecurityAssessmentResource)" />
      <MemberSignature Language="F#" Value="abstract member Update : Azure.WaitUntil * Azure.ResourceManager.SecurityCenter.Models.SecurityAssessmentCreateOrUpdateContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.SecurityCenter.SecurityAssessmentResource&gt;&#xA;override this.Update : Azure.WaitUntil * Azure.ResourceManager.SecurityCenter.Models.SecurityAssessmentCreateOrUpdateContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.SecurityCenter.SecurityAssessmentResource&gt;" Usage="securityAssessmentResource.Update (waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.SecurityCenter.SecurityAssessmentResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="content" Type="Azure.ResourceManager.SecurityCenter.Models.SecurityAssessmentCreateOrUpdateContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> Calculated assessment on a pre-defined assessment metadata. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Create a security assessment on your resource. An assessment metadata that describes this assessment must be predefined with the same name before inserting the assessment result
            Request Path: /{resourceId}/providers/Microsoft.Security/assessments/{assessmentName}
            Operation Id: Assessments_CreateOrUpdate
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.SecurityCenter.SecurityAssessmentResource&gt;&gt; UpdateAsync (Azure.WaitUntil waitUntil, Azure.ResourceManager.SecurityCenter.Models.SecurityAssessmentCreateOrUpdateContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.SecurityCenter.SecurityAssessmentResource&gt;&gt; UpdateAsync(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.SecurityCenter.Models.SecurityAssessmentCreateOrUpdateContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.SecurityAssessmentResource.UpdateAsync(Azure.WaitUntil,Azure.ResourceManager.SecurityCenter.Models.SecurityAssessmentCreateOrUpdateContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateAsync (waitUntil As WaitUntil, content As SecurityAssessmentCreateOrUpdateContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of SecurityAssessmentResource))" />
      <MemberSignature Language="F#" Value="abstract member UpdateAsync : Azure.WaitUntil * Azure.ResourceManager.SecurityCenter.Models.SecurityAssessmentCreateOrUpdateContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.SecurityCenter.SecurityAssessmentResource&gt;&gt;&#xA;override this.UpdateAsync : Azure.WaitUntil * Azure.ResourceManager.SecurityCenter.Models.SecurityAssessmentCreateOrUpdateContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.SecurityCenter.SecurityAssessmentResource&gt;&gt;" Usage="securityAssessmentResource.UpdateAsync (waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.SecurityCenter.SecurityAssessmentResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="content" Type="Azure.ResourceManager.SecurityCenter.Models.SecurityAssessmentCreateOrUpdateContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> Calculated assessment on a pre-defined assessment metadata. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Create a security assessment on your resource. An assessment metadata that describes this assessment must be predefined with the same name before inserting the assessment result
            Request Path: /{resourceId}/providers/Microsoft.Security/assessments/{assessmentName}
            Operation Id: Assessments_CreateOrUpdate
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>

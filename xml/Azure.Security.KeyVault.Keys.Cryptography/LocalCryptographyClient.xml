<Type Name="LocalCryptographyClient" FullName="Azure.Security.KeyVault.Keys.Cryptography.LocalCryptographyClient">
  <TypeSignature Language="C#" Value="public class LocalCryptographyClient : Azure.Core.Cryptography.IKeyEncryptionKey" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LocalCryptographyClient extends System.Object implements class Azure.Core.Cryptography.IKeyEncryptionKey" />
  <TypeSignature Language="DocId" Value="T:Azure.Security.KeyVault.Keys.Cryptography.LocalCryptographyClient" />
  <TypeSignature Language="VB.NET" Value="Public Class LocalCryptographyClient&#xA;Implements IKeyEncryptionKey" />
  <TypeSignature Language="F#" Value="type LocalCryptographyClient = class&#xA;    interface IKeyEncryptionKey" />
  <AssemblyInfo>
    <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Azure.Core.Cryptography.IKeyEncryptionKey</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            A client used to perform local cryptographic operations without connecting to Azure Key Vault.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected LocalCryptographyClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Keys.Cryptography.LocalCryptographyClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.Security.KeyVault.Keys.Cryptography.LocalCryptographyClient" /> class for mocking.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LocalCryptographyClient (Azure.Security.KeyVault.Keys.JsonWebKey jsonWebKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Azure.Security.KeyVault.Keys.JsonWebKey jsonWebKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Keys.Cryptography.LocalCryptographyClient.#ctor(Azure.Security.KeyVault.Keys.JsonWebKey)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (jsonWebKey As JsonWebKey)" />
      <MemberSignature Language="F#" Value="new Azure.Security.KeyVault.Keys.Cryptography.LocalCryptographyClient : Azure.Security.KeyVault.Keys.JsonWebKey -&gt; Azure.Security.KeyVault.Keys.Cryptography.LocalCryptographyClient" Usage="new Azure.Security.KeyVault.Keys.Cryptography.LocalCryptographyClient jsonWebKey" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="jsonWebKey" Type="Azure.Security.KeyVault.Keys.JsonWebKey" />
      </Parameters>
      <Docs>
        <param name="jsonWebKey">A <see cref="T:Azure.Security.KeyVault.Keys.JsonWebKey" /> used for cryptographic operations.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.Security.KeyVault.Keys.Cryptography.LocalCryptographyClient" /> class.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="jsonWebKey" /> is null.</exception>
        <exception cref="T:System.NotSupportedException">The <paramref name="jsonWebKey" /> has a <see cref="P:Azure.Security.KeyVault.Keys.JsonWebKey.KeyType" /> that is not supported.</exception>
      </Docs>
    </Member>
    <Member MemberName="Azure.Core.Cryptography.IKeyEncryptionKey.UnwrapKey">
      <MemberSignature Language="C#" Value="byte[] IKeyEncryptionKey.UnwrapKey (string algorithm, ReadOnlyMemory&lt;byte&gt; encryptedKey, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int8[] Azure.Core.Cryptography.IKeyEncryptionKey.UnwrapKey(string algorithm, valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt; encryptedKey, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Keys.Cryptography.LocalCryptographyClient.Azure#Core#Cryptography#IKeyEncryptionKey#UnwrapKey(System.String,System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Function UnwrapKey (algorithm As String, encryptedKey As ReadOnlyMemory(Of Byte), cancellationToken As CancellationToken) As Byte() Implements IKeyEncryptionKey.UnwrapKey" />
      <MemberSignature Language="F#" Value="abstract member Azure.Core.Cryptography.IKeyEncryptionKey.UnwrapKey : string * ReadOnlyMemory&lt;byte&gt; * System.Threading.CancellationToken -&gt; byte[]&#xA;override this.Azure.Core.Cryptography.IKeyEncryptionKey.UnwrapKey : string * ReadOnlyMemory&lt;byte&gt; * System.Threading.CancellationToken -&gt; byte[]" Usage="localCryptographyClient.Azure.Core.Cryptography.IKeyEncryptionKey.UnwrapKey (algorithm, encryptedKey, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Azure.Core.Cryptography.IKeyEncryptionKey.UnwrapKey(System.String,System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
        <Parameter Name="encryptedKey" Type="System.ReadOnlyMemory&lt;System.Byte&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="algorithm">To be added.</param>
        <param name="encryptedKey">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Azure.Core.Cryptography.IKeyEncryptionKey.UnwrapKeyAsync">
      <MemberSignature Language="C#" Value="System.Threading.Tasks.Task&lt;byte[]&gt; IKeyEncryptionKey.UnwrapKeyAsync (string algorithm, ReadOnlyMemory&lt;byte&gt; encryptedKey, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; Azure.Core.Cryptography.IKeyEncryptionKey.UnwrapKeyAsync(string algorithm, valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt; encryptedKey, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Keys.Cryptography.LocalCryptographyClient.Azure#Core#Cryptography#IKeyEncryptionKey#UnwrapKeyAsync(System.String,System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Function UnwrapKeyAsync (algorithm As String, encryptedKey As ReadOnlyMemory(Of Byte), cancellationToken As CancellationToken) As Task(Of Byte()) Implements IKeyEncryptionKey.UnwrapKeyAsync" />
      <MemberSignature Language="F#" Value="abstract member Azure.Core.Cryptography.IKeyEncryptionKey.UnwrapKeyAsync : string * ReadOnlyMemory&lt;byte&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;&#xA;override this.Azure.Core.Cryptography.IKeyEncryptionKey.UnwrapKeyAsync : string * ReadOnlyMemory&lt;byte&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;" Usage="localCryptographyClient.Azure.Core.Cryptography.IKeyEncryptionKey.UnwrapKeyAsync (algorithm, encryptedKey, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Azure.Core.Cryptography.IKeyEncryptionKey.UnwrapKeyAsync(System.String,System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
        <Parameter Name="encryptedKey" Type="System.ReadOnlyMemory&lt;System.Byte&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="algorithm">To be added.</param>
        <param name="encryptedKey">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Azure.Core.Cryptography.IKeyEncryptionKey.WrapKey">
      <MemberSignature Language="C#" Value="byte[] IKeyEncryptionKey.WrapKey (string algorithm, ReadOnlyMemory&lt;byte&gt; key, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int8[] Azure.Core.Cryptography.IKeyEncryptionKey.WrapKey(string algorithm, valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt; key, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Keys.Cryptography.LocalCryptographyClient.Azure#Core#Cryptography#IKeyEncryptionKey#WrapKey(System.String,System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Function WrapKey (algorithm As String, key As ReadOnlyMemory(Of Byte), cancellationToken As CancellationToken) As Byte() Implements IKeyEncryptionKey.WrapKey" />
      <MemberSignature Language="F#" Value="abstract member Azure.Core.Cryptography.IKeyEncryptionKey.WrapKey : string * ReadOnlyMemory&lt;byte&gt; * System.Threading.CancellationToken -&gt; byte[]&#xA;override this.Azure.Core.Cryptography.IKeyEncryptionKey.WrapKey : string * ReadOnlyMemory&lt;byte&gt; * System.Threading.CancellationToken -&gt; byte[]" Usage="localCryptographyClient.Azure.Core.Cryptography.IKeyEncryptionKey.WrapKey (algorithm, key, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Azure.Core.Cryptography.IKeyEncryptionKey.WrapKey(System.String,System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
        <Parameter Name="key" Type="System.ReadOnlyMemory&lt;System.Byte&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="algorithm">To be added.</param>
        <param name="key">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Azure.Core.Cryptography.IKeyEncryptionKey.WrapKeyAsync">
      <MemberSignature Language="C#" Value="System.Threading.Tasks.Task&lt;byte[]&gt; IKeyEncryptionKey.WrapKeyAsync (string algorithm, ReadOnlyMemory&lt;byte&gt; key, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; Azure.Core.Cryptography.IKeyEncryptionKey.WrapKeyAsync(string algorithm, valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt; key, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Keys.Cryptography.LocalCryptographyClient.Azure#Core#Cryptography#IKeyEncryptionKey#WrapKeyAsync(System.String,System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Function WrapKeyAsync (algorithm As String, key As ReadOnlyMemory(Of Byte), cancellationToken As CancellationToken) As Task(Of Byte()) Implements IKeyEncryptionKey.WrapKeyAsync" />
      <MemberSignature Language="F#" Value="abstract member Azure.Core.Cryptography.IKeyEncryptionKey.WrapKeyAsync : string * ReadOnlyMemory&lt;byte&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;&#xA;override this.Azure.Core.Cryptography.IKeyEncryptionKey.WrapKeyAsync : string * ReadOnlyMemory&lt;byte&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;" Usage="localCryptographyClient.Azure.Core.Cryptography.IKeyEncryptionKey.WrapKeyAsync (algorithm, key, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Azure.Core.Cryptography.IKeyEncryptionKey.WrapKeyAsync(System.String,System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
        <Parameter Name="key" Type="System.ReadOnlyMemory&lt;System.Byte&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="algorithm">To be added.</param>
        <param name="key">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Decrypt">
      <MemberSignature Language="C#" Value="public virtual Azure.Security.KeyVault.Keys.Cryptography.DecryptResult Decrypt (Azure.Security.KeyVault.Keys.Cryptography.EncryptionAlgorithm algorithm, byte[] ciphertext, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Security.KeyVault.Keys.Cryptography.DecryptResult Decrypt(valuetype Azure.Security.KeyVault.Keys.Cryptography.EncryptionAlgorithm algorithm, unsigned int8[] ciphertext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Keys.Cryptography.LocalCryptographyClient.Decrypt(Azure.Security.KeyVault.Keys.Cryptography.EncryptionAlgorithm,System.Byte[],System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Decrypt (algorithm As EncryptionAlgorithm, ciphertext As Byte(), Optional cancellationToken As CancellationToken = Nothing) As DecryptResult" />
      <MemberSignature Language="F#" Value="abstract member Decrypt : Azure.Security.KeyVault.Keys.Cryptography.EncryptionAlgorithm * byte[] * System.Threading.CancellationToken -&gt; Azure.Security.KeyVault.Keys.Cryptography.DecryptResult&#xA;override this.Decrypt : Azure.Security.KeyVault.Keys.Cryptography.EncryptionAlgorithm * byte[] * System.Threading.CancellationToken -&gt; Azure.Security.KeyVault.Keys.Cryptography.DecryptResult" Usage="localCryptographyClient.Decrypt (algorithm, ciphertext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Security.KeyVault.Keys.Cryptography.DecryptResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="Azure.Security.KeyVault.Keys.Cryptography.EncryptionAlgorithm" />
        <Parameter Name="ciphertext" Type="System.Byte[]" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="algorithm">The <see cref="T:Azure.Security.KeyVault.Keys.Cryptography.EncryptionAlgorithm" /> to use.</param>
        <param name="ciphertext">The encrypted data to decrypt.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to cancel the operation.</param>
        <summary>
            Decrypts the specified cipher text.
            </summary>
        <returns>
            The result of the decrypt operation. The returned <see cref="T:Azure.Security.KeyVault.Keys.Cryptography.DecryptResult" /> contains the encrypted data
            along with information regarding the algorithm and key used to decrypt it.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">The specified <paramref name="algorithm" /> does not match the key corresponding to the key identifier.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">The local cryptographic provider threw an exception.</exception>
        <exception cref="T:System.InvalidOperationException">The key is invalid for the current operation.</exception>
        <exception cref="T:System.NotSupportedException">The operation is not supported with the specified key.</exception>
      </Docs>
    </Member>
    <Member MemberName="DecryptAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Security.KeyVault.Keys.Cryptography.DecryptResult&gt; DecryptAsync (Azure.Security.KeyVault.Keys.Cryptography.EncryptionAlgorithm algorithm, byte[] ciphertext, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Security.KeyVault.Keys.Cryptography.DecryptResult&gt; DecryptAsync(valuetype Azure.Security.KeyVault.Keys.Cryptography.EncryptionAlgorithm algorithm, unsigned int8[] ciphertext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Keys.Cryptography.LocalCryptographyClient.DecryptAsync(Azure.Security.KeyVault.Keys.Cryptography.EncryptionAlgorithm,System.Byte[],System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DecryptAsync (algorithm As EncryptionAlgorithm, ciphertext As Byte(), Optional cancellationToken As CancellationToken = Nothing) As Task(Of DecryptResult)" />
      <MemberSignature Language="F#" Value="abstract member DecryptAsync : Azure.Security.KeyVault.Keys.Cryptography.EncryptionAlgorithm * byte[] * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Security.KeyVault.Keys.Cryptography.DecryptResult&gt;&#xA;override this.DecryptAsync : Azure.Security.KeyVault.Keys.Cryptography.EncryptionAlgorithm * byte[] * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Security.KeyVault.Keys.Cryptography.DecryptResult&gt;" Usage="localCryptographyClient.DecryptAsync (algorithm, ciphertext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Security.KeyVault.Keys.Cryptography.DecryptResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="Azure.Security.KeyVault.Keys.Cryptography.EncryptionAlgorithm" />
        <Parameter Name="ciphertext" Type="System.Byte[]" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="algorithm">The <see cref="T:Azure.Security.KeyVault.Keys.Cryptography.EncryptionAlgorithm" /> to use.</param>
        <param name="ciphertext">The encrypted data to decrypt.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to cancel the operation.</param>
        <summary>
            Decrypts the specified cipher text.
            </summary>
        <returns>
            The result of the decrypt operation. The returned <see cref="T:Azure.Security.KeyVault.Keys.Cryptography.DecryptResult" /> contains the encrypted data
            along with information regarding the algorithm and key used to decrypt it.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">The specified <paramref name="algorithm" /> does not match the key corresponding to the key identifier.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">The local cryptographic provider threw an exception.</exception>
        <exception cref="T:System.InvalidOperationException">The key is invalid for the current operation.</exception>
        <exception cref="T:System.NotSupportedException">The operation is not supported with the specified key.</exception>
      </Docs>
    </Member>
    <Member MemberName="Encrypt">
      <MemberSignature Language="C#" Value="public virtual Azure.Security.KeyVault.Keys.Cryptography.EncryptResult Encrypt (Azure.Security.KeyVault.Keys.Cryptography.EncryptionAlgorithm algorithm, byte[] plaintext, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Security.KeyVault.Keys.Cryptography.EncryptResult Encrypt(valuetype Azure.Security.KeyVault.Keys.Cryptography.EncryptionAlgorithm algorithm, unsigned int8[] plaintext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Keys.Cryptography.LocalCryptographyClient.Encrypt(Azure.Security.KeyVault.Keys.Cryptography.EncryptionAlgorithm,System.Byte[],System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Encrypt (algorithm As EncryptionAlgorithm, plaintext As Byte(), Optional cancellationToken As CancellationToken = Nothing) As EncryptResult" />
      <MemberSignature Language="F#" Value="abstract member Encrypt : Azure.Security.KeyVault.Keys.Cryptography.EncryptionAlgorithm * byte[] * System.Threading.CancellationToken -&gt; Azure.Security.KeyVault.Keys.Cryptography.EncryptResult&#xA;override this.Encrypt : Azure.Security.KeyVault.Keys.Cryptography.EncryptionAlgorithm * byte[] * System.Threading.CancellationToken -&gt; Azure.Security.KeyVault.Keys.Cryptography.EncryptResult" Usage="localCryptographyClient.Encrypt (algorithm, plaintext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Security.KeyVault.Keys.Cryptography.EncryptResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="Azure.Security.KeyVault.Keys.Cryptography.EncryptionAlgorithm" />
        <Parameter Name="plaintext" Type="System.Byte[]" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="algorithm">The <see cref="T:Azure.Security.KeyVault.Keys.Cryptography.EncryptionAlgorithm" /> to use.</param>
        <param name="plaintext">The data to encrypt.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to cancel the operation.</param>
        <summary>
            Encrypts the specified plain text.
            </summary>
        <returns>
            The result of the encrypt operation. The returned <see cref="T:Azure.Security.KeyVault.Keys.Cryptography.EncryptResult" /> contains the encrypted data
            along with all other information needed to decrypt it. This information should be stored with the encrypted data.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">The specified <paramref name="algorithm" /> does not match the key corresponding to the key identifier.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">The local cryptographic provider threw an exception.</exception>
        <exception cref="T:System.InvalidOperationException">The key is invalid for the current operation.</exception>
        <exception cref="T:System.NotSupportedException">The operation is not supported with the specified key.</exception>
      </Docs>
    </Member>
    <Member MemberName="EncryptAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Security.KeyVault.Keys.Cryptography.EncryptResult&gt; EncryptAsync (Azure.Security.KeyVault.Keys.Cryptography.EncryptionAlgorithm algorithm, byte[] plaintext, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Security.KeyVault.Keys.Cryptography.EncryptResult&gt; EncryptAsync(valuetype Azure.Security.KeyVault.Keys.Cryptography.EncryptionAlgorithm algorithm, unsigned int8[] plaintext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Keys.Cryptography.LocalCryptographyClient.EncryptAsync(Azure.Security.KeyVault.Keys.Cryptography.EncryptionAlgorithm,System.Byte[],System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EncryptAsync (algorithm As EncryptionAlgorithm, plaintext As Byte(), Optional cancellationToken As CancellationToken = Nothing) As Task(Of EncryptResult)" />
      <MemberSignature Language="F#" Value="abstract member EncryptAsync : Azure.Security.KeyVault.Keys.Cryptography.EncryptionAlgorithm * byte[] * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Security.KeyVault.Keys.Cryptography.EncryptResult&gt;&#xA;override this.EncryptAsync : Azure.Security.KeyVault.Keys.Cryptography.EncryptionAlgorithm * byte[] * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Security.KeyVault.Keys.Cryptography.EncryptResult&gt;" Usage="localCryptographyClient.EncryptAsync (algorithm, plaintext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Security.KeyVault.Keys.Cryptography.EncryptResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="Azure.Security.KeyVault.Keys.Cryptography.EncryptionAlgorithm" />
        <Parameter Name="plaintext" Type="System.Byte[]" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="algorithm">The <see cref="T:Azure.Security.KeyVault.Keys.Cryptography.EncryptionAlgorithm" /> to use.</param>
        <param name="plaintext">The data to encrypt.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to cancel the operation.</param>
        <summary>
            Encrypts the specified plain text.
            </summary>
        <returns>
            The result of the encrypt operation. The returned <see cref="T:Azure.Security.KeyVault.Keys.Cryptography.EncryptResult" /> contains the encrypted data
            along with all other information needed to decrypt it. This information should be stored with the encrypted data.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">The specified <paramref name="algorithm" /> does not match the key corresponding to the key identifier.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">The local cryptographic provider threw an exception.</exception>
        <exception cref="T:System.InvalidOperationException">The key is invalid for the current operation.</exception>
        <exception cref="T:System.NotSupportedException">The operation is not supported with the specified key.</exception>
      </Docs>
    </Member>
    <Member MemberName="KeyId">
      <MemberSignature Language="C#" Value="public string KeyId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string KeyId" />
      <MemberSignature Language="DocId" Value="P:Azure.Security.KeyVault.Keys.Cryptography.LocalCryptographyClient.KeyId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyId As String" />
      <MemberSignature Language="F#" Value="member this.KeyId : string" Usage="Azure.Security.KeyVault.Keys.Cryptography.LocalCryptographyClient.KeyId" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Azure.Core.Cryptography.IKeyEncryptionKey.KeyId</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the <see cref="P:Azure.Security.KeyVault.Keys.JsonWebKey.Id" /> of the key used to perform local cryptographic operations for the client.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public virtual Azure.Security.KeyVault.Keys.Cryptography.SignResult Sign (Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm algorithm, byte[] digest, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Security.KeyVault.Keys.Cryptography.SignResult Sign(valuetype Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm algorithm, unsigned int8[] digest, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Keys.Cryptography.LocalCryptographyClient.Sign(Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm,System.Byte[],System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Sign (algorithm As SignatureAlgorithm, digest As Byte(), Optional cancellationToken As CancellationToken = Nothing) As SignResult" />
      <MemberSignature Language="F#" Value="abstract member Sign : Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm * byte[] * System.Threading.CancellationToken -&gt; Azure.Security.KeyVault.Keys.Cryptography.SignResult&#xA;override this.Sign : Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm * byte[] * System.Threading.CancellationToken -&gt; Azure.Security.KeyVault.Keys.Cryptography.SignResult" Usage="localCryptographyClient.Sign (algorithm, digest, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Security.KeyVault.Keys.Cryptography.SignResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm" />
        <Parameter Name="digest" Type="System.Byte[]" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="algorithm">The <see cref="T:Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm" /> to use.</param>
        <param name="digest">The pre-hashed digest to sign. The hash algorithm used to compute the digest must be compatable with the specified algorithm.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to cancel the operation.</param>
        <summary>
            Signs the specified digest.
            </summary>
        <returns>
            The result of the sign operation. The returned <see cref="T:Azure.Security.KeyVault.Keys.Cryptography.SignResult" /> contains the signature
            along with all other information needed to verify it. This information should be stored with the signature.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">The specified <paramref name="algorithm" /> does not match the key corresponding to the key identifier.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">The local cryptographic provider threw an exception.</exception>
        <exception cref="T:System.InvalidOperationException">The key is invalid for the current operation.</exception>
        <exception cref="T:System.NotSupportedException">The operation is not supported with the specified key.</exception>
      </Docs>
    </Member>
    <Member MemberName="SignAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Security.KeyVault.Keys.Cryptography.SignResult&gt; SignAsync (Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm algorithm, byte[] digest, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Security.KeyVault.Keys.Cryptography.SignResult&gt; SignAsync(valuetype Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm algorithm, unsigned int8[] digest, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Keys.Cryptography.LocalCryptographyClient.SignAsync(Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm,System.Byte[],System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SignAsync (algorithm As SignatureAlgorithm, digest As Byte(), Optional cancellationToken As CancellationToken = Nothing) As Task(Of SignResult)" />
      <MemberSignature Language="F#" Value="abstract member SignAsync : Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm * byte[] * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Security.KeyVault.Keys.Cryptography.SignResult&gt;&#xA;override this.SignAsync : Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm * byte[] * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Security.KeyVault.Keys.Cryptography.SignResult&gt;" Usage="localCryptographyClient.SignAsync (algorithm, digest, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Security.KeyVault.Keys.Cryptography.SignResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm" />
        <Parameter Name="digest" Type="System.Byte[]" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="algorithm">The <see cref="T:Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm" /> to use.</param>
        <param name="digest">The pre-hashed digest to sign. The hash algorithm used to compute the digest must be compatable with the specified algorithm.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to cancel the operation.</param>
        <summary>
            Signs the specified digest.
            </summary>
        <returns>
            The result of the sign operation. The returned <see cref="T:Azure.Security.KeyVault.Keys.Cryptography.SignResult" /> contains the signature
            along with all other information needed to verify it. This information should be stored with the signature.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">The specified <paramref name="algorithm" /> does not match the key corresponding to the key identifier.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">The local cryptographic provider threw an exception.</exception>
        <exception cref="T:System.InvalidOperationException">The key is invalid for the current operation.</exception>
        <exception cref="T:System.NotSupportedException">The operation is not supported with the specified key.</exception>
      </Docs>
    </Member>
    <Member MemberName="SignData">
      <MemberSignature Language="C#" Value="public virtual Azure.Security.KeyVault.Keys.Cryptography.SignResult SignData (Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm algorithm, byte[] data, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Security.KeyVault.Keys.Cryptography.SignResult SignData(valuetype Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm algorithm, unsigned int8[] data, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Keys.Cryptography.LocalCryptographyClient.SignData(Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm,System.Byte[],System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SignData (algorithm As SignatureAlgorithm, data As Byte(), Optional cancellationToken As CancellationToken = Nothing) As SignResult" />
      <MemberSignature Language="F#" Value="abstract member SignData : Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm * byte[] * System.Threading.CancellationToken -&gt; Azure.Security.KeyVault.Keys.Cryptography.SignResult&#xA;override this.SignData : Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm * byte[] * System.Threading.CancellationToken -&gt; Azure.Security.KeyVault.Keys.Cryptography.SignResult" Usage="localCryptographyClient.SignData (algorithm, data, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Security.KeyVault.Keys.Cryptography.SignResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm" />
        <Parameter Name="data" Type="System.Byte[]" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="algorithm">The <see cref="T:Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm" /> to use.</param>
        <param name="data">The data to sign.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to cancel the operation.</param>
        <summary>
            Signs the specified data.
            </summary>
        <returns>
            The result of the sign operation. The returned <see cref="T:Azure.Security.KeyVault.Keys.Cryptography.SignResult" /> contains the signature
            along with all other information needed to verify it. This information should be stored with the signature.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">The specified <paramref name="algorithm" /> does not match the key corresponding to the key identifier.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">The local cryptographic provider threw an exception.</exception>
        <exception cref="T:System.InvalidOperationException">The key is invalid for the current operation.</exception>
        <exception cref="T:System.NotSupportedException">The operation is not supported with the specified key.</exception>
      </Docs>
    </Member>
    <Member MemberName="SignData">
      <MemberSignature Language="C#" Value="public virtual Azure.Security.KeyVault.Keys.Cryptography.SignResult SignData (Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm algorithm, System.IO.Stream data, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Security.KeyVault.Keys.Cryptography.SignResult SignData(valuetype Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm algorithm, class System.IO.Stream data, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Keys.Cryptography.LocalCryptographyClient.SignData(Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm,System.IO.Stream,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SignData (algorithm As SignatureAlgorithm, data As Stream, Optional cancellationToken As CancellationToken = Nothing) As SignResult" />
      <MemberSignature Language="F#" Value="abstract member SignData : Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm * System.IO.Stream * System.Threading.CancellationToken -&gt; Azure.Security.KeyVault.Keys.Cryptography.SignResult&#xA;override this.SignData : Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm * System.IO.Stream * System.Threading.CancellationToken -&gt; Azure.Security.KeyVault.Keys.Cryptography.SignResult" Usage="localCryptographyClient.SignData (algorithm, data, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Security.KeyVault.Keys.Cryptography.SignResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm" />
        <Parameter Name="data" Type="System.IO.Stream" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="algorithm">The <see cref="T:Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm" /> to use.</param>
        <param name="data">The data to sign.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to cancel the operation.</param>
        <summary>
            Signs the specified data.
            </summary>
        <returns>
            The result of the sign operation. The returned <see cref="T:Azure.Security.KeyVault.Keys.Cryptography.SignResult" /> contains the signature
            along with all other information needed to verify it. This information should be stored with the signature.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">The specified <paramref name="algorithm" /> does not match the key corresponding to the key identifier.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="data" /> is null.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">The local cryptographic provider threw an exception.</exception>
        <exception cref="T:System.InvalidOperationException">The key is invalid for the current operation.</exception>
        <exception cref="T:System.NotSupportedException">The operation is not supported with the specified key.</exception>
      </Docs>
    </Member>
    <Member MemberName="SignDataAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Security.KeyVault.Keys.Cryptography.SignResult&gt; SignDataAsync (Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm algorithm, byte[] data, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Security.KeyVault.Keys.Cryptography.SignResult&gt; SignDataAsync(valuetype Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm algorithm, unsigned int8[] data, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Keys.Cryptography.LocalCryptographyClient.SignDataAsync(Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm,System.Byte[],System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SignDataAsync (algorithm As SignatureAlgorithm, data As Byte(), Optional cancellationToken As CancellationToken = Nothing) As Task(Of SignResult)" />
      <MemberSignature Language="F#" Value="abstract member SignDataAsync : Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm * byte[] * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Security.KeyVault.Keys.Cryptography.SignResult&gt;&#xA;override this.SignDataAsync : Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm * byte[] * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Security.KeyVault.Keys.Cryptography.SignResult&gt;" Usage="localCryptographyClient.SignDataAsync (algorithm, data, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Security.KeyVault.Keys.Cryptography.SignResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm" />
        <Parameter Name="data" Type="System.Byte[]" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="algorithm">The <see cref="T:Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm" /> to use.</param>
        <param name="data">The data to sign.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to cancel the operation.</param>
        <summary>
            Signs the specified data.
            </summary>
        <returns>
            The result of the sign operation. The returned <see cref="T:Azure.Security.KeyVault.Keys.Cryptography.SignResult" /> contains the signature
            along with all other information needed to verify it. This information should be stored with the signature.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">The specified <paramref name="algorithm" /> does not match the key corresponding to the key identifier.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">The local cryptographic provider threw an exception.</exception>
        <exception cref="T:System.InvalidOperationException">The key is invalid for the current operation.</exception>
        <exception cref="T:System.NotSupportedException">The operation is not supported with the specified key.</exception>
      </Docs>
    </Member>
    <Member MemberName="SignDataAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Security.KeyVault.Keys.Cryptography.SignResult&gt; SignDataAsync (Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm algorithm, System.IO.Stream data, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Security.KeyVault.Keys.Cryptography.SignResult&gt; SignDataAsync(valuetype Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm algorithm, class System.IO.Stream data, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Keys.Cryptography.LocalCryptographyClient.SignDataAsync(Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm,System.IO.Stream,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SignDataAsync (algorithm As SignatureAlgorithm, data As Stream, Optional cancellationToken As CancellationToken = Nothing) As Task(Of SignResult)" />
      <MemberSignature Language="F#" Value="abstract member SignDataAsync : Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm * System.IO.Stream * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Security.KeyVault.Keys.Cryptography.SignResult&gt;&#xA;override this.SignDataAsync : Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm * System.IO.Stream * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Security.KeyVault.Keys.Cryptography.SignResult&gt;" Usage="localCryptographyClient.SignDataAsync (algorithm, data, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Security.KeyVault.Keys.Cryptography.SignResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm" />
        <Parameter Name="data" Type="System.IO.Stream" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="algorithm">The <see cref="T:Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm" /> to use.</param>
        <param name="data">The data to sign.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to cancel the operation.</param>
        <summary>
            Signs the specified data.
            </summary>
        <returns>
            The result of the sign operation. The returned <see cref="T:Azure.Security.KeyVault.Keys.Cryptography.SignResult" /> contains the signature
            along with all other information needed to verify it. This information should be stored with the signature.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">The specified <paramref name="algorithm" /> does not match the key corresponding to the key identifier.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="data" /> is null.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">The local cryptographic provider threw an exception.</exception>
        <exception cref="T:System.InvalidOperationException">The key is invalid for the current operation.</exception>
        <exception cref="T:System.NotSupportedException">The operation is not supported with the specified key.</exception>
      </Docs>
    </Member>
    <Member MemberName="UnwrapKey">
      <MemberSignature Language="C#" Value="public virtual Azure.Security.KeyVault.Keys.Cryptography.UnwrapResult UnwrapKey (Azure.Security.KeyVault.Keys.Cryptography.KeyWrapAlgorithm algorithm, byte[] encryptedKey, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Security.KeyVault.Keys.Cryptography.UnwrapResult UnwrapKey(valuetype Azure.Security.KeyVault.Keys.Cryptography.KeyWrapAlgorithm algorithm, unsigned int8[] encryptedKey, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Keys.Cryptography.LocalCryptographyClient.UnwrapKey(Azure.Security.KeyVault.Keys.Cryptography.KeyWrapAlgorithm,System.Byte[],System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UnwrapKey (algorithm As KeyWrapAlgorithm, encryptedKey As Byte(), Optional cancellationToken As CancellationToken = Nothing) As UnwrapResult" />
      <MemberSignature Language="F#" Value="abstract member UnwrapKey : Azure.Security.KeyVault.Keys.Cryptography.KeyWrapAlgorithm * byte[] * System.Threading.CancellationToken -&gt; Azure.Security.KeyVault.Keys.Cryptography.UnwrapResult&#xA;override this.UnwrapKey : Azure.Security.KeyVault.Keys.Cryptography.KeyWrapAlgorithm * byte[] * System.Threading.CancellationToken -&gt; Azure.Security.KeyVault.Keys.Cryptography.UnwrapResult" Usage="localCryptographyClient.UnwrapKey (algorithm, encryptedKey, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Security.KeyVault.Keys.Cryptography.UnwrapResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="Azure.Security.KeyVault.Keys.Cryptography.KeyWrapAlgorithm" />
        <Parameter Name="encryptedKey" Type="System.Byte[]" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="algorithm">The <see cref="T:Azure.Security.KeyVault.Keys.Cryptography.KeyWrapAlgorithm" /> to use.</param>
        <param name="encryptedKey">The encrypted key.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to cancel the operation.</param>
        <summary>
            Decrypts the specified encrypted key.
            </summary>
        <returns>
            The result of the unwrap operation. The returned <see cref="T:Azure.Security.KeyVault.Keys.Cryptography.UnwrapResult" /> contains the key
            along with information regarding the algorithm and key used to unwrap it.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">The specified <paramref name="algorithm" /> does not match the key corresponding to the key identifier.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">The local cryptographic provider threw an exception.</exception>
        <exception cref="T:System.InvalidOperationException">The key is invalid for the current operation.</exception>
        <exception cref="T:System.NotSupportedException">The operation is not supported with the specified key.</exception>
      </Docs>
    </Member>
    <Member MemberName="UnwrapKeyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Security.KeyVault.Keys.Cryptography.UnwrapResult&gt; UnwrapKeyAsync (Azure.Security.KeyVault.Keys.Cryptography.KeyWrapAlgorithm algorithm, byte[] encryptedKey, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Security.KeyVault.Keys.Cryptography.UnwrapResult&gt; UnwrapKeyAsync(valuetype Azure.Security.KeyVault.Keys.Cryptography.KeyWrapAlgorithm algorithm, unsigned int8[] encryptedKey, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Keys.Cryptography.LocalCryptographyClient.UnwrapKeyAsync(Azure.Security.KeyVault.Keys.Cryptography.KeyWrapAlgorithm,System.Byte[],System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UnwrapKeyAsync (algorithm As KeyWrapAlgorithm, encryptedKey As Byte(), Optional cancellationToken As CancellationToken = Nothing) As Task(Of UnwrapResult)" />
      <MemberSignature Language="F#" Value="abstract member UnwrapKeyAsync : Azure.Security.KeyVault.Keys.Cryptography.KeyWrapAlgorithm * byte[] * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Security.KeyVault.Keys.Cryptography.UnwrapResult&gt;&#xA;override this.UnwrapKeyAsync : Azure.Security.KeyVault.Keys.Cryptography.KeyWrapAlgorithm * byte[] * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Security.KeyVault.Keys.Cryptography.UnwrapResult&gt;" Usage="localCryptographyClient.UnwrapKeyAsync (algorithm, encryptedKey, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Security.KeyVault.Keys.Cryptography.UnwrapResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="Azure.Security.KeyVault.Keys.Cryptography.KeyWrapAlgorithm" />
        <Parameter Name="encryptedKey" Type="System.Byte[]" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="algorithm">The <see cref="T:Azure.Security.KeyVault.Keys.Cryptography.KeyWrapAlgorithm" /> to use.</param>
        <param name="encryptedKey">The encrypted key.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to cancel the operation.</param>
        <summary>
            Decrypts the specified encrypted key.
            </summary>
        <returns>
            The result of the unwrap operation. The returned <see cref="T:Azure.Security.KeyVault.Keys.Cryptography.UnwrapResult" /> contains the key
            along with information regarding the algorithm and key used to unwrap it.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">The specified <paramref name="algorithm" /> does not match the key corresponding to the key identifier.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">The local cryptographic provider threw an exception.</exception>
        <exception cref="T:System.InvalidOperationException">The key is invalid for the current operation.</exception>
        <exception cref="T:System.NotSupportedException">The operation is not supported with the specified key.</exception>
      </Docs>
    </Member>
    <Member MemberName="Verify">
      <MemberSignature Language="C#" Value="public virtual Azure.Security.KeyVault.Keys.Cryptography.VerifyResult Verify (Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm algorithm, byte[] digest, byte[] signature, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Security.KeyVault.Keys.Cryptography.VerifyResult Verify(valuetype Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm algorithm, unsigned int8[] digest, unsigned int8[] signature, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Keys.Cryptography.LocalCryptographyClient.Verify(Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm,System.Byte[],System.Byte[],System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Verify (algorithm As SignatureAlgorithm, digest As Byte(), signature As Byte(), Optional cancellationToken As CancellationToken = Nothing) As VerifyResult" />
      <MemberSignature Language="F#" Value="abstract member Verify : Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm * byte[] * byte[] * System.Threading.CancellationToken -&gt; Azure.Security.KeyVault.Keys.Cryptography.VerifyResult&#xA;override this.Verify : Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm * byte[] * byte[] * System.Threading.CancellationToken -&gt; Azure.Security.KeyVault.Keys.Cryptography.VerifyResult" Usage="localCryptographyClient.Verify (algorithm, digest, signature, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Security.KeyVault.Keys.Cryptography.VerifyResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm" />
        <Parameter Name="digest" Type="System.Byte[]" />
        <Parameter Name="signature" Type="System.Byte[]" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="algorithm">The <see cref="T:Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm" /> to use. This must be the same algorithm used to sign the digest.</param>
        <param name="digest">The pre-hashed digest corresponding to the signature. The hash algorithm used to compute the digest must be compatable with the specified algorithm.</param>
        <param name="signature">The signature to verify.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to cancel the operation.</param>
        <summary>
            Verifies the specified signature.
            </summary>
        <returns>
            The result of the verify operation. If the signature is valid the <see cref="P:Azure.Security.KeyVault.Keys.Cryptography.VerifyResult.IsValid" /> property of the returned <see cref="T:Azure.Security.KeyVault.Keys.Cryptography.VerifyResult" /> will be set to true.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">The specified <paramref name="algorithm" /> does not match the key corresponding to the key identifier.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">The local cryptographic provider threw an exception.</exception>
        <exception cref="T:System.InvalidOperationException">The key is invalid for the current operation.</exception>
        <exception cref="T:System.NotSupportedException">The operation is not supported with the specified key.</exception>
      </Docs>
    </Member>
    <Member MemberName="VerifyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Security.KeyVault.Keys.Cryptography.VerifyResult&gt; VerifyAsync (Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm algorithm, byte[] digest, byte[] signature, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Security.KeyVault.Keys.Cryptography.VerifyResult&gt; VerifyAsync(valuetype Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm algorithm, unsigned int8[] digest, unsigned int8[] signature, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Keys.Cryptography.LocalCryptographyClient.VerifyAsync(Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm,System.Byte[],System.Byte[],System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VerifyAsync (algorithm As SignatureAlgorithm, digest As Byte(), signature As Byte(), Optional cancellationToken As CancellationToken = Nothing) As Task(Of VerifyResult)" />
      <MemberSignature Language="F#" Value="abstract member VerifyAsync : Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm * byte[] * byte[] * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Security.KeyVault.Keys.Cryptography.VerifyResult&gt;&#xA;override this.VerifyAsync : Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm * byte[] * byte[] * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Security.KeyVault.Keys.Cryptography.VerifyResult&gt;" Usage="localCryptographyClient.VerifyAsync (algorithm, digest, signature, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Security.KeyVault.Keys.Cryptography.VerifyResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm" />
        <Parameter Name="digest" Type="System.Byte[]" />
        <Parameter Name="signature" Type="System.Byte[]" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="algorithm">The <see cref="T:Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm" /> to use. This must be the same algorithm used to sign the digest.</param>
        <param name="digest">The pre-hashed digest corresponding to the signature. The hash algorithm used to compute the digest must be compatable with the specified algorithm.</param>
        <param name="signature">The signature to verify.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to cancel the operation.</param>
        <summary>
            Verifies the specified signature.
            </summary>
        <returns>
            The result of the verify operation. If the signature is valid the <see cref="P:Azure.Security.KeyVault.Keys.Cryptography.VerifyResult.IsValid" /> property of the returned <see cref="T:Azure.Security.KeyVault.Keys.Cryptography.VerifyResult" /> will be set to true.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">The specified <paramref name="algorithm" /> does not match the key corresponding to the key identifier.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">The local cryptographic provider threw an exception.</exception>
        <exception cref="T:System.InvalidOperationException">The key is invalid for the current operation.</exception>
        <exception cref="T:System.NotSupportedException">The operation is not supported with the specified key.</exception>
      </Docs>
    </Member>
    <Member MemberName="VerifyData">
      <MemberSignature Language="C#" Value="public virtual Azure.Security.KeyVault.Keys.Cryptography.VerifyResult VerifyData (Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm algorithm, byte[] data, byte[] signature, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Security.KeyVault.Keys.Cryptography.VerifyResult VerifyData(valuetype Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm algorithm, unsigned int8[] data, unsigned int8[] signature, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Keys.Cryptography.LocalCryptographyClient.VerifyData(Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm,System.Byte[],System.Byte[],System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VerifyData (algorithm As SignatureAlgorithm, data As Byte(), signature As Byte(), Optional cancellationToken As CancellationToken = Nothing) As VerifyResult" />
      <MemberSignature Language="F#" Value="abstract member VerifyData : Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm * byte[] * byte[] * System.Threading.CancellationToken -&gt; Azure.Security.KeyVault.Keys.Cryptography.VerifyResult&#xA;override this.VerifyData : Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm * byte[] * byte[] * System.Threading.CancellationToken -&gt; Azure.Security.KeyVault.Keys.Cryptography.VerifyResult" Usage="localCryptographyClient.VerifyData (algorithm, data, signature, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Security.KeyVault.Keys.Cryptography.VerifyResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm" />
        <Parameter Name="data" Type="System.Byte[]" />
        <Parameter Name="signature" Type="System.Byte[]" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="algorithm">The <see cref="T:Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm" /> to use. This must be the same algorithm used to sign the data.</param>
        <param name="data">The data corresponding to the signature.</param>
        <param name="signature">The signature to verify.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to cancel the operation.</param>
        <summary>
            Verifies the specified signature.
            </summary>
        <returns>
            The result of the verify operation. If the signature is valid the <see cref="P:Azure.Security.KeyVault.Keys.Cryptography.VerifyResult.IsValid" /> property of the returned <see cref="T:Azure.Security.KeyVault.Keys.Cryptography.VerifyResult" /> will be set to true.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">The specified <paramref name="algorithm" /> does not match the key corresponding to the key identifier.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="data" /> is null.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">The local cryptographic provider threw an exception.</exception>
        <exception cref="T:System.InvalidOperationException">The key is invalid for the current operation.</exception>
        <exception cref="T:System.NotSupportedException">The operation is not supported with the specified key.</exception>
      </Docs>
    </Member>
    <Member MemberName="VerifyData">
      <MemberSignature Language="C#" Value="public virtual Azure.Security.KeyVault.Keys.Cryptography.VerifyResult VerifyData (Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm algorithm, System.IO.Stream data, byte[] signature, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Security.KeyVault.Keys.Cryptography.VerifyResult VerifyData(valuetype Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm algorithm, class System.IO.Stream data, unsigned int8[] signature, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Keys.Cryptography.LocalCryptographyClient.VerifyData(Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm,System.IO.Stream,System.Byte[],System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VerifyData (algorithm As SignatureAlgorithm, data As Stream, signature As Byte(), Optional cancellationToken As CancellationToken = Nothing) As VerifyResult" />
      <MemberSignature Language="F#" Value="abstract member VerifyData : Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm * System.IO.Stream * byte[] * System.Threading.CancellationToken -&gt; Azure.Security.KeyVault.Keys.Cryptography.VerifyResult&#xA;override this.VerifyData : Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm * System.IO.Stream * byte[] * System.Threading.CancellationToken -&gt; Azure.Security.KeyVault.Keys.Cryptography.VerifyResult" Usage="localCryptographyClient.VerifyData (algorithm, data, signature, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Security.KeyVault.Keys.Cryptography.VerifyResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm" />
        <Parameter Name="data" Type="System.IO.Stream" />
        <Parameter Name="signature" Type="System.Byte[]" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="algorithm">The <see cref="T:Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm" /> to use. This must be the same algorithm used to sign the data.</param>
        <param name="data">The data corresponding to the signature.</param>
        <param name="signature">The signature to verify.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to cancel the operation.</param>
        <summary>
            Verifies the specified signature.
            </summary>
        <returns>
            The result of the verify operation. If the signature is valid the <see cref="P:Azure.Security.KeyVault.Keys.Cryptography.VerifyResult.IsValid" /> property of the returned <see cref="T:Azure.Security.KeyVault.Keys.Cryptography.VerifyResult" /> will be set to true.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">The specified <paramref name="algorithm" /> does not match the key corresponding to the key identifier.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="data" /> is null.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">The local cryptographic provider threw an exception.</exception>
        <exception cref="T:System.InvalidOperationException">The key is invalid for the current operation.</exception>
        <exception cref="T:System.NotSupportedException">The operation is not supported with the specified key.</exception>
      </Docs>
    </Member>
    <Member MemberName="VerifyDataAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Security.KeyVault.Keys.Cryptography.VerifyResult&gt; VerifyDataAsync (Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm algorithm, byte[] data, byte[] signature, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Security.KeyVault.Keys.Cryptography.VerifyResult&gt; VerifyDataAsync(valuetype Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm algorithm, unsigned int8[] data, unsigned int8[] signature, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Keys.Cryptography.LocalCryptographyClient.VerifyDataAsync(Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm,System.Byte[],System.Byte[],System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VerifyDataAsync (algorithm As SignatureAlgorithm, data As Byte(), signature As Byte(), Optional cancellationToken As CancellationToken = Nothing) As Task(Of VerifyResult)" />
      <MemberSignature Language="F#" Value="abstract member VerifyDataAsync : Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm * byte[] * byte[] * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Security.KeyVault.Keys.Cryptography.VerifyResult&gt;&#xA;override this.VerifyDataAsync : Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm * byte[] * byte[] * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Security.KeyVault.Keys.Cryptography.VerifyResult&gt;" Usage="localCryptographyClient.VerifyDataAsync (algorithm, data, signature, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Security.KeyVault.Keys.Cryptography.VerifyResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm" />
        <Parameter Name="data" Type="System.Byte[]" />
        <Parameter Name="signature" Type="System.Byte[]" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="algorithm">The <see cref="T:Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm" /> to use. This must be the same algorithm used to sign the data.</param>
        <param name="data">The data corresponding to the signature.</param>
        <param name="signature">The signature to verify.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to cancel the operation.</param>
        <summary>
            Verifies the specified signature.
            </summary>
        <returns>
            The result of the verify operation. If the signature is valid the <see cref="P:Azure.Security.KeyVault.Keys.Cryptography.VerifyResult.IsValid" /> property of the returned <see cref="T:Azure.Security.KeyVault.Keys.Cryptography.VerifyResult" /> will be set to true.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">The specified <paramref name="algorithm" /> does not match the key corresponding to the key identifier.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="data" /> is null.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">The local cryptographic provider threw an exception.</exception>
        <exception cref="T:System.InvalidOperationException">The key is invalid for the current operation.</exception>
        <exception cref="T:System.NotSupportedException">The operation is not supported with the specified key.</exception>
      </Docs>
    </Member>
    <Member MemberName="VerifyDataAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Security.KeyVault.Keys.Cryptography.VerifyResult&gt; VerifyDataAsync (Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm algorithm, System.IO.Stream data, byte[] signature, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Security.KeyVault.Keys.Cryptography.VerifyResult&gt; VerifyDataAsync(valuetype Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm algorithm, class System.IO.Stream data, unsigned int8[] signature, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Keys.Cryptography.LocalCryptographyClient.VerifyDataAsync(Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm,System.IO.Stream,System.Byte[],System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VerifyDataAsync (algorithm As SignatureAlgorithm, data As Stream, signature As Byte(), Optional cancellationToken As CancellationToken = Nothing) As Task(Of VerifyResult)" />
      <MemberSignature Language="F#" Value="abstract member VerifyDataAsync : Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm * System.IO.Stream * byte[] * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Security.KeyVault.Keys.Cryptography.VerifyResult&gt;&#xA;override this.VerifyDataAsync : Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm * System.IO.Stream * byte[] * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Security.KeyVault.Keys.Cryptography.VerifyResult&gt;" Usage="localCryptographyClient.VerifyDataAsync (algorithm, data, signature, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Security.KeyVault.Keys.Cryptography.VerifyResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm" />
        <Parameter Name="data" Type="System.IO.Stream" />
        <Parameter Name="signature" Type="System.Byte[]" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="algorithm">The <see cref="T:Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm" /> to use. This must be the same algorithm used to sign the data.</param>
        <param name="data">The data corresponding to the signature.</param>
        <param name="signature">The signature to verify.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to cancel the operation.</param>
        <summary>
            Verifies the specified signature.
            </summary>
        <returns>
            The result of the verify operation. If the signature is valid the <see cref="P:Azure.Security.KeyVault.Keys.Cryptography.VerifyResult.IsValid" /> property of the returned <see cref="T:Azure.Security.KeyVault.Keys.Cryptography.VerifyResult" /> will be set to true.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">The specified <paramref name="algorithm" /> does not match the key corresponding to the key identifier.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="data" /> is null.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">The local cryptographic provider threw an exception.</exception>
        <exception cref="T:System.InvalidOperationException">The key is invalid for the current operation.</exception>
        <exception cref="T:System.NotSupportedException">The operation is not supported with the specified key.</exception>
      </Docs>
    </Member>
    <Member MemberName="WrapKey">
      <MemberSignature Language="C#" Value="public virtual Azure.Security.KeyVault.Keys.Cryptography.WrapResult WrapKey (Azure.Security.KeyVault.Keys.Cryptography.KeyWrapAlgorithm algorithm, byte[] key, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Security.KeyVault.Keys.Cryptography.WrapResult WrapKey(valuetype Azure.Security.KeyVault.Keys.Cryptography.KeyWrapAlgorithm algorithm, unsigned int8[] key, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Keys.Cryptography.LocalCryptographyClient.WrapKey(Azure.Security.KeyVault.Keys.Cryptography.KeyWrapAlgorithm,System.Byte[],System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WrapKey (algorithm As KeyWrapAlgorithm, key As Byte(), Optional cancellationToken As CancellationToken = Nothing) As WrapResult" />
      <MemberSignature Language="F#" Value="abstract member WrapKey : Azure.Security.KeyVault.Keys.Cryptography.KeyWrapAlgorithm * byte[] * System.Threading.CancellationToken -&gt; Azure.Security.KeyVault.Keys.Cryptography.WrapResult&#xA;override this.WrapKey : Azure.Security.KeyVault.Keys.Cryptography.KeyWrapAlgorithm * byte[] * System.Threading.CancellationToken -&gt; Azure.Security.KeyVault.Keys.Cryptography.WrapResult" Usage="localCryptographyClient.WrapKey (algorithm, key, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Security.KeyVault.Keys.Cryptography.WrapResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="Azure.Security.KeyVault.Keys.Cryptography.KeyWrapAlgorithm" />
        <Parameter Name="key" Type="System.Byte[]" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="algorithm">The <see cref="T:Azure.Security.KeyVault.Keys.Cryptography.KeyWrapAlgorithm" /> to use.</param>
        <param name="key">The key to encrypt.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to cancel the operation.</param>
        <summary>
            Encrypts the specified key.
            </summary>
        <returns>
            The result of the wrap operation. The returned <see cref="T:Azure.Security.KeyVault.Keys.Cryptography.WrapResult" /> contains the wrapped key
            along with all other information needed to unwrap it. This information should be stored with the wrapped key.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">The specified <paramref name="algorithm" /> does not match the key corresponding to the key identifier.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">The local cryptographic provider threw an exception.</exception>
        <exception cref="T:System.InvalidOperationException">The key is invalid for the current operation.</exception>
        <exception cref="T:System.NotSupportedException">The operation is not supported with the specified key.</exception>
      </Docs>
    </Member>
    <Member MemberName="WrapKeyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Security.KeyVault.Keys.Cryptography.WrapResult&gt; WrapKeyAsync (Azure.Security.KeyVault.Keys.Cryptography.KeyWrapAlgorithm algorithm, byte[] key, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Security.KeyVault.Keys.Cryptography.WrapResult&gt; WrapKeyAsync(valuetype Azure.Security.KeyVault.Keys.Cryptography.KeyWrapAlgorithm algorithm, unsigned int8[] key, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Keys.Cryptography.LocalCryptographyClient.WrapKeyAsync(Azure.Security.KeyVault.Keys.Cryptography.KeyWrapAlgorithm,System.Byte[],System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WrapKeyAsync (algorithm As KeyWrapAlgorithm, key As Byte(), Optional cancellationToken As CancellationToken = Nothing) As Task(Of WrapResult)" />
      <MemberSignature Language="F#" Value="abstract member WrapKeyAsync : Azure.Security.KeyVault.Keys.Cryptography.KeyWrapAlgorithm * byte[] * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Security.KeyVault.Keys.Cryptography.WrapResult&gt;&#xA;override this.WrapKeyAsync : Azure.Security.KeyVault.Keys.Cryptography.KeyWrapAlgorithm * byte[] * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Security.KeyVault.Keys.Cryptography.WrapResult&gt;" Usage="localCryptographyClient.WrapKeyAsync (algorithm, key, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Security.KeyVault.Keys.Cryptography.WrapResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="Azure.Security.KeyVault.Keys.Cryptography.KeyWrapAlgorithm" />
        <Parameter Name="key" Type="System.Byte[]" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="algorithm">The <see cref="T:Azure.Security.KeyVault.Keys.Cryptography.KeyWrapAlgorithm" /> to use.</param>
        <param name="key">The key to encrypt.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to cancel the operation.</param>
        <summary>
            Encrypts the specified key.
            </summary>
        <returns>
            The result of the wrap operation. The returned <see cref="T:Azure.Security.KeyVault.Keys.Cryptography.WrapResult" /> contains the wrapped key
            along with all other information needed to unwrap it. This information should be stored with the wrapped key.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">The specified <paramref name="algorithm" /> does not match the key corresponding to the key identifier.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">The local cryptographic provider threw an exception.</exception>
        <exception cref="T:System.InvalidOperationException">The key is invalid for the current operation.</exception>
        <exception cref="T:System.NotSupportedException">The operation is not supported with the specified key.</exception>
      </Docs>
    </Member>
  </Members>
</Type>

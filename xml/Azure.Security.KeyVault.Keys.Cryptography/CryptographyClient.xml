<Type Name="CryptographyClient" FullName="Azure.Security.KeyVault.Keys.Cryptography.CryptographyClient">
  <TypeSignature Language="C#" Value="public class CryptographyClient" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CryptographyClient extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Security.KeyVault.Keys.Cryptography.CryptographyClient" />
  <TypeSignature Language="VB.NET" Value="Public Class CryptographyClient" />
  <TypeSignature Language="F#" Value="type CryptographyClient = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            A client used to perform cryptographic operations with Azure Key Vault keys 
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CryptographyClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Keys.Cryptography.CryptographyClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Protected cosntructor for mocking
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CryptographyClient (Uri keyId, Azure.Core.TokenCredential credential);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri keyId, class Azure.Core.TokenCredential credential) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Keys.Cryptography.CryptographyClient.#ctor(System.Uri,Azure.Core.TokenCredential)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (keyId As Uri, credential As TokenCredential)" />
      <MemberSignature Language="F#" Value="new Azure.Security.KeyVault.Keys.Cryptography.CryptographyClient : Uri * Azure.Core.TokenCredential -&gt; Azure.Security.KeyVault.Keys.Cryptography.CryptographyClient" Usage="new Azure.Security.KeyVault.Keys.Cryptography.CryptographyClient (keyId, credential)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="keyId" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.Core.TokenCredential" />
      </Parameters>
      <Docs>
        <param name="keyId">The <see cref="P:Azure.Security.KeyVault.Keys.KeyBase.Id" /> of the <see cref="T:Azure.Security.KeyVault.Keys.Key" /> which will be used for cryptographic operations</param>
        <param name="credential">Represents a credential capable of providing an OAuth token.</param>
        <summary>
            Initializes a new instance of the CryptographyClient class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CryptographyClient (Uri keyId, Azure.Core.TokenCredential credential, Azure.Security.KeyVault.Keys.Cryptography.CryptographyClientOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri keyId, class Azure.Core.TokenCredential credential, class Azure.Security.KeyVault.Keys.Cryptography.CryptographyClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Keys.Cryptography.CryptographyClient.#ctor(System.Uri,Azure.Core.TokenCredential,Azure.Security.KeyVault.Keys.Cryptography.CryptographyClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (keyId As Uri, credential As TokenCredential, options As CryptographyClientOptions)" />
      <MemberSignature Language="F#" Value="new Azure.Security.KeyVault.Keys.Cryptography.CryptographyClient : Uri * Azure.Core.TokenCredential * Azure.Security.KeyVault.Keys.Cryptography.CryptographyClientOptions -&gt; Azure.Security.KeyVault.Keys.Cryptography.CryptographyClient" Usage="new Azure.Security.KeyVault.Keys.Cryptography.CryptographyClient (keyId, credential, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="keyId" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.Core.TokenCredential" />
        <Parameter Name="options" Type="Azure.Security.KeyVault.Keys.Cryptography.CryptographyClientOptions" />
      </Parameters>
      <Docs>
        <param name="keyId">The <see cref="P:Azure.Security.KeyVault.Keys.KeyBase.Id" /> of the <see cref="T:Azure.Security.KeyVault.Keys.Key" /> which will be used for cryptographic operations</param>
        <param name="credential">Represents a credential capable of providing an OAuth token.</param>
        <param name="options">Options that allow to configure the management of the request sent to Key Vault.</param>
        <summary>
            Initializes a new instance of the CryptographyClient class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Decrypt">
      <MemberSignature Language="C#" Value="public virtual Azure.Security.KeyVault.Keys.Cryptography.DecryptResult Decrypt (Azure.Security.KeyVault.Keys.Cryptography.EncryptionAlgorithm algorithm, byte[] ciphertext, byte[] iv = null, byte[] authenticationData = null, byte[] authenticationTag = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Security.KeyVault.Keys.Cryptography.DecryptResult Decrypt(valuetype Azure.Security.KeyVault.Keys.Cryptography.EncryptionAlgorithm algorithm, unsigned int8[] ciphertext, unsigned int8[] iv, unsigned int8[] authenticationData, unsigned int8[] authenticationTag, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Keys.Cryptography.CryptographyClient.Decrypt(Azure.Security.KeyVault.Keys.Cryptography.EncryptionAlgorithm,System.Byte[],System.Byte[],System.Byte[],System.Byte[],System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member Decrypt : Azure.Security.KeyVault.Keys.Cryptography.EncryptionAlgorithm * byte[] * byte[] * byte[] * byte[] * System.Threading.CancellationToken -&gt; Azure.Security.KeyVault.Keys.Cryptography.DecryptResult&#xA;override this.Decrypt : Azure.Security.KeyVault.Keys.Cryptography.EncryptionAlgorithm * byte[] * byte[] * byte[] * byte[] * System.Threading.CancellationToken -&gt; Azure.Security.KeyVault.Keys.Cryptography.DecryptResult" Usage="cryptographyClient.Decrypt (algorithm, ciphertext, iv, authenticationData, authenticationTag, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Security.KeyVault.Keys.Cryptography.DecryptResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="Azure.Security.KeyVault.Keys.Cryptography.EncryptionAlgorithm" />
        <Parameter Name="ciphertext" Type="System.Byte[]" />
        <Parameter Name="iv" Type="System.Byte[]" />
        <Parameter Name="authenticationData" Type="System.Byte[]" />
        <Parameter Name="authenticationTag" Type="System.Byte[]" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="algorithm">The algorithm to use</param>
        <param name="ciphertext">The encrypted data to decrypt</param>
        <param name="iv">
            The initialization vector. This should only be specified when using symmetric encryption algorithms, 
            otherwise the caller must omit the parameter or pass null.
            </param>
        <param name="authenticationData">
            The authentication data. This should only be specified when using authenticated symmetric encryption algorithms,
            otherwise the caller must omit the parameter or pass null.
            </param>
        <param name="authenticationTag">The authentication tag. This should only be specified when using authenticated 
            symmetric encryption algorithms, otherwise the caller must omit the parameter or pass null.
            </param>
        <param name="cancellationToken">Cancellation token</param>
        <summary>
            Decrypts the specified cipher text.
            </summary>
        <returns>
            The result of the decrypt operation. The returned <see cref="T:Azure.Security.KeyVault.Keys.Cryptography.DecryptResult" /> contains the encrypted data 
            along with information regarding the algorithm and key used to decrypt it.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DecryptAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Security.KeyVault.Keys.Cryptography.DecryptResult&gt; DecryptAsync (Azure.Security.KeyVault.Keys.Cryptography.EncryptionAlgorithm algorithm, byte[] ciphertext, byte[] iv = null, byte[] authenticationData = null, byte[] authenticationTag = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Security.KeyVault.Keys.Cryptography.DecryptResult&gt; DecryptAsync(valuetype Azure.Security.KeyVault.Keys.Cryptography.EncryptionAlgorithm algorithm, unsigned int8[] ciphertext, unsigned int8[] iv, unsigned int8[] authenticationData, unsigned int8[] authenticationTag, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Keys.Cryptography.CryptographyClient.DecryptAsync(Azure.Security.KeyVault.Keys.Cryptography.EncryptionAlgorithm,System.Byte[],System.Byte[],System.Byte[],System.Byte[],System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member DecryptAsync : Azure.Security.KeyVault.Keys.Cryptography.EncryptionAlgorithm * byte[] * byte[] * byte[] * byte[] * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Security.KeyVault.Keys.Cryptography.DecryptResult&gt;&#xA;override this.DecryptAsync : Azure.Security.KeyVault.Keys.Cryptography.EncryptionAlgorithm * byte[] * byte[] * byte[] * byte[] * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Security.KeyVault.Keys.Cryptography.DecryptResult&gt;" Usage="cryptographyClient.DecryptAsync (algorithm, ciphertext, iv, authenticationData, authenticationTag, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Security.KeyVault.Keys.Cryptography.DecryptResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="Azure.Security.KeyVault.Keys.Cryptography.EncryptionAlgorithm" />
        <Parameter Name="ciphertext" Type="System.Byte[]" />
        <Parameter Name="iv" Type="System.Byte[]" />
        <Parameter Name="authenticationData" Type="System.Byte[]" />
        <Parameter Name="authenticationTag" Type="System.Byte[]" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="algorithm">The algorithm to use</param>
        <param name="ciphertext">The encrypted data to decrypt</param>
        <param name="iv">
            The initialization vector. This should only be specified when using symmetric encryption algorithms, 
            otherwise the caller must omit the parameter or pass null.
            </param>
        <param name="authenticationData">
            The authentication data. This should only be specified when using authenticated symmetric encryption algorithms,
            otherwise the caller must omit the parameter or pass null.
            </param>
        <param name="authenticationTag">The authentication tag. This should only be specified when using authenticated 
            symmetric encryption algorithms, otherwise the caller must omit the parameter or pass null.
            </param>
        <param name="cancellationToken">Cancellation token</param>
        <summary>
            Decrypts the specified cipher text.
            </summary>
        <returns>
            The result of the decrypt operation. The returned <see cref="T:Azure.Security.KeyVault.Keys.Cryptography.DecryptResult" /> contains the encrypted data 
            along with information regarding the algorithm and key used to decrypt it.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Encrypt">
      <MemberSignature Language="C#" Value="public virtual Azure.Security.KeyVault.Keys.Cryptography.EncryptResult Encrypt (Azure.Security.KeyVault.Keys.Cryptography.EncryptionAlgorithm algorithm, byte[] plaintext, byte[] iv = null, byte[] authenticationData = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Security.KeyVault.Keys.Cryptography.EncryptResult Encrypt(valuetype Azure.Security.KeyVault.Keys.Cryptography.EncryptionAlgorithm algorithm, unsigned int8[] plaintext, unsigned int8[] iv, unsigned int8[] authenticationData, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Keys.Cryptography.CryptographyClient.Encrypt(Azure.Security.KeyVault.Keys.Cryptography.EncryptionAlgorithm,System.Byte[],System.Byte[],System.Byte[],System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member Encrypt : Azure.Security.KeyVault.Keys.Cryptography.EncryptionAlgorithm * byte[] * byte[] * byte[] * System.Threading.CancellationToken -&gt; Azure.Security.KeyVault.Keys.Cryptography.EncryptResult&#xA;override this.Encrypt : Azure.Security.KeyVault.Keys.Cryptography.EncryptionAlgorithm * byte[] * byte[] * byte[] * System.Threading.CancellationToken -&gt; Azure.Security.KeyVault.Keys.Cryptography.EncryptResult" Usage="cryptographyClient.Encrypt (algorithm, plaintext, iv, authenticationData, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Security.KeyVault.Keys.Cryptography.EncryptResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="Azure.Security.KeyVault.Keys.Cryptography.EncryptionAlgorithm" />
        <Parameter Name="plaintext" Type="System.Byte[]" />
        <Parameter Name="iv" Type="System.Byte[]" />
        <Parameter Name="authenticationData" Type="System.Byte[]" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="algorithm">The algorithm to use</param>
        <param name="plaintext">The data to encrypt</param>
        <param name="iv">
            The initialization vector. This should only be specified when using symmetric encryption algorithms, 
            otherwise the caller must omit the parameter or pass null.
            </param>
        <param name="authenticationData">
            The authentication data. This should only be specified when using authenticated symmetric encryption algorithms,
            otherwise the caller must omit the parameter or pass null.
            </param>
        <param name="cancellationToken">Cancellation token</param>
        <summary>
            Encrypts the specified plain text.
            </summary>
        <returns>
            The result of the encrypt operation. The returned <see cref="T:Azure.Security.KeyVault.Keys.Cryptography.EncryptResult" /> contains the encrypted data 
            along with all other information needed to decrypt it. This information should be stored with the encrypted data.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EncryptAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Security.KeyVault.Keys.Cryptography.EncryptResult&gt; EncryptAsync (Azure.Security.KeyVault.Keys.Cryptography.EncryptionAlgorithm algorithm, byte[] plaintext, byte[] iv = null, byte[] authenticationData = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Security.KeyVault.Keys.Cryptography.EncryptResult&gt; EncryptAsync(valuetype Azure.Security.KeyVault.Keys.Cryptography.EncryptionAlgorithm algorithm, unsigned int8[] plaintext, unsigned int8[] iv, unsigned int8[] authenticationData, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Keys.Cryptography.CryptographyClient.EncryptAsync(Azure.Security.KeyVault.Keys.Cryptography.EncryptionAlgorithm,System.Byte[],System.Byte[],System.Byte[],System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member EncryptAsync : Azure.Security.KeyVault.Keys.Cryptography.EncryptionAlgorithm * byte[] * byte[] * byte[] * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Security.KeyVault.Keys.Cryptography.EncryptResult&gt;&#xA;override this.EncryptAsync : Azure.Security.KeyVault.Keys.Cryptography.EncryptionAlgorithm * byte[] * byte[] * byte[] * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Security.KeyVault.Keys.Cryptography.EncryptResult&gt;" Usage="cryptographyClient.EncryptAsync (algorithm, plaintext, iv, authenticationData, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Security.KeyVault.Keys.Cryptography.EncryptResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="Azure.Security.KeyVault.Keys.Cryptography.EncryptionAlgorithm" />
        <Parameter Name="plaintext" Type="System.Byte[]" />
        <Parameter Name="iv" Type="System.Byte[]" />
        <Parameter Name="authenticationData" Type="System.Byte[]" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="algorithm">The algorithm to use</param>
        <param name="plaintext">The data to encrypt</param>
        <param name="iv">
            The initialization vector. This should only be specified when using symmetric encryption algorithms, 
            otherwise the caller must omit the parameter or pass null.
            </param>
        <param name="authenticationData">
            The authentication data. This should only be specified when using authenticated symmetric encryption algorithms,
            otherwise the caller must omit the parameter or pass null.
            </param>
        <param name="cancellationToken">Cancellation token</param>
        <summary>
            Encrypts the specified plain text.
            </summary>
        <returns>
            The result of the encrypt operation. The returned <see cref="T:Azure.Security.KeyVault.Keys.Cryptography.EncryptResult" /> contains the encrypted data 
            along with all other information needed to decrypt it. This information should be stored with the encrypted data.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public virtual Azure.Security.KeyVault.Keys.Cryptography.SignResult Sign (Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm algorithm, byte[] digest, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Security.KeyVault.Keys.Cryptography.SignResult Sign(valuetype Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm algorithm, unsigned int8[] digest, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Keys.Cryptography.CryptographyClient.Sign(Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm,System.Byte[],System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member Sign : Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm * byte[] * System.Threading.CancellationToken -&gt; Azure.Security.KeyVault.Keys.Cryptography.SignResult&#xA;override this.Sign : Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm * byte[] * System.Threading.CancellationToken -&gt; Azure.Security.KeyVault.Keys.Cryptography.SignResult" Usage="cryptographyClient.Sign (algorithm, digest, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Security.KeyVault.Keys.Cryptography.SignResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm" />
        <Parameter Name="digest" Type="System.Byte[]" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="algorithm">The signing algorithm to use</param>
        <param name="digest">The pre-hashed digest to sign. The hash algorithm used to compute the digest must be compatable with the specified algorithm.</param>
        <param name="cancellationToken">Cancellation token</param>
        <summary>
            Signs the specified digest.
            </summary>
        <returns>
            The result of the sign operation. The returned <see cref="T:Azure.Security.KeyVault.Keys.Cryptography.SignResult" /> contains the signature 
            along with all other information needed to verify it. This information should be stored with the signature.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SignAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Security.KeyVault.Keys.Cryptography.SignResult&gt; SignAsync (Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm algorithm, byte[] digest, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Security.KeyVault.Keys.Cryptography.SignResult&gt; SignAsync(valuetype Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm algorithm, unsigned int8[] digest, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Keys.Cryptography.CryptographyClient.SignAsync(Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm,System.Byte[],System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member SignAsync : Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm * byte[] * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Security.KeyVault.Keys.Cryptography.SignResult&gt;&#xA;override this.SignAsync : Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm * byte[] * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Security.KeyVault.Keys.Cryptography.SignResult&gt;" Usage="cryptographyClient.SignAsync (algorithm, digest, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Security.KeyVault.Keys.Cryptography.SignResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm" />
        <Parameter Name="digest" Type="System.Byte[]" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="algorithm">The signing algorithm to use</param>
        <param name="digest">The pre-hashed digest to sign. The hash algorithm used to compute the digest must be compatable with the specified algorithm.</param>
        <param name="cancellationToken">Cancellation token</param>
        <summary>
            Signs the specified digest.
            </summary>
        <returns>
            The result of the sign operation. The returned <see cref="T:Azure.Security.KeyVault.Keys.Cryptography.SignResult" /> contains the signature 
            along with all other information needed to verify it. This information should be stored with the signature.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SignData">
      <MemberSignature Language="C#" Value="public virtual Azure.Security.KeyVault.Keys.Cryptography.SignResult SignData (Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm algorithm, byte[] data, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Security.KeyVault.Keys.Cryptography.SignResult SignData(valuetype Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm algorithm, unsigned int8[] data, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Keys.Cryptography.CryptographyClient.SignData(Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm,System.Byte[],System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member SignData : Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm * byte[] * System.Threading.CancellationToken -&gt; Azure.Security.KeyVault.Keys.Cryptography.SignResult&#xA;override this.SignData : Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm * byte[] * System.Threading.CancellationToken -&gt; Azure.Security.KeyVault.Keys.Cryptography.SignResult" Usage="cryptographyClient.SignData (algorithm, data, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Security.KeyVault.Keys.Cryptography.SignResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm" />
        <Parameter Name="data" Type="System.Byte[]" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="algorithm">The signing algorithm to use</param>
        <param name="data">The data to sign.</param>
        <param name="cancellationToken">Cancellation token</param>
        <summary>
            Signs the specified data.
            </summary>
        <returns>
            The result of the sign operation. The returned <see cref="T:Azure.Security.KeyVault.Keys.Cryptography.SignResult" /> contains the signature 
            along with all other information needed to verify it. This information should be stored with the signature.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SignData">
      <MemberSignature Language="C#" Value="public virtual Azure.Security.KeyVault.Keys.Cryptography.SignResult SignData (Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm algorithm, System.IO.Stream data, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Security.KeyVault.Keys.Cryptography.SignResult SignData(valuetype Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm algorithm, class System.IO.Stream data, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Keys.Cryptography.CryptographyClient.SignData(Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm,System.IO.Stream,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member SignData : Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm * System.IO.Stream * System.Threading.CancellationToken -&gt; Azure.Security.KeyVault.Keys.Cryptography.SignResult&#xA;override this.SignData : Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm * System.IO.Stream * System.Threading.CancellationToken -&gt; Azure.Security.KeyVault.Keys.Cryptography.SignResult" Usage="cryptographyClient.SignData (algorithm, data, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Security.KeyVault.Keys.Cryptography.SignResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm" />
        <Parameter Name="data" Type="System.IO.Stream" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="algorithm">The signing algorithm to use</param>
        <param name="data">The data to sign.</param>
        <param name="cancellationToken">Cancellation token</param>
        <summary>
            Signs the specified data.
            </summary>
        <returns>
            The result of the sign operation. The returned <see cref="T:Azure.Security.KeyVault.Keys.Cryptography.SignResult" /> contains the signature 
            along with all other information needed to verify it. This information should be stored with the signature.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SignDataAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Security.KeyVault.Keys.Cryptography.SignResult&gt; SignDataAsync (Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm algorithm, byte[] data, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Security.KeyVault.Keys.Cryptography.SignResult&gt; SignDataAsync(valuetype Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm algorithm, unsigned int8[] data, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Keys.Cryptography.CryptographyClient.SignDataAsync(Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm,System.Byte[],System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member SignDataAsync : Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm * byte[] * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Security.KeyVault.Keys.Cryptography.SignResult&gt;&#xA;override this.SignDataAsync : Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm * byte[] * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Security.KeyVault.Keys.Cryptography.SignResult&gt;" Usage="cryptographyClient.SignDataAsync (algorithm, data, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Security.KeyVault.Keys.Cryptography.SignResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm" />
        <Parameter Name="data" Type="System.Byte[]" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="algorithm">The signing algorithm to use</param>
        <param name="data">The data to sign.</param>
        <param name="cancellationToken">Cancellation token</param>
        <summary>
            Signs the specified data.
            </summary>
        <returns>
            The result of the sign operation. The returned <see cref="T:Azure.Security.KeyVault.Keys.Cryptography.SignResult" /> contains the signature 
            along with all other information needed to verify it. This information should be stored with the signature.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SignDataAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Security.KeyVault.Keys.Cryptography.SignResult&gt; SignDataAsync (Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm algorithm, System.IO.Stream data, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Security.KeyVault.Keys.Cryptography.SignResult&gt; SignDataAsync(valuetype Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm algorithm, class System.IO.Stream data, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Keys.Cryptography.CryptographyClient.SignDataAsync(Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm,System.IO.Stream,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member SignDataAsync : Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm * System.IO.Stream * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Security.KeyVault.Keys.Cryptography.SignResult&gt;&#xA;override this.SignDataAsync : Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm * System.IO.Stream * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Security.KeyVault.Keys.Cryptography.SignResult&gt;" Usage="cryptographyClient.SignDataAsync (algorithm, data, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Security.KeyVault.Keys.Cryptography.SignResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm" />
        <Parameter Name="data" Type="System.IO.Stream" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="algorithm">The signing algorithm to use</param>
        <param name="data">The data to sign.</param>
        <param name="cancellationToken">Cancellation token</param>
        <summary>
            Signs the specified data.
            </summary>
        <returns>
            The result of the sign operation. The returned <see cref="T:Azure.Security.KeyVault.Keys.Cryptography.SignResult" /> contains the signature 
            along with all other information needed to verify it. This information should be stored with the signature.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnwrapKey">
      <MemberSignature Language="C#" Value="public virtual Azure.Security.KeyVault.Keys.Cryptography.UnwrapResult UnwrapKey (Azure.Security.KeyVault.Keys.Cryptography.KeyWrapAlgorithm algorithm, byte[] encryptedKey, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Security.KeyVault.Keys.Cryptography.UnwrapResult UnwrapKey(valuetype Azure.Security.KeyVault.Keys.Cryptography.KeyWrapAlgorithm algorithm, unsigned int8[] encryptedKey, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Keys.Cryptography.CryptographyClient.UnwrapKey(Azure.Security.KeyVault.Keys.Cryptography.KeyWrapAlgorithm,System.Byte[],System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member UnwrapKey : Azure.Security.KeyVault.Keys.Cryptography.KeyWrapAlgorithm * byte[] * System.Threading.CancellationToken -&gt; Azure.Security.KeyVault.Keys.Cryptography.UnwrapResult&#xA;override this.UnwrapKey : Azure.Security.KeyVault.Keys.Cryptography.KeyWrapAlgorithm * byte[] * System.Threading.CancellationToken -&gt; Azure.Security.KeyVault.Keys.Cryptography.UnwrapResult" Usage="cryptographyClient.UnwrapKey (algorithm, encryptedKey, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Security.KeyVault.Keys.Cryptography.UnwrapResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="Azure.Security.KeyVault.Keys.Cryptography.KeyWrapAlgorithm" />
        <Parameter Name="encryptedKey" Type="System.Byte[]" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="algorithm">The algorithm to use</param>
        <param name="encryptedKey">The encrypted key material</param>
        <param name="cancellationToken">Cancellation token</param>
        <summary>
            Decrypts the specified encrypted key material.
            </summary>
        <returns>
            The result of the unwrap operation. The returned <see cref="T:Azure.Security.KeyVault.Keys.Cryptography.UnwrapResult" /> contains the key 
            along with information regarding the algorithm and key used to unwrap it.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnwrapKeyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Security.KeyVault.Keys.Cryptography.UnwrapResult&gt; UnwrapKeyAsync (Azure.Security.KeyVault.Keys.Cryptography.KeyWrapAlgorithm algorithm, byte[] encryptedKey, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Security.KeyVault.Keys.Cryptography.UnwrapResult&gt; UnwrapKeyAsync(valuetype Azure.Security.KeyVault.Keys.Cryptography.KeyWrapAlgorithm algorithm, unsigned int8[] encryptedKey, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Keys.Cryptography.CryptographyClient.UnwrapKeyAsync(Azure.Security.KeyVault.Keys.Cryptography.KeyWrapAlgorithm,System.Byte[],System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member UnwrapKeyAsync : Azure.Security.KeyVault.Keys.Cryptography.KeyWrapAlgorithm * byte[] * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Security.KeyVault.Keys.Cryptography.UnwrapResult&gt;&#xA;override this.UnwrapKeyAsync : Azure.Security.KeyVault.Keys.Cryptography.KeyWrapAlgorithm * byte[] * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Security.KeyVault.Keys.Cryptography.UnwrapResult&gt;" Usage="cryptographyClient.UnwrapKeyAsync (algorithm, encryptedKey, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Security.KeyVault.Keys.Cryptography.UnwrapResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="Azure.Security.KeyVault.Keys.Cryptography.KeyWrapAlgorithm" />
        <Parameter Name="encryptedKey" Type="System.Byte[]" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="algorithm">The algorithm to use</param>
        <param name="encryptedKey">The encrypted key material</param>
        <param name="cancellationToken">Cancellation token</param>
        <summary>
            Decrypts the specified encrypted key material.
            </summary>
        <returns>
            The result of the unwrap operation. The returned <see cref="T:Azure.Security.KeyVault.Keys.Cryptography.UnwrapResult" /> contains the key 
            along with information regarding the algorithm and key used to unwrap it.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Verify">
      <MemberSignature Language="C#" Value="public virtual Azure.Security.KeyVault.Keys.Cryptography.VerifyResult Verify (Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm algorithm, byte[] digest, byte[] signature, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Security.KeyVault.Keys.Cryptography.VerifyResult Verify(valuetype Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm algorithm, unsigned int8[] digest, unsigned int8[] signature, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Keys.Cryptography.CryptographyClient.Verify(Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm,System.Byte[],System.Byte[],System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member Verify : Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm * byte[] * byte[] * System.Threading.CancellationToken -&gt; Azure.Security.KeyVault.Keys.Cryptography.VerifyResult&#xA;override this.Verify : Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm * byte[] * byte[] * System.Threading.CancellationToken -&gt; Azure.Security.KeyVault.Keys.Cryptography.VerifyResult" Usage="cryptographyClient.Verify (algorithm, digest, signature, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Security.KeyVault.Keys.Cryptography.VerifyResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm" />
        <Parameter Name="digest" Type="System.Byte[]" />
        <Parameter Name="signature" Type="System.Byte[]" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="algorithm">The signature algorithm to use. This must be the same algorithm used to sign the digest.</param>
        <param name="digest">The pre-hashed digest corresponding to the signature. The hash algorithm used to compute the digest must be compatable with the specified algorithm.</param>
        <param name="signature">The signature to verify</param>
        <param name="cancellationToken">Cancellation token</param>
        <summary>
            Verifies the specified signature
            </summary>
        <returns>
            The result of the verify operation. If the signature is valid the <see cref="P:Azure.Security.KeyVault.Keys.Cryptography.VerifyResult.IsValid" /> property of the returned <see cref="T:Azure.Security.KeyVault.Keys.Cryptography.VerifyResult" /> will be set to true.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VerifyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Security.KeyVault.Keys.Cryptography.VerifyResult&gt; VerifyAsync (Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm algorithm, byte[] digest, byte[] signature, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Security.KeyVault.Keys.Cryptography.VerifyResult&gt; VerifyAsync(valuetype Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm algorithm, unsigned int8[] digest, unsigned int8[] signature, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Keys.Cryptography.CryptographyClient.VerifyAsync(Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm,System.Byte[],System.Byte[],System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member VerifyAsync : Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm * byte[] * byte[] * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Security.KeyVault.Keys.Cryptography.VerifyResult&gt;&#xA;override this.VerifyAsync : Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm * byte[] * byte[] * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Security.KeyVault.Keys.Cryptography.VerifyResult&gt;" Usage="cryptographyClient.VerifyAsync (algorithm, digest, signature, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Security.KeyVault.Keys.Cryptography.VerifyResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm" />
        <Parameter Name="digest" Type="System.Byte[]" />
        <Parameter Name="signature" Type="System.Byte[]" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="algorithm">The signature algorithm to use. This must be the same algorithm used to sign the digest.</param>
        <param name="digest">The pre-hashed digest corresponding to the signature. The hash algorithm used to compute the digest must be compatable with the specified algorithm.</param>
        <param name="signature">The signature to verify</param>
        <param name="cancellationToken">Cancellation token</param>
        <summary>
            Verifies the specified signature
            </summary>
        <returns>
            The result of the verify operation. If the signature is valid the <see cref="P:Azure.Security.KeyVault.Keys.Cryptography.VerifyResult.IsValid" /> property of the returned <see cref="T:Azure.Security.KeyVault.Keys.Cryptography.VerifyResult" /> will be set to true.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VerifyData">
      <MemberSignature Language="C#" Value="public virtual Azure.Security.KeyVault.Keys.Cryptography.VerifyResult VerifyData (Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm algorithm, byte[] data, byte[] signature, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Security.KeyVault.Keys.Cryptography.VerifyResult VerifyData(valuetype Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm algorithm, unsigned int8[] data, unsigned int8[] signature, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Keys.Cryptography.CryptographyClient.VerifyData(Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm,System.Byte[],System.Byte[],System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member VerifyData : Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm * byte[] * byte[] * System.Threading.CancellationToken -&gt; Azure.Security.KeyVault.Keys.Cryptography.VerifyResult&#xA;override this.VerifyData : Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm * byte[] * byte[] * System.Threading.CancellationToken -&gt; Azure.Security.KeyVault.Keys.Cryptography.VerifyResult" Usage="cryptographyClient.VerifyData (algorithm, data, signature, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Security.KeyVault.Keys.Cryptography.VerifyResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm" />
        <Parameter Name="data" Type="System.Byte[]" />
        <Parameter Name="signature" Type="System.Byte[]" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="algorithm">The signature algorithm to use. This must be the same algorithm used to sign the data.</param>
        <param name="data">The data corresponding to the signature.</param>
        <param name="signature">The signature to verify</param>
        <param name="cancellationToken">Cancellation token</param>
        <summary>
            Verifies the specified signature
            </summary>
        <returns>
            The result of the verify operation. If the signature is valid the <see cref="P:Azure.Security.KeyVault.Keys.Cryptography.VerifyResult.IsValid" /> property of the returned <see cref="T:Azure.Security.KeyVault.Keys.Cryptography.VerifyResult" /> will be set to true.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VerifyData">
      <MemberSignature Language="C#" Value="public virtual Azure.Security.KeyVault.Keys.Cryptography.VerifyResult VerifyData (Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm algorithm, System.IO.Stream data, byte[] signature, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Security.KeyVault.Keys.Cryptography.VerifyResult VerifyData(valuetype Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm algorithm, class System.IO.Stream data, unsigned int8[] signature, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Keys.Cryptography.CryptographyClient.VerifyData(Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm,System.IO.Stream,System.Byte[],System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member VerifyData : Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm * System.IO.Stream * byte[] * System.Threading.CancellationToken -&gt; Azure.Security.KeyVault.Keys.Cryptography.VerifyResult&#xA;override this.VerifyData : Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm * System.IO.Stream * byte[] * System.Threading.CancellationToken -&gt; Azure.Security.KeyVault.Keys.Cryptography.VerifyResult" Usage="cryptographyClient.VerifyData (algorithm, data, signature, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Security.KeyVault.Keys.Cryptography.VerifyResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm" />
        <Parameter Name="data" Type="System.IO.Stream" />
        <Parameter Name="signature" Type="System.Byte[]" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="algorithm">The signature algorithm to use. This must be the same algorithm used to sign the data.</param>
        <param name="data">The data corresponding to the signature.</param>
        <param name="signature">The signature to verify</param>
        <param name="cancellationToken">Cancellation token</param>
        <summary>
            Verifies the specified signature
            </summary>
        <returns>
            The result of the verify operation. If the signature is valid the <see cref="P:Azure.Security.KeyVault.Keys.Cryptography.VerifyResult.IsValid" /> property of the returned <see cref="T:Azure.Security.KeyVault.Keys.Cryptography.VerifyResult" /> will be set to true.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VerifyDataAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Security.KeyVault.Keys.Cryptography.VerifyResult&gt; VerifyDataAsync (Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm algorithm, byte[] data, byte[] signature, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Security.KeyVault.Keys.Cryptography.VerifyResult&gt; VerifyDataAsync(valuetype Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm algorithm, unsigned int8[] data, unsigned int8[] signature, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Keys.Cryptography.CryptographyClient.VerifyDataAsync(Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm,System.Byte[],System.Byte[],System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member VerifyDataAsync : Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm * byte[] * byte[] * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Security.KeyVault.Keys.Cryptography.VerifyResult&gt;&#xA;override this.VerifyDataAsync : Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm * byte[] * byte[] * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Security.KeyVault.Keys.Cryptography.VerifyResult&gt;" Usage="cryptographyClient.VerifyDataAsync (algorithm, data, signature, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Security.KeyVault.Keys.Cryptography.VerifyResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm" />
        <Parameter Name="data" Type="System.Byte[]" />
        <Parameter Name="signature" Type="System.Byte[]" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="algorithm">The signature algorithm to use. This must be the same algorithm used to sign the data.</param>
        <param name="data">The data corresponding to the signature.</param>
        <param name="signature">The signature to verify</param>
        <param name="cancellationToken">Cancellation token</param>
        <summary>
            Verifies the specified signature
            </summary>
        <returns>
            The result of the verify operation. If the signature is valid the <see cref="P:Azure.Security.KeyVault.Keys.Cryptography.VerifyResult.IsValid" /> property of the returned <see cref="T:Azure.Security.KeyVault.Keys.Cryptography.VerifyResult" /> will be set to true.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VerifyDataAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Security.KeyVault.Keys.Cryptography.VerifyResult&gt; VerifyDataAsync (Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm algorithm, System.IO.Stream data, byte[] signature, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Security.KeyVault.Keys.Cryptography.VerifyResult&gt; VerifyDataAsync(valuetype Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm algorithm, class System.IO.Stream data, unsigned int8[] signature, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Keys.Cryptography.CryptographyClient.VerifyDataAsync(Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm,System.IO.Stream,System.Byte[],System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member VerifyDataAsync : Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm * System.IO.Stream * byte[] * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Security.KeyVault.Keys.Cryptography.VerifyResult&gt;&#xA;override this.VerifyDataAsync : Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm * System.IO.Stream * byte[] * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Security.KeyVault.Keys.Cryptography.VerifyResult&gt;" Usage="cryptographyClient.VerifyDataAsync (algorithm, data, signature, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Security.KeyVault.Keys.Cryptography.VerifyResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="Azure.Security.KeyVault.Keys.Cryptography.SignatureAlgorithm" />
        <Parameter Name="data" Type="System.IO.Stream" />
        <Parameter Name="signature" Type="System.Byte[]" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="algorithm">The signature algorithm to use. This must be the same algorithm used to sign the data.</param>
        <param name="data">The data corresponding to the signature.</param>
        <param name="signature">The signature to verify</param>
        <param name="cancellationToken">Cancellation token</param>
        <summary>
            Verifies the specified signature
            </summary>
        <returns>
            The result of the verify operation. If the signature is valid the <see cref="P:Azure.Security.KeyVault.Keys.Cryptography.VerifyResult.IsValid" /> property of the returned <see cref="T:Azure.Security.KeyVault.Keys.Cryptography.VerifyResult" /> will be set to true.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WrapKey">
      <MemberSignature Language="C#" Value="public virtual Azure.Security.KeyVault.Keys.Cryptography.WrapResult WrapKey (Azure.Security.KeyVault.Keys.Cryptography.KeyWrapAlgorithm algorithm, byte[] key, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Security.KeyVault.Keys.Cryptography.WrapResult WrapKey(valuetype Azure.Security.KeyVault.Keys.Cryptography.KeyWrapAlgorithm algorithm, unsigned int8[] key, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Keys.Cryptography.CryptographyClient.WrapKey(Azure.Security.KeyVault.Keys.Cryptography.KeyWrapAlgorithm,System.Byte[],System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member WrapKey : Azure.Security.KeyVault.Keys.Cryptography.KeyWrapAlgorithm * byte[] * System.Threading.CancellationToken -&gt; Azure.Security.KeyVault.Keys.Cryptography.WrapResult&#xA;override this.WrapKey : Azure.Security.KeyVault.Keys.Cryptography.KeyWrapAlgorithm * byte[] * System.Threading.CancellationToken -&gt; Azure.Security.KeyVault.Keys.Cryptography.WrapResult" Usage="cryptographyClient.WrapKey (algorithm, key, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Security.KeyVault.Keys.Cryptography.WrapResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="Azure.Security.KeyVault.Keys.Cryptography.KeyWrapAlgorithm" />
        <Parameter Name="key" Type="System.Byte[]" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="algorithm">The algorithm to use</param>
        <param name="key">The key material to encrypt</param>
        <param name="cancellationToken">Cancellation token</param>
        <summary>
            Encrypts the specified key material.
            </summary>
        <returns>
            The result of the wrap operation. The returned <see cref="T:Azure.Security.KeyVault.Keys.Cryptography.WrapResult" /> contains the wrapped key 
            along with all other information needed to unwrap it. This information should be stored with the wrapped key.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WrapKeyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Security.KeyVault.Keys.Cryptography.WrapResult&gt; WrapKeyAsync (Azure.Security.KeyVault.Keys.Cryptography.KeyWrapAlgorithm algorithm, byte[] key, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Security.KeyVault.Keys.Cryptography.WrapResult&gt; WrapKeyAsync(valuetype Azure.Security.KeyVault.Keys.Cryptography.KeyWrapAlgorithm algorithm, unsigned int8[] key, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Keys.Cryptography.CryptographyClient.WrapKeyAsync(Azure.Security.KeyVault.Keys.Cryptography.KeyWrapAlgorithm,System.Byte[],System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member WrapKeyAsync : Azure.Security.KeyVault.Keys.Cryptography.KeyWrapAlgorithm * byte[] * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Security.KeyVault.Keys.Cryptography.WrapResult&gt;&#xA;override this.WrapKeyAsync : Azure.Security.KeyVault.Keys.Cryptography.KeyWrapAlgorithm * byte[] * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Security.KeyVault.Keys.Cryptography.WrapResult&gt;" Usage="cryptographyClient.WrapKeyAsync (algorithm, key, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Security.KeyVault.Keys.Cryptography.WrapResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="Azure.Security.KeyVault.Keys.Cryptography.KeyWrapAlgorithm" />
        <Parameter Name="key" Type="System.Byte[]" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="algorithm">The algorithm to use</param>
        <param name="key">The key material to encrypt</param>
        <param name="cancellationToken">Cancellation token</param>
        <summary>
            Encrypts the specified key material.
            </summary>
        <returns>
            The result of the wrap operation. The returned <see cref="T:Azure.Security.KeyVault.Keys.Cryptography.WrapResult" /> contains the wrapped key 
            along with all other information needed to unwrap it. This information should be stored with the wrapped key.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

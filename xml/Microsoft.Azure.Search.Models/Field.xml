<Type Name="Field" FullName="Microsoft.Azure.Search.Models.Field">
  <TypeSignature Language="C#" Value="public class Field" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Field extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Search.Models.Field" />
  <TypeSignature Language="VB.NET" Value="Public Class Field" />
  <TypeSignature Language="F#" Value="type Field = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Search.Service</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>9.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Represents a field in an index definition in Azure Search, which describes the name, data type, and search
            behavior of a field.
            <see href="https://docs.microsoft.com/rest/api/searchservice/Create-Index" /></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Field ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Search.Models.Field.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Search.Service</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the Field class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Field (string name, Microsoft.Azure.Search.Models.AnalyzerName analyzerName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, class Microsoft.Azure.Search.Models.AnalyzerName analyzerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Search.Models.Field.#ctor(System.String,Microsoft.Azure.Search.Models.AnalyzerName)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.Search.Models.Field : string * Microsoft.Azure.Search.Models.AnalyzerName -&gt; Microsoft.Azure.Search.Models.Field" Usage="new Microsoft.Azure.Search.Models.Field (name, analyzerName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Search.Service</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="analyzerName" Type="Microsoft.Azure.Search.Models.AnalyzerName" />
      </Parameters>
      <Docs>
        <param name="name">The name of the field.</param>
        <param name="analyzerName">The name of the analyzer to use for the field.</param>
        <summary>
            Initializes a new instance of the Field class with required arguments.
            </summary>
        <remarks>The new field will automatically be searchable and of type Edm.String.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Field (string name, Microsoft.Azure.Search.Models.DataType dataType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, class Microsoft.Azure.Search.Models.DataType dataType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Search.Models.Field.#ctor(System.String,Microsoft.Azure.Search.Models.DataType)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.Search.Models.Field : string * Microsoft.Azure.Search.Models.DataType -&gt; Microsoft.Azure.Search.Models.Field" Usage="new Microsoft.Azure.Search.Models.Field (name, dataType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Search.Service</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="dataType" Type="Microsoft.Azure.Search.Models.DataType" />
      </Parameters>
      <Docs>
        <param name="name">The name of the field.</param>
        <param name="dataType">The data type of the field.</param>
        <summary>
            Initializes a new instance of the Field class with required arguments.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">Thrown if <c>dataType</c> is a complex type.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Field (string name, Microsoft.Azure.Search.Models.DataType dataType, Microsoft.Azure.Search.Models.AnalyzerName analyzerName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, class Microsoft.Azure.Search.Models.DataType dataType, class Microsoft.Azure.Search.Models.AnalyzerName analyzerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Search.Models.Field.#ctor(System.String,Microsoft.Azure.Search.Models.DataType,Microsoft.Azure.Search.Models.AnalyzerName)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.Search.Models.Field : string * Microsoft.Azure.Search.Models.DataType * Microsoft.Azure.Search.Models.AnalyzerName -&gt; Microsoft.Azure.Search.Models.Field" Usage="new Microsoft.Azure.Search.Models.Field (name, dataType, analyzerName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Search.Service</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="dataType" Type="Microsoft.Azure.Search.Models.DataType" />
        <Parameter Name="analyzerName" Type="Microsoft.Azure.Search.Models.AnalyzerName" />
      </Parameters>
      <Docs>
        <param name="name">The name of the field.</param>
        <param name="dataType">The data type of the field.</param>
        <param name="analyzerName">The name of the analyzer to use for the field.</param>
        <summary>
            Initializes a new instance of the Field class with required arguments.
            </summary>
        <remarks>The new field will automatically be searchable.</remarks>
        <exception cref="T:System.ArgumentException">Thrown if <c>dataType</c> is a complex type.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Field (string name, Microsoft.Azure.Search.Models.DataType dataType, System.Collections.Generic.IList&lt;Microsoft.Azure.Search.Models.Field&gt; fields);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype Microsoft.Azure.Search.Models.DataType dataType, class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.Search.Models.Field&gt; fields) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Search.Models.Field.#ctor(System.String,Microsoft.Azure.Search.Models.DataType,System.Collections.Generic.IList{Microsoft.Azure.Search.Models.Field})" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.Search.Models.Field : string * Microsoft.Azure.Search.Models.DataType * System.Collections.Generic.IList&lt;Microsoft.Azure.Search.Models.Field&gt; -&gt; Microsoft.Azure.Search.Models.Field" Usage="new Microsoft.Azure.Search.Models.Field (name, dataType, fields)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Search.Service</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="dataType" Type="Microsoft.Azure.Search.Models.DataType" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="fields" Type="System.Collections.Generic.IList&lt;Microsoft.Azure.Search.Models.Field&gt;" Index="2" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="name">The name of the complex field.</param>
        <param name="dataType">The data type of the field. Must be a complex type.</param>
        <param name="fields">The sub-fields that comprise the complex type. They can be simple or complex fields themselves.</param>
        <summary>
            Initializes a new complex Field with required arguments.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">Thrown if <c>dataType</c> is not a complex type.</exception>
        <exception cref="T:System.ArgumentNullException">Thrown if <c>fields</c> is null.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Thrown if <c>fields</c> is empty.</exception>
      </Docs>
    </Member>
    <Member MemberName="Analyzer">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Search.Models.AnalyzerName Analyzer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Azure.Search.Models.AnalyzerName Analyzer" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Search.Models.Field.Analyzer" />
      <MemberSignature Language="VB.NET" Value="Public Property Analyzer As AnalyzerName" />
      <MemberSignature Language="F#" Value="member this.Analyzer : Microsoft.Azure.Search.Models.AnalyzerName with get, set" Usage="Microsoft.Azure.Search.Models.Field.Analyzer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Search.Service</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="analyzer")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Search.Models.AnalyzerName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the name of the analyzer to use for the field at search time and 
            indexing time. This option can be used only with searchable fields
            and it can't be set together with either SearchAnalyzer or
            IndexAnalyzer. Once the analyzer is chosen, it cannot be changed
            for the field.
            <see href="https://docs.microsoft.com/rest/api/searchservice/Language-support" /></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fields">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Azure.Search.Models.Field&gt; Fields { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.Search.Models.Field&gt; Fields" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Search.Models.Field.Fields" />
      <MemberSignature Language="VB.NET" Value="Public Property Fields As IList(Of Field)" />
      <MemberSignature Language="F#" Value="member this.Fields : System.Collections.Generic.IList&lt;Microsoft.Azure.Search.Models.Field&gt; with get, set" Usage="Microsoft.Azure.Search.Models.Field.Fields" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Search.Service</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-dotnet">
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="fields")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Azure.Search.Models.Field&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a list of sub-fields if this is a field of type
            Edm.ComplexType or Collection(Edm.ComplexType). Must be null or
            empty for simple fields.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexAnalyzer">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Search.Models.AnalyzerName IndexAnalyzer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Azure.Search.Models.AnalyzerName IndexAnalyzer" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Search.Models.Field.IndexAnalyzer" />
      <MemberSignature Language="VB.NET" Value="Public Property IndexAnalyzer As AnalyzerName" />
      <MemberSignature Language="F#" Value="member this.IndexAnalyzer : Microsoft.Azure.Search.Models.AnalyzerName with get, set" Usage="Microsoft.Azure.Search.Models.Field.IndexAnalyzer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Search.Service</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="indexAnalyzer")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Search.Models.AnalyzerName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the name of the analyzer used at indexing time for the field. This
            option can be used only with searchable fields. It must be set together
            with SearchAnalyzer and it cannot be set together with the Analyzer
            option. Once the analyzer is chosen, it cannot be changed for the field.
            <see href="https://docs.microsoft.com/rest/api/searchservice/Language-support" /></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFacetable">
      <MemberSignature Language="C#" Value="public bool IsFacetable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFacetable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Search.Models.Field.IsFacetable" />
      <MemberSignature Language="VB.NET" Value="Public Property IsFacetable As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsFacetable : bool with get, set" Usage="Microsoft.Azure.Search.Models.Field.IsFacetable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Search.Service</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-dotnet-preview">
          <AttributeName>Newtonsoft.Json.JsonProperty("facetable")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="azure-dotnet">
          <AttributeName>Newtonsoft.Json.JsonIgnore</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating whether it is possible to facet on
            this field. Not valid for geo-point fields. Default is false.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFilterable">
      <MemberSignature Language="C#" Value="public bool IsFilterable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFilterable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Search.Models.Field.IsFilterable" />
      <MemberSignature Language="VB.NET" Value="Public Property IsFilterable As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsFilterable : bool with get, set" Usage="Microsoft.Azure.Search.Models.Field.IsFilterable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Search.Service</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-dotnet-preview">
          <AttributeName>Newtonsoft.Json.JsonProperty("filterable")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="azure-dotnet">
          <AttributeName>Newtonsoft.Json.JsonIgnore</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating whether the field can be used in
            filter expressions. Default is false.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKey">
      <MemberSignature Language="C#" Value="public bool IsKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsKey" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Search.Models.Field.IsKey" />
      <MemberSignature Language="VB.NET" Value="Public Property IsKey As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsKey : bool with get, set" Usage="Microsoft.Azure.Search.Models.Field.IsKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Search.Service</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-dotnet-preview">
          <AttributeName>Newtonsoft.Json.JsonProperty("key")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="azure-dotnet">
          <AttributeName>Newtonsoft.Json.JsonIgnore</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating whether the field is the key of
            the index. Valid only for string fields. Every index must have
            exactly one key field.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRetrievable">
      <MemberSignature Language="C#" Value="public bool IsRetrievable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRetrievable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Search.Models.Field.IsRetrievable" />
      <MemberSignature Language="VB.NET" Value="Public Property IsRetrievable As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsRetrievable : bool with get, set" Usage="Microsoft.Azure.Search.Models.Field.IsRetrievable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Search.Service</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-dotnet-preview">
          <AttributeName>Newtonsoft.Json.JsonProperty("retrievable")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="azure-dotnet">
          <AttributeName>Newtonsoft.Json.JsonIgnore</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating whether the field can be returned
            in a search result. Default is true.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSearchable">
      <MemberSignature Language="C#" Value="public bool IsSearchable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSearchable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Search.Models.Field.IsSearchable" />
      <MemberSignature Language="VB.NET" Value="Public Property IsSearchable As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsSearchable : bool with get, set" Usage="Microsoft.Azure.Search.Models.Field.IsSearchable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Search.Service</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-dotnet-preview">
          <AttributeName>Newtonsoft.Json.JsonProperty("searchable")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="azure-dotnet">
          <AttributeName>Newtonsoft.Json.JsonIgnore</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating whether the field is included in
            full-text searches. Valid only for string or string collection
            fields. Default is false.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSortable">
      <MemberSignature Language="C#" Value="public bool IsSortable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSortable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Search.Models.Field.IsSortable" />
      <MemberSignature Language="VB.NET" Value="Public Property IsSortable As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsSortable : bool with get, set" Usage="Microsoft.Azure.Search.Models.Field.IsSortable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Search.Service</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="azure-dotnet-preview">
          <AttributeName>Newtonsoft.Json.JsonProperty("sortable")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="azure-dotnet">
          <AttributeName>Newtonsoft.Json.JsonIgnore</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating whether the field can be used in
            orderby expressions. Not valid for string collection fields.
            Default is false.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Search.Models.Field.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="Microsoft.Azure.Search.Models.Field.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Search.Service</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="name")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the name of the field.
            <see href="https://docs.microsoft.com/rest/api/searchservice/Naming-rules" /></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="New">
      <MemberSignature Language="C#" Value="public static Microsoft.Azure.Search.Models.Field New (string name, Microsoft.Azure.Search.Models.DataType dataType, bool isKey = false, bool isRetrievable = true, bool isSearchable = false, bool isFilterable = false, bool isSortable = false, bool isFacetable = false, Nullable&lt;Microsoft.Azure.Search.Models.AnalyzerName&gt; analyzerName = null, Nullable&lt;Microsoft.Azure.Search.Models.AnalyzerName&gt; searchAnalyzerName = null, Nullable&lt;Microsoft.Azure.Search.Models.AnalyzerName&gt; indexAnalyzerName = null, System.Collections.Generic.IList&lt;string&gt; synonymMaps = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Search.Models.Field New(string name, valuetype Microsoft.Azure.Search.Models.DataType dataType, bool isKey, bool isRetrievable, bool isSearchable, bool isFilterable, bool isSortable, bool isFacetable, valuetype System.Nullable`1&lt;valuetype Microsoft.Azure.Search.Models.AnalyzerName&gt; analyzerName, valuetype System.Nullable`1&lt;valuetype Microsoft.Azure.Search.Models.AnalyzerName&gt; searchAnalyzerName, valuetype System.Nullable`1&lt;valuetype Microsoft.Azure.Search.Models.AnalyzerName&gt; indexAnalyzerName, class System.Collections.Generic.IList`1&lt;string&gt; synonymMaps) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Search.Models.Field.New(System.String,Microsoft.Azure.Search.Models.DataType,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Nullable{Microsoft.Azure.Search.Models.AnalyzerName},System.Nullable{Microsoft.Azure.Search.Models.AnalyzerName},System.Nullable{Microsoft.Azure.Search.Models.AnalyzerName},System.Collections.Generic.IList{System.String})" />
      <MemberSignature Language="F#" Value="static member New : string * Microsoft.Azure.Search.Models.DataType * bool * bool * bool * bool * bool * bool * Nullable&lt;Microsoft.Azure.Search.Models.AnalyzerName&gt; * Nullable&lt;Microsoft.Azure.Search.Models.AnalyzerName&gt; * Nullable&lt;Microsoft.Azure.Search.Models.AnalyzerName&gt; * System.Collections.Generic.IList&lt;string&gt; -&gt; Microsoft.Azure.Search.Models.Field" Usage="Microsoft.Azure.Search.Models.Field.New (name, dataType, isKey, isRetrievable, isSearchable, isFilterable, isSortable, isFacetable, analyzerName, searchAnalyzerName, indexAnalyzerName, synonymMaps)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Search.Service</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Search.Models.Field</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="dataType" Type="Microsoft.Azure.Search.Models.DataType" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="isKey" Type="System.Boolean" Index="2" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="isRetrievable" Type="System.Boolean" Index="3" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="isSearchable" Type="System.Boolean" Index="4" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="isFilterable" Type="System.Boolean" Index="5" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="isSortable" Type="System.Boolean" Index="6" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="isFacetable" Type="System.Boolean" Index="7" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="analyzerName" Type="System.Nullable&lt;Microsoft.Azure.Search.Models.AnalyzerName&gt;" Index="8" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="searchAnalyzerName" Type="System.Nullable&lt;Microsoft.Azure.Search.Models.AnalyzerName&gt;" Index="9" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="indexAnalyzerName" Type="System.Nullable&lt;Microsoft.Azure.Search.Models.AnalyzerName&gt;" Index="10" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="synonymMaps" Type="System.Collections.Generic.IList&lt;System.String&gt;" Index="11" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="name">The name of the simple field.</param>
        <param name="dataType">The data type of the simple field. Cannot be a complex type.</param>
        <param name="isKey">A value indicating whether the field uniquely
            identifies documents in the index. Default is false.</param>
        <param name="isRetrievable">A value indicating whether the field can
            be returned in a search result. Default is true.</param>
        <param name="isSearchable">A value indicating whether the field is
            full-text search-able. Default is false.</param>
        <param name="isFilterable">A value indicating whether to enable the
            field to be referenced in $filter queries. Default is false.</param>
        <param name="isSortable">A value indicating whether to enable the
            field to be referenced in $orderby expressions. Default is false.</param>
        <param name="isFacetable">A value indicating whether to enable the
            field to be referenced in facet queries. Default is false.</param>
        <param name="analyzerName">The name of the language analyzer to use for
            the field. Default is null.</param>
        <param name="searchAnalyzerName">The name of the analyzer used at
            search time for the field. Default is null.</param>
        <param name="indexAnalyzerName">The name of the analyzer used at
            indexing time for the field. Default is null.</param>
        <param name="synonymMaps">A list of synonym map names that
            associates synonym maps with the field. Default is null.</param>
        <summary>
            Creates a new simple Field with required arguments.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">Thrown if <c>dataType</c> is a complex type.</exception>
      </Docs>
    </Member>
    <Member MemberName="NewComplex">
      <MemberSignature Language="C#" Value="public static Microsoft.Azure.Search.Models.Field NewComplex (string name, bool isCollection, System.Collections.Generic.IList&lt;Microsoft.Azure.Search.Models.Field&gt; fields);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Search.Models.Field NewComplex(string name, bool isCollection, class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.Search.Models.Field&gt; fields) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Search.Models.Field.NewComplex(System.String,System.Boolean,System.Collections.Generic.IList{Microsoft.Azure.Search.Models.Field})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NewComplex (name As String, isCollection As Boolean, fields As IList(Of Field)) As Field" />
      <MemberSignature Language="F#" Value="static member NewComplex : string * bool * System.Collections.Generic.IList&lt;Microsoft.Azure.Search.Models.Field&gt; -&gt; Microsoft.Azure.Search.Models.Field" Usage="Microsoft.Azure.Search.Models.Field.NewComplex (name, isCollection, fields)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Search.Service</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Search.Models.Field</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="isCollection" Type="System.Boolean" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="fields" Type="System.Collections.Generic.IList&lt;Microsoft.Azure.Search.Models.Field&gt;" Index="2" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="name">The name of the complex field.</param>
        <param name="isCollection">
          <c>true</c> if the field should be of type Collection(Edm.ComplexType); <c>false</c> if it should be
            of type Edm.ComplexType.</param>
        <param name="fields">The sub-fields that comprise the complex type. They can be simple or complex fields themselves.</param>
        <summary>
            Creates a new complex Field with required arguments.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown if <c>fields</c> is null.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Thrown if <c>fields</c> is empty.</exception>
      </Docs>
    </Member>
    <Member MemberName="NewSearchableCollection">
      <MemberSignature Language="C#" Value="public static Microsoft.Azure.Search.Models.Field NewSearchableCollection (string name, Microsoft.Azure.Search.Models.AnalyzerName analyzerName, bool isKey = false, bool isRetrievable = true, bool isFilterable = false, bool isFacetable = false, System.Collections.Generic.IList&lt;string&gt; synonymMaps = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Search.Models.Field NewSearchableCollection(string name, valuetype Microsoft.Azure.Search.Models.AnalyzerName analyzerName, bool isKey, bool isRetrievable, bool isFilterable, bool isFacetable, class System.Collections.Generic.IList`1&lt;string&gt; synonymMaps) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Search.Models.Field.NewSearchableCollection(System.String,Microsoft.Azure.Search.Models.AnalyzerName,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Collections.Generic.IList{System.String})" />
      <MemberSignature Language="F#" Value="static member NewSearchableCollection : string * Microsoft.Azure.Search.Models.AnalyzerName * bool * bool * bool * bool * System.Collections.Generic.IList&lt;string&gt; -&gt; Microsoft.Azure.Search.Models.Field" Usage="Microsoft.Azure.Search.Models.Field.NewSearchableCollection (name, analyzerName, isKey, isRetrievable, isFilterable, isFacetable, synonymMaps)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Search.Service</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Search.Models.Field</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="analyzerName" Type="Microsoft.Azure.Search.Models.AnalyzerName" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="isKey" Type="System.Boolean" Index="2" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="isRetrievable" Type="System.Boolean" Index="3" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="isFilterable" Type="System.Boolean" Index="4" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="isFacetable" Type="System.Boolean" Index="5" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="synonymMaps" Type="System.Collections.Generic.IList&lt;System.String&gt;" Index="6" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="name">The name of the simple field.</param>
        <param name="analyzerName">The name of the analyzer to use for the field.</param>
        <param name="isKey">A value indicating whether the field uniquely
            identifies documents in the index. Default is false.</param>
        <param name="isRetrievable">A value indicating whether the field can
            be returned in a search result. Default is true.</param>
        <param name="isFilterable">A value indicating whether to enable the
            field to be referenced in $filter queries. Default is false.</param>
        <param name="isFacetable">A value indicating whether to enable the
            field to be referenced in facet queries. Default is false.</param>
        <param name="synonymMaps">A list of synonym map names that
            associates synonym maps with the field. Default is null.</param>
        <summary>
            Creates a new searchable string collection Field with required arguments.
            </summary>
        <returns>To be added.</returns>
        <remarks>The new field will automatically be searchable and of type Collection(Edm.String).</remarks>
      </Docs>
    </Member>
    <Member MemberName="NewSearchableString">
      <MemberSignature Language="C#" Value="public static Microsoft.Azure.Search.Models.Field NewSearchableString (string name, Microsoft.Azure.Search.Models.AnalyzerName analyzerName, bool isKey = false, bool isRetrievable = true, bool isFilterable = false, bool isSortable = false, bool isFacetable = false, System.Collections.Generic.IList&lt;string&gt; synonymMaps = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Azure.Search.Models.Field NewSearchableString(string name, valuetype Microsoft.Azure.Search.Models.AnalyzerName analyzerName, bool isKey, bool isRetrievable, bool isFilterable, bool isSortable, bool isFacetable, class System.Collections.Generic.IList`1&lt;string&gt; synonymMaps) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Search.Models.Field.NewSearchableString(System.String,Microsoft.Azure.Search.Models.AnalyzerName,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Collections.Generic.IList{System.String})" />
      <MemberSignature Language="F#" Value="static member NewSearchableString : string * Microsoft.Azure.Search.Models.AnalyzerName * bool * bool * bool * bool * bool * System.Collections.Generic.IList&lt;string&gt; -&gt; Microsoft.Azure.Search.Models.Field" Usage="Microsoft.Azure.Search.Models.Field.NewSearchableString (name, analyzerName, isKey, isRetrievable, isFilterable, isSortable, isFacetable, synonymMaps)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Search.Service</AssemblyName>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Search.Models.Field</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="analyzerName" Type="Microsoft.Azure.Search.Models.AnalyzerName" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="isKey" Type="System.Boolean" Index="2" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="isRetrievable" Type="System.Boolean" Index="3" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="isFilterable" Type="System.Boolean" Index="4" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="isSortable" Type="System.Boolean" Index="5" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="isFacetable" Type="System.Boolean" Index="6" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="synonymMaps" Type="System.Collections.Generic.IList&lt;System.String&gt;" Index="7" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="name">The name of the string field.</param>
        <param name="analyzerName">The name of the analyzer to use for the simple field.</param>
        <param name="isKey">A value indicating whether the field uniquely
            identifies documents in the index. Default is false.</param>
        <param name="isRetrievable">A value indicating whether the field can
            be returned in a search result. Default is true.</param>
        <param name="isFilterable">A value indicating whether to enable the
            field to be referenced in $filter queries. Default is false.</param>
        <param name="isSortable">A value indicating whether to enable the
            field to be referenced in $orderby expressions. Default is false.</param>
        <param name="isFacetable">A value indicating whether to enable the
            field to be referenced in facet queries. Default is false.</param>
        <param name="synonymMaps">A list of synonym map names that
            associates synonym maps with the field. Default is null.</param>
        <summary>
            Creates a new searchable string Field with required arguments.
            </summary>
        <returns>To be added.</returns>
        <remarks>The new field will automatically be searchable and of type Edm.String.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SearchAnalyzer">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Search.Models.AnalyzerName SearchAnalyzer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Azure.Search.Models.AnalyzerName SearchAnalyzer" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Search.Models.Field.SearchAnalyzer" />
      <MemberSignature Language="VB.NET" Value="Public Property SearchAnalyzer As AnalyzerName" />
      <MemberSignature Language="F#" Value="member this.SearchAnalyzer : Microsoft.Azure.Search.Models.AnalyzerName with get, set" Usage="Microsoft.Azure.Search.Models.Field.SearchAnalyzer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Search.Service</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="searchAnalyzer")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Search.Models.AnalyzerName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the name of the analyzer used at search time for the field. This
            option can be used only with searchable fields. It must be set together
            with IndexAnalyzer and it cannot be set together with the Analyzer
            option. This analyzer can be updated on an existing field.
            <see href="https://docs.microsoft.com/rest/api/searchservice/Language-support" /></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynonymMaps">
      <MemberSignature Language="C#" Value="public string[] SynonymMaps { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] SynonymMaps" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Search.Models.Field.SynonymMaps" />
      <MemberSignature Language="VB.NET" Value="Public Property SynonymMaps As String()" />
      <MemberSignature Language="F#" Value="member this.SynonymMaps : string[] with get, set" Usage="Microsoft.Azure.Search.Models.Field.SynonymMaps" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Search.Service</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="synonymMaps")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the names of the synonym maps for the field. This option enables 
            query time synonym expansion for searches against the field 
            and can be used only on searchable fields.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Search.Models.DataType Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Azure.Search.Models.DataType Type" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Search.Models.Field.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As DataType" />
      <MemberSignature Language="F#" Value="member this.Type : Microsoft.Azure.Search.Models.DataType with get, set" Usage="Microsoft.Azure.Search.Models.Field.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Search.Service</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="type")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Search.Models.DataType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the data type of the field.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public virtual void Validate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Validate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Search.Models.Field.Validate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Validate ()" />
      <MemberSignature Language="F#" Value="abstract member Validate : unit -&gt; unit&#xA;override this.Validate : unit -&gt; unit" Usage="field.Validate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Search.Service</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
        <AssemblyVersion>9.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Validate the object. Throws ValidationException if validation fails.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
      </Docs>
    </Member>
  </Members>
</Type>
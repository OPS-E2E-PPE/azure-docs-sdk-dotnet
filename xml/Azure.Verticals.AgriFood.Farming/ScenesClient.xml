<Type Name="ScenesClient" FullName="Azure.Verticals.AgriFood.Farming.ScenesClient">
  <TypeSignature Language="C#" Value="public class ScenesClient" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ScenesClient extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Verticals.AgriFood.Farming.ScenesClient" />
  <TypeSignature Language="VB.NET" Value="Public Class ScenesClient" />
  <TypeSignature Language="F#" Value="type ScenesClient = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Verticals.AgriFood.Farming</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> The Scenes service client. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ScenesClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Verticals.AgriFood.Farming.ScenesClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Verticals.AgriFood.Farming</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of ScenesClient for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ScenesClient (Uri endpoint, Azure.Core.TokenCredential credential, Azure.Verticals.AgriFood.Farming.FarmBeatsClientOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, class Azure.Core.TokenCredential credential, class Azure.Verticals.AgriFood.Farming.FarmBeatsClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Verticals.AgriFood.Farming.ScenesClient.#ctor(System.Uri,Azure.Core.TokenCredential,Azure.Verticals.AgriFood.Farming.FarmBeatsClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, credential As TokenCredential, Optional options As FarmBeatsClientOptions = Nothing)" />
      <MemberSignature Language="F#" Value="new Azure.Verticals.AgriFood.Farming.ScenesClient : Uri * Azure.Core.TokenCredential * Azure.Verticals.AgriFood.Farming.FarmBeatsClientOptions -&gt; Azure.Verticals.AgriFood.Farming.ScenesClient" Usage="new Azure.Verticals.AgriFood.Farming.ScenesClient (endpoint, credential, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Verticals.AgriFood.Farming</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.Core.TokenCredential" />
        <Parameter Name="options" Type="Azure.Verticals.AgriFood.Farming.FarmBeatsClientOptions" />
      </Parameters>
      <Docs>
        <param name="endpoint"> The endpoint of your FarmBeats resource (protocol and hostname, for example: https://{resourceName}.farmbeats.azure.net). </param>
        <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        <param name="options"> The options for configuring the client. </param>
        <summary> Initializes a new instance of ScenesClient. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSatelliteDataIngestionJob">
      <MemberSignature Language="C#" Value="public virtual Azure.Response CreateSatelliteDataIngestionJob (string jobId, Azure.Core.RequestContent requestBody, Azure.RequestOptions requestOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response CreateSatelliteDataIngestionJob(string jobId, class Azure.Core.RequestContent requestBody, class Azure.RequestOptions requestOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Verticals.AgriFood.Farming.ScenesClient.CreateSatelliteDataIngestionJob(System.String,Azure.Core.RequestContent,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateSatelliteDataIngestionJob (jobId As String, requestBody As RequestContent, Optional requestOptions As RequestOptions = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member CreateSatelliteDataIngestionJob : string * Azure.Core.RequestContent * Azure.RequestOptions -&gt; Azure.Response&#xA;override this.CreateSatelliteDataIngestionJob : string * Azure.Core.RequestContent * Azure.RequestOptions -&gt; Azure.Response" Usage="scenesClient.CreateSatelliteDataIngestionJob (jobId, requestBody, requestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Verticals.AgriFood.Farming</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jobId" Type="System.String" />
        <Parameter Name="requestBody" Type="Azure.Core.RequestContent" />
        <Parameter Name="requestOptions" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="jobId"> JobId provided by user. </param>
        <param name="requestBody"> The request body. </param>
        <param name="requestOptions"> The request options. </param>
        <summary> Create a satellite data ingestion job. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Request Body</c>:
            <list type="table"><listeader><term>Name</term><term>Type</term><term>Required</term><term>Description</term></listeader><item><term>farmerId</term><term>string</term><term>Yes</term><term> Farmer ID. </term></item><item><term>boundaryId</term><term>string</term><term>Yes</term><term> The id of the boundary object for which satellite data is being fetched. </term></item><item><term>startDateTime</term><term>string (ISO 8601 Format)</term><term>Yes</term><term> Start Date. </term></item><item><term>endDateTime</term><term>string (ISO 8601 Format)</term><term>Yes</term><term> End Date. </term></item><item><term>provider</term><term>"Microsoft"</term><term /><term> Provider of satellite data. </term></item><item><term>source</term><term>"Sentinel_2_L2A"</term><term /><term> Source of satellite data. </term></item><item><term>data</term><term>SatelliteData</term><term /><term> Data Model for SatelliteIngestionJobRequest. </term></item><item><term>id</term><term>string</term><term /><term> Unique job id. </term></item><item><term>status</term><term>string</term><term /><term>
            Status of the job.
            
            Possible values: 'Waiting', 'Running', 'Succeeded', 'Failed', 'Cancelled'.
            </term></item><item><term>durationInSeconds</term><term>number</term><term /><term> Duration of the job in seconds. </term></item><item><term>message</term><term>string</term><term /><term> Status message to capture more details of the job. </term></item><item><term>createdDateTime</term><term>string (ISO 8601 Format)</term><term /><term> Job created at dateTime. Sample format: yyyy-MM-ddTHH:mm:ssZ. </term></item><item><term>lastActionDateTime</term><term>string (ISO 8601 Format)</term><term /><term> Job was last acted upon at dateTime. Sample format: yyyy-MM-ddTHH:mm:ssZ. </term></item><item><term>startTime</term><term>string (ISO 8601 Format)</term><term /><term> Job start time when available. Sample format: yyyy-MM-ddTHH:mm:ssZ. </term></item><item><term>endTime</term><term>string (ISO 8601 Format)</term><term /><term> Job end time when available. Sample format: yyyy-MM-ddTHH:mm:ssZ. </term></item><item><term>name</term><term>string</term><term /><term> Name to identify resource. </term></item><item><term>description</term><term>string</term><term /><term> Textual description of the resource. </term></item><item><term>properties</term><term>Dictionary&lt;string, AnyObject&gt;</term><term /><term>
            A collection of key value pairs that belongs to the resource.
            
            Each pair must not have a key greater than 50 characters
            
            and must not have a value greater than 150 characters.
            
            Note: A maximum of 25 key value pairs can be provided for a resource and only string and numeral values are supported.
            </term></item></list>
            Schema for <c>SatelliteData</c>:
            <list type="table"><listeader><term>Name</term><term>Type</term><term>Required</term><term>Description</term></listeader><item><term>imageNames</term><term>string[]</term><term /><term> List of ImageNames. </term></item><item><term>imageFormats</term><term>string[]</term><term /><term> List of ImageFormats. Available value: TIF. </term></item><item><term>imageResolutions</term><term>number[]</term><term /><term> List of ImageResolutions in meters. Available values: 10, 20, 60. </term></item></list></remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSatelliteDataIngestionJobAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; CreateSatelliteDataIngestionJobAsync (string jobId, Azure.Core.RequestContent requestBody, Azure.RequestOptions requestOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; CreateSatelliteDataIngestionJobAsync(string jobId, class Azure.Core.RequestContent requestBody, class Azure.RequestOptions requestOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Verticals.AgriFood.Farming.ScenesClient.CreateSatelliteDataIngestionJobAsync(System.String,Azure.Core.RequestContent,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateSatelliteDataIngestionJobAsync (jobId As String, requestBody As RequestContent, Optional requestOptions As RequestOptions = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member CreateSatelliteDataIngestionJobAsync : string * Azure.Core.RequestContent * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.CreateSatelliteDataIngestionJobAsync : string * Azure.Core.RequestContent * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="scenesClient.CreateSatelliteDataIngestionJobAsync (jobId, requestBody, requestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Verticals.AgriFood.Farming</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jobId" Type="System.String" />
        <Parameter Name="requestBody" Type="Azure.Core.RequestContent" />
        <Parameter Name="requestOptions" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="jobId"> JobId provided by user. </param>
        <param name="requestBody"> The request body. </param>
        <param name="requestOptions"> The request options. </param>
        <summary> Create a satellite data ingestion job. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Request Body</c>:
            <list type="table"><listeader><term>Name</term><term>Type</term><term>Required</term><term>Description</term></listeader><item><term>farmerId</term><term>string</term><term>Yes</term><term> Farmer ID. </term></item><item><term>boundaryId</term><term>string</term><term>Yes</term><term> The id of the boundary object for which satellite data is being fetched. </term></item><item><term>startDateTime</term><term>string (ISO 8601 Format)</term><term>Yes</term><term> Start Date. </term></item><item><term>endDateTime</term><term>string (ISO 8601 Format)</term><term>Yes</term><term> End Date. </term></item><item><term>provider</term><term>"Microsoft"</term><term /><term> Provider of satellite data. </term></item><item><term>source</term><term>"Sentinel_2_L2A"</term><term /><term> Source of satellite data. </term></item><item><term>data</term><term>SatelliteData</term><term /><term> Data Model for SatelliteIngestionJobRequest. </term></item><item><term>id</term><term>string</term><term /><term> Unique job id. </term></item><item><term>status</term><term>string</term><term /><term>
            Status of the job.
            
            Possible values: 'Waiting', 'Running', 'Succeeded', 'Failed', 'Cancelled'.
            </term></item><item><term>durationInSeconds</term><term>number</term><term /><term> Duration of the job in seconds. </term></item><item><term>message</term><term>string</term><term /><term> Status message to capture more details of the job. </term></item><item><term>createdDateTime</term><term>string (ISO 8601 Format)</term><term /><term> Job created at dateTime. Sample format: yyyy-MM-ddTHH:mm:ssZ. </term></item><item><term>lastActionDateTime</term><term>string (ISO 8601 Format)</term><term /><term> Job was last acted upon at dateTime. Sample format: yyyy-MM-ddTHH:mm:ssZ. </term></item><item><term>startTime</term><term>string (ISO 8601 Format)</term><term /><term> Job start time when available. Sample format: yyyy-MM-ddTHH:mm:ssZ. </term></item><item><term>endTime</term><term>string (ISO 8601 Format)</term><term /><term> Job end time when available. Sample format: yyyy-MM-ddTHH:mm:ssZ. </term></item><item><term>name</term><term>string</term><term /><term> Name to identify resource. </term></item><item><term>description</term><term>string</term><term /><term> Textual description of the resource. </term></item><item><term>properties</term><term>Dictionary&lt;string, AnyObject&gt;</term><term /><term>
            A collection of key value pairs that belongs to the resource.
            
            Each pair must not have a key greater than 50 characters
            
            and must not have a value greater than 150 characters.
            
            Note: A maximum of 25 key value pairs can be provided for a resource and only string and numeral values are supported.
            </term></item></list>
            Schema for <c>SatelliteData</c>:
            <list type="table"><listeader><term>Name</term><term>Type</term><term>Required</term><term>Description</term></listeader><item><term>imageNames</term><term>string[]</term><term /><term> List of ImageNames. </term></item><item><term>imageFormats</term><term>string[]</term><term /><term> List of ImageFormats. Available value: TIF. </term></item><item><term>imageResolutions</term><term>number[]</term><term /><term> List of ImageResolutions in meters. Available values: 10, 20, 60. </term></item></list></remarks>
      </Docs>
    </Member>
    <Member MemberName="Download">
      <MemberSignature Language="C#" Value="public virtual Azure.Response Download (string filePath, Azure.RequestOptions requestOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response Download(string filePath, class Azure.RequestOptions requestOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Verticals.AgriFood.Farming.ScenesClient.Download(System.String,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Download (filePath As String, Optional requestOptions As RequestOptions = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member Download : string * Azure.RequestOptions -&gt; Azure.Response&#xA;override this.Download : string * Azure.RequestOptions -&gt; Azure.Response" Usage="scenesClient.Download (filePath, requestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Verticals.AgriFood.Farming</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filePath" Type="System.String" />
        <Parameter Name="requestOptions" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="filePath"> cloud storage path of scene file. </param>
        <param name="requestOptions"> The request options. </param>
        <summary> Downloads and returns file stream as response for the given input filePath. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DownloadAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DownloadAsync (string filePath, Azure.RequestOptions requestOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DownloadAsync(string filePath, class Azure.RequestOptions requestOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Verticals.AgriFood.Farming.ScenesClient.DownloadAsync(System.String,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DownloadAsync (filePath As String, Optional requestOptions As RequestOptions = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DownloadAsync : string * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DownloadAsync : string * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="scenesClient.DownloadAsync (filePath, requestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Verticals.AgriFood.Farming</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filePath" Type="System.String" />
        <Parameter Name="requestOptions" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="filePath"> cloud storage path of scene file. </param>
        <param name="requestOptions"> The request options. </param>
        <summary> Downloads and returns file stream as response for the given input filePath. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSatelliteDataIngestionJobDetails">
      <MemberSignature Language="C#" Value="public virtual Azure.Response GetSatelliteDataIngestionJobDetails (string jobId, Azure.RequestOptions requestOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response GetSatelliteDataIngestionJobDetails(string jobId, class Azure.RequestOptions requestOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Verticals.AgriFood.Farming.ScenesClient.GetSatelliteDataIngestionJobDetails(System.String,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSatelliteDataIngestionJobDetails (jobId As String, Optional requestOptions As RequestOptions = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member GetSatelliteDataIngestionJobDetails : string * Azure.RequestOptions -&gt; Azure.Response&#xA;override this.GetSatelliteDataIngestionJobDetails : string * Azure.RequestOptions -&gt; Azure.Response" Usage="scenesClient.GetSatelliteDataIngestionJobDetails (jobId, requestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Verticals.AgriFood.Farming</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jobId" Type="System.String" />
        <Parameter Name="requestOptions" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="jobId"> ID of the job. </param>
        <param name="requestOptions"> The request options. </param>
        <summary> Get a satellite data ingestion job. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSatelliteDataIngestionJobDetailsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; GetSatelliteDataIngestionJobDetailsAsync (string jobId, Azure.RequestOptions requestOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; GetSatelliteDataIngestionJobDetailsAsync(string jobId, class Azure.RequestOptions requestOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Verticals.AgriFood.Farming.ScenesClient.GetSatelliteDataIngestionJobDetailsAsync(System.String,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSatelliteDataIngestionJobDetailsAsync (jobId As String, Optional requestOptions As RequestOptions = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member GetSatelliteDataIngestionJobDetailsAsync : string * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.GetSatelliteDataIngestionJobDetailsAsync : string * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="scenesClient.GetSatelliteDataIngestionJobDetailsAsync (jobId, requestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Verticals.AgriFood.Farming</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jobId" Type="System.String" />
        <Parameter Name="requestOptions" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="jobId"> ID of the job. </param>
        <param name="requestOptions"> The request options. </param>
        <summary> Get a satellite data ingestion job. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="List">
      <MemberSignature Language="C#" Value="public virtual Azure.Response List (string provider, string farmerId, string boundaryId, string source = default, DateTimeOffset? startDateTime = default, DateTimeOffset? endDateTime = default, double? maxCloudCoveragePercentage = default, double? maxDarkPixelCoveragePercentage = default, System.Collections.Generic.IEnumerable&lt;string&gt; imageNames = default, System.Collections.Generic.IEnumerable&lt;double&gt; imageResolutions = default, System.Collections.Generic.IEnumerable&lt;string&gt; imageFormats = default, int? maxPageSize = default, string skipToken = default, Azure.RequestOptions requestOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response List(string provider, string farmerId, string boundaryId, string source, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; startDateTime, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; endDateTime, valuetype System.Nullable`1&lt;float64&gt; maxCloudCoveragePercentage, valuetype System.Nullable`1&lt;float64&gt; maxDarkPixelCoveragePercentage, class System.Collections.Generic.IEnumerable`1&lt;string&gt; imageNames, class System.Collections.Generic.IEnumerable`1&lt;float64&gt; imageResolutions, class System.Collections.Generic.IEnumerable`1&lt;string&gt; imageFormats, valuetype System.Nullable`1&lt;int32&gt; maxPageSize, string skipToken, class Azure.RequestOptions requestOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Verticals.AgriFood.Farming.ScenesClient.List(System.String,System.String,System.String,System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.Double},System.Nullable{System.Double},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.Double},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Int32},System.String,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function List (provider As String, farmerId As String, boundaryId As String, Optional source As String = Nothing, Optional startDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional endDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional maxCloudCoveragePercentage As Nullable(Of Double) = Nothing, Optional maxDarkPixelCoveragePercentage As Nullable(Of Double) = Nothing, Optional imageNames As IEnumerable(Of String) = Nothing, Optional imageResolutions As IEnumerable(Of Double) = Nothing, Optional imageFormats As IEnumerable(Of String) = Nothing, Optional maxPageSize As Nullable(Of Integer) = Nothing, Optional skipToken As String = Nothing, Optional requestOptions As RequestOptions = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member List : string * string * string * string * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;double&gt; * Nullable&lt;double&gt; * seq&lt;string&gt; * seq&lt;double&gt; * seq&lt;string&gt; * Nullable&lt;int&gt; * string * Azure.RequestOptions -&gt; Azure.Response&#xA;override this.List : string * string * string * string * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;double&gt; * Nullable&lt;double&gt; * seq&lt;string&gt; * seq&lt;double&gt; * seq&lt;string&gt; * Nullable&lt;int&gt; * string * Azure.RequestOptions -&gt; Azure.Response" Usage="scenesClient.List (provider, farmerId, boundaryId, source, startDateTime, endDateTime, maxCloudCoveragePercentage, maxDarkPixelCoveragePercentage, imageNames, imageResolutions, imageFormats, maxPageSize, skipToken, requestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Verticals.AgriFood.Farming</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.String" />
        <Parameter Name="farmerId" Type="System.String" />
        <Parameter Name="boundaryId" Type="System.String" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="startDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="endDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="maxCloudCoveragePercentage" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="maxDarkPixelCoveragePercentage" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="imageNames" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="imageResolutions" Type="System.Collections.Generic.IEnumerable&lt;System.Double&gt;" />
        <Parameter Name="imageFormats" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="maxPageSize" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="skipToken" Type="System.String" />
        <Parameter Name="requestOptions" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="provider"> Provider name of scene data. </param>
        <param name="farmerId"> FarmerId. </param>
        <param name="boundaryId"> BoundaryId. </param>
        <param name="source"> Source name of scene data, default value Sentinel_2_L2A (Sentinel 2 L2A). </param>
        <param name="startDateTime"> Scene start UTC datetime (inclusive), sample format: yyyy-MM-ddThh:mm:ssZ. </param>
        <param name="endDateTime"> Scene end UTC datetime (inclusive), sample format: yyyy-MM-dThh:mm:ssZ. </param>
        <param name="maxCloudCoveragePercentage"> Filter scenes with cloud coverage percentage less than max value. Range [0 to 100.0]. </param>
        <param name="maxDarkPixelCoveragePercentage"> Filter scenes with dark pixel coverage percentage less than max value. Range [0 to 100.0]. </param>
        <param name="imageNames"> List of image names to be filtered. </param>
        <param name="imageResolutions"> List of image resolutions in meters to be filtered. </param>
        <param name="imageFormats"> List of image formats to be filtered. </param>
        <param name="maxPageSize">
            Maximum number of items needed (inclusive).
            
            Minimum = 10, Maximum = 1000, Default value = 50.
            </param>
        <param name="skipToken"> Skip token for getting next set of results. </param>
        <param name="requestOptions"> The request options. </param>
        <summary> Returns a paginated list of scene resources. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; ListAsync (string provider, string farmerId, string boundaryId, string source = default, DateTimeOffset? startDateTime = default, DateTimeOffset? endDateTime = default, double? maxCloudCoveragePercentage = default, double? maxDarkPixelCoveragePercentage = default, System.Collections.Generic.IEnumerable&lt;string&gt; imageNames = default, System.Collections.Generic.IEnumerable&lt;double&gt; imageResolutions = default, System.Collections.Generic.IEnumerable&lt;string&gt; imageFormats = default, int? maxPageSize = default, string skipToken = default, Azure.RequestOptions requestOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; ListAsync(string provider, string farmerId, string boundaryId, string source, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; startDateTime, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; endDateTime, valuetype System.Nullable`1&lt;float64&gt; maxCloudCoveragePercentage, valuetype System.Nullable`1&lt;float64&gt; maxDarkPixelCoveragePercentage, class System.Collections.Generic.IEnumerable`1&lt;string&gt; imageNames, class System.Collections.Generic.IEnumerable`1&lt;float64&gt; imageResolutions, class System.Collections.Generic.IEnumerable`1&lt;string&gt; imageFormats, valuetype System.Nullable`1&lt;int32&gt; maxPageSize, string skipToken, class Azure.RequestOptions requestOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Verticals.AgriFood.Farming.ScenesClient.ListAsync(System.String,System.String,System.String,System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.Double},System.Nullable{System.Double},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.Double},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Int32},System.String,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ListAsync (provider As String, farmerId As String, boundaryId As String, Optional source As String = Nothing, Optional startDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional endDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional maxCloudCoveragePercentage As Nullable(Of Double) = Nothing, Optional maxDarkPixelCoveragePercentage As Nullable(Of Double) = Nothing, Optional imageNames As IEnumerable(Of String) = Nothing, Optional imageResolutions As IEnumerable(Of Double) = Nothing, Optional imageFormats As IEnumerable(Of String) = Nothing, Optional maxPageSize As Nullable(Of Integer) = Nothing, Optional skipToken As String = Nothing, Optional requestOptions As RequestOptions = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member ListAsync : string * string * string * string * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;double&gt; * Nullable&lt;double&gt; * seq&lt;string&gt; * seq&lt;double&gt; * seq&lt;string&gt; * Nullable&lt;int&gt; * string * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.ListAsync : string * string * string * string * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;double&gt; * Nullable&lt;double&gt; * seq&lt;string&gt; * seq&lt;double&gt; * seq&lt;string&gt; * Nullable&lt;int&gt; * string * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="scenesClient.ListAsync (provider, farmerId, boundaryId, source, startDateTime, endDateTime, maxCloudCoveragePercentage, maxDarkPixelCoveragePercentage, imageNames, imageResolutions, imageFormats, maxPageSize, skipToken, requestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Verticals.AgriFood.Farming</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.String" />
        <Parameter Name="farmerId" Type="System.String" />
        <Parameter Name="boundaryId" Type="System.String" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="startDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="endDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="maxCloudCoveragePercentage" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="maxDarkPixelCoveragePercentage" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="imageNames" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="imageResolutions" Type="System.Collections.Generic.IEnumerable&lt;System.Double&gt;" />
        <Parameter Name="imageFormats" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="maxPageSize" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="skipToken" Type="System.String" />
        <Parameter Name="requestOptions" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="provider"> Provider name of scene data. </param>
        <param name="farmerId"> FarmerId. </param>
        <param name="boundaryId"> BoundaryId. </param>
        <param name="source"> Source name of scene data, default value Sentinel_2_L2A (Sentinel 2 L2A). </param>
        <param name="startDateTime"> Scene start UTC datetime (inclusive), sample format: yyyy-MM-ddThh:mm:ssZ. </param>
        <param name="endDateTime"> Scene end UTC datetime (inclusive), sample format: yyyy-MM-dThh:mm:ssZ. </param>
        <param name="maxCloudCoveragePercentage"> Filter scenes with cloud coverage percentage less than max value. Range [0 to 100.0]. </param>
        <param name="maxDarkPixelCoveragePercentage"> Filter scenes with dark pixel coverage percentage less than max value. Range [0 to 100.0]. </param>
        <param name="imageNames"> List of image names to be filtered. </param>
        <param name="imageResolutions"> List of image resolutions in meters to be filtered. </param>
        <param name="imageFormats"> List of image formats to be filtered. </param>
        <param name="maxPageSize">
            Maximum number of items needed (inclusive).
            
            Minimum = 10, Maximum = 1000, Default value = 50.
            </param>
        <param name="skipToken"> Skip token for getting next set of results. </param>
        <param name="requestOptions"> The request options. </param>
        <summary> Returns a paginated list of scene resources. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Pipeline">
      <MemberSignature Language="C#" Value="public virtual Azure.Core.Pipeline.HttpPipeline Pipeline { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Core.Pipeline.HttpPipeline Pipeline" />
      <MemberSignature Language="DocId" Value="P:Azure.Verticals.AgriFood.Farming.ScenesClient.Pipeline" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Pipeline As HttpPipeline" />
      <MemberSignature Language="F#" Value="member this.Pipeline : Azure.Core.Pipeline.HttpPipeline" Usage="Azure.Verticals.AgriFood.Farming.ScenesClient.Pipeline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Verticals.AgriFood.Farming</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.Pipeline.HttpPipeline</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The HTTP pipeline for sending and receiving REST requests and responses. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="ActivityRunsQueryResponse" FullName="Azure.Analytics.Synapse.Artifacts.Models.ActivityRunsQueryResponse">
  <TypeSignature Language="C#" Value="public class ActivityRunsQueryResponse" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ActivityRunsQueryResponse extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Analytics.Synapse.Artifacts.Models.ActivityRunsQueryResponse" />
  <TypeSignature Language="VB.NET" Value="Public Class ActivityRunsQueryResponse" />
  <TypeSignature Language="F#" Value="type ActivityRunsQueryResponse = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Text.Json.Serialization.JsonConverter(typeof(Azure.Analytics.Synapse.Artifacts.Models.ActivityRunsQueryResponse+ActivityRunsQueryResponseConverter))]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Text.Json.Serialization.JsonConverter(typeof(Azure.Analytics.Synapse.Artifacts.Models.ActivityRunsQueryResponse+ActivityRunsQueryResponseConverter))&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary> A list activity runs. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ContinuationToken">
      <MemberSignature Language="C#" Value="public string ContinuationToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContinuationToken" />
      <MemberSignature Language="DocId" Value="P:Azure.Analytics.Synapse.Artifacts.Models.ActivityRunsQueryResponse.ContinuationToken" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContinuationToken As String" />
      <MemberSignature Language="F#" Value="member this.ContinuationToken : string" Usage="Azure.Analytics.Synapse.Artifacts.Models.ActivityRunsQueryResponse.ContinuationToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The continuation token for getting the next page of results, if any remaining results exist, null otherwise. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;Azure.Analytics.Synapse.Artifacts.Models.ActivityRun&gt; Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;class Azure.Analytics.Synapse.Artifacts.Models.ActivityRun&gt; Value" />
      <MemberSignature Language="DocId" Value="P:Azure.Analytics.Synapse.Artifacts.Models.ActivityRunsQueryResponse.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As IReadOnlyList(Of ActivityRun)" />
      <MemberSignature Language="F#" Value="member this.Value : System.Collections.Generic.IReadOnlyList&lt;Azure.Analytics.Synapse.Artifacts.Models.ActivityRun&gt;" Usage="Azure.Analytics.Synapse.Artifacts.Models.ActivityRunsQueryResponse.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Artifacts</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Azure.Analytics.Synapse.Artifacts.Models.ActivityRun&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> List of activity runs. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

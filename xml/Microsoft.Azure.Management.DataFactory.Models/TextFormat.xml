<Type Name="TextFormat" FullName="Microsoft.Azure.Management.DataFactory.Models.TextFormat">
  <TypeSignature Language="C#" Value="public class TextFormat : Microsoft.Azure.Management.DataFactory.Models.DatasetStorageFormat" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TextFormat extends Microsoft.Azure.Management.DataFactory.Models.DatasetStorageFormat" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Management.DataFactory.Models.TextFormat" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Management.DataFactory</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Azure.Management.DataFactory.Models.DatasetStorageFormat</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            The data stored in text format.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextFormat ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.DataFactory.Models.TextFormat.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.DataFactory</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the TextFormat class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextFormat (object serializer = null, object deserializer = null, object columnDelimiter = null, object rowDelimiter = null, object escapeChar = null, object quoteChar = null, object nullValue = null, object encodingName = null, object treatEmptyAsNull = null, object skipLineCount = null, object firstRowAsHeader = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object serializer, object deserializer, object columnDelimiter, object rowDelimiter, object escapeChar, object quoteChar, object nullValue, object encodingName, object treatEmptyAsNull, object skipLineCount, object firstRowAsHeader) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.DataFactory.Models.TextFormat.#ctor(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.DataFactory</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serializer" Type="System.Object" />
        <Parameter Name="deserializer" Type="System.Object" />
        <Parameter Name="columnDelimiter" Type="System.Object" />
        <Parameter Name="rowDelimiter" Type="System.Object" />
        <Parameter Name="escapeChar" Type="System.Object" />
        <Parameter Name="quoteChar" Type="System.Object" />
        <Parameter Name="nullValue" Type="System.Object" />
        <Parameter Name="encodingName" Type="System.Object" />
        <Parameter Name="treatEmptyAsNull" Type="System.Object" />
        <Parameter Name="skipLineCount" Type="System.Object" />
        <Parameter Name="firstRowAsHeader" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="serializer">Serializer. Type: string (or Expression
            with resultType string).</param>
        <param name="deserializer">Deserializer. Type: string (or
            Expression with resultType string).</param>
        <param name="columnDelimiter">The column delimiter. Type: string
            (or Expression with resultType string).</param>
        <param name="rowDelimiter">The row delimiter. Type: string (or
            Expression with resultType string).</param>
        <param name="escapeChar">The escape character. Type: string (or
            Expression with resultType string).</param>
        <param name="quoteChar">The quote character. Type: string (or
            Expression with resultType string).</param>
        <param name="nullValue">The null value string. Type: string (or
            Expression with resultType string).</param>
        <param name="encodingName">The code page name of the preferred
            encoding. If miss, the default value is ΓÇ£utf-8ΓÇ¥, unless BOM
            denotes another Unicode encoding. Refer to the ΓÇ£NameΓÇ¥ column of
            the table in the following link to set supported values:
            https://msdn.microsoft.com/library/system.text.encoding.aspx. Type:
            string (or Expression with resultType string).</param>
        <param name="treatEmptyAsNull">Treat empty column values in the
            text file as null. The default value is true. Type: boolean (or
            Expression with resultType boolean).</param>
        <param name="skipLineCount">The number of lines/rows to be skipped
            when parsing text files. The default value is 0. Type: integer (or
            Expression with resultType integer).</param>
        <param name="firstRowAsHeader">When used as input, treat the first
            row of data as headers. When used as output,write the headers into
            the output as the first row of data. The default value is false.
            Type: boolean (or Expression with resultType boolean).</param>
        <summary>
            Initializes a new instance of the TextFormat class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnDelimiter">
      <MemberSignature Language="C#" Value="public object ColumnDelimiter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ColumnDelimiter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.DataFactory.Models.TextFormat.ColumnDelimiter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.DataFactory</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="columnDelimiter")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the column delimiter. Type: string (or Expression with
            resultType string).
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EncodingName">
      <MemberSignature Language="C#" Value="public object EncodingName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object EncodingName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.DataFactory.Models.TextFormat.EncodingName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.DataFactory</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="encodingName")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the code page name of the preferred encoding. If miss,
            the default value is ΓÇ£utf-8ΓÇ¥, unless BOM denotes another
            Unicode encoding. Refer to the ΓÇ£NameΓÇ¥ column of the table in
            the following link to set supported values:
            https://msdn.microsoft.com/library/system.text.encoding.aspx. Type:
            string (or Expression with resultType string).
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EscapeChar">
      <MemberSignature Language="C#" Value="public object EscapeChar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object EscapeChar" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.DataFactory.Models.TextFormat.EscapeChar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.DataFactory</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="escapeChar")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the escape character. Type: string (or Expression with
            resultType string).
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FirstRowAsHeader">
      <MemberSignature Language="C#" Value="public object FirstRowAsHeader { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object FirstRowAsHeader" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.DataFactory.Models.TextFormat.FirstRowAsHeader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.DataFactory</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="firstRowAsHeader")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets when used as input, treat the first row of data as
            headers. When used as output,write the headers into the output as
            the first row of data. The default value is false. Type: boolean
            (or Expression with resultType boolean).
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NullValue">
      <MemberSignature Language="C#" Value="public object NullValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object NullValue" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.DataFactory.Models.TextFormat.NullValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.DataFactory</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="nullValue")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the null value string. Type: string (or Expression
            with resultType string).
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QuoteChar">
      <MemberSignature Language="C#" Value="public object QuoteChar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object QuoteChar" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.DataFactory.Models.TextFormat.QuoteChar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.DataFactory</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="quoteChar")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the quote character. Type: string (or Expression with
            resultType string).
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RowDelimiter">
      <MemberSignature Language="C#" Value="public object RowDelimiter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object RowDelimiter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.DataFactory.Models.TextFormat.RowDelimiter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.DataFactory</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="rowDelimiter")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the row delimiter. Type: string (or Expression with
            resultType string).
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipLineCount">
      <MemberSignature Language="C#" Value="public object SkipLineCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SkipLineCount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.DataFactory.Models.TextFormat.SkipLineCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.DataFactory</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="skipLineCount")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the number of lines/rows to be skipped when parsing
            text files. The default value is 0. Type: integer (or Expression
            with resultType integer).
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TreatEmptyAsNull">
      <MemberSignature Language="C#" Value="public object TreatEmptyAsNull { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object TreatEmptyAsNull" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.DataFactory.Models.TextFormat.TreatEmptyAsNull" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.DataFactory</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="treatEmptyAsNull")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets treat empty column values in the text file as null.
            The default value is true. Type: boolean (or Expression with
            resultType boolean).
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
<Type Name="RegistryArtifact" FullName="Azure.Containers.ContainerRegistry.RegistryArtifact">
  <TypeSignature Language="C#" Value="public class RegistryArtifact" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RegistryArtifact extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Containers.ContainerRegistry.RegistryArtifact" />
  <TypeSignature Language="VB.NET" Value="Public Class RegistryArtifact" />
  <TypeSignature Language="F#" Value="type RegistryArtifact = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Containers.ContainerRegistry</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A helper class that groups information and operations about an image or artifact in this container registry. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected RegistryArtifact ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Containers.ContainerRegistry.RegistryArtifact.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Containers.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of RegistryArtifact for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public virtual Azure.Response Delete (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response Delete(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Containers.ContainerRegistry.RegistryArtifact.Delete(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Delete (Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member Delete : System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.Delete : System.Threading.CancellationToken -&gt; Azure.Response" Usage="registryArtifact.Delete cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Containers.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Delete registry artifact. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Container Registry service.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DeleteAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeleteAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Containers.ContainerRegistry.RegistryArtifact.DeleteAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DeleteAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DeleteAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="registryArtifact.DeleteAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Containers.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Delete registry artifact. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Container Registry service.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteTag">
      <MemberSignature Language="C#" Value="public virtual Azure.Response DeleteTag (string tag, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response DeleteTag(string tag, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Containers.ContainerRegistry.RegistryArtifact.DeleteTag(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteTag (tag As String, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member DeleteTag : string * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.DeleteTag : string * System.Threading.CancellationToken -&gt; Azure.Response" Usage="registryArtifact.DeleteTag (tag, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Containers.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tag"> Name of tag to delete. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Delete the tag.  This removes the tag from the artifact and its manifest. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"> Thrown when <paramref name="tag" /> is null. </exception>
        <exception cref="T:System.ArgumentException"> Thrown when <paramref name="tag" /> is empty. </exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Container Registry service.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteTagAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DeleteTagAsync (string tag, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeleteTagAsync(string tag, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Containers.ContainerRegistry.RegistryArtifact.DeleteTagAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteTagAsync (tag As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DeleteTagAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DeleteTagAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="registryArtifact.DeleteTagAsync (tag, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Containers.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tag"> Name of tag to delete. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Delete the tag.  This removes the tag from the artifact and its manifest. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"> Thrown when <paramref name="tag" /> is null. </exception>
        <exception cref="T:System.ArgumentException"> Thrown when <paramref name="tag" /> is empty. </exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Container Registry service.</exception>
      </Docs>
    </Member>
    <Member MemberName="FullyQualifiedName">
      <MemberSignature Language="C#" Value="public virtual string FullyQualifiedName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullyQualifiedName" />
      <MemberSignature Language="DocId" Value="P:Azure.Containers.ContainerRegistry.RegistryArtifact.FullyQualifiedName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property FullyQualifiedName As String" />
      <MemberSignature Language="F#" Value="member this.FullyQualifiedName : string" Usage="Azure.Containers.ContainerRegistry.RegistryArtifact.FullyQualifiedName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Containers.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the fully qualified name of this artifact.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManifestProperties">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Containers.ContainerRegistry.ArtifactManifestProperties&gt; GetManifestProperties (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Containers.ContainerRegistry.ArtifactManifestProperties&gt; GetManifestProperties(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Containers.ContainerRegistry.RegistryArtifact.GetManifestProperties(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManifestProperties (Optional cancellationToken As CancellationToken = Nothing) As Response(Of ArtifactManifestProperties)" />
      <MemberSignature Language="F#" Value="abstract member GetManifestProperties : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Containers.ContainerRegistry.ArtifactManifestProperties&gt;&#xA;override this.GetManifestProperties : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Containers.ContainerRegistry.ArtifactManifestProperties&gt;" Usage="registryArtifact.GetManifestProperties cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Containers.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Containers.ContainerRegistry.ArtifactManifestProperties&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Get registry artifact properties by tag or digest. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Container Registry service.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetManifestPropertiesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Containers.ContainerRegistry.ArtifactManifestProperties&gt;&gt; GetManifestPropertiesAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Containers.ContainerRegistry.ArtifactManifestProperties&gt;&gt; GetManifestPropertiesAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Containers.ContainerRegistry.RegistryArtifact.GetManifestPropertiesAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManifestPropertiesAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ArtifactManifestProperties))" />
      <MemberSignature Language="F#" Value="abstract member GetManifestPropertiesAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Containers.ContainerRegistry.ArtifactManifestProperties&gt;&gt;&#xA;override this.GetManifestPropertiesAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Containers.ContainerRegistry.ArtifactManifestProperties&gt;&gt;" Usage="registryArtifact.GetManifestPropertiesAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Containers.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Containers.ContainerRegistry.ArtifactManifestProperties&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Get registry artifact properties by tag or digest. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Container Registry service.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetTagProperties">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Containers.ContainerRegistry.ArtifactTagProperties&gt; GetTagProperties (string tag, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Containers.ContainerRegistry.ArtifactTagProperties&gt; GetTagProperties(string tag, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Containers.ContainerRegistry.RegistryArtifact.GetTagProperties(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTagProperties (tag As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ArtifactTagProperties)" />
      <MemberSignature Language="F#" Value="abstract member GetTagProperties : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Containers.ContainerRegistry.ArtifactTagProperties&gt;&#xA;override this.GetTagProperties : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Containers.ContainerRegistry.ArtifactTagProperties&gt;" Usage="registryArtifact.GetTagProperties (tag, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Containers.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Containers.ContainerRegistry.ArtifactTagProperties&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tag"> Tag name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Get tag attributes by tag. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"> Thrown when <paramref name="tag" /> is null. </exception>
        <exception cref="T:System.ArgumentException"> Thrown when <paramref name="tag" /> is empty. </exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Container Registry service.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetTagPropertiesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Containers.ContainerRegistry.ArtifactTagProperties&gt;&gt; GetTagPropertiesAsync (string tag, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Containers.ContainerRegistry.ArtifactTagProperties&gt;&gt; GetTagPropertiesAsync(string tag, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Containers.ContainerRegistry.RegistryArtifact.GetTagPropertiesAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTagPropertiesAsync (tag As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ArtifactTagProperties))" />
      <MemberSignature Language="F#" Value="abstract member GetTagPropertiesAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Containers.ContainerRegistry.ArtifactTagProperties&gt;&gt;&#xA;override this.GetTagPropertiesAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Containers.ContainerRegistry.ArtifactTagProperties&gt;&gt;" Usage="registryArtifact.GetTagPropertiesAsync (tag, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Containers.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Containers.ContainerRegistry.ArtifactTagProperties&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tag"> Tag name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Get tag properties by tag. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"> Thrown when <paramref name="tag" /> is null. </exception>
        <exception cref="T:System.ArgumentException"> Thrown when <paramref name="tag" /> is empty. </exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Container Registry service.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetTags">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.Containers.ContainerRegistry.ArtifactTagProperties&gt; GetTags (Azure.Containers.ContainerRegistry.TagOrderBy orderBy = Azure.Containers.ContainerRegistry.TagOrderBy.None, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.Containers.ContainerRegistry.ArtifactTagProperties&gt; GetTags(valuetype Azure.Containers.ContainerRegistry.TagOrderBy orderBy, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Containers.ContainerRegistry.RegistryArtifact.GetTags(Azure.Containers.ContainerRegistry.TagOrderBy,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTags (Optional orderBy As TagOrderBy = Azure.Containers.ContainerRegistry.TagOrderBy.None, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ArtifactTagProperties)" />
      <MemberSignature Language="F#" Value="abstract member GetTags : Azure.Containers.ContainerRegistry.TagOrderBy * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.Containers.ContainerRegistry.ArtifactTagProperties&gt;&#xA;override this.GetTags : Azure.Containers.ContainerRegistry.TagOrderBy * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.Containers.ContainerRegistry.ArtifactTagProperties&gt;" Usage="registryArtifact.GetTags (orderBy, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Containers.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.Containers.ContainerRegistry.ArtifactTagProperties&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="orderBy" Type="Azure.Containers.ContainerRegistry.TagOrderBy" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="orderBy"> Requested order of tags in the collection. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Get the collection of tags for a repository. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Container Registry service.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetTagsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.Containers.ContainerRegistry.ArtifactTagProperties&gt; GetTagsAsync (Azure.Containers.ContainerRegistry.TagOrderBy orderBy = Azure.Containers.ContainerRegistry.TagOrderBy.None, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.Containers.ContainerRegistry.ArtifactTagProperties&gt; GetTagsAsync(valuetype Azure.Containers.ContainerRegistry.TagOrderBy orderBy, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Containers.ContainerRegistry.RegistryArtifact.GetTagsAsync(Azure.Containers.ContainerRegistry.TagOrderBy,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTagsAsync (Optional orderBy As TagOrderBy = Azure.Containers.ContainerRegistry.TagOrderBy.None, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ArtifactTagProperties)" />
      <MemberSignature Language="F#" Value="abstract member GetTagsAsync : Azure.Containers.ContainerRegistry.TagOrderBy * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.Containers.ContainerRegistry.ArtifactTagProperties&gt;&#xA;override this.GetTagsAsync : Azure.Containers.ContainerRegistry.TagOrderBy * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.Containers.ContainerRegistry.ArtifactTagProperties&gt;" Usage="registryArtifact.GetTagsAsync (orderBy, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Containers.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.Containers.ContainerRegistry.ArtifactTagProperties&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="orderBy" Type="Azure.Containers.ContainerRegistry.TagOrderBy" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="orderBy"> Requested order of tags in the collection. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Get the collection of tags for a repository. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Container Registry service.</exception>
      </Docs>
    </Member>
    <Member MemberName="RegistryUri">
      <MemberSignature Language="C#" Value="public virtual Uri RegistryUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri RegistryUri" />
      <MemberSignature Language="DocId" Value="P:Azure.Containers.ContainerRegistry.RegistryArtifact.RegistryUri" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RegistryUri As Uri" />
      <MemberSignature Language="F#" Value="member this.RegistryUri : Uri" Usage="Azure.Containers.ContainerRegistry.RegistryArtifact.RegistryUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Containers.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the Registry Uri.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RepositoryName">
      <MemberSignature Language="C#" Value="public virtual string RepositoryName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RepositoryName" />
      <MemberSignature Language="DocId" Value="P:Azure.Containers.ContainerRegistry.RegistryArtifact.RepositoryName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RepositoryName As String" />
      <MemberSignature Language="F#" Value="member this.RepositoryName : string" Usage="Azure.Containers.ContainerRegistry.RegistryArtifact.RepositoryName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Containers.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the name of the repository for this artifact.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetManifestProperties">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Containers.ContainerRegistry.ArtifactManifestProperties&gt; SetManifestProperties (Azure.Containers.ContainerRegistry.ContentProperties value, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Containers.ContainerRegistry.ArtifactManifestProperties&gt; SetManifestProperties(class Azure.Containers.ContainerRegistry.ContentProperties value, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Containers.ContainerRegistry.RegistryArtifact.SetManifestProperties(Azure.Containers.ContainerRegistry.ContentProperties,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetManifestProperties (value As ContentProperties, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ArtifactManifestProperties)" />
      <MemberSignature Language="F#" Value="abstract member SetManifestProperties : Azure.Containers.ContainerRegistry.ContentProperties * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Containers.ContainerRegistry.ArtifactManifestProperties&gt;&#xA;override this.SetManifestProperties : Azure.Containers.ContainerRegistry.ContentProperties * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Containers.ContainerRegistry.ArtifactManifestProperties&gt;" Usage="registryArtifact.SetManifestProperties (value, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Containers.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Containers.ContainerRegistry.ArtifactManifestProperties&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="Azure.Containers.ContainerRegistry.ContentProperties" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="value"> Manifest properties value. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Update manifest attributes. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"> Thrown when <paramref name="value" /> is null. </exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Container Registry service.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetManifestPropertiesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Containers.ContainerRegistry.ArtifactManifestProperties&gt;&gt; SetManifestPropertiesAsync (Azure.Containers.ContainerRegistry.ContentProperties value, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Containers.ContainerRegistry.ArtifactManifestProperties&gt;&gt; SetManifestPropertiesAsync(class Azure.Containers.ContainerRegistry.ContentProperties value, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Containers.ContainerRegistry.RegistryArtifact.SetManifestPropertiesAsync(Azure.Containers.ContainerRegistry.ContentProperties,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetManifestPropertiesAsync (value As ContentProperties, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ArtifactManifestProperties))" />
      <MemberSignature Language="F#" Value="abstract member SetManifestPropertiesAsync : Azure.Containers.ContainerRegistry.ContentProperties * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Containers.ContainerRegistry.ArtifactManifestProperties&gt;&gt;&#xA;override this.SetManifestPropertiesAsync : Azure.Containers.ContainerRegistry.ContentProperties * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Containers.ContainerRegistry.ArtifactManifestProperties&gt;&gt;" Usage="registryArtifact.SetManifestPropertiesAsync (value, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Containers.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Containers.ContainerRegistry.ArtifactManifestProperties&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="Azure.Containers.ContainerRegistry.ContentProperties" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="value"> Manifest properties value. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Update manifest attributes. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"> Thrown when <paramref name="value" /> is null. </exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Container Registry service.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetTagProperties">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Containers.ContainerRegistry.ArtifactTagProperties&gt; SetTagProperties (string tag, Azure.Containers.ContainerRegistry.ContentProperties value, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Containers.ContainerRegistry.ArtifactTagProperties&gt; SetTagProperties(string tag, class Azure.Containers.ContainerRegistry.ContentProperties value, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Containers.ContainerRegistry.RegistryArtifact.SetTagProperties(System.String,Azure.Containers.ContainerRegistry.ContentProperties,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetTagProperties (tag As String, value As ContentProperties, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ArtifactTagProperties)" />
      <MemberSignature Language="F#" Value="abstract member SetTagProperties : string * Azure.Containers.ContainerRegistry.ContentProperties * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Containers.ContainerRegistry.ArtifactTagProperties&gt;&#xA;override this.SetTagProperties : string * Azure.Containers.ContainerRegistry.ContentProperties * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Containers.ContainerRegistry.ArtifactTagProperties&gt;" Usage="registryArtifact.SetTagProperties (tag, value, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Containers.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Containers.ContainerRegistry.ArtifactTagProperties&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
        <Parameter Name="value" Type="Azure.Containers.ContainerRegistry.ContentProperties" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tag"> Tag name. </param>
        <param name="value"> Tag property value. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Update tag attributes. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"> Thrown when <paramref name="value" /> is null. </exception>
        <exception cref="T:System.ArgumentException"> Thrown when <paramref name="tag" /> is empty. </exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Container Registry service.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetTagPropertiesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Containers.ContainerRegistry.ArtifactTagProperties&gt;&gt; SetTagPropertiesAsync (string tag, Azure.Containers.ContainerRegistry.ContentProperties value, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Containers.ContainerRegistry.ArtifactTagProperties&gt;&gt; SetTagPropertiesAsync(string tag, class Azure.Containers.ContainerRegistry.ContentProperties value, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Containers.ContainerRegistry.RegistryArtifact.SetTagPropertiesAsync(System.String,Azure.Containers.ContainerRegistry.ContentProperties,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetTagPropertiesAsync (tag As String, value As ContentProperties, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ArtifactTagProperties))" />
      <MemberSignature Language="F#" Value="abstract member SetTagPropertiesAsync : string * Azure.Containers.ContainerRegistry.ContentProperties * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Containers.ContainerRegistry.ArtifactTagProperties&gt;&gt;&#xA;override this.SetTagPropertiesAsync : string * Azure.Containers.ContainerRegistry.ContentProperties * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Containers.ContainerRegistry.ArtifactTagProperties&gt;&gt;" Usage="registryArtifact.SetTagPropertiesAsync (tag, value, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Containers.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Containers.ContainerRegistry.ArtifactTagProperties&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
        <Parameter Name="value" Type="Azure.Containers.ContainerRegistry.ContentProperties" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tag"> Tag name. </param>
        <param name="value"> Tag property value. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Update tag attributes. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"> Thrown when <paramref name="value" /> is null. </exception>
        <exception cref="T:System.ArgumentException"> Thrown when <paramref name="tag" /> is empty. </exception>
        <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Container Registry service.</exception>
      </Docs>
    </Member>
    <Member MemberName="TagOrDigest">
      <MemberSignature Language="C#" Value="public virtual string TagOrDigest { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TagOrDigest" />
      <MemberSignature Language="DocId" Value="P:Azure.Containers.ContainerRegistry.RegistryArtifact.TagOrDigest" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property TagOrDigest As String" />
      <MemberSignature Language="F#" Value="member this.TagOrDigest : string" Usage="Azure.Containers.ContainerRegistry.RegistryArtifact.TagOrDigest" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Containers.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the tag or digest reference used to create this RegistryArtifact instance.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="ContainerRepositoryClient" FullName="Azure.Containers.ContainerRegistry.ContainerRepositoryClient">
  <TypeSignature Language="C#" Value="public class ContainerRepositoryClient" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ContainerRepositoryClient extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Containers.ContainerRegistry.ContainerRepositoryClient" />
  <TypeSignature Language="VB.NET" Value="Public Class ContainerRepositoryClient" />
  <TypeSignature Language="F#" Value="type ContainerRepositoryClient = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Containers.ContainerRegistry</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> The repository service client. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ContainerRepositoryClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Containers.ContainerRegistry.ContainerRepositoryClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Containers.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of RepositoryClient for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContainerRepositoryClient (Uri endpoint, string repository, Azure.Core.TokenCredential credential);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, string repository, class Azure.Core.TokenCredential credential) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Containers.ContainerRegistry.ContainerRepositoryClient.#ctor(System.Uri,System.String,Azure.Core.TokenCredential)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, repository As String, credential As TokenCredential)" />
      <MemberSignature Language="F#" Value="new Azure.Containers.ContainerRegistry.ContainerRepositoryClient : Uri * string * Azure.Core.TokenCredential -&gt; Azure.Containers.ContainerRegistry.ContainerRepositoryClient" Usage="new Azure.Containers.ContainerRegistry.ContainerRepositoryClient (endpoint, repository, credential)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Containers.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="repository" Type="System.String" />
        <Parameter Name="credential" Type="Azure.Core.TokenCredential" />
      </Parameters>
      <Docs>
        <param name="endpoint">To be added.</param>
        <param name="repository">To be added.</param>
        <param name="credential">To be added.</param>
        <summary />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContainerRepositoryClient (Uri endpoint, string repository, Azure.Core.TokenCredential credential, Azure.Containers.ContainerRegistry.ContainerRegistryClientOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, string repository, class Azure.Core.TokenCredential credential, class Azure.Containers.ContainerRegistry.ContainerRegistryClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Containers.ContainerRegistry.ContainerRepositoryClient.#ctor(System.Uri,System.String,Azure.Core.TokenCredential,Azure.Containers.ContainerRegistry.ContainerRegistryClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, repository As String, credential As TokenCredential, options As ContainerRegistryClientOptions)" />
      <MemberSignature Language="F#" Value="new Azure.Containers.ContainerRegistry.ContainerRepositoryClient : Uri * string * Azure.Core.TokenCredential * Azure.Containers.ContainerRegistry.ContainerRegistryClientOptions -&gt; Azure.Containers.ContainerRegistry.ContainerRepositoryClient" Usage="new Azure.Containers.ContainerRegistry.ContainerRepositoryClient (endpoint, repository, credential, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Containers.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="repository" Type="System.String" />
        <Parameter Name="credential" Type="Azure.Core.TokenCredential" />
        <Parameter Name="options" Type="Azure.Containers.ContainerRegistry.ContainerRegistryClientOptions" />
      </Parameters>
      <Docs>
        <param name="endpoint">To be added.</param>
        <param name="repository">To be added.</param>
        <param name="credential">To be added.</param>
        <param name="options">To be added.</param>
        <summary />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Containers.ContainerRegistry.DeleteRepositoryResult&gt; Delete (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Containers.ContainerRegistry.DeleteRepositoryResult&gt; Delete(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Containers.ContainerRegistry.ContainerRepositoryClient.Delete(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Delete (Optional cancellationToken As CancellationToken = Nothing) As Response(Of DeleteRepositoryResult)" />
      <MemberSignature Language="F#" Value="abstract member Delete : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Containers.ContainerRegistry.DeleteRepositoryResult&gt;&#xA;override this.Delete : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Containers.ContainerRegistry.DeleteRepositoryResult&gt;" Usage="containerRepositoryClient.Delete cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Containers.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Containers.ContainerRegistry.DeleteRepositoryResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Delete the repository. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Containers.ContainerRegistry.DeleteRepositoryResult&gt;&gt; DeleteAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Containers.ContainerRegistry.DeleteRepositoryResult&gt;&gt; DeleteAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Containers.ContainerRegistry.ContainerRepositoryClient.DeleteAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DeleteRepositoryResult))" />
      <MemberSignature Language="F#" Value="abstract member DeleteAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Containers.ContainerRegistry.DeleteRepositoryResult&gt;&gt;&#xA;override this.DeleteAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Containers.ContainerRegistry.DeleteRepositoryResult&gt;&gt;" Usage="containerRepositoryClient.DeleteAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Containers.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Containers.ContainerRegistry.DeleteRepositoryResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Delete the repository. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteRegistryArtifact">
      <MemberSignature Language="C#" Value="public virtual Azure.Response DeleteRegistryArtifact (string digest, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response DeleteRegistryArtifact(string digest, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Containers.ContainerRegistry.ContainerRepositoryClient.DeleteRegistryArtifact(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteRegistryArtifact (digest As String, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member DeleteRegistryArtifact : string * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.DeleteRegistryArtifact : string * System.Threading.CancellationToken -&gt; Azure.Response" Usage="containerRepositoryClient.DeleteRegistryArtifact (digest, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Containers.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="digest" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="digest"> Manifest digest. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Delete registry artifact. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteRegistryArtifactAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DeleteRegistryArtifactAsync (string digest, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeleteRegistryArtifactAsync(string digest, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Containers.ContainerRegistry.ContainerRepositoryClient.DeleteRegistryArtifactAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteRegistryArtifactAsync (digest As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DeleteRegistryArtifactAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DeleteRegistryArtifactAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="containerRepositoryClient.DeleteRegistryArtifactAsync (digest, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Containers.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="digest" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="digest"> Manifest digest. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Delete registry artifact. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteTag">
      <MemberSignature Language="C#" Value="public virtual Azure.Response DeleteTag (string tag, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response DeleteTag(string tag, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Containers.ContainerRegistry.ContainerRepositoryClient.DeleteTag(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteTag (tag As String, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member DeleteTag : string * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.DeleteTag : string * System.Threading.CancellationToken -&gt; Azure.Response" Usage="containerRepositoryClient.DeleteTag (tag, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Containers.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tag"> Tag name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Delete tag. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteTagAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DeleteTagAsync (string tag, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeleteTagAsync(string tag, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Containers.ContainerRegistry.ContainerRepositoryClient.DeleteTagAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteTagAsync (tag As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DeleteTagAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DeleteTagAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="containerRepositoryClient.DeleteTagAsync (tag, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Containers.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tag"> Tag name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Delete tag. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Endpoint">
      <MemberSignature Language="C#" Value="public virtual Uri Endpoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Endpoint" />
      <MemberSignature Language="DocId" Value="P:Azure.Containers.ContainerRegistry.ContainerRepositoryClient.Endpoint" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Endpoint As Uri" />
      <MemberSignature Language="F#" Value="member this.Endpoint : Uri" Usage="Azure.Containers.ContainerRegistry.ContainerRepositoryClient.Endpoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Containers.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the blob service's primary <see cref="T:System.Uri" /> endpoint.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Containers.ContainerRegistry.RepositoryProperties&gt; GetProperties (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Containers.ContainerRegistry.RepositoryProperties&gt; GetProperties(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Containers.ContainerRegistry.ContainerRepositoryClient.GetProperties(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetProperties (Optional cancellationToken As CancellationToken = Nothing) As Response(Of RepositoryProperties)" />
      <MemberSignature Language="F#" Value="abstract member GetProperties : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Containers.ContainerRegistry.RepositoryProperties&gt;&#xA;override this.GetProperties : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Containers.ContainerRegistry.RepositoryProperties&gt;" Usage="containerRepositoryClient.GetProperties cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Containers.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Containers.ContainerRegistry.RepositoryProperties&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Get repository properties. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertiesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Containers.ContainerRegistry.RepositoryProperties&gt;&gt; GetPropertiesAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Containers.ContainerRegistry.RepositoryProperties&gt;&gt; GetPropertiesAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Containers.ContainerRegistry.ContainerRepositoryClient.GetPropertiesAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPropertiesAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of RepositoryProperties))" />
      <MemberSignature Language="F#" Value="abstract member GetPropertiesAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Containers.ContainerRegistry.RepositoryProperties&gt;&gt;&#xA;override this.GetPropertiesAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Containers.ContainerRegistry.RepositoryProperties&gt;&gt;" Usage="containerRepositoryClient.GetPropertiesAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Containers.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Containers.ContainerRegistry.RepositoryProperties&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Get repository properties. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRegistryArtifactProperties">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Containers.ContainerRegistry.RegistryArtifactProperties&gt; GetRegistryArtifactProperties (string tagOrDigest, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Containers.ContainerRegistry.RegistryArtifactProperties&gt; GetRegistryArtifactProperties(string tagOrDigest, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Containers.ContainerRegistry.ContainerRepositoryClient.GetRegistryArtifactProperties(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRegistryArtifactProperties (tagOrDigest As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of RegistryArtifactProperties)" />
      <MemberSignature Language="F#" Value="abstract member GetRegistryArtifactProperties : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Containers.ContainerRegistry.RegistryArtifactProperties&gt;&#xA;override this.GetRegistryArtifactProperties : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Containers.ContainerRegistry.RegistryArtifactProperties&gt;" Usage="containerRepositoryClient.GetRegistryArtifactProperties (tagOrDigest, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Containers.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Containers.ContainerRegistry.RegistryArtifactProperties&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagOrDigest" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tagOrDigest"> Either a tag or the digest identifying this registry artifact. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Get registry artifact properties by tag or digest. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRegistryArtifactPropertiesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Containers.ContainerRegistry.RegistryArtifactProperties&gt;&gt; GetRegistryArtifactPropertiesAsync (string tagOrDigest, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Containers.ContainerRegistry.RegistryArtifactProperties&gt;&gt; GetRegistryArtifactPropertiesAsync(string tagOrDigest, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Containers.ContainerRegistry.ContainerRepositoryClient.GetRegistryArtifactPropertiesAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRegistryArtifactPropertiesAsync (tagOrDigest As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of RegistryArtifactProperties))" />
      <MemberSignature Language="F#" Value="abstract member GetRegistryArtifactPropertiesAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Containers.ContainerRegistry.RegistryArtifactProperties&gt;&gt;&#xA;override this.GetRegistryArtifactPropertiesAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Containers.ContainerRegistry.RegistryArtifactProperties&gt;&gt;" Usage="containerRepositoryClient.GetRegistryArtifactPropertiesAsync (tagOrDigest, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Containers.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Containers.ContainerRegistry.RegistryArtifactProperties&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagOrDigest" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tagOrDigest"> Either a tag or the digest identifying this registry artifact. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Get registry artifact properties by tag or digest. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRegistryArtifacts">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.Containers.ContainerRegistry.RegistryArtifactProperties&gt; GetRegistryArtifacts (Azure.Containers.ContainerRegistry.GetRegistryArtifactsOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.Containers.ContainerRegistry.RegistryArtifactProperties&gt; GetRegistryArtifacts(class Azure.Containers.ContainerRegistry.GetRegistryArtifactsOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Containers.ContainerRegistry.ContainerRepositoryClient.GetRegistryArtifacts(Azure.Containers.ContainerRegistry.GetRegistryArtifactsOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRegistryArtifacts (Optional options As GetRegistryArtifactsOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of RegistryArtifactProperties)" />
      <MemberSignature Language="F#" Value="abstract member GetRegistryArtifacts : Azure.Containers.ContainerRegistry.GetRegistryArtifactsOptions * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.Containers.ContainerRegistry.RegistryArtifactProperties&gt;&#xA;override this.GetRegistryArtifacts : Azure.Containers.ContainerRegistry.GetRegistryArtifactsOptions * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.Containers.ContainerRegistry.RegistryArtifactProperties&gt;" Usage="containerRepositoryClient.GetRegistryArtifacts (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Containers.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.Containers.ContainerRegistry.RegistryArtifactProperties&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.Containers.ContainerRegistry.GetRegistryArtifactsOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options"> Options to override default collection getting behavior. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Get the collection of tags for a repository. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRegistryArtifactsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.Containers.ContainerRegistry.RegistryArtifactProperties&gt; GetRegistryArtifactsAsync (Azure.Containers.ContainerRegistry.GetRegistryArtifactsOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.Containers.ContainerRegistry.RegistryArtifactProperties&gt; GetRegistryArtifactsAsync(class Azure.Containers.ContainerRegistry.GetRegistryArtifactsOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Containers.ContainerRegistry.ContainerRepositoryClient.GetRegistryArtifactsAsync(Azure.Containers.ContainerRegistry.GetRegistryArtifactsOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRegistryArtifactsAsync (Optional options As GetRegistryArtifactsOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of RegistryArtifactProperties)" />
      <MemberSignature Language="F#" Value="abstract member GetRegistryArtifactsAsync : Azure.Containers.ContainerRegistry.GetRegistryArtifactsOptions * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.Containers.ContainerRegistry.RegistryArtifactProperties&gt;&#xA;override this.GetRegistryArtifactsAsync : Azure.Containers.ContainerRegistry.GetRegistryArtifactsOptions * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.Containers.ContainerRegistry.RegistryArtifactProperties&gt;" Usage="containerRepositoryClient.GetRegistryArtifactsAsync (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Containers.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.Containers.ContainerRegistry.RegistryArtifactProperties&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.Containers.ContainerRegistry.GetRegistryArtifactsOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options"> Options to override default collection getting behavior. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Get the collection of registry artifacts for a repository. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTagProperties">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Containers.ContainerRegistry.TagProperties&gt; GetTagProperties (string tag, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Containers.ContainerRegistry.TagProperties&gt; GetTagProperties(string tag, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Containers.ContainerRegistry.ContainerRepositoryClient.GetTagProperties(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTagProperties (tag As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of TagProperties)" />
      <MemberSignature Language="F#" Value="abstract member GetTagProperties : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Containers.ContainerRegistry.TagProperties&gt;&#xA;override this.GetTagProperties : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Containers.ContainerRegistry.TagProperties&gt;" Usage="containerRepositoryClient.GetTagProperties (tag, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Containers.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Containers.ContainerRegistry.TagProperties&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tag"> Tag name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Get tag attributes by tag. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTagPropertiesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Containers.ContainerRegistry.TagProperties&gt;&gt; GetTagPropertiesAsync (string tag, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Containers.ContainerRegistry.TagProperties&gt;&gt; GetTagPropertiesAsync(string tag, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Containers.ContainerRegistry.ContainerRepositoryClient.GetTagPropertiesAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTagPropertiesAsync (tag As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of TagProperties))" />
      <MemberSignature Language="F#" Value="abstract member GetTagPropertiesAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Containers.ContainerRegistry.TagProperties&gt;&gt;&#xA;override this.GetTagPropertiesAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Containers.ContainerRegistry.TagProperties&gt;&gt;" Usage="containerRepositoryClient.GetTagPropertiesAsync (tag, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Containers.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Containers.ContainerRegistry.TagProperties&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tag"> Tag name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Get tag properties by tag. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTags">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.Containers.ContainerRegistry.TagProperties&gt; GetTags (Azure.Containers.ContainerRegistry.GetTagsOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.Containers.ContainerRegistry.TagProperties&gt; GetTags(class Azure.Containers.ContainerRegistry.GetTagsOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Containers.ContainerRegistry.ContainerRepositoryClient.GetTags(Azure.Containers.ContainerRegistry.GetTagsOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTags (Optional options As GetTagsOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of TagProperties)" />
      <MemberSignature Language="F#" Value="abstract member GetTags : Azure.Containers.ContainerRegistry.GetTagsOptions * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.Containers.ContainerRegistry.TagProperties&gt;&#xA;override this.GetTags : Azure.Containers.ContainerRegistry.GetTagsOptions * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.Containers.ContainerRegistry.TagProperties&gt;" Usage="containerRepositoryClient.GetTags (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Containers.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.Containers.ContainerRegistry.TagProperties&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.Containers.ContainerRegistry.GetTagsOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options"> Options to override default collection getting behavior. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Get the collection of tags for a repository. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTagsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.Containers.ContainerRegistry.TagProperties&gt; GetTagsAsync (Azure.Containers.ContainerRegistry.GetTagsOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.Containers.ContainerRegistry.TagProperties&gt; GetTagsAsync(class Azure.Containers.ContainerRegistry.GetTagsOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Containers.ContainerRegistry.ContainerRepositoryClient.GetTagsAsync(Azure.Containers.ContainerRegistry.GetTagsOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTagsAsync (Optional options As GetTagsOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of TagProperties)" />
      <MemberSignature Language="F#" Value="abstract member GetTagsAsync : Azure.Containers.ContainerRegistry.GetTagsOptions * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.Containers.ContainerRegistry.TagProperties&gt;&#xA;override this.GetTagsAsync : Azure.Containers.ContainerRegistry.GetTagsOptions * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.Containers.ContainerRegistry.TagProperties&gt;" Usage="containerRepositoryClient.GetTagsAsync (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Containers.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.Containers.ContainerRegistry.TagProperties&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.Containers.ContainerRegistry.GetTagsOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options"> Options to override default collection getting behavior. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Get the collection of tags for a repository. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Registry">
      <MemberSignature Language="C#" Value="public virtual string Registry { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Registry" />
      <MemberSignature Language="DocId" Value="P:Azure.Containers.ContainerRegistry.ContainerRepositoryClient.Registry" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Registry As String" />
      <MemberSignature Language="F#" Value="member this.Registry : string" Usage="Azure.Containers.ContainerRegistry.ContainerRepositoryClient.Registry" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Containers.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the name of the container registry.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Repository">
      <MemberSignature Language="C#" Value="public virtual string Repository { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Repository" />
      <MemberSignature Language="DocId" Value="P:Azure.Containers.ContainerRegistry.ContainerRepositoryClient.Repository" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Repository As String" />
      <MemberSignature Language="F#" Value="member this.Repository : string" Usage="Azure.Containers.ContainerRegistry.ContainerRepositoryClient.Repository" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Containers.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the name of the repository.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetManifestProperties">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Containers.ContainerRegistry.RegistryArtifactProperties&gt; SetManifestProperties (string digest, Azure.Containers.ContainerRegistry.ContentProperties value, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Containers.ContainerRegistry.RegistryArtifactProperties&gt; SetManifestProperties(string digest, class Azure.Containers.ContainerRegistry.ContentProperties value, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Containers.ContainerRegistry.ContainerRepositoryClient.SetManifestProperties(System.String,Azure.Containers.ContainerRegistry.ContentProperties,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetManifestProperties (digest As String, value As ContentProperties, Optional cancellationToken As CancellationToken = Nothing) As Response(Of RegistryArtifactProperties)" />
      <MemberSignature Language="F#" Value="abstract member SetManifestProperties : string * Azure.Containers.ContainerRegistry.ContentProperties * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Containers.ContainerRegistry.RegistryArtifactProperties&gt;&#xA;override this.SetManifestProperties : string * Azure.Containers.ContainerRegistry.ContentProperties * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Containers.ContainerRegistry.RegistryArtifactProperties&gt;" Usage="containerRepositoryClient.SetManifestProperties (digest, value, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Containers.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Containers.ContainerRegistry.RegistryArtifactProperties&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="digest" Type="System.String" />
        <Parameter Name="value" Type="Azure.Containers.ContainerRegistry.ContentProperties" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="digest"> Manifest digest. </param>
        <param name="value"> Manifest properties value. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Update manifest attributes. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetManifestPropertiesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Containers.ContainerRegistry.RegistryArtifactProperties&gt;&gt; SetManifestPropertiesAsync (string digest, Azure.Containers.ContainerRegistry.ContentProperties value, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Containers.ContainerRegistry.RegistryArtifactProperties&gt;&gt; SetManifestPropertiesAsync(string digest, class Azure.Containers.ContainerRegistry.ContentProperties value, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Containers.ContainerRegistry.ContainerRepositoryClient.SetManifestPropertiesAsync(System.String,Azure.Containers.ContainerRegistry.ContentProperties,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetManifestPropertiesAsync (digest As String, value As ContentProperties, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of RegistryArtifactProperties))" />
      <MemberSignature Language="F#" Value="abstract member SetManifestPropertiesAsync : string * Azure.Containers.ContainerRegistry.ContentProperties * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Containers.ContainerRegistry.RegistryArtifactProperties&gt;&gt;&#xA;override this.SetManifestPropertiesAsync : string * Azure.Containers.ContainerRegistry.ContentProperties * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Containers.ContainerRegistry.RegistryArtifactProperties&gt;&gt;" Usage="containerRepositoryClient.SetManifestPropertiesAsync (digest, value, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Containers.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Containers.ContainerRegistry.RegistryArtifactProperties&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="digest" Type="System.String" />
        <Parameter Name="value" Type="Azure.Containers.ContainerRegistry.ContentProperties" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="digest"> Manifest digest. </param>
        <param name="value"> Manifest properties value. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Update manifest attributes. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetProperties">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Containers.ContainerRegistry.RepositoryProperties&gt; SetProperties (Azure.Containers.ContainerRegistry.ContentProperties value, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Containers.ContainerRegistry.RepositoryProperties&gt; SetProperties(class Azure.Containers.ContainerRegistry.ContentProperties value, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Containers.ContainerRegistry.ContainerRepositoryClient.SetProperties(Azure.Containers.ContainerRegistry.ContentProperties,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetProperties (value As ContentProperties, Optional cancellationToken As CancellationToken = Nothing) As Response(Of RepositoryProperties)" />
      <MemberSignature Language="F#" Value="abstract member SetProperties : Azure.Containers.ContainerRegistry.ContentProperties * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Containers.ContainerRegistry.RepositoryProperties&gt;&#xA;override this.SetProperties : Azure.Containers.ContainerRegistry.ContentProperties * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Containers.ContainerRegistry.RepositoryProperties&gt;" Usage="containerRepositoryClient.SetProperties (value, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Containers.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Containers.ContainerRegistry.RepositoryProperties&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="Azure.Containers.ContainerRegistry.ContentProperties" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="value"> Repository properties to set. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>Update the repository properties.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPropertiesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Containers.ContainerRegistry.RepositoryProperties&gt;&gt; SetPropertiesAsync (Azure.Containers.ContainerRegistry.ContentProperties value, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Containers.ContainerRegistry.RepositoryProperties&gt;&gt; SetPropertiesAsync(class Azure.Containers.ContainerRegistry.ContentProperties value, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Containers.ContainerRegistry.ContainerRepositoryClient.SetPropertiesAsync(Azure.Containers.ContainerRegistry.ContentProperties,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetPropertiesAsync (value As ContentProperties, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of RepositoryProperties))" />
      <MemberSignature Language="F#" Value="abstract member SetPropertiesAsync : Azure.Containers.ContainerRegistry.ContentProperties * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Containers.ContainerRegistry.RepositoryProperties&gt;&gt;&#xA;override this.SetPropertiesAsync : Azure.Containers.ContainerRegistry.ContentProperties * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Containers.ContainerRegistry.RepositoryProperties&gt;&gt;" Usage="containerRepositoryClient.SetPropertiesAsync (value, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Containers.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Containers.ContainerRegistry.RepositoryProperties&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="Azure.Containers.ContainerRegistry.ContentProperties" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="value"> Repository attribute value. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Update the attribute identified by `name` where `reference` is the name of the repository. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTagProperties">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Containers.ContainerRegistry.TagProperties&gt; SetTagProperties (string tag, Azure.Containers.ContainerRegistry.ContentProperties value, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Containers.ContainerRegistry.TagProperties&gt; SetTagProperties(string tag, class Azure.Containers.ContainerRegistry.ContentProperties value, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Containers.ContainerRegistry.ContainerRepositoryClient.SetTagProperties(System.String,Azure.Containers.ContainerRegistry.ContentProperties,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetTagProperties (tag As String, value As ContentProperties, Optional cancellationToken As CancellationToken = Nothing) As Response(Of TagProperties)" />
      <MemberSignature Language="F#" Value="abstract member SetTagProperties : string * Azure.Containers.ContainerRegistry.ContentProperties * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Containers.ContainerRegistry.TagProperties&gt;&#xA;override this.SetTagProperties : string * Azure.Containers.ContainerRegistry.ContentProperties * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Containers.ContainerRegistry.TagProperties&gt;" Usage="containerRepositoryClient.SetTagProperties (tag, value, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Containers.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Containers.ContainerRegistry.TagProperties&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
        <Parameter Name="value" Type="Azure.Containers.ContainerRegistry.ContentProperties" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tag"> Tag name. </param>
        <param name="value"> Tag property value. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Update tag attributes. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTagPropertiesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Containers.ContainerRegistry.TagProperties&gt;&gt; SetTagPropertiesAsync (string tag, Azure.Containers.ContainerRegistry.ContentProperties value, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Containers.ContainerRegistry.TagProperties&gt;&gt; SetTagPropertiesAsync(string tag, class Azure.Containers.ContainerRegistry.ContentProperties value, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Containers.ContainerRegistry.ContainerRepositoryClient.SetTagPropertiesAsync(System.String,Azure.Containers.ContainerRegistry.ContentProperties,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetTagPropertiesAsync (tag As String, value As ContentProperties, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of TagProperties))" />
      <MemberSignature Language="F#" Value="abstract member SetTagPropertiesAsync : string * Azure.Containers.ContainerRegistry.ContentProperties * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Containers.ContainerRegistry.TagProperties&gt;&gt;&#xA;override this.SetTagPropertiesAsync : string * Azure.Containers.ContainerRegistry.ContentProperties * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Containers.ContainerRegistry.TagProperties&gt;&gt;" Usage="containerRepositoryClient.SetTagPropertiesAsync (tag, value, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Containers.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Containers.ContainerRegistry.TagProperties&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
        <Parameter Name="value" Type="Azure.Containers.ContainerRegistry.ContentProperties" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tag"> Tag name. </param>
        <param name="value"> Tag property value. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Update tag attributes. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

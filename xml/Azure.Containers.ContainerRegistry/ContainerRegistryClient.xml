<Type Name="ContainerRegistryClient" FullName="Azure.Containers.ContainerRegistry.ContainerRegistryClient">
  <TypeSignature Language="C#" Value="public class ContainerRegistryClient" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ContainerRegistryClient extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Containers.ContainerRegistry.ContainerRegistryClient" />
  <TypeSignature Language="VB.NET" Value="Public Class ContainerRegistryClient" />
  <TypeSignature Language="F#" Value="type ContainerRegistryClient = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Containers.ContainerRegistry</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> The registry service client. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ContainerRegistryClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Containers.ContainerRegistry.ContainerRegistryClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Containers.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of RepositoryClient for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContainerRegistryClient (Uri endpoint, Azure.Core.TokenCredential credential);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, class Azure.Core.TokenCredential credential) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Containers.ContainerRegistry.ContainerRegistryClient.#ctor(System.Uri,Azure.Core.TokenCredential)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, credential As TokenCredential)" />
      <MemberSignature Language="F#" Value="new Azure.Containers.ContainerRegistry.ContainerRegistryClient : Uri * Azure.Core.TokenCredential -&gt; Azure.Containers.ContainerRegistry.ContainerRegistryClient" Usage="new Azure.Containers.ContainerRegistry.ContainerRegistryClient (endpoint, credential)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Containers.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.Core.TokenCredential" />
      </Parameters>
      <Docs>
        <param name="endpoint">To be added.</param>
        <param name="credential">To be added.</param>
        <summary />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContainerRegistryClient (Uri endpoint, Azure.Core.TokenCredential credential, Azure.Containers.ContainerRegistry.ContainerRegistryClientOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, class Azure.Core.TokenCredential credential, class Azure.Containers.ContainerRegistry.ContainerRegistryClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Containers.ContainerRegistry.ContainerRegistryClient.#ctor(System.Uri,Azure.Core.TokenCredential,Azure.Containers.ContainerRegistry.ContainerRegistryClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, credential As TokenCredential, options As ContainerRegistryClientOptions)" />
      <MemberSignature Language="F#" Value="new Azure.Containers.ContainerRegistry.ContainerRegistryClient : Uri * Azure.Core.TokenCredential * Azure.Containers.ContainerRegistry.ContainerRegistryClientOptions -&gt; Azure.Containers.ContainerRegistry.ContainerRegistryClient" Usage="new Azure.Containers.ContainerRegistry.ContainerRegistryClient (endpoint, credential, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Containers.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.Core.TokenCredential" />
        <Parameter Name="options" Type="Azure.Containers.ContainerRegistry.ContainerRegistryClientOptions" />
      </Parameters>
      <Docs>
        <param name="endpoint">To be added.</param>
        <param name="credential">To be added.</param>
        <param name="options">To be added.</param>
        <summary />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteRepository">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Containers.ContainerRegistry.DeleteRepositoryResult&gt; DeleteRepository (string repository, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Containers.ContainerRegistry.DeleteRepositoryResult&gt; DeleteRepository(string repository, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Containers.ContainerRegistry.ContainerRegistryClient.DeleteRepository(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteRepository (repository As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DeleteRepositoryResult)" />
      <MemberSignature Language="F#" Value="abstract member DeleteRepository : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Containers.ContainerRegistry.DeleteRepositoryResult&gt;&#xA;override this.DeleteRepository : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Containers.ContainerRegistry.DeleteRepositoryResult&gt;" Usage="containerRegistryClient.DeleteRepository (repository, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Containers.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Containers.ContainerRegistry.DeleteRepositoryResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="repository" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="repository"> Repository name (including the namespace). </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Delete the repository identified by `repostitory`. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteRepositoryAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Containers.ContainerRegistry.DeleteRepositoryResult&gt;&gt; DeleteRepositoryAsync (string repository, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Containers.ContainerRegistry.DeleteRepositoryResult&gt;&gt; DeleteRepositoryAsync(string repository, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Containers.ContainerRegistry.ContainerRegistryClient.DeleteRepositoryAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteRepositoryAsync (repository As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DeleteRepositoryResult))" />
      <MemberSignature Language="F#" Value="abstract member DeleteRepositoryAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Containers.ContainerRegistry.DeleteRepositoryResult&gt;&gt;&#xA;override this.DeleteRepositoryAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Containers.ContainerRegistry.DeleteRepositoryResult&gt;&gt;" Usage="containerRegistryClient.DeleteRepositoryAsync (repository, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Containers.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Containers.ContainerRegistry.DeleteRepositoryResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="repository" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="repository"> Repository name (including the namespace). </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Delete the repository identified by `repostitory`. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Endpoint">
      <MemberSignature Language="C#" Value="public Uri Endpoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Endpoint" />
      <MemberSignature Language="DocId" Value="P:Azure.Containers.ContainerRegistry.ContainerRegistryClient.Endpoint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Endpoint As Uri" />
      <MemberSignature Language="F#" Value="member this.Endpoint : Uri" Usage="Azure.Containers.ContainerRegistry.ContainerRegistryClient.Endpoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Containers.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Ge the service endpoint for this client.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRepositories">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;string&gt; GetRepositories (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;string&gt; GetRepositories(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Containers.ContainerRegistry.ContainerRegistryClient.GetRepositories(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRepositories (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of String)" />
      <MemberSignature Language="F#" Value="abstract member GetRepositories : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;string&gt;&#xA;override this.GetRepositories : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;string&gt;" Usage="containerRegistryClient.GetRepositories cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Containers.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> List repositories. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRepositoriesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;string&gt; GetRepositoriesAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;string&gt; GetRepositoriesAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Containers.ContainerRegistry.ContainerRegistryClient.GetRepositoriesAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRepositoriesAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of String)" />
      <MemberSignature Language="F#" Value="abstract member GetRepositoriesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;string&gt;&#xA;override this.GetRepositoriesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;string&gt;" Usage="containerRegistryClient.GetRepositoriesAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Containers.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> List repositories. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRepositoryClient">
      <MemberSignature Language="C#" Value="public virtual Azure.Containers.ContainerRegistry.ContainerRepositoryClient GetRepositoryClient (string repository);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Containers.ContainerRegistry.ContainerRepositoryClient GetRepositoryClient(string repository) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Containers.ContainerRegistry.ContainerRegistryClient.GetRepositoryClient(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRepositoryClient (repository As String) As ContainerRepositoryClient" />
      <MemberSignature Language="F#" Value="abstract member GetRepositoryClient : string -&gt; Azure.Containers.ContainerRegistry.ContainerRepositoryClient&#xA;override this.GetRepositoryClient : string -&gt; Azure.Containers.ContainerRegistry.ContainerRepositoryClient" Usage="containerRegistryClient.GetRepositoryClient repository" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Containers.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Containers.ContainerRegistry.ContainerRepositoryClient</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="repository" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="repository"> The repository to reference. </param>
        <summary>
            Create a new <see cref="T:Azure.Containers.ContainerRegistry.ContainerRepositoryClient" /> object for the specified repository.
            The new <see cref="T:Azure.Containers.ContainerRegistry.ContainerRepositoryClient" /> uses the same request
            pipeline as the <see cref="T:Azure.Containers.ContainerRegistry.ContainerRegistryClient" />.
            </summary>
        <returns> A new <see cref="T:Azure.Containers.ContainerRegistry.ContainerRepositoryClient" /> for the desired repository. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

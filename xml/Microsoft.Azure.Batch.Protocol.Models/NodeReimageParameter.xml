<Type Name="NodeReimageParameter" FullName="Microsoft.Azure.Batch.Protocol.Models.NodeReimageParameter">
  <TypeSignature Language="C#" Value="public class NodeReimageParameter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NodeReimageParameter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Batch.Protocol.Models.NodeReimageParameter" />
  <TypeSignature Language="VB.NET" Value="Public Class NodeReimageParameter" />
  <TypeSignature Language="F#" Value="type NodeReimageParameter = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Batch</AssemblyName>
    <AssemblyVersion>7.1.0.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Options for reimaging a compute node.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NodeReimageParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.Models.NodeReimageParameter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Batch</AssemblyName>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the NodeReimageParameter class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NodeReimageParameter (Nullable&lt;Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageOption&gt; nodeReimageOption = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Nullable`1&lt;valuetype Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageOption&gt; nodeReimageOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.Models.NodeReimageParameter.#ctor(System.Nullable{Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageOption})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Optional nodeReimageOption As Nullable(Of ComputeNodeReimageOption) = null)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.Batch.Protocol.Models.NodeReimageParameter : Nullable&lt;Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageOption&gt; -&gt; Microsoft.Azure.Batch.Protocol.Models.NodeReimageParameter" Usage="new Microsoft.Azure.Batch.Protocol.Models.NodeReimageParameter nodeReimageOption" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Batch</AssemblyName>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="nodeReimageOption" Type="System.Nullable&lt;Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageOption&gt;" />
      </Parameters>
      <Docs>
        <param name="nodeReimageOption">When to reimage the compute node
            and what to do with currently running tasks.</param>
        <summary>
            Initializes a new instance of the NodeReimageParameter class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NodeReimageOption">
      <MemberSignature Language="C#" Value="public Nullable&lt;Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageOption&gt; NodeReimageOption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageOption&gt; NodeReimageOption" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Batch.Protocol.Models.NodeReimageParameter.NodeReimageOption" />
      <MemberSignature Language="VB.NET" Value="Public Property NodeReimageOption As Nullable(Of ComputeNodeReimageOption)" />
      <MemberSignature Language="F#" Value="member this.NodeReimageOption : Nullable&lt;Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageOption&gt; with get, set" Usage="Microsoft.Azure.Batch.Protocol.Models.NodeReimageParameter.NodeReimageOption" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Batch</AssemblyName>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="nodeReimageOption")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Microsoft.Azure.Batch.Protocol.Models.ComputeNodeReimageOption&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Gets or sets when to reimage the compute node and what to do with
             currently running tasks.
             </summary>
        <value>To be added.</value>
        <remarks>
             Values are:
            
             requeue - Terminate running task processes and requeue the tasks.
             The tasks will run again when a node is available. Reimage the node
             as soon as tasks have been terminated.
             terminate - Terminate running tasks. The tasks will not run again.
             Reimage the node as soon as tasks have been terminated.
             taskcompletion - Allow currently running tasks to complete.
             Schedule no new tasks while waiting. Reimage the node when all
             tasks have completed.
             retaineddata - Allow currently running tasks to complete, then wait
             for all task data retention periods to expire. Schedule no new
             tasks while waiting. Reimage the node when all task retention
             periods have expired.
            
             The default value is requeue. Possible values include: 'requeue',
             'terminate', 'taskCompletion', 'retainedData'
             </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
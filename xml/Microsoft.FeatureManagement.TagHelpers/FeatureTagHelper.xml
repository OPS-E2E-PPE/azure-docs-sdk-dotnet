<Type Name="FeatureTagHelper" FullName="Microsoft.FeatureManagement.TagHelpers.FeatureTagHelper">
  <TypeSignature Language="C#" Value="public class FeatureTagHelper : Microsoft.AspNetCore.Razor.TagHelpers.TagHelper" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FeatureTagHelper extends Microsoft.AspNetCore.Razor.TagHelpers.TagHelper" />
  <TypeSignature Language="DocId" Value="T:Microsoft.FeatureManagement.TagHelpers.FeatureTagHelper" />
  <TypeSignature Language="VB.NET" Value="Public Class FeatureTagHelper&#xA;Inherits TagHelper" />
  <TypeSignature Language="F#" Value="type FeatureTagHelper = class&#xA;    inherit TagHelper" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.FeatureManagement.AspNetCore</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.AspNetCore.Razor.TagHelpers.TagHelper</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Provides a <![CDATA[<feature>]]> tag that can be used to conditionally render content based on a feature's state.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FeatureTagHelper (Microsoft.FeatureManagement.IFeatureManagerSnapshot featureManager);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.FeatureManagement.IFeatureManagerSnapshot featureManager) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.FeatureManagement.TagHelpers.FeatureTagHelper.#ctor(Microsoft.FeatureManagement.IFeatureManagerSnapshot)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (featureManager As IFeatureManagerSnapshot)" />
      <MemberSignature Language="F#" Value="new Microsoft.FeatureManagement.TagHelpers.FeatureTagHelper : Microsoft.FeatureManagement.IFeatureManagerSnapshot -&gt; Microsoft.FeatureManagement.TagHelpers.FeatureTagHelper" Usage="new Microsoft.FeatureManagement.TagHelpers.FeatureTagHelper featureManager" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.FeatureManagement.AspNetCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="featureManager" Type="Microsoft.FeatureManagement.IFeatureManagerSnapshot" />
      </Parameters>
      <Docs>
        <param name="featureManager">The feature manager snapshot to use to evaluate feature state.</param>
        <summary>
            Creates a feature tag helper.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Process">
      <MemberSignature Language="C#" Value="public override void Process (Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContext context, Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Process(class Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContext context, class Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.FeatureManagement.TagHelpers.FeatureTagHelper.Process(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContext,Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Process (context As TagHelperContext, output As TagHelperOutput)" />
      <MemberSignature Language="F#" Value="override this.Process : Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContext * Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput -&gt; unit" Usage="featureTagHelper.Process (context, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.FeatureManagement.AspNetCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.AspNetCore.Razor.TagHelpers.TagHelperContext" />
        <Parameter Name="output" Type="Microsoft.AspNetCore.Razor.TagHelpers.TagHelperOutput" />
      </Parameters>
      <Docs>
        <param name="context">The tag helper context.</param>
        <param name="output">The tag helper output.</param>
        <summary>
            Processes the tag helper context to evaluate if the feature's content should be rendered.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
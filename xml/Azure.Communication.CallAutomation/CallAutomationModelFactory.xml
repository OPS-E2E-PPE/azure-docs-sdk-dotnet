<Type Name="CallAutomationModelFactory" FullName="Azure.Communication.CallAutomation.CallAutomationModelFactory">
  <TypeSignature Language="C#" Value="public static class CallAutomationModelFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit CallAutomationModelFactory extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Communication.CallAutomation.CallAutomationModelFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class CallAutomationModelFactory" />
  <TypeSignature Language="F#" Value="type CallAutomationModelFactory = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> Model factory for read-only models. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AddParticipantsFailed">
      <MemberSignature Language="C#" Value="public static Azure.Communication.CallAutomation.AddParticipantsFailed AddParticipantsFailed (string callConnectionId = default, string serverCallId = default, string correlationId = default, string operationContext = default, Azure.Communication.CallAutomation.ResultInformation resultInformation = default, System.Collections.Generic.IEnumerable&lt;Azure.Communication.CommunicationIdentifier&gt; participants = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Communication.CallAutomation.AddParticipantsFailed AddParticipantsFailed(string callConnectionId, string serverCallId, string correlationId, string operationContext, class Azure.Communication.CallAutomation.ResultInformation resultInformation, class System.Collections.Generic.IEnumerable`1&lt;class Azure.Communication.CommunicationIdentifier&gt; participants) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.AddParticipantsFailed(System.String,System.String,System.String,System.String,Azure.Communication.CallAutomation.ResultInformation,System.Collections.Generic.IEnumerable{Azure.Communication.CommunicationIdentifier})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddParticipantsFailed (Optional callConnectionId As String = Nothing, Optional serverCallId As String = Nothing, Optional correlationId As String = Nothing, Optional operationContext As String = Nothing, Optional resultInformation As ResultInformation = Nothing, Optional participants As IEnumerable(Of CommunicationIdentifier) = Nothing) As AddParticipantsFailed" />
      <MemberSignature Language="F#" Value="static member AddParticipantsFailed : string * string * string * string * Azure.Communication.CallAutomation.ResultInformation * seq&lt;Azure.Communication.CommunicationIdentifier&gt; -&gt; Azure.Communication.CallAutomation.AddParticipantsFailed" Usage="Azure.Communication.CallAutomation.CallAutomationModelFactory.AddParticipantsFailed (callConnectionId, serverCallId, correlationId, operationContext, resultInformation, participants)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.CallAutomation.AddParticipantsFailed</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callConnectionId" Type="System.String" />
        <Parameter Name="serverCallId" Type="System.String" />
        <Parameter Name="correlationId" Type="System.String" />
        <Parameter Name="operationContext" Type="System.String" />
        <Parameter Name="resultInformation" Type="Azure.Communication.CallAutomation.ResultInformation" />
        <Parameter Name="participants" Type="System.Collections.Generic.IEnumerable&lt;Azure.Communication.CommunicationIdentifier&gt;" />
      </Parameters>
      <Docs>
        <param name="callConnectionId">To be added.</param>
        <param name="serverCallId">To be added.</param>
        <param name="correlationId">To be added.</param>
        <param name="operationContext">To be added.</param>
        <param name="resultInformation">To be added.</param>
        <param name="participants">To be added.</param>
        <summary>
            Initializes a new instance of add participant failed event.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddParticipantsResult">
      <MemberSignature Language="C#" Value="public static Azure.Communication.CallAutomation.AddParticipantsResult AddParticipantsResult (System.Collections.Generic.IEnumerable&lt;Azure.Communication.CallAutomation.CallParticipant&gt; participants = default, string operationContext = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Communication.CallAutomation.AddParticipantsResult AddParticipantsResult(class System.Collections.Generic.IEnumerable`1&lt;class Azure.Communication.CallAutomation.CallParticipant&gt; participants, string operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.AddParticipantsResult(System.Collections.Generic.IEnumerable{Azure.Communication.CallAutomation.CallParticipant},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddParticipantsResult (Optional participants As IEnumerable(Of CallParticipant) = Nothing, Optional operationContext As String = Nothing) As AddParticipantsResult" />
      <MemberSignature Language="F#" Value="static member AddParticipantsResult : seq&lt;Azure.Communication.CallAutomation.CallParticipant&gt; * string -&gt; Azure.Communication.CallAutomation.AddParticipantsResult" Usage="Azure.Communication.CallAutomation.CallAutomationModelFactory.AddParticipantsResult (participants, operationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.CallAutomation.AddParticipantsResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="participants" Type="System.Collections.Generic.IEnumerable&lt;Azure.Communication.CallAutomation.CallParticipant&gt;" />
        <Parameter Name="operationContext" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="participants"> Participants of the call. </param>
        <param name="operationContext"> The operation context provided by client. </param>
        <summary> Initializes a new instance of AddParticipantsResult. </summary>
        <returns> A new <see cref="T:Azure.Communication.CallAutomation.AddParticipantsResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddParticipantsSucceeded">
      <MemberSignature Language="C#" Value="public static Azure.Communication.CallAutomation.AddParticipantsSucceeded AddParticipantsSucceeded (string callConnectionId = default, string serverCallId = default, string correlationId = default, string operationContext = default, Azure.Communication.CallAutomation.ResultInformation resultInformation = default, System.Collections.Generic.IEnumerable&lt;Azure.Communication.CommunicationIdentifier&gt; participants = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Communication.CallAutomation.AddParticipantsSucceeded AddParticipantsSucceeded(string callConnectionId, string serverCallId, string correlationId, string operationContext, class Azure.Communication.CallAutomation.ResultInformation resultInformation, class System.Collections.Generic.IEnumerable`1&lt;class Azure.Communication.CommunicationIdentifier&gt; participants) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.AddParticipantsSucceeded(System.String,System.String,System.String,System.String,Azure.Communication.CallAutomation.ResultInformation,System.Collections.Generic.IEnumerable{Azure.Communication.CommunicationIdentifier})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddParticipantsSucceeded (Optional callConnectionId As String = Nothing, Optional serverCallId As String = Nothing, Optional correlationId As String = Nothing, Optional operationContext As String = Nothing, Optional resultInformation As ResultInformation = Nothing, Optional participants As IEnumerable(Of CommunicationIdentifier) = Nothing) As AddParticipantsSucceeded" />
      <MemberSignature Language="F#" Value="static member AddParticipantsSucceeded : string * string * string * string * Azure.Communication.CallAutomation.ResultInformation * seq&lt;Azure.Communication.CommunicationIdentifier&gt; -&gt; Azure.Communication.CallAutomation.AddParticipantsSucceeded" Usage="Azure.Communication.CallAutomation.CallAutomationModelFactory.AddParticipantsSucceeded (callConnectionId, serverCallId, correlationId, operationContext, resultInformation, participants)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.CallAutomation.AddParticipantsSucceeded</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callConnectionId" Type="System.String" />
        <Parameter Name="serverCallId" Type="System.String" />
        <Parameter Name="correlationId" Type="System.String" />
        <Parameter Name="operationContext" Type="System.String" />
        <Parameter Name="resultInformation" Type="Azure.Communication.CallAutomation.ResultInformation" />
        <Parameter Name="participants" Type="System.Collections.Generic.IEnumerable&lt;Azure.Communication.CommunicationIdentifier&gt;" />
      </Parameters>
      <Docs>
        <param name="callConnectionId">To be added.</param>
        <param name="serverCallId">To be added.</param>
        <param name="correlationId">To be added.</param>
        <param name="operationContext">To be added.</param>
        <param name="resultInformation">To be added.</param>
        <param name="participants">To be added.</param>
        <summary>
            Initializes a new instance of add participant success event.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AnswerCallResult">
      <MemberSignature Language="C#" Value="public static Azure.Communication.CallAutomation.AnswerCallResult AnswerCallResult (Azure.Communication.CallAutomation.CallConnection callConnection = default, Azure.Communication.CallAutomation.CallConnectionProperties callConnectionProperties = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Communication.CallAutomation.AnswerCallResult AnswerCallResult(class Azure.Communication.CallAutomation.CallConnection callConnection, class Azure.Communication.CallAutomation.CallConnectionProperties callConnectionProperties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.AnswerCallResult(Azure.Communication.CallAutomation.CallConnection,Azure.Communication.CallAutomation.CallConnectionProperties)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AnswerCallResult (Optional callConnection As CallConnection = Nothing, Optional callConnectionProperties As CallConnectionProperties = Nothing) As AnswerCallResult" />
      <MemberSignature Language="F#" Value="static member AnswerCallResult : Azure.Communication.CallAutomation.CallConnection * Azure.Communication.CallAutomation.CallConnectionProperties -&gt; Azure.Communication.CallAutomation.AnswerCallResult" Usage="Azure.Communication.CallAutomation.CallAutomationModelFactory.AnswerCallResult (callConnection, callConnectionProperties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.CallAutomation.AnswerCallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callConnection" Type="Azure.Communication.CallAutomation.CallConnection" />
        <Parameter Name="callConnectionProperties" Type="Azure.Communication.CallAutomation.CallConnectionProperties" />
      </Parameters>
      <Docs>
        <param name="callConnection"> CallConnection Client. </param>
        <param name="callConnectionProperties"> Properties of the call. </param>
        <summary> Initializes a new instance of AnswerCallResult. </summary>
        <returns> A new <see cref="T:Azure.Communication.CallAutomation.AnswerCallResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CallConnected">
      <MemberSignature Language="C#" Value="public static Azure.Communication.CallAutomation.CallConnected CallConnected (string callConnectionId = default, string serverCallId = default, string correlationId = default, string operationContext = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Communication.CallAutomation.CallConnected CallConnected(string callConnectionId, string serverCallId, string correlationId, string operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.CallConnected(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CallConnected (Optional callConnectionId As String = Nothing, Optional serverCallId As String = Nothing, Optional correlationId As String = Nothing, Optional operationContext As String = Nothing) As CallConnected" />
      <MemberSignature Language="F#" Value="static member CallConnected : string * string * string * string -&gt; Azure.Communication.CallAutomation.CallConnected" Usage="Azure.Communication.CallAutomation.CallAutomationModelFactory.CallConnected (callConnectionId, serverCallId, correlationId, operationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.CallAutomation.CallConnected</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callConnectionId" Type="System.String" />
        <Parameter Name="serverCallId" Type="System.String" />
        <Parameter Name="correlationId" Type="System.String" />
        <Parameter Name="operationContext" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="callConnectionId"> Call connection ID. </param>
        <param name="serverCallId"> Server call ID. </param>
        <param name="correlationId"> Correlation ID for event to call correlation. Also called ChainId for skype chain ID. </param>
        <param name="operationContext"> Used by customers to set the context for creating a new call. This property will be null for answering a call. </param>
        <summary> Initializes a new instance of CallConnected. </summary>
        <returns> A new <see cref="T:Azure.Communication.CallAutomation.CallConnected" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CallConnectionProperties">
      <MemberSignature Language="C#" Value="public static Azure.Communication.CallAutomation.CallConnectionProperties CallConnectionProperties (string callConnectionId = default, string serverCallId = default, Azure.Communication.CallAutomation.CallSource callSource = default, System.Collections.Generic.IEnumerable&lt;Azure.Communication.CommunicationIdentifier&gt; targets = default, Azure.Communication.CallAutomation.CallConnectionState callConnectionState = default, Uri callbackEndpoint = default, string mediaSubscriptionId = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Communication.CallAutomation.CallConnectionProperties CallConnectionProperties(string callConnectionId, string serverCallId, class Azure.Communication.CallAutomation.CallSource callSource, class System.Collections.Generic.IEnumerable`1&lt;class Azure.Communication.CommunicationIdentifier&gt; targets, valuetype Azure.Communication.CallAutomation.CallConnectionState callConnectionState, class System.Uri callbackEndpoint, string mediaSubscriptionId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.CallConnectionProperties(System.String,System.String,Azure.Communication.CallAutomation.CallSource,System.Collections.Generic.IEnumerable{Azure.Communication.CommunicationIdentifier},Azure.Communication.CallAutomation.CallConnectionState,System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CallConnectionProperties (Optional callConnectionId As String = Nothing, Optional serverCallId As String = Nothing, Optional callSource As CallSource = Nothing, Optional targets As IEnumerable(Of CommunicationIdentifier) = Nothing, Optional callConnectionState As CallConnectionState = Nothing, Optional callbackEndpoint As Uri = Nothing, Optional mediaSubscriptionId As String = Nothing) As CallConnectionProperties" />
      <MemberSignature Language="F#" Value="static member CallConnectionProperties : string * string * Azure.Communication.CallAutomation.CallSource * seq&lt;Azure.Communication.CommunicationIdentifier&gt; * Azure.Communication.CallAutomation.CallConnectionState * Uri * string -&gt; Azure.Communication.CallAutomation.CallConnectionProperties" Usage="Azure.Communication.CallAutomation.CallAutomationModelFactory.CallConnectionProperties (callConnectionId, serverCallId, callSource, targets, callConnectionState, callbackEndpoint, mediaSubscriptionId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.CallAutomation.CallConnectionProperties</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callConnectionId" Type="System.String" />
        <Parameter Name="serverCallId" Type="System.String" />
        <Parameter Name="callSource" Type="Azure.Communication.CallAutomation.CallSource" />
        <Parameter Name="targets" Type="System.Collections.Generic.IEnumerable&lt;Azure.Communication.CommunicationIdentifier&gt;" />
        <Parameter Name="callConnectionState" Type="Azure.Communication.CallAutomation.CallConnectionState" />
        <Parameter Name="callbackEndpoint" Type="System.Uri" />
        <Parameter Name="mediaSubscriptionId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="callConnectionId">The call connection id.</param>
        <param name="serverCallId">The server call id.</param>
        <param name="callSource">The source of the call.</param>
        <param name="targets">The targets of the call.</param>
        <param name="callConnectionState">The state of the call connection.</param>
        <param name="callbackEndpoint">The callback URI.</param>
        <param name="mediaSubscriptionId">The subscriptionId for Media Streaming.</param>
        <summary> Initializes a new instance of CallConnectionProperties. </summary>
        <returns> A new <see cref="T:Azure.Communication.CallAutomation.CallConnectionProperties" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CallDisconnected">
      <MemberSignature Language="C#" Value="public static Azure.Communication.CallAutomation.CallDisconnected CallDisconnected (string callConnectionId = default, string serverCallId = default, string correlationId = default, string operationContext = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Communication.CallAutomation.CallDisconnected CallDisconnected(string callConnectionId, string serverCallId, string correlationId, string operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.CallDisconnected(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CallDisconnected (Optional callConnectionId As String = Nothing, Optional serverCallId As String = Nothing, Optional correlationId As String = Nothing, Optional operationContext As String = Nothing) As CallDisconnected" />
      <MemberSignature Language="F#" Value="static member CallDisconnected : string * string * string * string -&gt; Azure.Communication.CallAutomation.CallDisconnected" Usage="Azure.Communication.CallAutomation.CallAutomationModelFactory.CallDisconnected (callConnectionId, serverCallId, correlationId, operationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.CallAutomation.CallDisconnected</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callConnectionId" Type="System.String" />
        <Parameter Name="serverCallId" Type="System.String" />
        <Parameter Name="correlationId" Type="System.String" />
        <Parameter Name="operationContext" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="callConnectionId"> Call connection ID. </param>
        <param name="serverCallId"> Server call ID. </param>
        <param name="correlationId"> Correlation ID for event to call correlation. Also called ChainId for skype chain ID. </param>
        <param name="operationContext"> Used by customers to set the context for creating a new call. This property will be null for answering a call. </param>
        <summary> Initializes a new instance of CallDisconnected. </summary>
        <returns> A new <see cref="T:Azure.Communication.CallAutomation.CallDisconnected" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CallParticipant">
      <MemberSignature Language="C#" Value="public static Azure.Communication.CallAutomation.CallParticipant CallParticipant (Azure.Communication.CommunicationIdentifier identifier = default, bool isMuted = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Communication.CallAutomation.CallParticipant CallParticipant(class Azure.Communication.CommunicationIdentifier identifier, bool isMuted) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.CallParticipant(Azure.Communication.CommunicationIdentifier,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CallParticipant (Optional identifier As CommunicationIdentifier = Nothing, Optional isMuted As Boolean = false) As CallParticipant" />
      <MemberSignature Language="F#" Value="static member CallParticipant : Azure.Communication.CommunicationIdentifier * bool -&gt; Azure.Communication.CallAutomation.CallParticipant" Usage="Azure.Communication.CallAutomation.CallAutomationModelFactory.CallParticipant (identifier, isMuted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.CallAutomation.CallParticipant</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identifier" Type="Azure.Communication.CommunicationIdentifier" />
        <Parameter Name="isMuted" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="identifier"> The communication identifier. </param>
        <param name="isMuted"> Is participant muted. </param>
        <summary> Initializes a new instance of CallParticipant. </summary>
        <returns> A new <see cref="T:Azure.Communication.CallAutomation.CallParticipant" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CallTransferAccepted">
      <MemberSignature Language="C#" Value="public static Azure.Communication.CallAutomation.CallTransferAccepted CallTransferAccepted (string callConnectionId = default, string serverCallId = default, string correlationId = default, string operationContext = default, Azure.Communication.CallAutomation.ResultInformation resultInformation = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Communication.CallAutomation.CallTransferAccepted CallTransferAccepted(string callConnectionId, string serverCallId, string correlationId, string operationContext, class Azure.Communication.CallAutomation.ResultInformation resultInformation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.CallTransferAccepted(System.String,System.String,System.String,System.String,Azure.Communication.CallAutomation.ResultInformation)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CallTransferAccepted (Optional callConnectionId As String = Nothing, Optional serverCallId As String = Nothing, Optional correlationId As String = Nothing, Optional operationContext As String = Nothing, Optional resultInformation As ResultInformation = Nothing) As CallTransferAccepted" />
      <MemberSignature Language="F#" Value="static member CallTransferAccepted : string * string * string * string * Azure.Communication.CallAutomation.ResultInformation -&gt; Azure.Communication.CallAutomation.CallTransferAccepted" Usage="Azure.Communication.CallAutomation.CallAutomationModelFactory.CallTransferAccepted (callConnectionId, serverCallId, correlationId, operationContext, resultInformation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.CallAutomation.CallTransferAccepted</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callConnectionId" Type="System.String" />
        <Parameter Name="serverCallId" Type="System.String" />
        <Parameter Name="correlationId" Type="System.String" />
        <Parameter Name="operationContext" Type="System.String" />
        <Parameter Name="resultInformation" Type="Azure.Communication.CallAutomation.ResultInformation" />
      </Parameters>
      <Docs>
        <param name="callConnectionId"> Call connection ID. </param>
        <param name="serverCallId"> Server call ID. </param>
        <param name="correlationId"> Correlation ID for event to call correlation. Also called ChainId for skype chain ID. </param>
        <param name="operationContext"> Used by customers when calling mid-call actions to correlate the request to the response event. </param>
        <param name="resultInformation"> Contains the resulting SIP code/sub-code and message from NGC services. </param>
        <summary> Initializes a new instance of CallTransferAccepted. </summary>
        <returns> A new <see cref="T:Azure.Communication.CallAutomation.CallTransferAccepted" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CallTransferFailed">
      <MemberSignature Language="C#" Value="public static Azure.Communication.CallAutomation.CallTransferFailed CallTransferFailed (string callConnectionId = default, string serverCallId = default, string correlationId = default, string operationContext = default, Azure.Communication.CallAutomation.ResultInformation resultInformation = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Communication.CallAutomation.CallTransferFailed CallTransferFailed(string callConnectionId, string serverCallId, string correlationId, string operationContext, class Azure.Communication.CallAutomation.ResultInformation resultInformation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.CallTransferFailed(System.String,System.String,System.String,System.String,Azure.Communication.CallAutomation.ResultInformation)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CallTransferFailed (Optional callConnectionId As String = Nothing, Optional serverCallId As String = Nothing, Optional correlationId As String = Nothing, Optional operationContext As String = Nothing, Optional resultInformation As ResultInformation = Nothing) As CallTransferFailed" />
      <MemberSignature Language="F#" Value="static member CallTransferFailed : string * string * string * string * Azure.Communication.CallAutomation.ResultInformation -&gt; Azure.Communication.CallAutomation.CallTransferFailed" Usage="Azure.Communication.CallAutomation.CallAutomationModelFactory.CallTransferFailed (callConnectionId, serverCallId, correlationId, operationContext, resultInformation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.CallAutomation.CallTransferFailed</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callConnectionId" Type="System.String" />
        <Parameter Name="serverCallId" Type="System.String" />
        <Parameter Name="correlationId" Type="System.String" />
        <Parameter Name="operationContext" Type="System.String" />
        <Parameter Name="resultInformation" Type="Azure.Communication.CallAutomation.ResultInformation" />
      </Parameters>
      <Docs>
        <param name="callConnectionId"> Call connection ID. </param>
        <param name="serverCallId"> Server call ID. </param>
        <param name="correlationId"> Correlation ID for event to call correlation. Also called ChainId for skype chain ID. </param>
        <param name="operationContext"> Used by customers when calling mid-call actions to correlate the request to the response event. </param>
        <param name="resultInformation"> Contains the resulting SIP code/sub-code and message from NGC services. </param>
        <summary> Initializes a new instance of CallTransferFailed. </summary>
        <returns> A new <see cref="T:Azure.Communication.CallAutomation.CallTransferFailed" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CollectTonesResult">
      <MemberSignature Language="C#" Value="public static Azure.Communication.CallAutomation.CollectTonesResult CollectTonesResult (System.Collections.Generic.IEnumerable&lt;Azure.Communication.CallAutomation.DtmfTone&gt; tones = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Communication.CallAutomation.CollectTonesResult CollectTonesResult(class System.Collections.Generic.IEnumerable`1&lt;valuetype Azure.Communication.CallAutomation.DtmfTone&gt; tones) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.CollectTonesResult(System.Collections.Generic.IEnumerable{Azure.Communication.CallAutomation.DtmfTone})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CollectTonesResult (Optional tones As IEnumerable(Of DtmfTone) = Nothing) As CollectTonesResult" />
      <MemberSignature Language="F#" Value="static member CollectTonesResult : seq&lt;Azure.Communication.CallAutomation.DtmfTone&gt; -&gt; Azure.Communication.CallAutomation.CollectTonesResult" Usage="Azure.Communication.CallAutomation.CallAutomationModelFactory.CollectTonesResult tones" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.CallAutomation.CollectTonesResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tones" Type="System.Collections.Generic.IEnumerable&lt;Azure.Communication.CallAutomation.DtmfTone&gt;" />
      </Parameters>
      <Docs>
        <param name="tones" />
        <summary> Initializes a new instance of CollectTonesResult. </summary>
        <returns> A new <see cref="T:Azure.Communication.CallAutomation.CollectTonesResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateCallResult">
      <MemberSignature Language="C#" Value="public static Azure.Communication.CallAutomation.CreateCallResult CreateCallResult (Azure.Communication.CallAutomation.CallConnection callConnection = default, Azure.Communication.CallAutomation.CallConnectionProperties callConnectionProperties = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Communication.CallAutomation.CreateCallResult CreateCallResult(class Azure.Communication.CallAutomation.CallConnection callConnection, class Azure.Communication.CallAutomation.CallConnectionProperties callConnectionProperties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.CreateCallResult(Azure.Communication.CallAutomation.CallConnection,Azure.Communication.CallAutomation.CallConnectionProperties)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateCallResult (Optional callConnection As CallConnection = Nothing, Optional callConnectionProperties As CallConnectionProperties = Nothing) As CreateCallResult" />
      <MemberSignature Language="F#" Value="static member CreateCallResult : Azure.Communication.CallAutomation.CallConnection * Azure.Communication.CallAutomation.CallConnectionProperties -&gt; Azure.Communication.CallAutomation.CreateCallResult" Usage="Azure.Communication.CallAutomation.CallAutomationModelFactory.CreateCallResult (callConnection, callConnectionProperties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.CallAutomation.CreateCallResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callConnection" Type="Azure.Communication.CallAutomation.CallConnection" />
        <Parameter Name="callConnectionProperties" Type="Azure.Communication.CallAutomation.CallConnectionProperties" />
      </Parameters>
      <Docs>
        <param name="callConnection">The instance of callConnection.</param>
        <param name="callConnectionProperties">The properties of the call.</param>
        <summary> Initializes a new instance of CallParticipant. </summary>
        <returns> A new <see cref="T:Azure.Communication.CallAutomation.CreateCallResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParticipantsUpdated">
      <MemberSignature Language="C#" Value="public static Azure.Communication.CallAutomation.ParticipantsUpdated ParticipantsUpdated (string callConnectionId = default, string serverCallId = default, string correlationId = default, System.Collections.Generic.IEnumerable&lt;Azure.Communication.CommunicationIdentifier&gt; participants = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Communication.CallAutomation.ParticipantsUpdated ParticipantsUpdated(string callConnectionId, string serverCallId, string correlationId, class System.Collections.Generic.IEnumerable`1&lt;class Azure.Communication.CommunicationIdentifier&gt; participants) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.ParticipantsUpdated(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Azure.Communication.CommunicationIdentifier})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParticipantsUpdated (Optional callConnectionId As String = Nothing, Optional serverCallId As String = Nothing, Optional correlationId As String = Nothing, Optional participants As IEnumerable(Of CommunicationIdentifier) = Nothing) As ParticipantsUpdated" />
      <MemberSignature Language="F#" Value="static member ParticipantsUpdated : string * string * string * seq&lt;Azure.Communication.CommunicationIdentifier&gt; -&gt; Azure.Communication.CallAutomation.ParticipantsUpdated" Usage="Azure.Communication.CallAutomation.CallAutomationModelFactory.ParticipantsUpdated (callConnectionId, serverCallId, correlationId, participants)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.CallAutomation.ParticipantsUpdated</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callConnectionId" Type="System.String" />
        <Parameter Name="serverCallId" Type="System.String" />
        <Parameter Name="correlationId" Type="System.String" />
        <Parameter Name="participants" Type="System.Collections.Generic.IEnumerable&lt;Azure.Communication.CommunicationIdentifier&gt;" />
      </Parameters>
      <Docs>
        <param name="callConnectionId">To be added.</param>
        <param name="serverCallId">To be added.</param>
        <param name="correlationId">To be added.</param>
        <param name="participants">To be added.</param>
        <summary>
            Initializes a new instance of Participants Updated event.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PlayCanceled">
      <MemberSignature Language="C#" Value="public static Azure.Communication.CallAutomation.PlayCanceled PlayCanceled (string callConnectionId = default, string serverCallId = default, string correlationId = default, string operationContext = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Communication.CallAutomation.PlayCanceled PlayCanceled(string callConnectionId, string serverCallId, string correlationId, string operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.PlayCanceled(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PlayCanceled (Optional callConnectionId As String = Nothing, Optional serverCallId As String = Nothing, Optional correlationId As String = Nothing, Optional operationContext As String = Nothing) As PlayCanceled" />
      <MemberSignature Language="F#" Value="static member PlayCanceled : string * string * string * string -&gt; Azure.Communication.CallAutomation.PlayCanceled" Usage="Azure.Communication.CallAutomation.CallAutomationModelFactory.PlayCanceled (callConnectionId, serverCallId, correlationId, operationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.CallAutomation.PlayCanceled</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callConnectionId" Type="System.String" />
        <Parameter Name="serverCallId" Type="System.String" />
        <Parameter Name="correlationId" Type="System.String" />
        <Parameter Name="operationContext" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="callConnectionId"> Call connection ID. </param>
        <param name="serverCallId"> Server call ID. </param>
        <param name="correlationId"> Correlation ID for event to call correlation. Also called ChainId for skype chain ID. </param>
        <param name="operationContext"> Used by customers when calling mid-call actions to correlate the request to the response event. </param>
        <summary> Initializes a new instance of PlayCanceled. </summary>
        <returns> A new <see cref="T:Azure.Communication.CallAutomation.PlayCanceled" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PlayCompleted">
      <MemberSignature Language="C#" Value="public static Azure.Communication.CallAutomation.PlayCompleted PlayCompleted (string callConnectionId = default, string serverCallId = default, string correlationId = default, string operationContext = default, Azure.Communication.CallAutomation.ResultInformation resultInformation = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Communication.CallAutomation.PlayCompleted PlayCompleted(string callConnectionId, string serverCallId, string correlationId, string operationContext, class Azure.Communication.CallAutomation.ResultInformation resultInformation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.PlayCompleted(System.String,System.String,System.String,System.String,Azure.Communication.CallAutomation.ResultInformation)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PlayCompleted (Optional callConnectionId As String = Nothing, Optional serverCallId As String = Nothing, Optional correlationId As String = Nothing, Optional operationContext As String = Nothing, Optional resultInformation As ResultInformation = Nothing) As PlayCompleted" />
      <MemberSignature Language="F#" Value="static member PlayCompleted : string * string * string * string * Azure.Communication.CallAutomation.ResultInformation -&gt; Azure.Communication.CallAutomation.PlayCompleted" Usage="Azure.Communication.CallAutomation.CallAutomationModelFactory.PlayCompleted (callConnectionId, serverCallId, correlationId, operationContext, resultInformation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.CallAutomation.PlayCompleted</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callConnectionId" Type="System.String" />
        <Parameter Name="serverCallId" Type="System.String" />
        <Parameter Name="correlationId" Type="System.String" />
        <Parameter Name="operationContext" Type="System.String" />
        <Parameter Name="resultInformation" Type="Azure.Communication.CallAutomation.ResultInformation" />
      </Parameters>
      <Docs>
        <param name="callConnectionId"> Call connection ID. </param>
        <param name="serverCallId"> Server call ID. </param>
        <param name="correlationId"> Correlation ID for event to call correlation. Also called ChainId for skype chain ID. </param>
        <param name="operationContext"> Used by customers when calling mid-call actions to correlate the request to the response event. </param>
        <param name="resultInformation"> Contains the resulting SIP code/sub-code and message from NGC services. </param>
        <summary> Initializes a new instance of PlayCompleted. </summary>
        <returns> A new <see cref="T:Azure.Communication.CallAutomation.PlayCompleted" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PlayFailed">
      <MemberSignature Language="C#" Value="public static Azure.Communication.CallAutomation.PlayFailed PlayFailed (string callConnectionId = default, string serverCallId = default, string correlationId = default, string operationContext = default, Azure.Communication.CallAutomation.ResultInformation resultInformation = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Communication.CallAutomation.PlayFailed PlayFailed(string callConnectionId, string serverCallId, string correlationId, string operationContext, class Azure.Communication.CallAutomation.ResultInformation resultInformation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.PlayFailed(System.String,System.String,System.String,System.String,Azure.Communication.CallAutomation.ResultInformation)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PlayFailed (Optional callConnectionId As String = Nothing, Optional serverCallId As String = Nothing, Optional correlationId As String = Nothing, Optional operationContext As String = Nothing, Optional resultInformation As ResultInformation = Nothing) As PlayFailed" />
      <MemberSignature Language="F#" Value="static member PlayFailed : string * string * string * string * Azure.Communication.CallAutomation.ResultInformation -&gt; Azure.Communication.CallAutomation.PlayFailed" Usage="Azure.Communication.CallAutomation.CallAutomationModelFactory.PlayFailed (callConnectionId, serverCallId, correlationId, operationContext, resultInformation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.CallAutomation.PlayFailed</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callConnectionId" Type="System.String" />
        <Parameter Name="serverCallId" Type="System.String" />
        <Parameter Name="correlationId" Type="System.String" />
        <Parameter Name="operationContext" Type="System.String" />
        <Parameter Name="resultInformation" Type="Azure.Communication.CallAutomation.ResultInformation" />
      </Parameters>
      <Docs>
        <param name="callConnectionId"> Call connection ID. </param>
        <param name="serverCallId"> Server call ID. </param>
        <param name="correlationId"> Correlation ID for event to call correlation. Also called ChainId for skype chain ID. </param>
        <param name="operationContext"> Used by customers when calling mid-call actions to correlate the request to the response event. </param>
        <param name="resultInformation"> Contains the resulting SIP code/sub-code and message from NGC services. </param>
        <summary> Initializes a new instance of PlayFailed. </summary>
        <returns> A new <see cref="T:Azure.Communication.CallAutomation.PlayFailed" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RecognizeCanceled">
      <MemberSignature Language="C#" Value="public static Azure.Communication.CallAutomation.RecognizeCanceled RecognizeCanceled (string callConnectionId = default, string serverCallId = default, string correlationId = default, string operationContext = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Communication.CallAutomation.RecognizeCanceled RecognizeCanceled(string callConnectionId, string serverCallId, string correlationId, string operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.RecognizeCanceled(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RecognizeCanceled (Optional callConnectionId As String = Nothing, Optional serverCallId As String = Nothing, Optional correlationId As String = Nothing, Optional operationContext As String = Nothing) As RecognizeCanceled" />
      <MemberSignature Language="F#" Value="static member RecognizeCanceled : string * string * string * string -&gt; Azure.Communication.CallAutomation.RecognizeCanceled" Usage="Azure.Communication.CallAutomation.CallAutomationModelFactory.RecognizeCanceled (callConnectionId, serverCallId, correlationId, operationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.CallAutomation.RecognizeCanceled</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callConnectionId" Type="System.String" />
        <Parameter Name="serverCallId" Type="System.String" />
        <Parameter Name="correlationId" Type="System.String" />
        <Parameter Name="operationContext" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="callConnectionId"> Call connection ID. </param>
        <param name="serverCallId"> Server call ID. </param>
        <param name="correlationId"> Correlation ID for event to call correlation. Also called ChainId for skype chain ID. </param>
        <param name="operationContext"> Used by customers when calling mid-call actions to correlate the request to the response event. </param>
        <summary> Initializes a new instance of RecognizeCanceled. </summary>
        <returns> A new <see cref="T:Azure.Communication.CallAutomation.RecognizeCanceled" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RecognizeCompleted">
      <MemberSignature Language="C#" Value="public static Azure.Communication.CallAutomation.RecognizeCompleted RecognizeCompleted (string callConnectionId = default, string serverCallId = default, string correlationId = default, string operationContext = default, Azure.Communication.CallAutomation.ResultInformation resultInformation = default, Azure.Communication.CallAutomation.CallMediaRecognitionType recognitionType = default, Azure.Communication.CallAutomation.CollectTonesResult collectTonesResult = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Communication.CallAutomation.RecognizeCompleted RecognizeCompleted(string callConnectionId, string serverCallId, string correlationId, string operationContext, class Azure.Communication.CallAutomation.ResultInformation resultInformation, valuetype Azure.Communication.CallAutomation.CallMediaRecognitionType recognitionType, class Azure.Communication.CallAutomation.CollectTonesResult collectTonesResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.RecognizeCompleted(System.String,System.String,System.String,System.String,Azure.Communication.CallAutomation.ResultInformation,Azure.Communication.CallAutomation.CallMediaRecognitionType,Azure.Communication.CallAutomation.CollectTonesResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RecognizeCompleted (Optional callConnectionId As String = Nothing, Optional serverCallId As String = Nothing, Optional correlationId As String = Nothing, Optional operationContext As String = Nothing, Optional resultInformation As ResultInformation = Nothing, Optional recognitionType As CallMediaRecognitionType = Nothing, Optional collectTonesResult As CollectTonesResult = Nothing) As RecognizeCompleted" />
      <MemberSignature Language="F#" Value="static member RecognizeCompleted : string * string * string * string * Azure.Communication.CallAutomation.ResultInformation * Azure.Communication.CallAutomation.CallMediaRecognitionType * Azure.Communication.CallAutomation.CollectTonesResult -&gt; Azure.Communication.CallAutomation.RecognizeCompleted" Usage="Azure.Communication.CallAutomation.CallAutomationModelFactory.RecognizeCompleted (callConnectionId, serverCallId, correlationId, operationContext, resultInformation, recognitionType, collectTonesResult)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.CallAutomation.RecognizeCompleted</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callConnectionId" Type="System.String" />
        <Parameter Name="serverCallId" Type="System.String" />
        <Parameter Name="correlationId" Type="System.String" />
        <Parameter Name="operationContext" Type="System.String" />
        <Parameter Name="resultInformation" Type="Azure.Communication.CallAutomation.ResultInformation" />
        <Parameter Name="recognitionType" Type="Azure.Communication.CallAutomation.CallMediaRecognitionType" />
        <Parameter Name="collectTonesResult" Type="Azure.Communication.CallAutomation.CollectTonesResult" />
      </Parameters>
      <Docs>
        <param name="callConnectionId"> Call connection ID. </param>
        <param name="serverCallId"> Server call ID. </param>
        <param name="correlationId"> Correlation ID for event to call correlation. Also called ChainId for skype chain ID. </param>
        <param name="operationContext"> Used by customers when calling mid-call actions to correlate the request to the response event. </param>
        <param name="resultInformation"> Contains the resulting SIP code/sub-code and message from NGC services. </param>
        <param name="recognitionType">
            Determines the sub-type of the recognize operation.
            In case of cancel operation the this field is not set and is returned empty
            </param>
        <param name="collectTonesResult"> Defines the result for RecognitionType = Dtmf. </param>
        <summary> Initializes a new instance of RecognizeCompleted. </summary>
        <returns> A new <see cref="T:Azure.Communication.CallAutomation.RecognizeCompleted" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RecognizeFailed">
      <MemberSignature Language="C#" Value="public static Azure.Communication.CallAutomation.RecognizeFailed RecognizeFailed (string callConnectionId = default, string serverCallId = default, string correlationId = default, string operationContext = default, Azure.Communication.CallAutomation.ResultInformation resultInformation = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Communication.CallAutomation.RecognizeFailed RecognizeFailed(string callConnectionId, string serverCallId, string correlationId, string operationContext, class Azure.Communication.CallAutomation.ResultInformation resultInformation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.RecognizeFailed(System.String,System.String,System.String,System.String,Azure.Communication.CallAutomation.ResultInformation)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RecognizeFailed (Optional callConnectionId As String = Nothing, Optional serverCallId As String = Nothing, Optional correlationId As String = Nothing, Optional operationContext As String = Nothing, Optional resultInformation As ResultInformation = Nothing) As RecognizeFailed" />
      <MemberSignature Language="F#" Value="static member RecognizeFailed : string * string * string * string * Azure.Communication.CallAutomation.ResultInformation -&gt; Azure.Communication.CallAutomation.RecognizeFailed" Usage="Azure.Communication.CallAutomation.CallAutomationModelFactory.RecognizeFailed (callConnectionId, serverCallId, correlationId, operationContext, resultInformation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.CallAutomation.RecognizeFailed</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callConnectionId" Type="System.String" />
        <Parameter Name="serverCallId" Type="System.String" />
        <Parameter Name="correlationId" Type="System.String" />
        <Parameter Name="operationContext" Type="System.String" />
        <Parameter Name="resultInformation" Type="Azure.Communication.CallAutomation.ResultInformation" />
      </Parameters>
      <Docs>
        <param name="callConnectionId"> Call connection ID. </param>
        <param name="serverCallId"> Server call ID. </param>
        <param name="correlationId"> Correlation ID for event to call correlation. Also called ChainId for skype chain ID. </param>
        <param name="operationContext"> Used by customers when calling mid-call actions to correlate the request to the response event. </param>
        <param name="resultInformation"> Contains the resulting SIP code/sub-code and message from NGC services. </param>
        <summary> Initializes a new instance of RecognizeFailed. </summary>
        <returns> A new <see cref="T:Azure.Communication.CallAutomation.RecognizeFailed" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RecordingStateChanged">
      <MemberSignature Language="C#" Value="public static Azure.Communication.CallAutomation.RecordingStateChanged RecordingStateChanged (string callConnectionId = default, string serverCallId = default, string correlationId = default, string recordingId = default, Azure.Communication.CallAutomation.RecordingState state = default, DateTimeOffset? startDateTime = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Communication.CallAutomation.RecordingStateChanged RecordingStateChanged(string callConnectionId, string serverCallId, string correlationId, string recordingId, valuetype Azure.Communication.CallAutomation.RecordingState state, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; startDateTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.RecordingStateChanged(System.String,System.String,System.String,System.String,Azure.Communication.CallAutomation.RecordingState,System.Nullable{System.DateTimeOffset})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RecordingStateChanged (Optional callConnectionId As String = Nothing, Optional serverCallId As String = Nothing, Optional correlationId As String = Nothing, Optional recordingId As String = Nothing, Optional state As RecordingState = Nothing, Optional startDateTime As Nullable(Of DateTimeOffset) = Nothing) As RecordingStateChanged" />
      <MemberSignature Language="F#" Value="static member RecordingStateChanged : string * string * string * string * Azure.Communication.CallAutomation.RecordingState * Nullable&lt;DateTimeOffset&gt; -&gt; Azure.Communication.CallAutomation.RecordingStateChanged" Usage="Azure.Communication.CallAutomation.CallAutomationModelFactory.RecordingStateChanged (callConnectionId, serverCallId, correlationId, recordingId, state, startDateTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.CallAutomation.RecordingStateChanged</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callConnectionId" Type="System.String" />
        <Parameter Name="serverCallId" Type="System.String" />
        <Parameter Name="correlationId" Type="System.String" />
        <Parameter Name="recordingId" Type="System.String" />
        <Parameter Name="state" Type="Azure.Communication.CallAutomation.RecordingState" />
        <Parameter Name="startDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
      </Parameters>
      <Docs>
        <param name="callConnectionId"> Call connection ID. </param>
        <param name="serverCallId"> Server call ID. </param>
        <param name="correlationId"> Correlation ID for event to call correlation. Also called ChainId for skype chain ID. </param>
        <param name="recordingId"> The call recording id. </param>
        <param name="state" />
        <param name="startDateTime"> The time of the recording started. </param>
        <summary> Initializes a new instance of RecordingStateChanged. </summary>
        <returns> A new <see cref="T:Azure.Communication.CallAutomation.RecordingStateChanged" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RecordingStateResult">
      <MemberSignature Language="C#" Value="public static Azure.Communication.CallAutomation.RecordingStateResult RecordingStateResult (string recordingId = default, Azure.Communication.CallAutomation.RecordingState? recordingState = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Communication.CallAutomation.RecordingStateResult RecordingStateResult(string recordingId, valuetype System.Nullable`1&lt;valuetype Azure.Communication.CallAutomation.RecordingState&gt; recordingState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.RecordingStateResult(System.String,System.Nullable{Azure.Communication.CallAutomation.RecordingState})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RecordingStateResult (Optional recordingId As String = Nothing, Optional recordingState As Nullable(Of RecordingState) = Nothing) As RecordingStateResult" />
      <MemberSignature Language="F#" Value="static member RecordingStateResult : string * Nullable&lt;Azure.Communication.CallAutomation.RecordingState&gt; -&gt; Azure.Communication.CallAutomation.RecordingStateResult" Usage="Azure.Communication.CallAutomation.CallAutomationModelFactory.RecordingStateResult (recordingId, recordingState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.CallAutomation.RecordingStateResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recordingId" Type="System.String" />
        <Parameter Name="recordingState" Type="System.Nullable&lt;Azure.Communication.CallAutomation.RecordingState&gt;" />
      </Parameters>
      <Docs>
        <param name="recordingId" />
        <param name="recordingState" />
        <summary> Initializes a new instance of RecordingStateResult. </summary>
        <returns> A new <see cref="T:Azure.Communication.CallAutomation.RecordingStateResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveParticipantsResult">
      <MemberSignature Language="C#" Value="public static Azure.Communication.CallAutomation.RemoveParticipantsResult RemoveParticipantsResult (string operationContext = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Communication.CallAutomation.RemoveParticipantsResult RemoveParticipantsResult(string operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.RemoveParticipantsResult(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RemoveParticipantsResult (Optional operationContext As String = Nothing) As RemoveParticipantsResult" />
      <MemberSignature Language="F#" Value="static member RemoveParticipantsResult : string -&gt; Azure.Communication.CallAutomation.RemoveParticipantsResult" Usage="Azure.Communication.CallAutomation.CallAutomationModelFactory.RemoveParticipantsResult operationContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.CallAutomation.RemoveParticipantsResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operationContext" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="operationContext"> The operation context provided by client. </param>
        <summary> Initializes a new instance of RemoveParticipantsResult. </summary>
        <returns> A new <see cref="T:Azure.Communication.CallAutomation.RemoveParticipantsResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResultInformation">
      <MemberSignature Language="C#" Value="public static Azure.Communication.CallAutomation.ResultInformation ResultInformation (int? code = default, int? subCode = default, string message = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Communication.CallAutomation.ResultInformation ResultInformation(valuetype System.Nullable`1&lt;int32&gt; code, valuetype System.Nullable`1&lt;int32&gt; subCode, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.ResultInformation(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ResultInformation (Optional code As Nullable(Of Integer) = Nothing, Optional subCode As Nullable(Of Integer) = Nothing, Optional message As String = Nothing) As ResultInformation" />
      <MemberSignature Language="F#" Value="static member ResultInformation : Nullable&lt;int&gt; * Nullable&lt;int&gt; * string -&gt; Azure.Communication.CallAutomation.ResultInformation" Usage="Azure.Communication.CallAutomation.CallAutomationModelFactory.ResultInformation (code, subCode, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.CallAutomation.ResultInformation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="code" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="subCode" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="code" />
        <param name="subCode" />
        <param name="message" />
        <summary> Initializes a new instance of ResultInformation. </summary>
        <returns> A new <see cref="T:Azure.Communication.CallAutomation.ResultInformation" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransferCallToParticipantResult">
      <MemberSignature Language="C#" Value="public static Azure.Communication.CallAutomation.TransferCallToParticipantResult TransferCallToParticipantResult (string operationContext = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Communication.CallAutomation.TransferCallToParticipantResult TransferCallToParticipantResult(string operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.TransferCallToParticipantResult(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TransferCallToParticipantResult (Optional operationContext As String = Nothing) As TransferCallToParticipantResult" />
      <MemberSignature Language="F#" Value="static member TransferCallToParticipantResult : string -&gt; Azure.Communication.CallAutomation.TransferCallToParticipantResult" Usage="Azure.Communication.CallAutomation.CallAutomationModelFactory.TransferCallToParticipantResult operationContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.CallAutomation.TransferCallToParticipantResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operationContext" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="operationContext"> The operation context provided by client. </param>
        <summary> Initializes a new instance of TransferCallToParticipantResult. </summary>
        <returns> A new <see cref="T:Azure.Communication.CallAutomation.TransferCallToParticipantResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

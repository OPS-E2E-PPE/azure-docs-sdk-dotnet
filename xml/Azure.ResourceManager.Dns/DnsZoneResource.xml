<Type Name="DnsZoneResource" FullName="Azure.ResourceManager.Dns.DnsZoneResource">
  <TypeSignature Language="C#" Value="public class DnsZoneResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DnsZoneResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Dns.DnsZoneResource" />
  <TypeSignature Language="VB.NET" Value="Public Class DnsZoneResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type DnsZoneResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            A Class representing a DnsZone along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct a <see cref="T:Azure.ResourceManager.Dns.DnsZoneResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetDnsZoneResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> using the GetDnsZone method.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DnsZoneResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.DnsZoneResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Dns.DnsZoneResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddTag">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Dns.DnsZoneResource&gt; AddTag (string key, string value, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Dns.DnsZoneResource&gt; AddTag(string key, string value, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.DnsZoneResource.AddTag(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddTag (key As String, value As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DnsZoneResource)" />
      <MemberSignature Language="F#" Value="abstract member AddTag : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Dns.DnsZoneResource&gt;&#xA;override this.AddTag : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Dns.DnsZoneResource&gt;" Usage="dnsZoneResource.AddTag (key, value, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Dns.DnsZoneResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="key"> The key for the tag. </param>
        <param name="value"> The value for the tag. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Add a tag to the current resource.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}
            Operation Id: Zones_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> or <paramref name="value" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="AddTagAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.DnsZoneResource&gt;&gt; AddTagAsync (string key, string value, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Dns.DnsZoneResource&gt;&gt; AddTagAsync(string key, string value, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.DnsZoneResource.AddTagAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddTagAsync (key As String, value As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DnsZoneResource))" />
      <MemberSignature Language="F#" Value="abstract member AddTagAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.DnsZoneResource&gt;&gt;&#xA;override this.AddTagAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.DnsZoneResource&gt;&gt;" Usage="dnsZoneResource.AddTagAsync (key, value, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.DnsZoneResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="key"> The key for the tag. </param>
        <param name="value"> The value for the tag. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Add a tag to the current resource.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}
            Operation Id: Zones_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> or <paramref name="value" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateResourceIdentifier">
      <MemberSignature Language="C#" Value="public static Azure.Core.ResourceIdentifier CreateResourceIdentifier (string subscriptionId, string resourceGroupName, string zoneName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Core.ResourceIdentifier CreateResourceIdentifier(string subscriptionId, string resourceGroupName, string zoneName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.DnsZoneResource.CreateResourceIdentifier(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateResourceIdentifier (subscriptionId As String, resourceGroupName As String, zoneName As String) As ResourceIdentifier" />
      <MemberSignature Language="F#" Value="static member CreateResourceIdentifier : string * string * string -&gt; Azure.Core.ResourceIdentifier" Usage="Azure.ResourceManager.Dns.DnsZoneResource.CreateResourceIdentifier (subscriptionId, resourceGroupName, zoneName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.ResourceIdentifier</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionId" Type="System.String" />
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="zoneName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subscriptionId">To be added.</param>
        <param name="resourceGroupName">To be added.</param>
        <param name="zoneName">To be added.</param>
        <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.Dns.DnsZoneResource" /> instance. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Dns.DnsZoneData Data { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.Dns.DnsZoneData Data" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Dns.DnsZoneResource.Data" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Data As DnsZoneData" />
      <MemberSignature Language="F#" Value="member this.Data : Azure.ResourceManager.Dns.DnsZoneData" Usage="Azure.ResourceManager.Dns.DnsZoneResource.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Dns.DnsZoneData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets the data representing this Feature. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation Delete (Azure.WaitUntil waitUntil, string ifMatch = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation Delete(valuetype Azure.WaitUntil waitUntil, string ifMatch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.DnsZoneResource.Delete(Azure.WaitUntil,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Delete (waitUntil As WaitUntil, Optional ifMatch As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation" />
      <MemberSignature Language="F#" Value="abstract member Delete : Azure.WaitUntil * string * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&#xA;override this.Delete : Azure.WaitUntil * string * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation" Usage="dnsZoneResource.Delete (waitUntil, ifMatch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="ifMatch" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil"> "F:Azure.WaitUntil.Completed" if the method should wait to return until the long-running operation has completed on the service; "F:Azure.WaitUntil.Started" if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="ifMatch"> The etag of the DNS zone. Omit this value to always delete the current zone. Specify the last-seen etag value to prevent accidentally deleting any concurrent changes. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Deletes a DNS zone. WARNING: All DNS records in the zone will also be deleted. This operation cannot be undone.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}
            Operation Id: Zones_Delete
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt; DeleteAsync (Azure.WaitUntil waitUntil, string ifMatch = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation&gt; DeleteAsync(valuetype Azure.WaitUntil waitUntil, string ifMatch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.DnsZoneResource.DeleteAsync(Azure.WaitUntil,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteAsync (waitUntil As WaitUntil, Optional ifMatch As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation)" />
      <MemberSignature Language="F#" Value="abstract member DeleteAsync : Azure.WaitUntil * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;&#xA;override this.DeleteAsync : Azure.WaitUntil * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;" Usage="dnsZoneResource.DeleteAsync (waitUntil, ifMatch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="ifMatch" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil"> "F:Azure.WaitUntil.Completed" if the method should wait to return until the long-running operation has completed on the service; "F:Azure.WaitUntil.Started" if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="ifMatch"> The etag of the DNS zone. Omit this value to always delete the current zone. Specify the last-seen etag value to prevent accidentally deleting any concurrent changes. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Deletes a DNS zone. WARNING: All DNS records in the zone will also be deleted. This operation cannot be undone.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}
            Operation Id: Zones_Delete
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Dns.DnsZoneResource&gt; Get (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Dns.DnsZoneResource&gt; Get(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.DnsZoneResource.Get(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Get (Optional cancellationToken As CancellationToken = Nothing) As Response(Of DnsZoneResource)" />
      <MemberSignature Language="F#" Value="abstract member Get : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Dns.DnsZoneResource&gt;&#xA;override this.Get : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Dns.DnsZoneResource&gt;" Usage="dnsZoneResource.Get cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Dns.DnsZoneResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a DNS zone. Retrieves the zone properties, but not the record sets within the zone.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}
            Operation Id: Zones_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllRecordSets">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Dns.RecordSetAResource&gt; GetAllRecordSets (int? top = default, string recordSetNameSuffix = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Dns.RecordSetAResource&gt; GetAllRecordSets(valuetype System.Nullable`1&lt;int32&gt; top, string recordSetNameSuffix, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.DnsZoneResource.GetAllRecordSets(System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAllRecordSets (Optional top As Nullable(Of Integer) = Nothing, Optional recordSetNameSuffix As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of RecordSetAResource)" />
      <MemberSignature Language="F#" Value="abstract member GetAllRecordSets : Nullable&lt;int&gt; * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Dns.RecordSetAResource&gt;&#xA;override this.GetAllRecordSets : Nullable&lt;int&gt; * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Dns.RecordSetAResource&gt;" Usage="dnsZoneResource.GetAllRecordSets (top, recordSetNameSuffix, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Dns.RecordSetAResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="recordSetNameSuffix" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="top"> The maximum number of record sets to return. If not specified, returns up to 100 record sets. </param>
        <param name="recordSetNameSuffix"> The suffix label of the record set name that has to be used to filter the record set enumerations. If this parameter is specified, Enumeration will return only records that end with .&lt;recordSetNameSuffix&gt;. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all record sets in a DNS zone.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}/all
            Operation Id: RecordSets_ListAllByDnsZone
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Dns.RecordSetAResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllRecordSetsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Dns.RecordSetAResource&gt; GetAllRecordSetsAsync (int? top = default, string recordSetNameSuffix = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Dns.RecordSetAResource&gt; GetAllRecordSetsAsync(valuetype System.Nullable`1&lt;int32&gt; top, string recordSetNameSuffix, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.DnsZoneResource.GetAllRecordSetsAsync(System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAllRecordSetsAsync (Optional top As Nullable(Of Integer) = Nothing, Optional recordSetNameSuffix As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of RecordSetAResource)" />
      <MemberSignature Language="F#" Value="abstract member GetAllRecordSetsAsync : Nullable&lt;int&gt; * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Dns.RecordSetAResource&gt;&#xA;override this.GetAllRecordSetsAsync : Nullable&lt;int&gt; * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Dns.RecordSetAResource&gt;" Usage="dnsZoneResource.GetAllRecordSetsAsync (top, recordSetNameSuffix, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Dns.RecordSetAResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="recordSetNameSuffix" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="top"> The maximum number of record sets to return. If not specified, returns up to 100 record sets. </param>
        <param name="recordSetNameSuffix"> The suffix label of the record set name that has to be used to filter the record set enumerations. If this parameter is specified, Enumeration will return only records that end with .&lt;recordSetNameSuffix&gt;. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all record sets in a DNS zone.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}/all
            Operation Id: RecordSets_ListAllByDnsZone
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Dns.RecordSetAResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.DnsZoneResource&gt;&gt; GetAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Dns.DnsZoneResource&gt;&gt; GetAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.DnsZoneResource.GetAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DnsZoneResource))" />
      <MemberSignature Language="F#" Value="abstract member GetAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.DnsZoneResource&gt;&gt;&#xA;override this.GetAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.DnsZoneResource&gt;&gt;" Usage="dnsZoneResource.GetAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.DnsZoneResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a DNS zone. Retrieves the zone properties, but not the record sets within the zone.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}
            Operation Id: Zones_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRecordSetA">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Dns.RecordSetAResource&gt; GetRecordSetA (string relativeRecordSetName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Dns.RecordSetAResource&gt; GetRecordSetA(string relativeRecordSetName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.DnsZoneResource.GetRecordSetA(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRecordSetA (relativeRecordSetName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of RecordSetAResource)" />
      <MemberSignature Language="F#" Value="abstract member GetRecordSetA : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Dns.RecordSetAResource&gt;&#xA;override this.GetRecordSetA : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Dns.RecordSetAResource&gt;" Usage="dnsZoneResource.GetRecordSetA (relativeRecordSetName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Dns.RecordSetAResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeRecordSetName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="relativeRecordSetName"> The name of the record set, relative to the name of the zone. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a record set.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}/{recordType}/{relativeRecordSetName}
            Operation Id: RecordSets_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="relativeRecordSetName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRecordSetAaaa">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Dns.RecordSetAaaaResource&gt; GetRecordSetAaaa (string relativeRecordSetName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Dns.RecordSetAaaaResource&gt; GetRecordSetAaaa(string relativeRecordSetName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.DnsZoneResource.GetRecordSetAaaa(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRecordSetAaaa (relativeRecordSetName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of RecordSetAaaaResource)" />
      <MemberSignature Language="F#" Value="abstract member GetRecordSetAaaa : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Dns.RecordSetAaaaResource&gt;&#xA;override this.GetRecordSetAaaa : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Dns.RecordSetAaaaResource&gt;" Usage="dnsZoneResource.GetRecordSetAaaa (relativeRecordSetName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Dns.RecordSetAaaaResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeRecordSetName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="relativeRecordSetName"> The name of the record set, relative to the name of the zone. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a record set.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}/{recordType}/{relativeRecordSetName}
            Operation Id: RecordSets_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="relativeRecordSetName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRecordSetAaaaAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.RecordSetAaaaResource&gt;&gt; GetRecordSetAaaaAsync (string relativeRecordSetName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Dns.RecordSetAaaaResource&gt;&gt; GetRecordSetAaaaAsync(string relativeRecordSetName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.DnsZoneResource.GetRecordSetAaaaAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRecordSetAaaaAsync (relativeRecordSetName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of RecordSetAaaaResource))" />
      <MemberSignature Language="F#" Value="abstract member GetRecordSetAaaaAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.RecordSetAaaaResource&gt;&gt;&#xA;override this.GetRecordSetAaaaAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.RecordSetAaaaResource&gt;&gt;" Usage="dnsZoneResource.GetRecordSetAaaaAsync (relativeRecordSetName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.RecordSetAaaaResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeRecordSetName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="relativeRecordSetName"> The name of the record set, relative to the name of the zone. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a record set.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}/{recordType}/{relativeRecordSetName}
            Operation Id: RecordSets_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="relativeRecordSetName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRecordSetAaaas">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Dns.RecordSetAaaaCollection GetRecordSetAaaas ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Dns.RecordSetAaaaCollection GetRecordSetAaaas() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.DnsZoneResource.GetRecordSetAaaas" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRecordSetAaaas () As RecordSetAaaaCollection" />
      <MemberSignature Language="F#" Value="abstract member GetRecordSetAaaas : unit -&gt; Azure.ResourceManager.Dns.RecordSetAaaaCollection&#xA;override this.GetRecordSetAaaas : unit -&gt; Azure.ResourceManager.Dns.RecordSetAaaaCollection" Usage="dnsZoneResource.GetRecordSetAaaas " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Dns.RecordSetAaaaCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of RecordSetAaaaResources in the DnsZone. </summary>
        <returns> An object representing collection of RecordSetAaaaResources and their operations over a RecordSetAaaaResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRecordSetAAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.RecordSetAResource&gt;&gt; GetRecordSetAAsync (string relativeRecordSetName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Dns.RecordSetAResource&gt;&gt; GetRecordSetAAsync(string relativeRecordSetName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.DnsZoneResource.GetRecordSetAAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRecordSetAAsync (relativeRecordSetName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of RecordSetAResource))" />
      <MemberSignature Language="F#" Value="abstract member GetRecordSetAAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.RecordSetAResource&gt;&gt;&#xA;override this.GetRecordSetAAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.RecordSetAResource&gt;&gt;" Usage="dnsZoneResource.GetRecordSetAAsync (relativeRecordSetName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.RecordSetAResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeRecordSetName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="relativeRecordSetName"> The name of the record set, relative to the name of the zone. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a record set.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}/{recordType}/{relativeRecordSetName}
            Operation Id: RecordSets_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="relativeRecordSetName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRecordSetAs">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Dns.RecordSetACollection GetRecordSetAs ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Dns.RecordSetACollection GetRecordSetAs() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.DnsZoneResource.GetRecordSetAs" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRecordSetAs () As RecordSetACollection" />
      <MemberSignature Language="F#" Value="abstract member GetRecordSetAs : unit -&gt; Azure.ResourceManager.Dns.RecordSetACollection&#xA;override this.GetRecordSetAs : unit -&gt; Azure.ResourceManager.Dns.RecordSetACollection" Usage="dnsZoneResource.GetRecordSetAs " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Dns.RecordSetACollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of RecordSetAResources in the DnsZone. </summary>
        <returns> An object representing collection of RecordSetAResources and their operations over a RecordSetAResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRecordSetCaa">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Dns.RecordSetCaaResource&gt; GetRecordSetCaa (string relativeRecordSetName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Dns.RecordSetCaaResource&gt; GetRecordSetCaa(string relativeRecordSetName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.DnsZoneResource.GetRecordSetCaa(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRecordSetCaa (relativeRecordSetName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of RecordSetCaaResource)" />
      <MemberSignature Language="F#" Value="abstract member GetRecordSetCaa : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Dns.RecordSetCaaResource&gt;&#xA;override this.GetRecordSetCaa : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Dns.RecordSetCaaResource&gt;" Usage="dnsZoneResource.GetRecordSetCaa (relativeRecordSetName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Dns.RecordSetCaaResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeRecordSetName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="relativeRecordSetName"> The name of the record set, relative to the name of the zone. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a record set.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}/{recordType}/{relativeRecordSetName}
            Operation Id: RecordSets_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="relativeRecordSetName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRecordSetCaaAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.RecordSetCaaResource&gt;&gt; GetRecordSetCaaAsync (string relativeRecordSetName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Dns.RecordSetCaaResource&gt;&gt; GetRecordSetCaaAsync(string relativeRecordSetName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.DnsZoneResource.GetRecordSetCaaAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRecordSetCaaAsync (relativeRecordSetName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of RecordSetCaaResource))" />
      <MemberSignature Language="F#" Value="abstract member GetRecordSetCaaAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.RecordSetCaaResource&gt;&gt;&#xA;override this.GetRecordSetCaaAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.RecordSetCaaResource&gt;&gt;" Usage="dnsZoneResource.GetRecordSetCaaAsync (relativeRecordSetName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.RecordSetCaaResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeRecordSetName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="relativeRecordSetName"> The name of the record set, relative to the name of the zone. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a record set.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}/{recordType}/{relativeRecordSetName}
            Operation Id: RecordSets_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="relativeRecordSetName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRecordSetCaas">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Dns.RecordSetCaaCollection GetRecordSetCaas ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Dns.RecordSetCaaCollection GetRecordSetCaas() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.DnsZoneResource.GetRecordSetCaas" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRecordSetCaas () As RecordSetCaaCollection" />
      <MemberSignature Language="F#" Value="abstract member GetRecordSetCaas : unit -&gt; Azure.ResourceManager.Dns.RecordSetCaaCollection&#xA;override this.GetRecordSetCaas : unit -&gt; Azure.ResourceManager.Dns.RecordSetCaaCollection" Usage="dnsZoneResource.GetRecordSetCaas " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Dns.RecordSetCaaCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of RecordSetCaaResources in the DnsZone. </summary>
        <returns> An object representing collection of RecordSetCaaResources and their operations over a RecordSetCaaResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRecordSetCname">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Dns.RecordSetCnameResource&gt; GetRecordSetCname (string relativeRecordSetName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Dns.RecordSetCnameResource&gt; GetRecordSetCname(string relativeRecordSetName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.DnsZoneResource.GetRecordSetCname(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRecordSetCname (relativeRecordSetName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of RecordSetCnameResource)" />
      <MemberSignature Language="F#" Value="abstract member GetRecordSetCname : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Dns.RecordSetCnameResource&gt;&#xA;override this.GetRecordSetCname : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Dns.RecordSetCnameResource&gt;" Usage="dnsZoneResource.GetRecordSetCname (relativeRecordSetName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Dns.RecordSetCnameResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeRecordSetName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="relativeRecordSetName"> The name of the record set, relative to the name of the zone. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a record set.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}/{recordType}/{relativeRecordSetName}
            Operation Id: RecordSets_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="relativeRecordSetName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRecordSetCnameAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.RecordSetCnameResource&gt;&gt; GetRecordSetCnameAsync (string relativeRecordSetName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Dns.RecordSetCnameResource&gt;&gt; GetRecordSetCnameAsync(string relativeRecordSetName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.DnsZoneResource.GetRecordSetCnameAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRecordSetCnameAsync (relativeRecordSetName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of RecordSetCnameResource))" />
      <MemberSignature Language="F#" Value="abstract member GetRecordSetCnameAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.RecordSetCnameResource&gt;&gt;&#xA;override this.GetRecordSetCnameAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.RecordSetCnameResource&gt;&gt;" Usage="dnsZoneResource.GetRecordSetCnameAsync (relativeRecordSetName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.RecordSetCnameResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeRecordSetName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="relativeRecordSetName"> The name of the record set, relative to the name of the zone. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a record set.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}/{recordType}/{relativeRecordSetName}
            Operation Id: RecordSets_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="relativeRecordSetName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRecordSetCnames">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Dns.RecordSetCnameCollection GetRecordSetCnames ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Dns.RecordSetCnameCollection GetRecordSetCnames() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.DnsZoneResource.GetRecordSetCnames" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRecordSetCnames () As RecordSetCnameCollection" />
      <MemberSignature Language="F#" Value="abstract member GetRecordSetCnames : unit -&gt; Azure.ResourceManager.Dns.RecordSetCnameCollection&#xA;override this.GetRecordSetCnames : unit -&gt; Azure.ResourceManager.Dns.RecordSetCnameCollection" Usage="dnsZoneResource.GetRecordSetCnames " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Dns.RecordSetCnameCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of RecordSetCnameResources in the DnsZone. </summary>
        <returns> An object representing collection of RecordSetCnameResources and their operations over a RecordSetCnameResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRecordSetMx">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Dns.RecordSetMxResource&gt; GetRecordSetMx (string relativeRecordSetName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Dns.RecordSetMxResource&gt; GetRecordSetMx(string relativeRecordSetName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.DnsZoneResource.GetRecordSetMx(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRecordSetMx (relativeRecordSetName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of RecordSetMxResource)" />
      <MemberSignature Language="F#" Value="abstract member GetRecordSetMx : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Dns.RecordSetMxResource&gt;&#xA;override this.GetRecordSetMx : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Dns.RecordSetMxResource&gt;" Usage="dnsZoneResource.GetRecordSetMx (relativeRecordSetName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Dns.RecordSetMxResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeRecordSetName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="relativeRecordSetName"> The name of the record set, relative to the name of the zone. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a record set.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}/{recordType}/{relativeRecordSetName}
            Operation Id: RecordSets_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="relativeRecordSetName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRecordSetMxAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.RecordSetMxResource&gt;&gt; GetRecordSetMxAsync (string relativeRecordSetName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Dns.RecordSetMxResource&gt;&gt; GetRecordSetMxAsync(string relativeRecordSetName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.DnsZoneResource.GetRecordSetMxAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRecordSetMxAsync (relativeRecordSetName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of RecordSetMxResource))" />
      <MemberSignature Language="F#" Value="abstract member GetRecordSetMxAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.RecordSetMxResource&gt;&gt;&#xA;override this.GetRecordSetMxAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.RecordSetMxResource&gt;&gt;" Usage="dnsZoneResource.GetRecordSetMxAsync (relativeRecordSetName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.RecordSetMxResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeRecordSetName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="relativeRecordSetName"> The name of the record set, relative to the name of the zone. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a record set.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}/{recordType}/{relativeRecordSetName}
            Operation Id: RecordSets_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="relativeRecordSetName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRecordSetMxes">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Dns.RecordSetMxCollection GetRecordSetMxes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Dns.RecordSetMxCollection GetRecordSetMxes() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.DnsZoneResource.GetRecordSetMxes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRecordSetMxes () As RecordSetMxCollection" />
      <MemberSignature Language="F#" Value="abstract member GetRecordSetMxes : unit -&gt; Azure.ResourceManager.Dns.RecordSetMxCollection&#xA;override this.GetRecordSetMxes : unit -&gt; Azure.ResourceManager.Dns.RecordSetMxCollection" Usage="dnsZoneResource.GetRecordSetMxes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Dns.RecordSetMxCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of RecordSetMxResources in the DnsZone. </summary>
        <returns> An object representing collection of RecordSetMxResources and their operations over a RecordSetMxResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRecordSetNs">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Dns.RecordSetNsCollection GetRecordSetNs ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Dns.RecordSetNsCollection GetRecordSetNs() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.DnsZoneResource.GetRecordSetNs" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRecordSetNs () As RecordSetNsCollection" />
      <MemberSignature Language="F#" Value="abstract member GetRecordSetNs : unit -&gt; Azure.ResourceManager.Dns.RecordSetNsCollection&#xA;override this.GetRecordSetNs : unit -&gt; Azure.ResourceManager.Dns.RecordSetNsCollection" Usage="dnsZoneResource.GetRecordSetNs " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Dns.RecordSetNsCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of RecordSetNsResources in the DnsZone. </summary>
        <returns> An object representing collection of RecordSetNsResources and their operations over a RecordSetNsResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRecordSetNs">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Dns.RecordSetNsResource&gt; GetRecordSetNs (string relativeRecordSetName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Dns.RecordSetNsResource&gt; GetRecordSetNs(string relativeRecordSetName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.DnsZoneResource.GetRecordSetNs(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRecordSetNs (relativeRecordSetName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of RecordSetNsResource)" />
      <MemberSignature Language="F#" Value="abstract member GetRecordSetNs : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Dns.RecordSetNsResource&gt;&#xA;override this.GetRecordSetNs : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Dns.RecordSetNsResource&gt;" Usage="dnsZoneResource.GetRecordSetNs (relativeRecordSetName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Dns.RecordSetNsResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeRecordSetName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="relativeRecordSetName"> The name of the record set, relative to the name of the zone. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a record set.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}/{recordType}/{relativeRecordSetName}
            Operation Id: RecordSets_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="relativeRecordSetName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRecordSetNsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.RecordSetNsResource&gt;&gt; GetRecordSetNsAsync (string relativeRecordSetName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Dns.RecordSetNsResource&gt;&gt; GetRecordSetNsAsync(string relativeRecordSetName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.DnsZoneResource.GetRecordSetNsAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRecordSetNsAsync (relativeRecordSetName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of RecordSetNsResource))" />
      <MemberSignature Language="F#" Value="abstract member GetRecordSetNsAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.RecordSetNsResource&gt;&gt;&#xA;override this.GetRecordSetNsAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.RecordSetNsResource&gt;&gt;" Usage="dnsZoneResource.GetRecordSetNsAsync (relativeRecordSetName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.RecordSetNsResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeRecordSetName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="relativeRecordSetName"> The name of the record set, relative to the name of the zone. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a record set.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}/{recordType}/{relativeRecordSetName}
            Operation Id: RecordSets_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="relativeRecordSetName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRecordSetPtr">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Dns.RecordSetPtrResource&gt; GetRecordSetPtr (string relativeRecordSetName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Dns.RecordSetPtrResource&gt; GetRecordSetPtr(string relativeRecordSetName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.DnsZoneResource.GetRecordSetPtr(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRecordSetPtr (relativeRecordSetName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of RecordSetPtrResource)" />
      <MemberSignature Language="F#" Value="abstract member GetRecordSetPtr : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Dns.RecordSetPtrResource&gt;&#xA;override this.GetRecordSetPtr : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Dns.RecordSetPtrResource&gt;" Usage="dnsZoneResource.GetRecordSetPtr (relativeRecordSetName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Dns.RecordSetPtrResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeRecordSetName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="relativeRecordSetName"> The name of the record set, relative to the name of the zone. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a record set.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}/{recordType}/{relativeRecordSetName}
            Operation Id: RecordSets_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="relativeRecordSetName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRecordSetPtrAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.RecordSetPtrResource&gt;&gt; GetRecordSetPtrAsync (string relativeRecordSetName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Dns.RecordSetPtrResource&gt;&gt; GetRecordSetPtrAsync(string relativeRecordSetName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.DnsZoneResource.GetRecordSetPtrAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRecordSetPtrAsync (relativeRecordSetName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of RecordSetPtrResource))" />
      <MemberSignature Language="F#" Value="abstract member GetRecordSetPtrAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.RecordSetPtrResource&gt;&gt;&#xA;override this.GetRecordSetPtrAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.RecordSetPtrResource&gt;&gt;" Usage="dnsZoneResource.GetRecordSetPtrAsync (relativeRecordSetName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.RecordSetPtrResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeRecordSetName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="relativeRecordSetName"> The name of the record set, relative to the name of the zone. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a record set.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}/{recordType}/{relativeRecordSetName}
            Operation Id: RecordSets_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="relativeRecordSetName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRecordSetPtrs">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Dns.RecordSetPtrCollection GetRecordSetPtrs ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Dns.RecordSetPtrCollection GetRecordSetPtrs() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.DnsZoneResource.GetRecordSetPtrs" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRecordSetPtrs () As RecordSetPtrCollection" />
      <MemberSignature Language="F#" Value="abstract member GetRecordSetPtrs : unit -&gt; Azure.ResourceManager.Dns.RecordSetPtrCollection&#xA;override this.GetRecordSetPtrs : unit -&gt; Azure.ResourceManager.Dns.RecordSetPtrCollection" Usage="dnsZoneResource.GetRecordSetPtrs " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Dns.RecordSetPtrCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of RecordSetPtrResources in the DnsZone. </summary>
        <returns> An object representing collection of RecordSetPtrResources and their operations over a RecordSetPtrResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRecordSets">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Dns.RecordSetAResource&gt; GetRecordSets (int? top = default, string recordsetnamesuffix = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Dns.RecordSetAResource&gt; GetRecordSets(valuetype System.Nullable`1&lt;int32&gt; top, string recordsetnamesuffix, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.DnsZoneResource.GetRecordSets(System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRecordSets (Optional top As Nullable(Of Integer) = Nothing, Optional recordsetnamesuffix As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of RecordSetAResource)" />
      <MemberSignature Language="F#" Value="abstract member GetRecordSets : Nullable&lt;int&gt; * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Dns.RecordSetAResource&gt;&#xA;override this.GetRecordSets : Nullable&lt;int&gt; * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Dns.RecordSetAResource&gt;" Usage="dnsZoneResource.GetRecordSets (top, recordsetnamesuffix, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Dns.RecordSetAResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="recordsetnamesuffix" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="top"> The maximum number of record sets to return. If not specified, returns up to 100 record sets. </param>
        <param name="recordsetnamesuffix"> The suffix label of the record set name that has to be used to filter the record set enumerations. If this parameter is specified, Enumeration will return only records that end with .&lt;recordSetNameSuffix&gt;. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all record sets in a DNS zone.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}/recordsets
            Operation Id: RecordSets_ListByDnsZone
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Dns.RecordSetAResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRecordSetsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Dns.RecordSetAResource&gt; GetRecordSetsAsync (int? top = default, string recordsetnamesuffix = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Dns.RecordSetAResource&gt; GetRecordSetsAsync(valuetype System.Nullable`1&lt;int32&gt; top, string recordsetnamesuffix, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.DnsZoneResource.GetRecordSetsAsync(System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRecordSetsAsync (Optional top As Nullable(Of Integer) = Nothing, Optional recordsetnamesuffix As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of RecordSetAResource)" />
      <MemberSignature Language="F#" Value="abstract member GetRecordSetsAsync : Nullable&lt;int&gt; * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Dns.RecordSetAResource&gt;&#xA;override this.GetRecordSetsAsync : Nullable&lt;int&gt; * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Dns.RecordSetAResource&gt;" Usage="dnsZoneResource.GetRecordSetsAsync (top, recordsetnamesuffix, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Dns.RecordSetAResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="recordsetnamesuffix" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="top"> The maximum number of record sets to return. If not specified, returns up to 100 record sets. </param>
        <param name="recordsetnamesuffix"> The suffix label of the record set name that has to be used to filter the record set enumerations. If this parameter is specified, Enumeration will return only records that end with .&lt;recordSetNameSuffix&gt;. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all record sets in a DNS zone.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}/recordsets
            Operation Id: RecordSets_ListByDnsZone
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Dns.RecordSetAResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRecordSetSoa">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Dns.RecordSetSoaResource&gt; GetRecordSetSoa (string relativeRecordSetName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Dns.RecordSetSoaResource&gt; GetRecordSetSoa(string relativeRecordSetName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.DnsZoneResource.GetRecordSetSoa(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRecordSetSoa (relativeRecordSetName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of RecordSetSoaResource)" />
      <MemberSignature Language="F#" Value="abstract member GetRecordSetSoa : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Dns.RecordSetSoaResource&gt;&#xA;override this.GetRecordSetSoa : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Dns.RecordSetSoaResource&gt;" Usage="dnsZoneResource.GetRecordSetSoa (relativeRecordSetName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Dns.RecordSetSoaResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeRecordSetName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="relativeRecordSetName"> The name of the record set, relative to the name of the zone. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a record set.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}/{recordType}/{relativeRecordSetName}
            Operation Id: RecordSets_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="relativeRecordSetName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRecordSetSoaAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.RecordSetSoaResource&gt;&gt; GetRecordSetSoaAsync (string relativeRecordSetName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Dns.RecordSetSoaResource&gt;&gt; GetRecordSetSoaAsync(string relativeRecordSetName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.DnsZoneResource.GetRecordSetSoaAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRecordSetSoaAsync (relativeRecordSetName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of RecordSetSoaResource))" />
      <MemberSignature Language="F#" Value="abstract member GetRecordSetSoaAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.RecordSetSoaResource&gt;&gt;&#xA;override this.GetRecordSetSoaAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.RecordSetSoaResource&gt;&gt;" Usage="dnsZoneResource.GetRecordSetSoaAsync (relativeRecordSetName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.RecordSetSoaResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeRecordSetName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="relativeRecordSetName"> The name of the record set, relative to the name of the zone. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a record set.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}/{recordType}/{relativeRecordSetName}
            Operation Id: RecordSets_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="relativeRecordSetName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRecordSetSoas">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Dns.RecordSetSoaCollection GetRecordSetSoas ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Dns.RecordSetSoaCollection GetRecordSetSoas() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.DnsZoneResource.GetRecordSetSoas" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRecordSetSoas () As RecordSetSoaCollection" />
      <MemberSignature Language="F#" Value="abstract member GetRecordSetSoas : unit -&gt; Azure.ResourceManager.Dns.RecordSetSoaCollection&#xA;override this.GetRecordSetSoas : unit -&gt; Azure.ResourceManager.Dns.RecordSetSoaCollection" Usage="dnsZoneResource.GetRecordSetSoas " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Dns.RecordSetSoaCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of RecordSetSoaResources in the DnsZone. </summary>
        <returns> An object representing collection of RecordSetSoaResources and their operations over a RecordSetSoaResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRecordSetSrv">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Dns.RecordSetSrvResource&gt; GetRecordSetSrv (string relativeRecordSetName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Dns.RecordSetSrvResource&gt; GetRecordSetSrv(string relativeRecordSetName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.DnsZoneResource.GetRecordSetSrv(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRecordSetSrv (relativeRecordSetName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of RecordSetSrvResource)" />
      <MemberSignature Language="F#" Value="abstract member GetRecordSetSrv : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Dns.RecordSetSrvResource&gt;&#xA;override this.GetRecordSetSrv : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Dns.RecordSetSrvResource&gt;" Usage="dnsZoneResource.GetRecordSetSrv (relativeRecordSetName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Dns.RecordSetSrvResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeRecordSetName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="relativeRecordSetName"> The name of the record set, relative to the name of the zone. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a record set.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}/{recordType}/{relativeRecordSetName}
            Operation Id: RecordSets_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="relativeRecordSetName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRecordSetSrvAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.RecordSetSrvResource&gt;&gt; GetRecordSetSrvAsync (string relativeRecordSetName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Dns.RecordSetSrvResource&gt;&gt; GetRecordSetSrvAsync(string relativeRecordSetName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.DnsZoneResource.GetRecordSetSrvAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRecordSetSrvAsync (relativeRecordSetName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of RecordSetSrvResource))" />
      <MemberSignature Language="F#" Value="abstract member GetRecordSetSrvAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.RecordSetSrvResource&gt;&gt;&#xA;override this.GetRecordSetSrvAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.RecordSetSrvResource&gt;&gt;" Usage="dnsZoneResource.GetRecordSetSrvAsync (relativeRecordSetName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.RecordSetSrvResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeRecordSetName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="relativeRecordSetName"> The name of the record set, relative to the name of the zone. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a record set.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}/{recordType}/{relativeRecordSetName}
            Operation Id: RecordSets_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="relativeRecordSetName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRecordSetSrvs">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Dns.RecordSetSrvCollection GetRecordSetSrvs ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Dns.RecordSetSrvCollection GetRecordSetSrvs() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.DnsZoneResource.GetRecordSetSrvs" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRecordSetSrvs () As RecordSetSrvCollection" />
      <MemberSignature Language="F#" Value="abstract member GetRecordSetSrvs : unit -&gt; Azure.ResourceManager.Dns.RecordSetSrvCollection&#xA;override this.GetRecordSetSrvs : unit -&gt; Azure.ResourceManager.Dns.RecordSetSrvCollection" Usage="dnsZoneResource.GetRecordSetSrvs " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Dns.RecordSetSrvCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of RecordSetSrvResources in the DnsZone. </summary>
        <returns> An object representing collection of RecordSetSrvResources and their operations over a RecordSetSrvResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRecordSetTxt">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Dns.RecordSetTxtResource&gt; GetRecordSetTxt (string relativeRecordSetName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Dns.RecordSetTxtResource&gt; GetRecordSetTxt(string relativeRecordSetName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.DnsZoneResource.GetRecordSetTxt(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRecordSetTxt (relativeRecordSetName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of RecordSetTxtResource)" />
      <MemberSignature Language="F#" Value="abstract member GetRecordSetTxt : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Dns.RecordSetTxtResource&gt;&#xA;override this.GetRecordSetTxt : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Dns.RecordSetTxtResource&gt;" Usage="dnsZoneResource.GetRecordSetTxt (relativeRecordSetName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Dns.RecordSetTxtResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeRecordSetName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="relativeRecordSetName"> The name of the record set, relative to the name of the zone. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a record set.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}/{recordType}/{relativeRecordSetName}
            Operation Id: RecordSets_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="relativeRecordSetName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRecordSetTxtAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.RecordSetTxtResource&gt;&gt; GetRecordSetTxtAsync (string relativeRecordSetName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Dns.RecordSetTxtResource&gt;&gt; GetRecordSetTxtAsync(string relativeRecordSetName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.DnsZoneResource.GetRecordSetTxtAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRecordSetTxtAsync (relativeRecordSetName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of RecordSetTxtResource))" />
      <MemberSignature Language="F#" Value="abstract member GetRecordSetTxtAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.RecordSetTxtResource&gt;&gt;&#xA;override this.GetRecordSetTxtAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.RecordSetTxtResource&gt;&gt;" Usage="dnsZoneResource.GetRecordSetTxtAsync (relativeRecordSetName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.RecordSetTxtResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeRecordSetName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="relativeRecordSetName"> The name of the record set, relative to the name of the zone. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a record set.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}/{recordType}/{relativeRecordSetName}
            Operation Id: RecordSets_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="relativeRecordSetName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRecordSetTxts">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Dns.RecordSetTxtCollection GetRecordSetTxts ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Dns.RecordSetTxtCollection GetRecordSetTxts() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.DnsZoneResource.GetRecordSetTxts" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRecordSetTxts () As RecordSetTxtCollection" />
      <MemberSignature Language="F#" Value="abstract member GetRecordSetTxts : unit -&gt; Azure.ResourceManager.Dns.RecordSetTxtCollection&#xA;override this.GetRecordSetTxts : unit -&gt; Azure.ResourceManager.Dns.RecordSetTxtCollection" Usage="dnsZoneResource.GetRecordSetTxts " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Dns.RecordSetTxtCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of RecordSetTxtResources in the DnsZone. </summary>
        <returns> An object representing collection of RecordSetTxtResources and their operations over a RecordSetTxtResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasData">
      <MemberSignature Language="C#" Value="public virtual bool HasData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasData" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Dns.DnsZoneResource.HasData" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HasData As Boolean" />
      <MemberSignature Language="F#" Value="member this.HasData : bool" Usage="Azure.ResourceManager.Dns.DnsZoneResource.HasData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets whether or not the current instance has data. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveTag">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Dns.DnsZoneResource&gt; RemoveTag (string key, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Dns.DnsZoneResource&gt; RemoveTag(string key, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.DnsZoneResource.RemoveTag(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoveTag (key As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DnsZoneResource)" />
      <MemberSignature Language="F#" Value="abstract member RemoveTag : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Dns.DnsZoneResource&gt;&#xA;override this.RemoveTag : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Dns.DnsZoneResource&gt;" Usage="dnsZoneResource.RemoveTag (key, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Dns.DnsZoneResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="key"> The key for the tag. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Removes a tag by key from the resource.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}
            Operation Id: Zones_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveTagAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.DnsZoneResource&gt;&gt; RemoveTagAsync (string key, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Dns.DnsZoneResource&gt;&gt; RemoveTagAsync(string key, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.DnsZoneResource.RemoveTagAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoveTagAsync (key As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DnsZoneResource))" />
      <MemberSignature Language="F#" Value="abstract member RemoveTagAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.DnsZoneResource&gt;&gt;&#xA;override this.RemoveTagAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.DnsZoneResource&gt;&gt;" Usage="dnsZoneResource.RemoveTagAsync (key, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.DnsZoneResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="key"> The key for the tag. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Removes a tag by key from the resource.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}
            Operation Id: Zones_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ResourceType">
      <MemberSignature Language="C#" Value="public static readonly Azure.Core.ResourceType ResourceType;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype Azure.Core.ResourceType ResourceType" />
      <MemberSignature Language="DocId" Value="F:Azure.ResourceManager.Dns.DnsZoneResource.ResourceType" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ResourceType As ResourceType " />
      <MemberSignature Language="F#" Value=" staticval mutable ResourceType : Azure.Core.ResourceType" Usage="Azure.ResourceManager.Dns.DnsZoneResource.ResourceType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.ResourceType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets the resource type for the operations. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTags">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Dns.DnsZoneResource&gt; SetTags (System.Collections.Generic.IDictionary&lt;string,string&gt; tags, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Dns.DnsZoneResource&gt; SetTags(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.DnsZoneResource.SetTags(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetTags (tags As IDictionary(Of String, String), Optional cancellationToken As CancellationToken = Nothing) As Response(Of DnsZoneResource)" />
      <MemberSignature Language="F#" Value="abstract member SetTags : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Dns.DnsZoneResource&gt;&#xA;override this.SetTags : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Dns.DnsZoneResource&gt;" Usage="dnsZoneResource.SetTags (tags, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Dns.DnsZoneResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tags"> The set of tags to use as replacement. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Replace the tags on the resource with the given set.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}
            Operation Id: Zones_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tags" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="SetTagsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.DnsZoneResource&gt;&gt; SetTagsAsync (System.Collections.Generic.IDictionary&lt;string,string&gt; tags, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Dns.DnsZoneResource&gt;&gt; SetTagsAsync(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Dns.DnsZoneResource.SetTagsAsync(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetTagsAsync (tags As IDictionary(Of String, String), Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DnsZoneResource))" />
      <MemberSignature Language="F#" Value="abstract member SetTagsAsync : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.DnsZoneResource&gt;&gt;&#xA;override this.SetTagsAsync : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.DnsZoneResource&gt;&gt;" Usage="dnsZoneResource.SetTagsAsync (tags, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Dns</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Dns.DnsZoneResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tags"> The set of tags to use as replacement. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Replace the tags on the resource with the given set.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}
            Operation Id: Zones_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tags" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>

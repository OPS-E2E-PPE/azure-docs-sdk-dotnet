<Type Name="ConfigurationClient" FullName="Azure.Data.AppConfiguration.ConfigurationClient">
  <TypeSignature Language="C#" Value="public class ConfigurationClient" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ConfigurationClient extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Data.AppConfiguration.ConfigurationClient" />
  <TypeSignature Language="VB.NET" Value="Public Class ConfigurationClient" />
  <TypeSignature Language="F#" Value="type ConfigurationClient = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Data.AppConfiguration</AssemblyName>
    <AssemblyVersion>1.0.2.0</AssemblyVersion>
    <AssemblyVersion>1.0.3.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
    <AssemblyVersion>1.3.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            The client to use for interacting with the Azure Configuration Store.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ConfigurationClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Data.AppConfiguration.ConfigurationClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Data.AppConfiguration</AssemblyName>
        <AssemblyVersion>1.0.2.0</AssemblyVersion>
        <AssemblyVersion>1.0.3.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Protected constructor to allow mocking.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConfigurationClient (string connectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Data.AppConfiguration.ConfigurationClient.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String)" />
      <MemberSignature Language="F#" Value="new Azure.Data.AppConfiguration.ConfigurationClient : string -&gt; Azure.Data.AppConfiguration.ConfigurationClient" Usage="new Azure.Data.AppConfiguration.ConfigurationClient connectionString" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Data.AppConfiguration</AssemblyName>
        <AssemblyVersion>1.0.2.0</AssemblyVersion>
        <AssemblyVersion>1.0.3.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">Connection string with authentication option and related parameters.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.Data.AppConfiguration.ConfigurationClient" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConfigurationClient (string connectionString, Azure.Data.AppConfiguration.ConfigurationClientOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString, class Azure.Data.AppConfiguration.ConfigurationClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Data.AppConfiguration.ConfigurationClient.#ctor(System.String,Azure.Data.AppConfiguration.ConfigurationClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String, options As ConfigurationClientOptions)" />
      <MemberSignature Language="F#" Value="new Azure.Data.AppConfiguration.ConfigurationClient : string * Azure.Data.AppConfiguration.ConfigurationClientOptions -&gt; Azure.Data.AppConfiguration.ConfigurationClient" Usage="new Azure.Data.AppConfiguration.ConfigurationClient (connectionString, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Data.AppConfiguration</AssemblyName>
        <AssemblyVersion>1.0.2.0</AssemblyVersion>
        <AssemblyVersion>1.0.3.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="options" Type="Azure.Data.AppConfiguration.ConfigurationClientOptions" />
      </Parameters>
      <Docs>
        <param name="connectionString">Connection string with authentication option and related parameters.</param>
        <param name="options">Options that allow configuration of requests sent to the configuration store.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.Data.AppConfiguration.ConfigurationClient" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConfigurationClient (Uri endpoint, Azure.Core.TokenCredential credential);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, class Azure.Core.TokenCredential credential) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Data.AppConfiguration.ConfigurationClient.#ctor(System.Uri,Azure.Core.TokenCredential)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, credential As TokenCredential)" />
      <MemberSignature Language="F#" Value="new Azure.Data.AppConfiguration.ConfigurationClient : Uri * Azure.Core.TokenCredential -&gt; Azure.Data.AppConfiguration.ConfigurationClient" Usage="new Azure.Data.AppConfiguration.ConfigurationClient (endpoint, credential)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Data.AppConfiguration</AssemblyName>
        <AssemblyVersion>1.0.2.0</AssemblyVersion>
        <AssemblyVersion>1.0.3.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.Core.TokenCredential" />
      </Parameters>
      <Docs>
        <param name="endpoint">The <see cref="T:System.Uri" /> referencing the app configuration storage.</param>
        <param name="credential">The token credential used to sign requests.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.Data.AppConfiguration.ConfigurationClient" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConfigurationClient (Uri endpoint, Azure.Core.TokenCredential credential, Azure.Data.AppConfiguration.ConfigurationClientOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, class Azure.Core.TokenCredential credential, class Azure.Data.AppConfiguration.ConfigurationClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Data.AppConfiguration.ConfigurationClient.#ctor(System.Uri,Azure.Core.TokenCredential,Azure.Data.AppConfiguration.ConfigurationClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, credential As TokenCredential, options As ConfigurationClientOptions)" />
      <MemberSignature Language="F#" Value="new Azure.Data.AppConfiguration.ConfigurationClient : Uri * Azure.Core.TokenCredential * Azure.Data.AppConfiguration.ConfigurationClientOptions -&gt; Azure.Data.AppConfiguration.ConfigurationClient" Usage="new Azure.Data.AppConfiguration.ConfigurationClient (endpoint, credential, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Data.AppConfiguration</AssemblyName>
        <AssemblyVersion>1.0.2.0</AssemblyVersion>
        <AssemblyVersion>1.0.3.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.Core.TokenCredential" />
        <Parameter Name="options" Type="Azure.Data.AppConfiguration.ConfigurationClientOptions" />
      </Parameters>
      <Docs>
        <param name="endpoint">The <see cref="T:System.Uri" /> referencing the app configuration storage.</param>
        <param name="credential">The token credential used to sign requests.</param>
        <param name="options">Options that allow configuration of requests sent to the configuration store.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.Data.AppConfiguration.ConfigurationClient" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddConfigurationSetting">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Data.AppConfiguration.ConfigurationSetting&gt; AddConfigurationSetting (Azure.Data.AppConfiguration.ConfigurationSetting setting, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Data.AppConfiguration.ConfigurationSetting&gt; AddConfigurationSetting(class Azure.Data.AppConfiguration.ConfigurationSetting setting, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Data.AppConfiguration.ConfigurationClient.AddConfigurationSetting(Azure.Data.AppConfiguration.ConfigurationSetting,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddConfigurationSetting (setting As ConfigurationSetting, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ConfigurationSetting)" />
      <MemberSignature Language="F#" Value="abstract member AddConfigurationSetting : Azure.Data.AppConfiguration.ConfigurationSetting * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Data.AppConfiguration.ConfigurationSetting&gt;&#xA;override this.AddConfigurationSetting : Azure.Data.AppConfiguration.ConfigurationSetting * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Data.AppConfiguration.ConfigurationSetting&gt;" Usage="configurationClient.AddConfigurationSetting (setting, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Data.AppConfiguration</AssemblyName>
        <AssemblyVersion>1.0.2.0</AssemblyVersion>
        <AssemblyVersion>1.0.3.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Data.AppConfiguration.ConfigurationSetting&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="setting" Type="Azure.Data.AppConfiguration.ConfigurationSetting" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="setting">The <see cref="T:Azure.Data.AppConfiguration.ConfigurationSetting" /> to create.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Creates a <see cref="T:Azure.Data.AppConfiguration.ConfigurationSetting" /> only if the setting does not already exist in the configuration store.
            </summary>
        <returns>A response containing the added <see cref="T:Azure.Data.AppConfiguration.ConfigurationSetting" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddConfigurationSetting">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Data.AppConfiguration.ConfigurationSetting&gt; AddConfigurationSetting (string key, string value, string label = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Data.AppConfiguration.ConfigurationSetting&gt; AddConfigurationSetting(string key, string value, string label, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Data.AppConfiguration.ConfigurationClient.AddConfigurationSetting(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddConfigurationSetting (key As String, value As String, Optional label As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ConfigurationSetting)" />
      <MemberSignature Language="F#" Value="abstract member AddConfigurationSetting : string * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Data.AppConfiguration.ConfigurationSetting&gt;&#xA;override this.AddConfigurationSetting : string * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Data.AppConfiguration.ConfigurationSetting&gt;" Usage="configurationClient.AddConfigurationSetting (key, value, label, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Data.AppConfiguration</AssemblyName>
        <AssemblyVersion>1.0.2.0</AssemblyVersion>
        <AssemblyVersion>1.0.3.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Data.AppConfiguration.ConfigurationSetting&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="label" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="key">The primary identifier of the configuration setting.</param>
        <param name="value">The configuration setting's value.</param>
        <param name="label">A label used to group this configuration setting with others.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Creates a <see cref="T:Azure.Data.AppConfiguration.ConfigurationSetting" /> if the setting, uniquely identified by key and label, does not already exist in the configuration store.
            </summary>
        <returns>A response containing the added <see cref="T:Azure.Data.AppConfiguration.ConfigurationSetting" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddConfigurationSettingAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Data.AppConfiguration.ConfigurationSetting&gt;&gt; AddConfigurationSettingAsync (Azure.Data.AppConfiguration.ConfigurationSetting setting, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Data.AppConfiguration.ConfigurationSetting&gt;&gt; AddConfigurationSettingAsync(class Azure.Data.AppConfiguration.ConfigurationSetting setting, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Data.AppConfiguration.ConfigurationClient.AddConfigurationSettingAsync(Azure.Data.AppConfiguration.ConfigurationSetting,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddConfigurationSettingAsync (setting As ConfigurationSetting, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ConfigurationSetting))" />
      <MemberSignature Language="F#" Value="abstract member AddConfigurationSettingAsync : Azure.Data.AppConfiguration.ConfigurationSetting * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Data.AppConfiguration.ConfigurationSetting&gt;&gt;&#xA;override this.AddConfigurationSettingAsync : Azure.Data.AppConfiguration.ConfigurationSetting * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Data.AppConfiguration.ConfigurationSetting&gt;&gt;" Usage="configurationClient.AddConfigurationSettingAsync (setting, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Data.AppConfiguration</AssemblyName>
        <AssemblyVersion>1.0.2.0</AssemblyVersion>
        <AssemblyVersion>1.0.3.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Data.AppConfiguration.ConfigurationSetting&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="setting" Type="Azure.Data.AppConfiguration.ConfigurationSetting" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="setting">The <see cref="T:Azure.Data.AppConfiguration.ConfigurationSetting" /> to create.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Creates a <see cref="T:Azure.Data.AppConfiguration.ConfigurationSetting" /> only if the setting does not already exist in the configuration store.
            </summary>
        <returns>A response containing the added <see cref="T:Azure.Data.AppConfiguration.ConfigurationSetting" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddConfigurationSettingAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Data.AppConfiguration.ConfigurationSetting&gt;&gt; AddConfigurationSettingAsync (string key, string value, string label = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Data.AppConfiguration.ConfigurationSetting&gt;&gt; AddConfigurationSettingAsync(string key, string value, string label, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Data.AppConfiguration.ConfigurationClient.AddConfigurationSettingAsync(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddConfigurationSettingAsync (key As String, value As String, Optional label As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ConfigurationSetting))" />
      <MemberSignature Language="F#" Value="abstract member AddConfigurationSettingAsync : string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Data.AppConfiguration.ConfigurationSetting&gt;&gt;&#xA;override this.AddConfigurationSettingAsync : string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Data.AppConfiguration.ConfigurationSetting&gt;&gt;" Usage="configurationClient.AddConfigurationSettingAsync (key, value, label, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Data.AppConfiguration</AssemblyName>
        <AssemblyVersion>1.0.2.0</AssemblyVersion>
        <AssemblyVersion>1.0.3.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Data.AppConfiguration.ConfigurationSetting&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="label" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="key">The primary identifier of the configuration setting.</param>
        <param name="value">The configuration setting's value.</param>
        <param name="label">A label used to group this configuration setting with others.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Creates a <see cref="T:Azure.Data.AppConfiguration.ConfigurationSetting" /> if the setting, uniquely identified by key and label, does not already exist in the configuration store.
            </summary>
        <returns>A response containing the added <see cref="T:Azure.Data.AppConfiguration.ConfigurationSetting" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckKeys">
      <MemberSignature Language="C#" Value="public virtual Azure.Response CheckKeys (string name = default, string after = default, string acceptDatetime = default, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response CheckKeys(string name, string after, string acceptDatetime, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Data.AppConfiguration.ConfigurationClient.CheckKeys(System.String,System.String,System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckKeys (Optional name As String = Nothing, Optional after As String = Nothing, Optional acceptDatetime As String = Nothing, Optional context As RequestContext = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member CheckKeys : string * string * string * Azure.RequestContext -&gt; Azure.Response&#xA;override this.CheckKeys : string * string * string * Azure.RequestContext -&gt; Azure.Response" Usage="configurationClient.CheckKeys (name, after, acceptDatetime, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Data.AppConfiguration</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="after" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="acceptDatetime" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="context" Type="Azure.RequestContext" Index="3" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="name"> A filter for the name of the returned keys. </param>
        <param name="after"> Instructs the server to return elements that appear after the element referred to by the specified token. </param>
        <param name="acceptDatetime"> Requests the server to respond with the state of the resource at the specified time. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Requests the headers and status of the given resource. </summary>
        <returns> The response returned from the service. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
        <example>
            This sample shows how to call CheckKeys.
            <code><![CDATA[
            var endpoint = new Uri("<https://my-service.azure.com>");
            var client = new ConfigurationClient(endpoint);
            
            Response response = client.CheckKeys();
            Console.WriteLine(response.Status);
            ]]></code>
            This sample shows how to call CheckKeys with all parameters.
            <code><![CDATA[
            var endpoint = new Uri("<https://my-service.azure.com>");
            var client = new ConfigurationClient(endpoint);
            
            Response response = client.CheckKeys("<name>", "<after>", "<acceptDatetime>");
            Console.WriteLine(response.Status);
            ]]></code></example>
      </Docs>
    </Member>
    <Member MemberName="CheckKeysAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; CheckKeysAsync (string name = default, string after = default, string acceptDatetime = default, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; CheckKeysAsync(string name, string after, string acceptDatetime, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Data.AppConfiguration.ConfigurationClient.CheckKeysAsync(System.String,System.String,System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckKeysAsync (Optional name As String = Nothing, Optional after As String = Nothing, Optional acceptDatetime As String = Nothing, Optional context As RequestContext = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member CheckKeysAsync : string * string * string * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.CheckKeysAsync : string * string * string * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="configurationClient.CheckKeysAsync (name, after, acceptDatetime, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Data.AppConfiguration</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="after" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="acceptDatetime" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="context" Type="Azure.RequestContext" Index="3" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="name"> A filter for the name of the returned keys. </param>
        <param name="after"> Instructs the server to return elements that appear after the element referred to by the specified token. </param>
        <param name="acceptDatetime"> Requests the server to respond with the state of the resource at the specified time. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Requests the headers and status of the given resource. </summary>
        <returns> The response returned from the service. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
        <example>
            This sample shows how to call CheckKeysAsync.
            <code><![CDATA[
            var endpoint = new Uri("<https://my-service.azure.com>");
            var client = new ConfigurationClient(endpoint);
            
            Response response = await client.CheckKeysAsync();
            Console.WriteLine(response.Status);
            ]]></code>
            This sample shows how to call CheckKeysAsync with all parameters.
            <code><![CDATA[
            var endpoint = new Uri("<https://my-service.azure.com>");
            var client = new ConfigurationClient(endpoint);
            
            Response response = await client.CheckKeysAsync("<name>", "<after>", "<acceptDatetime>");
            Console.WriteLine(response.Status);
            ]]></code></example>
      </Docs>
    </Member>
    <Member MemberName="CheckKeyValue">
      <MemberSignature Language="C#" Value="public virtual Azure.Response CheckKeyValue (string key, string label = default, string acceptDatetime = default, System.Collections.Generic.IEnumerable&lt;string&gt; select = default, Azure.MatchConditions matchConditions = default, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response CheckKeyValue(string key, string label, string acceptDatetime, class System.Collections.Generic.IEnumerable`1&lt;string&gt; select, class Azure.MatchConditions matchConditions, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Data.AppConfiguration.ConfigurationClient.CheckKeyValue(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},Azure.MatchConditions,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckKeyValue (key As String, Optional label As String = Nothing, Optional acceptDatetime As String = Nothing, Optional select As IEnumerable(Of String) = Nothing, Optional matchConditions As MatchConditions = Nothing, Optional context As RequestContext = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member CheckKeyValue : string * string * string * seq&lt;string&gt; * Azure.MatchConditions * Azure.RequestContext -&gt; Azure.Response&#xA;override this.CheckKeyValue : string * string * string * seq&lt;string&gt; * Azure.MatchConditions * Azure.RequestContext -&gt; Azure.Response" Usage="configurationClient.CheckKeyValue (key, label, acceptDatetime, select, matchConditions, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Data.AppConfiguration</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="label" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="acceptDatetime" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="select" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" Index="3" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="matchConditions" Type="Azure.MatchConditions" Index="4" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="context" Type="Azure.RequestContext" Index="5" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="key"> The key of the key-value to retrieve. </param>
        <param name="label"> The label of the key-value to retrieve. </param>
        <param name="acceptDatetime"> Requests the server to respond with the state of the resource at the specified time. </param>
        <param name="select"> Used to select what fields are present in the returned resource(s). </param>
        <param name="matchConditions"> The content to send as the request conditions of the request. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Requests the headers and status of the given resource. </summary>
        <returns> The response returned from the service. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="key" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
        <example>
            This sample shows how to call CheckKeyValue with required parameters.
            <code><![CDATA[
            var endpoint = new Uri("<https://my-service.azure.com>");
            var client = new ConfigurationClient(endpoint);
            
            Response response = client.CheckKeyValue("<key>");
            Console.WriteLine(response.Status);
            ]]></code>
            This sample shows how to call CheckKeyValue with all parameters.
            <code><![CDATA[
            var endpoint = new Uri("<https://my-service.azure.com>");
            var client = new ConfigurationClient(endpoint);
            
            Response response = client.CheckKeyValue("<key>", "<label>", "<acceptDatetime>", new String[]{"<select>"}, new MatchConditions { IfMatch = "<YOUR_ETAG>" });
            Console.WriteLine(response.Status);
            ]]></code></example>
      </Docs>
    </Member>
    <Member MemberName="CheckKeyValueAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; CheckKeyValueAsync (string key, string label = default, string acceptDatetime = default, System.Collections.Generic.IEnumerable&lt;string&gt; select = default, Azure.MatchConditions matchConditions = default, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; CheckKeyValueAsync(string key, string label, string acceptDatetime, class System.Collections.Generic.IEnumerable`1&lt;string&gt; select, class Azure.MatchConditions matchConditions, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Data.AppConfiguration.ConfigurationClient.CheckKeyValueAsync(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},Azure.MatchConditions,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckKeyValueAsync (key As String, Optional label As String = Nothing, Optional acceptDatetime As String = Nothing, Optional select As IEnumerable(Of String) = Nothing, Optional matchConditions As MatchConditions = Nothing, Optional context As RequestContext = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member CheckKeyValueAsync : string * string * string * seq&lt;string&gt; * Azure.MatchConditions * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.CheckKeyValueAsync : string * string * string * seq&lt;string&gt; * Azure.MatchConditions * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="configurationClient.CheckKeyValueAsync (key, label, acceptDatetime, select, matchConditions, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Data.AppConfiguration</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="label" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="acceptDatetime" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="select" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" Index="3" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="matchConditions" Type="Azure.MatchConditions" Index="4" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="context" Type="Azure.RequestContext" Index="5" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="key"> The key of the key-value to retrieve. </param>
        <param name="label"> The label of the key-value to retrieve. </param>
        <param name="acceptDatetime"> Requests the server to respond with the state of the resource at the specified time. </param>
        <param name="select"> Used to select what fields are present in the returned resource(s). </param>
        <param name="matchConditions"> The content to send as the request conditions of the request. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Requests the headers and status of the given resource. </summary>
        <returns> The response returned from the service. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="key" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
        <example>
            This sample shows how to call CheckKeyValueAsync with required parameters.
            <code><![CDATA[
            var endpoint = new Uri("<https://my-service.azure.com>");
            var client = new ConfigurationClient(endpoint);
            
            Response response = await client.CheckKeyValueAsync("<key>");
            Console.WriteLine(response.Status);
            ]]></code>
            This sample shows how to call CheckKeyValueAsync with all parameters.
            <code><![CDATA[
            var endpoint = new Uri("<https://my-service.azure.com>");
            var client = new ConfigurationClient(endpoint);
            
            Response response = await client.CheckKeyValueAsync("<key>", "<label>", "<acceptDatetime>", new String[]{"<select>"}, new MatchConditions { IfMatch = "<YOUR_ETAG>" });
            Console.WriteLine(response.Status);
            ]]></code></example>
      </Docs>
    </Member>
    <Member MemberName="CheckKeyValues">
      <MemberSignature Language="C#" Value="public virtual Azure.Response CheckKeyValues (string key = default, string label = default, string after = default, string acceptDatetime = default, System.Collections.Generic.IEnumerable&lt;string&gt; select = default, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response CheckKeyValues(string key, string label, string after, string acceptDatetime, class System.Collections.Generic.IEnumerable`1&lt;string&gt; select, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Data.AppConfiguration.ConfigurationClient.CheckKeyValues(System.String,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckKeyValues (Optional key As String = Nothing, Optional label As String = Nothing, Optional after As String = Nothing, Optional acceptDatetime As String = Nothing, Optional select As IEnumerable(Of String) = Nothing, Optional context As RequestContext = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member CheckKeyValues : string * string * string * string * seq&lt;string&gt; * Azure.RequestContext -&gt; Azure.Response&#xA;override this.CheckKeyValues : string * string * string * string * seq&lt;string&gt; * Azure.RequestContext -&gt; Azure.Response" Usage="configurationClient.CheckKeyValues (key, label, after, acceptDatetime, select, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Data.AppConfiguration</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="label" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="after" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="acceptDatetime" Type="System.String" Index="3" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="select" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" Index="4" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="context" Type="Azure.RequestContext" Index="5" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="key"> A filter used to match keys. </param>
        <param name="label"> A filter used to match labels. </param>
        <param name="after"> Instructs the server to return elements that appear after the element referred to by the specified token. </param>
        <param name="acceptDatetime"> Requests the server to respond with the state of the resource at the specified time. </param>
        <param name="select"> Used to select what fields are present in the returned resource(s). </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Requests the headers and status of the given resource. </summary>
        <returns> The response returned from the service. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
        <example>
            This sample shows how to call CheckKeyValues.
            <code><![CDATA[
            var endpoint = new Uri("<https://my-service.azure.com>");
            var client = new ConfigurationClient(endpoint);
            
            Response response = client.CheckKeyValues();
            Console.WriteLine(response.Status);
            ]]></code>
            This sample shows how to call CheckKeyValues with all parameters.
            <code><![CDATA[
            var endpoint = new Uri("<https://my-service.azure.com>");
            var client = new ConfigurationClient(endpoint);
            
            Response response = client.CheckKeyValues("<key>", "<label>", "<after>", "<acceptDatetime>", new String[]{"<select>"});
            Console.WriteLine(response.Status);
            ]]></code></example>
      </Docs>
    </Member>
    <Member MemberName="CheckKeyValuesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; CheckKeyValuesAsync (string key = default, string label = default, string after = default, string acceptDatetime = default, System.Collections.Generic.IEnumerable&lt;string&gt; select = default, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; CheckKeyValuesAsync(string key, string label, string after, string acceptDatetime, class System.Collections.Generic.IEnumerable`1&lt;string&gt; select, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Data.AppConfiguration.ConfigurationClient.CheckKeyValuesAsync(System.String,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckKeyValuesAsync (Optional key As String = Nothing, Optional label As String = Nothing, Optional after As String = Nothing, Optional acceptDatetime As String = Nothing, Optional select As IEnumerable(Of String) = Nothing, Optional context As RequestContext = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member CheckKeyValuesAsync : string * string * string * string * seq&lt;string&gt; * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.CheckKeyValuesAsync : string * string * string * string * seq&lt;string&gt; * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="configurationClient.CheckKeyValuesAsync (key, label, after, acceptDatetime, select, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Data.AppConfiguration</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="label" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="after" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="acceptDatetime" Type="System.String" Index="3" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="select" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" Index="4" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="context" Type="Azure.RequestContext" Index="5" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="key"> A filter used to match keys. </param>
        <param name="label"> A filter used to match labels. </param>
        <param name="after"> Instructs the server to return elements that appear after the element referred to by the specified token. </param>
        <param name="acceptDatetime"> Requests the server to respond with the state of the resource at the specified time. </param>
        <param name="select"> Used to select what fields are present in the returned resource(s). </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Requests the headers and status of the given resource. </summary>
        <returns> The response returned from the service. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
        <example>
            This sample shows how to call CheckKeyValuesAsync.
            <code><![CDATA[
            var endpoint = new Uri("<https://my-service.azure.com>");
            var client = new ConfigurationClient(endpoint);
            
            Response response = await client.CheckKeyValuesAsync();
            Console.WriteLine(response.Status);
            ]]></code>
            This sample shows how to call CheckKeyValuesAsync with all parameters.
            <code><![CDATA[
            var endpoint = new Uri("<https://my-service.azure.com>");
            var client = new ConfigurationClient(endpoint);
            
            Response response = await client.CheckKeyValuesAsync("<key>", "<label>", "<after>", "<acceptDatetime>", new String[]{"<select>"});
            Console.WriteLine(response.Status);
            ]]></code></example>
      </Docs>
    </Member>
    <Member MemberName="CheckLabels">
      <MemberSignature Language="C#" Value="public virtual Azure.Response CheckLabels (string name = default, string after = default, string acceptDatetime = default, System.Collections.Generic.IEnumerable&lt;string&gt; select = default, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response CheckLabels(string name, string after, string acceptDatetime, class System.Collections.Generic.IEnumerable`1&lt;string&gt; select, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Data.AppConfiguration.ConfigurationClient.CheckLabels(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckLabels (Optional name As String = Nothing, Optional after As String = Nothing, Optional acceptDatetime As String = Nothing, Optional select As IEnumerable(Of String) = Nothing, Optional context As RequestContext = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member CheckLabels : string * string * string * seq&lt;string&gt; * Azure.RequestContext -&gt; Azure.Response&#xA;override this.CheckLabels : string * string * string * seq&lt;string&gt; * Azure.RequestContext -&gt; Azure.Response" Usage="configurationClient.CheckLabels (name, after, acceptDatetime, select, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Data.AppConfiguration</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="after" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="acceptDatetime" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="select" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" Index="3" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="context" Type="Azure.RequestContext" Index="4" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="name"> A filter for the name of the returned labels. </param>
        <param name="after"> Instructs the server to return elements that appear after the element referred to by the specified token. </param>
        <param name="acceptDatetime"> Requests the server to respond with the state of the resource at the specified time. </param>
        <param name="select"> Used to select what fields are present in the returned resource(s). </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Requests the headers and status of the given resource. </summary>
        <returns> The response returned from the service. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
        <example>
            This sample shows how to call CheckLabels.
            <code><![CDATA[
            var endpoint = new Uri("<https://my-service.azure.com>");
            var client = new ConfigurationClient(endpoint);
            
            Response response = client.CheckLabels();
            Console.WriteLine(response.Status);
            ]]></code>
            This sample shows how to call CheckLabels with all parameters.
            <code><![CDATA[
            var endpoint = new Uri("<https://my-service.azure.com>");
            var client = new ConfigurationClient(endpoint);
            
            Response response = client.CheckLabels("<name>", "<after>", "<acceptDatetime>", new String[]{"<select>"});
            Console.WriteLine(response.Status);
            ]]></code></example>
      </Docs>
    </Member>
    <Member MemberName="CheckLabelsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; CheckLabelsAsync (string name = default, string after = default, string acceptDatetime = default, System.Collections.Generic.IEnumerable&lt;string&gt; select = default, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; CheckLabelsAsync(string name, string after, string acceptDatetime, class System.Collections.Generic.IEnumerable`1&lt;string&gt; select, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Data.AppConfiguration.ConfigurationClient.CheckLabelsAsync(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckLabelsAsync (Optional name As String = Nothing, Optional after As String = Nothing, Optional acceptDatetime As String = Nothing, Optional select As IEnumerable(Of String) = Nothing, Optional context As RequestContext = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member CheckLabelsAsync : string * string * string * seq&lt;string&gt; * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.CheckLabelsAsync : string * string * string * seq&lt;string&gt; * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="configurationClient.CheckLabelsAsync (name, after, acceptDatetime, select, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Data.AppConfiguration</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="after" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="acceptDatetime" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="select" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" Index="3" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="context" Type="Azure.RequestContext" Index="4" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="name"> A filter for the name of the returned labels. </param>
        <param name="after"> Instructs the server to return elements that appear after the element referred to by the specified token. </param>
        <param name="acceptDatetime"> Requests the server to respond with the state of the resource at the specified time. </param>
        <param name="select"> Used to select what fields are present in the returned resource(s). </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Requests the headers and status of the given resource. </summary>
        <returns> The response returned from the service. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
        <example>
            This sample shows how to call CheckLabelsAsync.
            <code><![CDATA[
            var endpoint = new Uri("<https://my-service.azure.com>");
            var client = new ConfigurationClient(endpoint);
            
            Response response = await client.CheckLabelsAsync();
            Console.WriteLine(response.Status);
            ]]></code>
            This sample shows how to call CheckLabelsAsync with all parameters.
            <code><![CDATA[
            var endpoint = new Uri("<https://my-service.azure.com>");
            var client = new ConfigurationClient(endpoint);
            
            Response response = await client.CheckLabelsAsync("<name>", "<after>", "<acceptDatetime>", new String[]{"<select>"});
            Console.WriteLine(response.Status);
            ]]></code></example>
      </Docs>
    </Member>
    <Member MemberName="CheckRevisions">
      <MemberSignature Language="C#" Value="public virtual Azure.Response CheckRevisions (string key = default, string label = default, string after = default, string acceptDatetime = default, System.Collections.Generic.IEnumerable&lt;string&gt; select = default, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response CheckRevisions(string key, string label, string after, string acceptDatetime, class System.Collections.Generic.IEnumerable`1&lt;string&gt; select, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Data.AppConfiguration.ConfigurationClient.CheckRevisions(System.String,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckRevisions (Optional key As String = Nothing, Optional label As String = Nothing, Optional after As String = Nothing, Optional acceptDatetime As String = Nothing, Optional select As IEnumerable(Of String) = Nothing, Optional context As RequestContext = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member CheckRevisions : string * string * string * string * seq&lt;string&gt; * Azure.RequestContext -&gt; Azure.Response&#xA;override this.CheckRevisions : string * string * string * string * seq&lt;string&gt; * Azure.RequestContext -&gt; Azure.Response" Usage="configurationClient.CheckRevisions (key, label, after, acceptDatetime, select, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Data.AppConfiguration</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="label" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="after" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="acceptDatetime" Type="System.String" Index="3" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="select" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" Index="4" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="context" Type="Azure.RequestContext" Index="5" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="key"> A filter used to match keys. </param>
        <param name="label"> A filter used to match labels. </param>
        <param name="after"> Instructs the server to return elements that appear after the element referred to by the specified token. </param>
        <param name="acceptDatetime"> Requests the server to respond with the state of the resource at the specified time. </param>
        <param name="select"> Used to select what fields are present in the returned resource(s). </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Requests the headers and status of the given resource. </summary>
        <returns> The response returned from the service. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
        <example>
            This sample shows how to call CheckRevisions.
            <code><![CDATA[
            var endpoint = new Uri("<https://my-service.azure.com>");
            var client = new ConfigurationClient(endpoint);
            
            Response response = client.CheckRevisions();
            Console.WriteLine(response.Status);
            ]]></code>
            This sample shows how to call CheckRevisions with all parameters.
            <code><![CDATA[
            var endpoint = new Uri("<https://my-service.azure.com>");
            var client = new ConfigurationClient(endpoint);
            
            Response response = client.CheckRevisions("<key>", "<label>", "<after>", "<acceptDatetime>", new String[]{"<select>"});
            Console.WriteLine(response.Status);
            ]]></code></example>
      </Docs>
    </Member>
    <Member MemberName="CheckRevisionsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; CheckRevisionsAsync (string key = default, string label = default, string after = default, string acceptDatetime = default, System.Collections.Generic.IEnumerable&lt;string&gt; select = default, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; CheckRevisionsAsync(string key, string label, string after, string acceptDatetime, class System.Collections.Generic.IEnumerable`1&lt;string&gt; select, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Data.AppConfiguration.ConfigurationClient.CheckRevisionsAsync(System.String,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckRevisionsAsync (Optional key As String = Nothing, Optional label As String = Nothing, Optional after As String = Nothing, Optional acceptDatetime As String = Nothing, Optional select As IEnumerable(Of String) = Nothing, Optional context As RequestContext = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member CheckRevisionsAsync : string * string * string * string * seq&lt;string&gt; * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.CheckRevisionsAsync : string * string * string * string * seq&lt;string&gt; * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="configurationClient.CheckRevisionsAsync (key, label, after, acceptDatetime, select, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Data.AppConfiguration</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="label" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="after" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="acceptDatetime" Type="System.String" Index="3" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="select" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" Index="4" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="context" Type="Azure.RequestContext" Index="5" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="key"> A filter used to match keys. </param>
        <param name="label"> A filter used to match labels. </param>
        <param name="after"> Instructs the server to return elements that appear after the element referred to by the specified token. </param>
        <param name="acceptDatetime"> Requests the server to respond with the state of the resource at the specified time. </param>
        <param name="select"> Used to select what fields are present in the returned resource(s). </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Requests the headers and status of the given resource. </summary>
        <returns> The response returned from the service. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
        <example>
            This sample shows how to call CheckRevisionsAsync.
            <code><![CDATA[
            var endpoint = new Uri("<https://my-service.azure.com>");
            var client = new ConfigurationClient(endpoint);
            
            Response response = await client.CheckRevisionsAsync();
            Console.WriteLine(response.Status);
            ]]></code>
            This sample shows how to call CheckRevisionsAsync with all parameters.
            <code><![CDATA[
            var endpoint = new Uri("<https://my-service.azure.com>");
            var client = new ConfigurationClient(endpoint);
            
            Response response = await client.CheckRevisionsAsync("<key>", "<label>", "<after>", "<acceptDatetime>", new String[]{"<select>"});
            Console.WriteLine(response.Status);
            ]]></code></example>
      </Docs>
    </Member>
    <Member MemberName="CreateReadOnlyLock">
      <MemberSignature Language="C#" Value="public virtual Azure.Response CreateReadOnlyLock (string key, string label = default, Azure.MatchConditions matchConditions = default, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response CreateReadOnlyLock(string key, string label, class Azure.MatchConditions matchConditions, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Data.AppConfiguration.ConfigurationClient.CreateReadOnlyLock(System.String,System.String,Azure.MatchConditions,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateReadOnlyLock (key As String, Optional label As String = Nothing, Optional matchConditions As MatchConditions = Nothing, Optional context As RequestContext = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member CreateReadOnlyLock : string * string * Azure.MatchConditions * Azure.RequestContext -&gt; Azure.Response&#xA;override this.CreateReadOnlyLock : string * string * Azure.MatchConditions * Azure.RequestContext -&gt; Azure.Response" Usage="configurationClient.CreateReadOnlyLock (key, label, matchConditions, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Data.AppConfiguration</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="label" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="matchConditions" Type="Azure.MatchConditions" Index="2" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="context" Type="Azure.RequestContext" Index="3" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="key"> The key of the key-value to lock. </param>
        <param name="label"> The label, if any, of the key-value to lock. </param>
        <param name="matchConditions"> The content to send as the request conditions of the request. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Locks a key-value. </summary>
        <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        <remarks>
            Below is the JSON schema for the response payload.
            
            Response Body:
            
            Schema for <c>KeyValue</c>:
            <code>{
              key: string, # Optional.
              label: string, # Optional.
              content_type: string, # Optional.
              value: string, # Optional.
              last_modified: string (ISO 8601 Format), # Optional.
              tags: Dictionary&lt;string, string&gt;, # Optional. Dictionary of &lt;string&gt;
              locked: boolean, # Optional.
              etag: string, # Optional.
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="key" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
        <example>
            This sample shows how to call CreateReadOnlyLock with required parameters and parse the result.
            <code><![CDATA[
            var endpoint = new Uri("<https://my-service.azure.com>");
            var client = new ConfigurationClient(endpoint);
            
            Response response = client.CreateReadOnlyLock("<key>");
            
            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
            ]]></code>
            This sample shows how to call CreateReadOnlyLock with all parameters, and how to parse the result.
            <code><![CDATA[
            var endpoint = new Uri("<https://my-service.azure.com>");
            var client = new ConfigurationClient(endpoint);
            
            Response response = client.CreateReadOnlyLock("<key>", "<label>", new MatchConditions { IfMatch = "<YOUR_ETAG>" });
            
            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("key").ToString());
            Console.WriteLine(result.GetProperty("label").ToString());
            Console.WriteLine(result.GetProperty("content_type").ToString());
            Console.WriteLine(result.GetProperty("value").ToString());
            Console.WriteLine(result.GetProperty("last_modified").ToString());
            Console.WriteLine(result.GetProperty("tags").GetProperty("<test>").ToString());
            Console.WriteLine(result.GetProperty("locked").ToString());
            Console.WriteLine(result.GetProperty("etag").ToString());
            ]]></code></example>
      </Docs>
    </Member>
    <Member MemberName="CreateReadOnlyLockAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; CreateReadOnlyLockAsync (string key, string label = default, Azure.MatchConditions matchConditions = default, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; CreateReadOnlyLockAsync(string key, string label, class Azure.MatchConditions matchConditions, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Data.AppConfiguration.ConfigurationClient.CreateReadOnlyLockAsync(System.String,System.String,Azure.MatchConditions,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateReadOnlyLockAsync (key As String, Optional label As String = Nothing, Optional matchConditions As MatchConditions = Nothing, Optional context As RequestContext = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member CreateReadOnlyLockAsync : string * string * Azure.MatchConditions * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.CreateReadOnlyLockAsync : string * string * Azure.MatchConditions * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="configurationClient.CreateReadOnlyLockAsync (key, label, matchConditions, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Data.AppConfiguration</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="label" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="matchConditions" Type="Azure.MatchConditions" Index="2" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="context" Type="Azure.RequestContext" Index="3" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="key"> The key of the key-value to lock. </param>
        <param name="label"> The label, if any, of the key-value to lock. </param>
        <param name="matchConditions"> The content to send as the request conditions of the request. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Locks a key-value. </summary>
        <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        <remarks>
            Below is the JSON schema for the response payload.
            
            Response Body:
            
            Schema for <c>KeyValue</c>:
            <code>{
              key: string, # Optional.
              label: string, # Optional.
              content_type: string, # Optional.
              value: string, # Optional.
              last_modified: string (ISO 8601 Format), # Optional.
              tags: Dictionary&lt;string, string&gt;, # Optional. Dictionary of &lt;string&gt;
              locked: boolean, # Optional.
              etag: string, # Optional.
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="key" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
        <example>
            This sample shows how to call CreateReadOnlyLockAsync with required parameters and parse the result.
            <code><![CDATA[
            var endpoint = new Uri("<https://my-service.azure.com>");
            var client = new ConfigurationClient(endpoint);
            
            Response response = await client.CreateReadOnlyLockAsync("<key>");
            
            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
            ]]></code>
            This sample shows how to call CreateReadOnlyLockAsync with all parameters, and how to parse the result.
            <code><![CDATA[
            var endpoint = new Uri("<https://my-service.azure.com>");
            var client = new ConfigurationClient(endpoint);
            
            Response response = await client.CreateReadOnlyLockAsync("<key>", "<label>", new MatchConditions { IfMatch = "<YOUR_ETAG>" });
            
            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("key").ToString());
            Console.WriteLine(result.GetProperty("label").ToString());
            Console.WriteLine(result.GetProperty("content_type").ToString());
            Console.WriteLine(result.GetProperty("value").ToString());
            Console.WriteLine(result.GetProperty("last_modified").ToString());
            Console.WriteLine(result.GetProperty("tags").GetProperty("<test>").ToString());
            Console.WriteLine(result.GetProperty("locked").ToString());
            Console.WriteLine(result.GetProperty("etag").ToString());
            ]]></code></example>
      </Docs>
    </Member>
    <Member MemberName="DeleteConfigurationSetting">
      <MemberSignature Language="C#" Value="public virtual Azure.Response DeleteConfigurationSetting (Azure.Data.AppConfiguration.ConfigurationSetting setting, bool onlyIfUnchanged = false, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response DeleteConfigurationSetting(class Azure.Data.AppConfiguration.ConfigurationSetting setting, bool onlyIfUnchanged, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Data.AppConfiguration.ConfigurationClient.DeleteConfigurationSetting(Azure.Data.AppConfiguration.ConfigurationSetting,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteConfigurationSetting (setting As ConfigurationSetting, Optional onlyIfUnchanged As Boolean = false, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member DeleteConfigurationSetting : Azure.Data.AppConfiguration.ConfigurationSetting * bool * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.DeleteConfigurationSetting : Azure.Data.AppConfiguration.ConfigurationSetting * bool * System.Threading.CancellationToken -&gt; Azure.Response" Usage="configurationClient.DeleteConfigurationSetting (setting, onlyIfUnchanged, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Data.AppConfiguration</AssemblyName>
        <AssemblyVersion>1.0.2.0</AssemblyVersion>
        <AssemblyVersion>1.0.3.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="setting" Type="Azure.Data.AppConfiguration.ConfigurationSetting" />
        <Parameter Name="onlyIfUnchanged" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="setting">The <see cref="T:Azure.Data.AppConfiguration.ConfigurationSetting" /> to delete.</param>
        <param name="onlyIfUnchanged">If set to true and the configuration setting exists in the configuration store, delete the setting
            if the passed-in <see cref="T:Azure.Data.AppConfiguration.ConfigurationSetting" /> is the same version as the one in the configuration store. The setting versions
            are the same if their ETag fields match.  If the two settings are different versions, this method will throw an exception to indicate
            that the setting in the configuration store was modified since it was last obtained by the client.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Delete a <see cref="T:Azure.Data.AppConfiguration.ConfigurationSetting" /> from the configuration store.
            </summary>
        <returns>A response indicating the success of the operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteConfigurationSetting">
      <MemberSignature Language="C#" Value="public virtual Azure.Response DeleteConfigurationSetting (string key, string label = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response DeleteConfigurationSetting(string key, string label, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Data.AppConfiguration.ConfigurationClient.DeleteConfigurationSetting(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteConfigurationSetting (key As String, Optional label As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member DeleteConfigurationSetting : string * string * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.DeleteConfigurationSetting : string * string * System.Threading.CancellationToken -&gt; Azure.Response" Usage="configurationClient.DeleteConfigurationSetting (key, label, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Data.AppConfiguration</AssemblyName>
        <AssemblyVersion>1.0.2.0</AssemblyVersion>
        <AssemblyVersion>1.0.3.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="label" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="key">The primary identifier of the configuration setting.</param>
        <param name="label">A label used to group this configuration setting with others.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Delete a <see cref="T:Azure.Data.AppConfiguration.ConfigurationSetting" /> from the configuration store.
            </summary>
        <returns>A response indicating the success of the operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteConfigurationSetting">
      <MemberSignature Language="C#" Value="public virtual Azure.Response DeleteConfigurationSetting (string key, string label, Azure.ETag? ifMatch, Azure.RequestContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response DeleteConfigurationSetting(string key, string label, valuetype System.Nullable`1&lt;valuetype Azure.ETag&gt; ifMatch, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Data.AppConfiguration.ConfigurationClient.DeleteConfigurationSetting(System.String,System.String,System.Nullable{Azure.ETag},Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteConfigurationSetting (key As String, label As String, ifMatch As Nullable(Of ETag), context As RequestContext) As Response" />
      <MemberSignature Language="F#" Value="abstract member DeleteConfigurationSetting : string * string * Nullable&lt;Azure.ETag&gt; * Azure.RequestContext -&gt; Azure.Response&#xA;override this.DeleteConfigurationSetting : string * string * Nullable&lt;Azure.ETag&gt; * Azure.RequestContext -&gt; Azure.Response" Usage="configurationClient.DeleteConfigurationSetting (key, label, ifMatch, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Data.AppConfiguration</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="label" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="ifMatch" Type="System.Nullable&lt;Azure.ETag&gt;" Index="2" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="context" Type="Azure.RequestContext" Index="3" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="key"> The key of the key-value to delete. </param>
        <param name="label"> The label of the key-value to delete. </param>
        <param name="ifMatch"> Used to perform an operation only if the targeted resource's etag matches the value provided. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Deletes a key-value. </summary>
        <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        <remarks>
             Below is the JSON schema for the response payload.
            
             Response Body:
            
             Schema for <c>KeyValue</c>:
             <code>{
               key: string, # Optional.
               label: string, # Optional.
               content_type: string, # Optional.
               value: string, # Optional.
               last_modified: string (ISO 8601 Format), # Optional.
               tags: Dictionary&lt;string, string&gt;, # Optional. Dictionary of &lt;string&gt;
               locked: boolean, # Optional.
               etag: string, # Optional.
             }
             </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="key" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
        <example>
             This sample shows how to call DeleteConfigurationSetting with required parameters and parse the result.
             <code><![CDATA[
             var endpoint = new Uri("<https://my-service.azure.com>");
             var client = new ConfigurationClient(endpoint);
            
             Response response = client.DeleteConfigurationSetting("<key>");
            
             JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
             Console.WriteLine(result.ToString());
             ]]></code>
             This sample shows how to call DeleteConfigurationSetting with all parameters, and how to parse the result.
             <code><![CDATA[
             var endpoint = new Uri("<https://my-service.azure.com>");
             var client = new ConfigurationClient(endpoint);
            
             Response response = client.DeleteConfigurationSetting("<key>", "<label>", null);
            
             JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
             Console.WriteLine(result.GetProperty("key").ToString());
             Console.WriteLine(result.GetProperty("label").ToString());
             Console.WriteLine(result.GetProperty("content_type").ToString());
             Console.WriteLine(result.GetProperty("value").ToString());
             Console.WriteLine(result.GetProperty("last_modified").ToString());
             Console.WriteLine(result.GetProperty("tags").GetProperty("<test>").ToString());
             Console.WriteLine(result.GetProperty("locked").ToString());
             Console.WriteLine(result.GetProperty("etag").ToString());
             ]]></code></example>
      </Docs>
    </Member>
    <Member MemberName="DeleteConfigurationSettingAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DeleteConfigurationSettingAsync (Azure.Data.AppConfiguration.ConfigurationSetting setting, bool onlyIfUnchanged = false, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeleteConfigurationSettingAsync(class Azure.Data.AppConfiguration.ConfigurationSetting setting, bool onlyIfUnchanged, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Data.AppConfiguration.ConfigurationClient.DeleteConfigurationSettingAsync(Azure.Data.AppConfiguration.ConfigurationSetting,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteConfigurationSettingAsync (setting As ConfigurationSetting, Optional onlyIfUnchanged As Boolean = false, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DeleteConfigurationSettingAsync : Azure.Data.AppConfiguration.ConfigurationSetting * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DeleteConfigurationSettingAsync : Azure.Data.AppConfiguration.ConfigurationSetting * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="configurationClient.DeleteConfigurationSettingAsync (setting, onlyIfUnchanged, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Data.AppConfiguration</AssemblyName>
        <AssemblyVersion>1.0.2.0</AssemblyVersion>
        <AssemblyVersion>1.0.3.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="setting" Type="Azure.Data.AppConfiguration.ConfigurationSetting" />
        <Parameter Name="onlyIfUnchanged" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="setting">The <see cref="T:Azure.Data.AppConfiguration.ConfigurationSetting" /> to delete.</param>
        <param name="onlyIfUnchanged">If set to true and the configuration setting exists in the configuration store, delete the setting
            if the passed-in <see cref="T:Azure.Data.AppConfiguration.ConfigurationSetting" /> is the same version as the one in the configuration store. The setting versions
            are the same if their ETag fields match.  If the two settings are different versions, this method will throw an exception to indicate
            that the setting in the configuration store was modified since it was last obtained by the client.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Delete a <see cref="T:Azure.Data.AppConfiguration.ConfigurationSetting" /> from the configuration store.
            </summary>
        <returns>A response indicating the success of the operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteConfigurationSettingAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DeleteConfigurationSettingAsync (string key, string label = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeleteConfigurationSettingAsync(string key, string label, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Data.AppConfiguration.ConfigurationClient.DeleteConfigurationSettingAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteConfigurationSettingAsync (key As String, Optional label As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DeleteConfigurationSettingAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DeleteConfigurationSettingAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="configurationClient.DeleteConfigurationSettingAsync (key, label, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Data.AppConfiguration</AssemblyName>
        <AssemblyVersion>1.0.2.0</AssemblyVersion>
        <AssemblyVersion>1.0.3.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="label" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="key">The primary identifier of the configuration setting.</param>
        <param name="label">A label used to group this configuration setting with others.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Delete a <see cref="T:Azure.Data.AppConfiguration.ConfigurationSetting" /> from the configuration store.
            </summary>
        <returns>A response indicating the success of the operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteConfigurationSettingAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DeleteConfigurationSettingAsync (string key, string label, Azure.ETag? ifMatch, Azure.RequestContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeleteConfigurationSettingAsync(string key, string label, valuetype System.Nullable`1&lt;valuetype Azure.ETag&gt; ifMatch, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Data.AppConfiguration.ConfigurationClient.DeleteConfigurationSettingAsync(System.String,System.String,System.Nullable{Azure.ETag},Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteConfigurationSettingAsync (key As String, label As String, ifMatch As Nullable(Of ETag), context As RequestContext) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DeleteConfigurationSettingAsync : string * string * Nullable&lt;Azure.ETag&gt; * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DeleteConfigurationSettingAsync : string * string * Nullable&lt;Azure.ETag&gt; * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="configurationClient.DeleteConfigurationSettingAsync (key, label, ifMatch, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Data.AppConfiguration</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="label" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="ifMatch" Type="System.Nullable&lt;Azure.ETag&gt;" Index="2" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="context" Type="Azure.RequestContext" Index="3" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="key"> The key of the key-value to delete. </param>
        <param name="label"> The label of the key-value to delete. </param>
        <param name="ifMatch"> Used to perform an operation only if the targeted resource's etag matches the value provided. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Deletes a key-value. </summary>
        <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        <remarks>
             Below is the JSON schema for the response payload.
            
             Response Body:
            
             Schema for <c>KeyValue</c>:
             <code>{
               key: string, # Optional.
               label: string, # Optional.
               content_type: string, # Optional.
               value: string, # Optional.
               last_modified: string (ISO 8601 Format), # Optional.
               tags: Dictionary&lt;string, string&gt;, # Optional. Dictionary of &lt;string&gt;
               locked: boolean, # Optional.
               etag: string, # Optional.
             }
             </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="key" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
        <example>
             This sample shows how to call DeleteConfigurationSettingAsync with required parameters and parse the result.
             <code><![CDATA[
             var endpoint = new Uri("<https://my-service.azure.com>");
             var client = new ConfigurationClient(endpoint);
            
             Response response = await client.DeleteConfigurationSettingAsync("<key>");
            
             JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
             Console.WriteLine(result.ToString());
             ]]></code>
             This sample shows how to call DeleteConfigurationSettingAsync with all parameters, and how to parse the result.
             <code><![CDATA[
             var endpoint = new Uri("<https://my-service.azure.com>");
             var client = new ConfigurationClient(endpoint);
            
             Response response = await client.DeleteConfigurationSettingAsync("<key>", "<label>", null);
            
             JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
             Console.WriteLine(result.GetProperty("key").ToString());
             Console.WriteLine(result.GetProperty("label").ToString());
             Console.WriteLine(result.GetProperty("content_type").ToString());
             Console.WriteLine(result.GetProperty("value").ToString());
             Console.WriteLine(result.GetProperty("last_modified").ToString());
             Console.WriteLine(result.GetProperty("tags").GetProperty("<test>").ToString());
             Console.WriteLine(result.GetProperty("locked").ToString());
             Console.WriteLine(result.GetProperty("etag").ToString());
             ]]></code></example>
      </Docs>
    </Member>
    <Member MemberName="DeleteReadOnlyLock">
      <MemberSignature Language="C#" Value="public virtual Azure.Response DeleteReadOnlyLock (string key, string label = default, Azure.MatchConditions matchConditions = default, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response DeleteReadOnlyLock(string key, string label, class Azure.MatchConditions matchConditions, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Data.AppConfiguration.ConfigurationClient.DeleteReadOnlyLock(System.String,System.String,Azure.MatchConditions,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteReadOnlyLock (key As String, Optional label As String = Nothing, Optional matchConditions As MatchConditions = Nothing, Optional context As RequestContext = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member DeleteReadOnlyLock : string * string * Azure.MatchConditions * Azure.RequestContext -&gt; Azure.Response&#xA;override this.DeleteReadOnlyLock : string * string * Azure.MatchConditions * Azure.RequestContext -&gt; Azure.Response" Usage="configurationClient.DeleteReadOnlyLock (key, label, matchConditions, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Data.AppConfiguration</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="label" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="matchConditions" Type="Azure.MatchConditions" Index="2" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="context" Type="Azure.RequestContext" Index="3" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="key"> The key of the key-value to unlock. </param>
        <param name="label"> The label, if any, of the key-value to unlock. </param>
        <param name="matchConditions"> The content to send as the request conditions of the request. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Unlocks a key-value. </summary>
        <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        <remarks>
            Below is the JSON schema for the response payload.
            
            Response Body:
            
            Schema for <c>KeyValue</c>:
            <code>{
              key: string, # Optional.
              label: string, # Optional.
              content_type: string, # Optional.
              value: string, # Optional.
              last_modified: string (ISO 8601 Format), # Optional.
              tags: Dictionary&lt;string, string&gt;, # Optional. Dictionary of &lt;string&gt;
              locked: boolean, # Optional.
              etag: string, # Optional.
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="key" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
        <example>
            This sample shows how to call DeleteReadOnlyLock with required parameters and parse the result.
            <code><![CDATA[
            var endpoint = new Uri("<https://my-service.azure.com>");
            var client = new ConfigurationClient(endpoint);
            
            Response response = client.DeleteReadOnlyLock("<key>");
            
            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
            ]]></code>
            This sample shows how to call DeleteReadOnlyLock with all parameters, and how to parse the result.
            <code><![CDATA[
            var endpoint = new Uri("<https://my-service.azure.com>");
            var client = new ConfigurationClient(endpoint);
            
            Response response = client.DeleteReadOnlyLock("<key>", "<label>", new MatchConditions { IfMatch = "<YOUR_ETAG>" });
            
            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("key").ToString());
            Console.WriteLine(result.GetProperty("label").ToString());
            Console.WriteLine(result.GetProperty("content_type").ToString());
            Console.WriteLine(result.GetProperty("value").ToString());
            Console.WriteLine(result.GetProperty("last_modified").ToString());
            Console.WriteLine(result.GetProperty("tags").GetProperty("<test>").ToString());
            Console.WriteLine(result.GetProperty("locked").ToString());
            Console.WriteLine(result.GetProperty("etag").ToString());
            ]]></code></example>
      </Docs>
    </Member>
    <Member MemberName="DeleteReadOnlyLockAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DeleteReadOnlyLockAsync (string key, string label = default, Azure.MatchConditions matchConditions = default, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeleteReadOnlyLockAsync(string key, string label, class Azure.MatchConditions matchConditions, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Data.AppConfiguration.ConfigurationClient.DeleteReadOnlyLockAsync(System.String,System.String,Azure.MatchConditions,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteReadOnlyLockAsync (key As String, Optional label As String = Nothing, Optional matchConditions As MatchConditions = Nothing, Optional context As RequestContext = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DeleteReadOnlyLockAsync : string * string * Azure.MatchConditions * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DeleteReadOnlyLockAsync : string * string * Azure.MatchConditions * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="configurationClient.DeleteReadOnlyLockAsync (key, label, matchConditions, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Data.AppConfiguration</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="label" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="matchConditions" Type="Azure.MatchConditions" Index="2" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="context" Type="Azure.RequestContext" Index="3" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="key"> The key of the key-value to unlock. </param>
        <param name="label"> The label, if any, of the key-value to unlock. </param>
        <param name="matchConditions"> The content to send as the request conditions of the request. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Unlocks a key-value. </summary>
        <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        <remarks>
            Below is the JSON schema for the response payload.
            
            Response Body:
            
            Schema for <c>KeyValue</c>:
            <code>{
              key: string, # Optional.
              label: string, # Optional.
              content_type: string, # Optional.
              value: string, # Optional.
              last_modified: string (ISO 8601 Format), # Optional.
              tags: Dictionary&lt;string, string&gt;, # Optional. Dictionary of &lt;string&gt;
              locked: boolean, # Optional.
              etag: string, # Optional.
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="key" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
        <example>
            This sample shows how to call DeleteReadOnlyLockAsync with required parameters and parse the result.
            <code><![CDATA[
            var endpoint = new Uri("<https://my-service.azure.com>");
            var client = new ConfigurationClient(endpoint);
            
            Response response = await client.DeleteReadOnlyLockAsync("<key>");
            
            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
            ]]></code>
            This sample shows how to call DeleteReadOnlyLockAsync with all parameters, and how to parse the result.
            <code><![CDATA[
            var endpoint = new Uri("<https://my-service.azure.com>");
            var client = new ConfigurationClient(endpoint);
            
            Response response = await client.DeleteReadOnlyLockAsync("<key>", "<label>", new MatchConditions { IfMatch = "<YOUR_ETAG>" });
            
            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("key").ToString());
            Console.WriteLine(result.GetProperty("label").ToString());
            Console.WriteLine(result.GetProperty("content_type").ToString());
            Console.WriteLine(result.GetProperty("value").ToString());
            Console.WriteLine(result.GetProperty("last_modified").ToString());
            Console.WriteLine(result.GetProperty("tags").GetProperty("<test>").ToString());
            Console.WriteLine(result.GetProperty("locked").ToString());
            Console.WriteLine(result.GetProperty("etag").ToString());
            ]]></code></example>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Data.AppConfiguration.ConfigurationClient.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="configurationClient.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Data.AppConfiguration</AssemblyName>
        <AssemblyVersion>1.0.2.0</AssemblyVersion>
        <AssemblyVersion>1.0.3.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">The instance to compare to.</param>
        <summary>
            Check if two ConfigurationSetting instances are equal.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConfigurationSetting">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Data.AppConfiguration.ConfigurationSetting&gt; GetConfigurationSetting (Azure.Data.AppConfiguration.ConfigurationSetting setting, bool onlyIfChanged = false, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Data.AppConfiguration.ConfigurationSetting&gt; GetConfigurationSetting(class Azure.Data.AppConfiguration.ConfigurationSetting setting, bool onlyIfChanged, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Data.AppConfiguration.ConfigurationClient.GetConfigurationSetting(Azure.Data.AppConfiguration.ConfigurationSetting,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetConfigurationSetting (setting As ConfigurationSetting, Optional onlyIfChanged As Boolean = false, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ConfigurationSetting)" />
      <MemberSignature Language="F#" Value="abstract member GetConfigurationSetting : Azure.Data.AppConfiguration.ConfigurationSetting * bool * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Data.AppConfiguration.ConfigurationSetting&gt;&#xA;override this.GetConfigurationSetting : Azure.Data.AppConfiguration.ConfigurationSetting * bool * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Data.AppConfiguration.ConfigurationSetting&gt;" Usage="configurationClient.GetConfigurationSetting (setting, onlyIfChanged, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Data.AppConfiguration</AssemblyName>
        <AssemblyVersion>1.0.2.0</AssemblyVersion>
        <AssemblyVersion>1.0.3.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Data.AppConfiguration.ConfigurationSetting&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="setting" Type="Azure.Data.AppConfiguration.ConfigurationSetting" />
        <Parameter Name="onlyIfChanged" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="setting">The <see cref="T:Azure.Data.AppConfiguration.ConfigurationSetting" /> to retrieve.</param>
        <param name="onlyIfChanged">If set to true, only retrieve the setting from the configuration store if it has changed since the client last retrieved it.
            It is determined to have changed if the ETag field on the passed-in <see cref="T:Azure.Data.AppConfiguration.ConfigurationSetting" /> is different from the ETag of the setting in the
            configuration store.  If it has not changed, the returned response will have have no value, and will throw if response.Value is accessed.  Callers may
            check the status code on the response to avoid triggering the exception.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Retrieve an existing <see cref="T:Azure.Data.AppConfiguration.ConfigurationSetting" /> from the configuration store.
            </summary>
        <returns>A response containing the retrieved <see cref="T:Azure.Data.AppConfiguration.ConfigurationSetting" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConfigurationSetting">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Data.AppConfiguration.ConfigurationSetting&gt; GetConfigurationSetting (Azure.Data.AppConfiguration.ConfigurationSetting setting, DateTimeOffset acceptDateTime, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Data.AppConfiguration.ConfigurationSetting&gt; GetConfigurationSetting(class Azure.Data.AppConfiguration.ConfigurationSetting setting, valuetype System.DateTimeOffset acceptDateTime, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Data.AppConfiguration.ConfigurationClient.GetConfigurationSetting(Azure.Data.AppConfiguration.ConfigurationSetting,System.DateTimeOffset,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetConfigurationSetting (setting As ConfigurationSetting, acceptDateTime As DateTimeOffset, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ConfigurationSetting)" />
      <MemberSignature Language="F#" Value="abstract member GetConfigurationSetting : Azure.Data.AppConfiguration.ConfigurationSetting * DateTimeOffset * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Data.AppConfiguration.ConfigurationSetting&gt;&#xA;override this.GetConfigurationSetting : Azure.Data.AppConfiguration.ConfigurationSetting * DateTimeOffset * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Data.AppConfiguration.ConfigurationSetting&gt;" Usage="configurationClient.GetConfigurationSetting (setting, acceptDateTime, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Data.AppConfiguration</AssemblyName>
        <AssemblyVersion>1.0.2.0</AssemblyVersion>
        <AssemblyVersion>1.0.3.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Data.AppConfiguration.ConfigurationSetting&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="setting" Type="Azure.Data.AppConfiguration.ConfigurationSetting" />
        <Parameter Name="acceptDateTime" Type="System.DateTimeOffset" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="setting">The <see cref="T:Azure.Data.AppConfiguration.ConfigurationSetting" /> to retrieve.</param>
        <param name="acceptDateTime">The setting will be retrieved exactly as it existed at the provided time.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Retrieve an existing <see cref="T:Azure.Data.AppConfiguration.ConfigurationSetting" /> from the configuration store.
            </summary>
        <returns>A response containing the retrieved <see cref="T:Azure.Data.AppConfiguration.ConfigurationSetting" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConfigurationSetting">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Data.AppConfiguration.ConfigurationSetting&gt; GetConfigurationSetting (string key, string label = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Data.AppConfiguration.ConfigurationSetting&gt; GetConfigurationSetting(string key, string label, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Data.AppConfiguration.ConfigurationClient.GetConfigurationSetting(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetConfigurationSetting (key As String, Optional label As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ConfigurationSetting)" />
      <MemberSignature Language="F#" Value="abstract member GetConfigurationSetting : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Data.AppConfiguration.ConfigurationSetting&gt;&#xA;override this.GetConfigurationSetting : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Data.AppConfiguration.ConfigurationSetting&gt;" Usage="configurationClient.GetConfigurationSetting (key, label, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Data.AppConfiguration</AssemblyName>
        <AssemblyVersion>1.0.2.0</AssemblyVersion>
        <AssemblyVersion>1.0.3.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Data.AppConfiguration.ConfigurationSetting&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="label" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="key">The primary identifier of the configuration setting to retrieve.</param>
        <param name="label">A label used to group this configuration setting with others.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Retrieve an existing <see cref="T:Azure.Data.AppConfiguration.ConfigurationSetting" />, uniquely identified by key and label, from the configuration store.
            </summary>
        <returns>A response containing the retrieved <see cref="T:Azure.Data.AppConfiguration.ConfigurationSetting" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConfigurationSetting">
      <MemberSignature Language="C#" Value="public virtual Azure.Response GetConfigurationSetting (string key, string label, string acceptDatetime, System.Collections.Generic.IEnumerable&lt;string&gt; select, Azure.MatchConditions matchConditions, Azure.RequestContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response GetConfigurationSetting(string key, string label, string acceptDatetime, class System.Collections.Generic.IEnumerable`1&lt;string&gt; select, class Azure.MatchConditions matchConditions, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Data.AppConfiguration.ConfigurationClient.GetConfigurationSetting(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},Azure.MatchConditions,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetConfigurationSetting (key As String, label As String, acceptDatetime As String, select As IEnumerable(Of String), matchConditions As MatchConditions, context As RequestContext) As Response" />
      <MemberSignature Language="F#" Value="abstract member GetConfigurationSetting : string * string * string * seq&lt;string&gt; * Azure.MatchConditions * Azure.RequestContext -&gt; Azure.Response&#xA;override this.GetConfigurationSetting : string * string * string * seq&lt;string&gt; * Azure.MatchConditions * Azure.RequestContext -&gt; Azure.Response" Usage="configurationClient.GetConfigurationSetting (key, label, acceptDatetime, select, matchConditions, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Data.AppConfiguration</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="label" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="acceptDatetime" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="select" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" Index="3" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="matchConditions" Type="Azure.MatchConditions" Index="4" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="context" Type="Azure.RequestContext" Index="5" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="key"> The key of the key-value to retrieve. </param>
        <param name="label"> The label of the key-value to retrieve. </param>
        <param name="acceptDatetime"> Requests the server to respond with the state of the resource at the specified time. </param>
        <param name="select"> Used to select what fields are present in the returned resource(s). </param>
        <param name="matchConditions"> The content to send as the request conditions of the request. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Gets a single key-value. </summary>
        <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        <remarks>
             Below is the JSON schema for the response payload.
            
             Response Body:
            
             Schema for <c>KeyValue</c>:
             <code>{
               key: string, # Optional.
               label: string, # Optional.
               content_type: string, # Optional.
               value: string, # Optional.
               last_modified: string (ISO 8601 Format), # Optional.
               tags: Dictionary&lt;string, string&gt;, # Optional. Dictionary of &lt;string&gt;
               locked: boolean, # Optional.
               etag: string, # Optional.
             }
             </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="key" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
        <example>
             This sample shows how to call GetConfigurationSetting with required parameters and parse the result.
             <code><![CDATA[
             var endpoint = new Uri("<https://my-service.azure.com>");
             var client = new ConfigurationClient(endpoint);
            
             Response response = client.GetConfigurationSetting("<key>");
            
             JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
             Console.WriteLine(result.ToString());
             ]]></code>
             This sample shows how to call GetConfigurationSetting with all parameters, and how to parse the result.
             <code><![CDATA[
             var endpoint = new Uri("<https://my-service.azure.com>");
             var client = new ConfigurationClient(endpoint);
            
             Response response = client.GetConfigurationSetting("<key>", "<label>", "<acceptDatetime>", new String[]{"<select>"}, new MatchConditions { IfMatch = "<YOUR_ETAG>" });
            
             JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
             Console.WriteLine(result.GetProperty("key").ToString());
             Console.WriteLine(result.GetProperty("label").ToString());
             Console.WriteLine(result.GetProperty("content_type").ToString());
             Console.WriteLine(result.GetProperty("value").ToString());
             Console.WriteLine(result.GetProperty("last_modified").ToString());
             Console.WriteLine(result.GetProperty("tags").GetProperty("<test>").ToString());
             Console.WriteLine(result.GetProperty("locked").ToString());
             Console.WriteLine(result.GetProperty("etag").ToString());
             ]]></code></example>
      </Docs>
    </Member>
    <Member MemberName="GetConfigurationSettingAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Data.AppConfiguration.ConfigurationSetting&gt;&gt; GetConfigurationSettingAsync (Azure.Data.AppConfiguration.ConfigurationSetting setting, bool onlyIfChanged = false, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Data.AppConfiguration.ConfigurationSetting&gt;&gt; GetConfigurationSettingAsync(class Azure.Data.AppConfiguration.ConfigurationSetting setting, bool onlyIfChanged, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Data.AppConfiguration.ConfigurationClient.GetConfigurationSettingAsync(Azure.Data.AppConfiguration.ConfigurationSetting,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetConfigurationSettingAsync (setting As ConfigurationSetting, Optional onlyIfChanged As Boolean = false, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ConfigurationSetting))" />
      <MemberSignature Language="F#" Value="abstract member GetConfigurationSettingAsync : Azure.Data.AppConfiguration.ConfigurationSetting * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Data.AppConfiguration.ConfigurationSetting&gt;&gt;&#xA;override this.GetConfigurationSettingAsync : Azure.Data.AppConfiguration.ConfigurationSetting * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Data.AppConfiguration.ConfigurationSetting&gt;&gt;" Usage="configurationClient.GetConfigurationSettingAsync (setting, onlyIfChanged, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Data.AppConfiguration</AssemblyName>
        <AssemblyVersion>1.0.2.0</AssemblyVersion>
        <AssemblyVersion>1.0.3.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Data.AppConfiguration.ConfigurationSetting&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="setting" Type="Azure.Data.AppConfiguration.ConfigurationSetting" />
        <Parameter Name="onlyIfChanged" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="setting">The <see cref="T:Azure.Data.AppConfiguration.ConfigurationSetting" /> to retrieve.</param>
        <param name="onlyIfChanged">If set to true, only retrieve the setting from the configuration store if it has changed since the client last retrieved it.
            It is determined to have changed if the ETag field on the passed-in <see cref="T:Azure.Data.AppConfiguration.ConfigurationSetting" /> is different from the ETag of the setting in the
            configuration store.  If it has not changed, the returned response will have have no value, and will throw if response.Value is accessed.  Callers may
            check the status code on the response to avoid triggering the exception.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Retrieve an existing <see cref="T:Azure.Data.AppConfiguration.ConfigurationSetting" /> from the configuration store.
            </summary>
        <returns>A response containing the retrieved <see cref="T:Azure.Data.AppConfiguration.ConfigurationSetting" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConfigurationSettingAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Data.AppConfiguration.ConfigurationSetting&gt;&gt; GetConfigurationSettingAsync (Azure.Data.AppConfiguration.ConfigurationSetting setting, DateTimeOffset acceptDateTime, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Data.AppConfiguration.ConfigurationSetting&gt;&gt; GetConfigurationSettingAsync(class Azure.Data.AppConfiguration.ConfigurationSetting setting, valuetype System.DateTimeOffset acceptDateTime, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Data.AppConfiguration.ConfigurationClient.GetConfigurationSettingAsync(Azure.Data.AppConfiguration.ConfigurationSetting,System.DateTimeOffset,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetConfigurationSettingAsync (setting As ConfigurationSetting, acceptDateTime As DateTimeOffset, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ConfigurationSetting))" />
      <MemberSignature Language="F#" Value="abstract member GetConfigurationSettingAsync : Azure.Data.AppConfiguration.ConfigurationSetting * DateTimeOffset * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Data.AppConfiguration.ConfigurationSetting&gt;&gt;&#xA;override this.GetConfigurationSettingAsync : Azure.Data.AppConfiguration.ConfigurationSetting * DateTimeOffset * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Data.AppConfiguration.ConfigurationSetting&gt;&gt;" Usage="configurationClient.GetConfigurationSettingAsync (setting, acceptDateTime, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Data.AppConfiguration</AssemblyName>
        <AssemblyVersion>1.0.2.0</AssemblyVersion>
        <AssemblyVersion>1.0.3.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Data.AppConfiguration.ConfigurationSetting&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="setting" Type="Azure.Data.AppConfiguration.ConfigurationSetting" />
        <Parameter Name="acceptDateTime" Type="System.DateTimeOffset" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="setting">The <see cref="T:Azure.Data.AppConfiguration.ConfigurationSetting" /> to retrieve.</param>
        <param name="acceptDateTime">The setting will be retrieved exactly as it existed at the provided time.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Retrieve an existing <see cref="T:Azure.Data.AppConfiguration.ConfigurationSetting" /> from the configuration store.
            </summary>
        <returns>A response containing the retrieved <see cref="T:Azure.Data.AppConfiguration.ConfigurationSetting" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConfigurationSettingAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Data.AppConfiguration.ConfigurationSetting&gt;&gt; GetConfigurationSettingAsync (string key, string label = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Data.AppConfiguration.ConfigurationSetting&gt;&gt; GetConfigurationSettingAsync(string key, string label, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Data.AppConfiguration.ConfigurationClient.GetConfigurationSettingAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetConfigurationSettingAsync (key As String, Optional label As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ConfigurationSetting))" />
      <MemberSignature Language="F#" Value="abstract member GetConfigurationSettingAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Data.AppConfiguration.ConfigurationSetting&gt;&gt;&#xA;override this.GetConfigurationSettingAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Data.AppConfiguration.ConfigurationSetting&gt;&gt;" Usage="configurationClient.GetConfigurationSettingAsync (key, label, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Data.AppConfiguration</AssemblyName>
        <AssemblyVersion>1.0.2.0</AssemblyVersion>
        <AssemblyVersion>1.0.3.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Data.AppConfiguration.ConfigurationSetting&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="label" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="key">The primary identifier of the configuration setting to retrieve.</param>
        <param name="label">A label used to group this configuration setting with others.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Retrieve an existing <see cref="T:Azure.Data.AppConfiguration.ConfigurationSetting" />, uniquely identified by key and label, from the configuration store.
            </summary>
        <returns>A response containing the retrieved <see cref="T:Azure.Data.AppConfiguration.ConfigurationSetting" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConfigurationSettingAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; GetConfigurationSettingAsync (string key, string label, string acceptDatetime, System.Collections.Generic.IEnumerable&lt;string&gt; select, Azure.MatchConditions matchConditions, Azure.RequestContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; GetConfigurationSettingAsync(string key, string label, string acceptDatetime, class System.Collections.Generic.IEnumerable`1&lt;string&gt; select, class Azure.MatchConditions matchConditions, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Data.AppConfiguration.ConfigurationClient.GetConfigurationSettingAsync(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},Azure.MatchConditions,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetConfigurationSettingAsync (key As String, label As String, acceptDatetime As String, select As IEnumerable(Of String), matchConditions As MatchConditions, context As RequestContext) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member GetConfigurationSettingAsync : string * string * string * seq&lt;string&gt; * Azure.MatchConditions * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.GetConfigurationSettingAsync : string * string * string * seq&lt;string&gt; * Azure.MatchConditions * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="configurationClient.GetConfigurationSettingAsync (key, label, acceptDatetime, select, matchConditions, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Data.AppConfiguration</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="label" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="acceptDatetime" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="select" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" Index="3" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="matchConditions" Type="Azure.MatchConditions" Index="4" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="context" Type="Azure.RequestContext" Index="5" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="key"> The key of the key-value to retrieve. </param>
        <param name="label"> The label of the key-value to retrieve. </param>
        <param name="acceptDatetime"> Requests the server to respond with the state of the resource at the specified time. </param>
        <param name="select"> Used to select what fields are present in the returned resource(s). </param>
        <param name="matchConditions"> The content to send as the request conditions of the request. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Gets a single key-value. </summary>
        <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        <remarks>
             Below is the JSON schema for the response payload.
            
             Response Body:
            
             Schema for <c>KeyValue</c>:
             <code>{
               key: string, # Optional.
               label: string, # Optional.
               content_type: string, # Optional.
               value: string, # Optional.
               last_modified: string (ISO 8601 Format), # Optional.
               tags: Dictionary&lt;string, string&gt;, # Optional. Dictionary of &lt;string&gt;
               locked: boolean, # Optional.
               etag: string, # Optional.
             }
             </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="key" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
        <example>
             This sample shows how to call GetConfigurationSettingAsync with required parameters and parse the result.
             <code><![CDATA[
             var endpoint = new Uri("<https://my-service.azure.com>");
             var client = new ConfigurationClient(endpoint);
            
             Response response = await client.GetConfigurationSettingAsync("<key>");
            
             JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
             Console.WriteLine(result.ToString());
             ]]></code>
             This sample shows how to call GetConfigurationSettingAsync with all parameters, and how to parse the result.
             <code><![CDATA[
             var endpoint = new Uri("<https://my-service.azure.com>");
             var client = new ConfigurationClient(endpoint);
            
             Response response = await client.GetConfigurationSettingAsync("<key>", "<label>", "<acceptDatetime>", new String[]{"<select>"}, new MatchConditions { IfMatch = "<YOUR_ETAG>" });
            
             JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
             Console.WriteLine(result.GetProperty("key").ToString());
             Console.WriteLine(result.GetProperty("label").ToString());
             Console.WriteLine(result.GetProperty("content_type").ToString());
             Console.WriteLine(result.GetProperty("value").ToString());
             Console.WriteLine(result.GetProperty("last_modified").ToString());
             Console.WriteLine(result.GetProperty("tags").GetProperty("<test>").ToString());
             Console.WriteLine(result.GetProperty("locked").ToString());
             Console.WriteLine(result.GetProperty("etag").ToString());
             ]]></code></example>
      </Docs>
    </Member>
    <Member MemberName="GetConfigurationSettings">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.Data.AppConfiguration.ConfigurationSetting&gt; GetConfigurationSettings (Azure.Data.AppConfiguration.SettingSelector selector, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.Data.AppConfiguration.ConfigurationSetting&gt; GetConfigurationSettings(class Azure.Data.AppConfiguration.SettingSelector selector, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Data.AppConfiguration.ConfigurationClient.GetConfigurationSettings(Azure.Data.AppConfiguration.SettingSelector,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetConfigurationSettings (selector As SettingSelector, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ConfigurationSetting)" />
      <MemberSignature Language="F#" Value="abstract member GetConfigurationSettings : Azure.Data.AppConfiguration.SettingSelector * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.Data.AppConfiguration.ConfigurationSetting&gt;&#xA;override this.GetConfigurationSettings : Azure.Data.AppConfiguration.SettingSelector * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.Data.AppConfiguration.ConfigurationSetting&gt;" Usage="configurationClient.GetConfigurationSettings (selector, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Data.AppConfiguration</AssemblyName>
        <AssemblyVersion>1.0.2.0</AssemblyVersion>
        <AssemblyVersion>1.0.3.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.Data.AppConfiguration.ConfigurationSetting&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selector" Type="Azure.Data.AppConfiguration.SettingSelector" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="selector">Set of options for selecting <see cref="T:Azure.Data.AppConfiguration.ConfigurationSetting" /> from the configuration store.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Retrieves one or more <see cref="T:Azure.Data.AppConfiguration.ConfigurationSetting" /> entities that match the options specified in the passed-in <see cref="T:Azure.Data.AppConfiguration.SettingSelector" />.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConfigurationSettings">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;BinaryData&gt; GetConfigurationSettings (string key = default, string label = default, string after = default, string acceptDatetime = default, System.Collections.Generic.IEnumerable&lt;string&gt; select = default, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class System.BinaryData&gt; GetConfigurationSettings(string key, string label, string after, string acceptDatetime, class System.Collections.Generic.IEnumerable`1&lt;string&gt; select, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Data.AppConfiguration.ConfigurationClient.GetConfigurationSettings(System.String,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetConfigurationSettings (Optional key As String = Nothing, Optional label As String = Nothing, Optional after As String = Nothing, Optional acceptDatetime As String = Nothing, Optional select As IEnumerable(Of String) = Nothing, Optional context As RequestContext = Nothing) As Pageable(Of BinaryData)" />
      <MemberSignature Language="F#" Value="abstract member GetConfigurationSettings : string * string * string * string * seq&lt;string&gt; * Azure.RequestContext -&gt; Azure.Pageable&lt;BinaryData&gt;&#xA;override this.GetConfigurationSettings : string * string * string * string * seq&lt;string&gt; * Azure.RequestContext -&gt; Azure.Pageable&lt;BinaryData&gt;" Usage="configurationClient.GetConfigurationSettings (key, label, after, acceptDatetime, select, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Data.AppConfiguration</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;System.BinaryData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="label" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="after" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="acceptDatetime" Type="System.String" Index="3" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="select" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" Index="4" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="context" Type="Azure.RequestContext" Index="5" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="key"> A filter used to match keys. </param>
        <param name="label"> A filter used to match labels. </param>
        <param name="after"> Instructs the server to return elements that appear after the element referred to by the specified token. </param>
        <param name="acceptDatetime"> Requests the server to respond with the state of the resource at the specified time. </param>
        <param name="select"> Used to select what fields are present in the returned resource(s). </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Gets a list of key-values. </summary>
        <returns> The <see cref="T:Azure.Pageable`1" /> from the service containing a list of <see cref="T:System.BinaryData" /> objects. Details of the body schema for each item in the collection are in the Remarks section below. </returns>
        <remarks>
            Below is the JSON schema for one item in the pageable response.
            
            Response Body:
            
            Schema for <c>KeyValueListResultItems</c>:
            <code>{
              key: string, # Optional.
              label: string, # Optional.
              content_type: string, # Optional.
              value: string, # Optional.
              last_modified: string (ISO 8601 Format), # Optional.
              tags: Dictionary&lt;string, string&gt;, # Optional. Dictionary of &lt;string&gt;
              locked: boolean, # Optional.
              etag: string, # Optional.
            }
            </code></remarks>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
        <example>
            This sample shows how to call GetConfigurationSettings and parse the result.
            <code><![CDATA[
            var endpoint = new Uri("<https://my-service.azure.com>");
            var client = new ConfigurationClient(endpoint);
            
            foreach (var data in client.GetConfigurationSettings())
            {
                JsonElement result = JsonDocument.Parse(data.ToStream()).RootElement;
                Console.WriteLine(result.ToString());
            }
            ]]></code>
            This sample shows how to call GetConfigurationSettings with all parameters, and how to parse the result.
            <code><![CDATA[
            var endpoint = new Uri("<https://my-service.azure.com>");
            var client = new ConfigurationClient(endpoint);
            
            foreach (var data in client.GetConfigurationSettings("<key>", "<label>", "<after>", "<acceptDatetime>", new String[]{"<select>"}))
            {
                JsonElement result = JsonDocument.Parse(data.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("key").ToString());
                Console.WriteLine(result.GetProperty("label").ToString());
                Console.WriteLine(result.GetProperty("content_type").ToString());
                Console.WriteLine(result.GetProperty("value").ToString());
                Console.WriteLine(result.GetProperty("last_modified").ToString());
                Console.WriteLine(result.GetProperty("tags").GetProperty("<test>").ToString());
                Console.WriteLine(result.GetProperty("locked").ToString());
                Console.WriteLine(result.GetProperty("etag").ToString());
            }
            ]]></code></example>
      </Docs>
    </Member>
    <Member MemberName="GetConfigurationSettingsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.Data.AppConfiguration.ConfigurationSetting&gt; GetConfigurationSettingsAsync (Azure.Data.AppConfiguration.SettingSelector selector, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.Data.AppConfiguration.ConfigurationSetting&gt; GetConfigurationSettingsAsync(class Azure.Data.AppConfiguration.SettingSelector selector, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Data.AppConfiguration.ConfigurationClient.GetConfigurationSettingsAsync(Azure.Data.AppConfiguration.SettingSelector,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetConfigurationSettingsAsync (selector As SettingSelector, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ConfigurationSetting)" />
      <MemberSignature Language="F#" Value="abstract member GetConfigurationSettingsAsync : Azure.Data.AppConfiguration.SettingSelector * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.Data.AppConfiguration.ConfigurationSetting&gt;&#xA;override this.GetConfigurationSettingsAsync : Azure.Data.AppConfiguration.SettingSelector * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.Data.AppConfiguration.ConfigurationSetting&gt;" Usage="configurationClient.GetConfigurationSettingsAsync (selector, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Data.AppConfiguration</AssemblyName>
        <AssemblyVersion>1.0.2.0</AssemblyVersion>
        <AssemblyVersion>1.0.3.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.Data.AppConfiguration.ConfigurationSetting&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selector" Type="Azure.Data.AppConfiguration.SettingSelector" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="selector">Options used to select a set of <see cref="T:Azure.Data.AppConfiguration.ConfigurationSetting" /> entities from the configuration store.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Retrieves one or more <see cref="T:Azure.Data.AppConfiguration.ConfigurationSetting" /> entities that match the options specified in the passed-in <see cref="T:Azure.Data.AppConfiguration.SettingSelector" />.
            </summary>
        <returns>An enumerable collection containing the retrieved <see cref="T:Azure.Data.AppConfiguration.ConfigurationSetting" /> entities.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConfigurationSettingsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;BinaryData&gt; GetConfigurationSettingsAsync (string key = default, string label = default, string after = default, string acceptDatetime = default, System.Collections.Generic.IEnumerable&lt;string&gt; select = default, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class System.BinaryData&gt; GetConfigurationSettingsAsync(string key, string label, string after, string acceptDatetime, class System.Collections.Generic.IEnumerable`1&lt;string&gt; select, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Data.AppConfiguration.ConfigurationClient.GetConfigurationSettingsAsync(System.String,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetConfigurationSettingsAsync (Optional key As String = Nothing, Optional label As String = Nothing, Optional after As String = Nothing, Optional acceptDatetime As String = Nothing, Optional select As IEnumerable(Of String) = Nothing, Optional context As RequestContext = Nothing) As AsyncPageable(Of BinaryData)" />
      <MemberSignature Language="F#" Value="abstract member GetConfigurationSettingsAsync : string * string * string * string * seq&lt;string&gt; * Azure.RequestContext -&gt; Azure.AsyncPageable&lt;BinaryData&gt;&#xA;override this.GetConfigurationSettingsAsync : string * string * string * string * seq&lt;string&gt; * Azure.RequestContext -&gt; Azure.AsyncPageable&lt;BinaryData&gt;" Usage="configurationClient.GetConfigurationSettingsAsync (key, label, after, acceptDatetime, select, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Data.AppConfiguration</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;System.BinaryData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="label" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="after" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="acceptDatetime" Type="System.String" Index="3" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="select" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" Index="4" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="context" Type="Azure.RequestContext" Index="5" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="key"> A filter used to match keys. </param>
        <param name="label"> A filter used to match labels. </param>
        <param name="after"> Instructs the server to return elements that appear after the element referred to by the specified token. </param>
        <param name="acceptDatetime"> Requests the server to respond with the state of the resource at the specified time. </param>
        <param name="select"> Used to select what fields are present in the returned resource(s). </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Gets a list of key-values. </summary>
        <returns> The <see cref="T:Azure.AsyncPageable`1" /> from the service containing a list of <see cref="T:System.BinaryData" /> objects. Details of the body schema for each item in the collection are in the Remarks section below. </returns>
        <remarks>
            Below is the JSON schema for one item in the pageable response.
            
            Response Body:
            
            Schema for <c>KeyValueListResultItems</c>:
            <code>{
              key: string, # Optional.
              label: string, # Optional.
              content_type: string, # Optional.
              value: string, # Optional.
              last_modified: string (ISO 8601 Format), # Optional.
              tags: Dictionary&lt;string, string&gt;, # Optional. Dictionary of &lt;string&gt;
              locked: boolean, # Optional.
              etag: string, # Optional.
            }
            </code></remarks>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
        <example>
            This sample shows how to call GetConfigurationSettingsAsync and parse the result.
            <code><![CDATA[
            var endpoint = new Uri("<https://my-service.azure.com>");
            var client = new ConfigurationClient(endpoint);
            
            await foreach (var data in client.GetConfigurationSettingsAsync())
            {
                JsonElement result = JsonDocument.Parse(data.ToStream()).RootElement;
                Console.WriteLine(result.ToString());
            }
            ]]></code>
            This sample shows how to call GetConfigurationSettingsAsync with all parameters, and how to parse the result.
            <code><![CDATA[
            var endpoint = new Uri("<https://my-service.azure.com>");
            var client = new ConfigurationClient(endpoint);
            
            await foreach (var data in client.GetConfigurationSettingsAsync("<key>", "<label>", "<after>", "<acceptDatetime>", new String[]{"<select>"}))
            {
                JsonElement result = JsonDocument.Parse(data.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("key").ToString());
                Console.WriteLine(result.GetProperty("label").ToString());
                Console.WriteLine(result.GetProperty("content_type").ToString());
                Console.WriteLine(result.GetProperty("value").ToString());
                Console.WriteLine(result.GetProperty("last_modified").ToString());
                Console.WriteLine(result.GetProperty("tags").GetProperty("<test>").ToString());
                Console.WriteLine(result.GetProperty("locked").ToString());
                Console.WriteLine(result.GetProperty("etag").ToString());
            }
            ]]></code></example>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Data.AppConfiguration.ConfigurationClient.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="configurationClient.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Data.AppConfiguration</AssemblyName>
        <AssemblyVersion>1.0.2.0</AssemblyVersion>
        <AssemblyVersion>1.0.3.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Get a hash code for the ConfigurationSetting.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetKeys">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;BinaryData&gt; GetKeys (string name = default, string after = default, string acceptDatetime = default, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class System.BinaryData&gt; GetKeys(string name, string after, string acceptDatetime, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Data.AppConfiguration.ConfigurationClient.GetKeys(System.String,System.String,System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetKeys (Optional name As String = Nothing, Optional after As String = Nothing, Optional acceptDatetime As String = Nothing, Optional context As RequestContext = Nothing) As Pageable(Of BinaryData)" />
      <MemberSignature Language="F#" Value="abstract member GetKeys : string * string * string * Azure.RequestContext -&gt; Azure.Pageable&lt;BinaryData&gt;&#xA;override this.GetKeys : string * string * string * Azure.RequestContext -&gt; Azure.Pageable&lt;BinaryData&gt;" Usage="configurationClient.GetKeys (name, after, acceptDatetime, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Data.AppConfiguration</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;System.BinaryData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="after" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="acceptDatetime" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="context" Type="Azure.RequestContext" Index="3" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="name"> A filter for the name of the returned keys. </param>
        <param name="after"> Instructs the server to return elements that appear after the element referred to by the specified token. </param>
        <param name="acceptDatetime"> Requests the server to respond with the state of the resource at the specified time. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Gets a list of keys. </summary>
        <returns> The <see cref="T:Azure.Pageable`1" /> from the service containing a list of <see cref="T:System.BinaryData" /> objects. Details of the body schema for each item in the collection are in the Remarks section below. </returns>
        <remarks>
            Below is the JSON schema for one item in the pageable response.
            
            Response Body:
            
            Schema for <c>KeyListResultItems</c>:
            <code>{
              name: string, # Optional.
            }
            </code></remarks>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
        <example>
            This sample shows how to call GetKeys and parse the result.
            <code><![CDATA[
            var endpoint = new Uri("<https://my-service.azure.com>");
            var client = new ConfigurationClient(endpoint);
            
            foreach (var data in client.GetKeys())
            {
                JsonElement result = JsonDocument.Parse(data.ToStream()).RootElement;
                Console.WriteLine(result.ToString());
            }
            ]]></code>
            This sample shows how to call GetKeys with all parameters, and how to parse the result.
            <code><![CDATA[
            var endpoint = new Uri("<https://my-service.azure.com>");
            var client = new ConfigurationClient(endpoint);
            
            foreach (var data in client.GetKeys("<name>", "<after>", "<acceptDatetime>"))
            {
                JsonElement result = JsonDocument.Parse(data.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("name").ToString());
            }
            ]]></code></example>
      </Docs>
    </Member>
    <Member MemberName="GetKeysAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;BinaryData&gt; GetKeysAsync (string name = default, string after = default, string acceptDatetime = default, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class System.BinaryData&gt; GetKeysAsync(string name, string after, string acceptDatetime, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Data.AppConfiguration.ConfigurationClient.GetKeysAsync(System.String,System.String,System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetKeysAsync (Optional name As String = Nothing, Optional after As String = Nothing, Optional acceptDatetime As String = Nothing, Optional context As RequestContext = Nothing) As AsyncPageable(Of BinaryData)" />
      <MemberSignature Language="F#" Value="abstract member GetKeysAsync : string * string * string * Azure.RequestContext -&gt; Azure.AsyncPageable&lt;BinaryData&gt;&#xA;override this.GetKeysAsync : string * string * string * Azure.RequestContext -&gt; Azure.AsyncPageable&lt;BinaryData&gt;" Usage="configurationClient.GetKeysAsync (name, after, acceptDatetime, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Data.AppConfiguration</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;System.BinaryData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="after" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="acceptDatetime" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="context" Type="Azure.RequestContext" Index="3" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="name"> A filter for the name of the returned keys. </param>
        <param name="after"> Instructs the server to return elements that appear after the element referred to by the specified token. </param>
        <param name="acceptDatetime"> Requests the server to respond with the state of the resource at the specified time. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Gets a list of keys. </summary>
        <returns> The <see cref="T:Azure.AsyncPageable`1" /> from the service containing a list of <see cref="T:System.BinaryData" /> objects. Details of the body schema for each item in the collection are in the Remarks section below. </returns>
        <remarks>
            Below is the JSON schema for one item in the pageable response.
            
            Response Body:
            
            Schema for <c>KeyListResultItems</c>:
            <code>{
              name: string, # Optional.
            }
            </code></remarks>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
        <example>
            This sample shows how to call GetKeysAsync and parse the result.
            <code><![CDATA[
            var endpoint = new Uri("<https://my-service.azure.com>");
            var client = new ConfigurationClient(endpoint);
            
            await foreach (var data in client.GetKeysAsync())
            {
                JsonElement result = JsonDocument.Parse(data.ToStream()).RootElement;
                Console.WriteLine(result.ToString());
            }
            ]]></code>
            This sample shows how to call GetKeysAsync with all parameters, and how to parse the result.
            <code><![CDATA[
            var endpoint = new Uri("<https://my-service.azure.com>");
            var client = new ConfigurationClient(endpoint);
            
            await foreach (var data in client.GetKeysAsync("<name>", "<after>", "<acceptDatetime>"))
            {
                JsonElement result = JsonDocument.Parse(data.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("name").ToString());
            }
            ]]></code></example>
      </Docs>
    </Member>
    <Member MemberName="GetLabels">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;BinaryData&gt; GetLabels (string name = default, string after = default, string acceptDatetime = default, System.Collections.Generic.IEnumerable&lt;string&gt; select = default, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class System.BinaryData&gt; GetLabels(string name, string after, string acceptDatetime, class System.Collections.Generic.IEnumerable`1&lt;string&gt; select, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Data.AppConfiguration.ConfigurationClient.GetLabels(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLabels (Optional name As String = Nothing, Optional after As String = Nothing, Optional acceptDatetime As String = Nothing, Optional select As IEnumerable(Of String) = Nothing, Optional context As RequestContext = Nothing) As Pageable(Of BinaryData)" />
      <MemberSignature Language="F#" Value="abstract member GetLabels : string * string * string * seq&lt;string&gt; * Azure.RequestContext -&gt; Azure.Pageable&lt;BinaryData&gt;&#xA;override this.GetLabels : string * string * string * seq&lt;string&gt; * Azure.RequestContext -&gt; Azure.Pageable&lt;BinaryData&gt;" Usage="configurationClient.GetLabels (name, after, acceptDatetime, select, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Data.AppConfiguration</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;System.BinaryData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="after" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="acceptDatetime" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="select" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" Index="3" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="context" Type="Azure.RequestContext" Index="4" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="name"> A filter for the name of the returned labels. </param>
        <param name="after"> Instructs the server to return elements that appear after the element referred to by the specified token. </param>
        <param name="acceptDatetime"> Requests the server to respond with the state of the resource at the specified time. </param>
        <param name="select"> Used to select what fields are present in the returned resource(s). </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Gets a list of labels. </summary>
        <returns> The <see cref="T:Azure.Pageable`1" /> from the service containing a list of <see cref="T:System.BinaryData" /> objects. Details of the body schema for each item in the collection are in the Remarks section below. </returns>
        <remarks>
            Below is the JSON schema for one item in the pageable response.
            
            Response Body:
            
            Schema for <c>LabelListResultItems</c>:
            <code>{
              name: string, # Optional.
            }
            </code></remarks>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
        <example>
            This sample shows how to call GetLabels and parse the result.
            <code><![CDATA[
            var endpoint = new Uri("<https://my-service.azure.com>");
            var client = new ConfigurationClient(endpoint);
            
            foreach (var data in client.GetLabels())
            {
                JsonElement result = JsonDocument.Parse(data.ToStream()).RootElement;
                Console.WriteLine(result.ToString());
            }
            ]]></code>
            This sample shows how to call GetLabels with all parameters, and how to parse the result.
            <code><![CDATA[
            var endpoint = new Uri("<https://my-service.azure.com>");
            var client = new ConfigurationClient(endpoint);
            
            foreach (var data in client.GetLabels("<name>", "<after>", "<acceptDatetime>", new String[]{"<select>"}))
            {
                JsonElement result = JsonDocument.Parse(data.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("name").ToString());
            }
            ]]></code></example>
      </Docs>
    </Member>
    <Member MemberName="GetLabelsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;BinaryData&gt; GetLabelsAsync (string name = default, string after = default, string acceptDatetime = default, System.Collections.Generic.IEnumerable&lt;string&gt; select = default, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class System.BinaryData&gt; GetLabelsAsync(string name, string after, string acceptDatetime, class System.Collections.Generic.IEnumerable`1&lt;string&gt; select, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Data.AppConfiguration.ConfigurationClient.GetLabelsAsync(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLabelsAsync (Optional name As String = Nothing, Optional after As String = Nothing, Optional acceptDatetime As String = Nothing, Optional select As IEnumerable(Of String) = Nothing, Optional context As RequestContext = Nothing) As AsyncPageable(Of BinaryData)" />
      <MemberSignature Language="F#" Value="abstract member GetLabelsAsync : string * string * string * seq&lt;string&gt; * Azure.RequestContext -&gt; Azure.AsyncPageable&lt;BinaryData&gt;&#xA;override this.GetLabelsAsync : string * string * string * seq&lt;string&gt; * Azure.RequestContext -&gt; Azure.AsyncPageable&lt;BinaryData&gt;" Usage="configurationClient.GetLabelsAsync (name, after, acceptDatetime, select, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Data.AppConfiguration</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;System.BinaryData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="after" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="acceptDatetime" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="select" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" Index="3" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="context" Type="Azure.RequestContext" Index="4" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="name"> A filter for the name of the returned labels. </param>
        <param name="after"> Instructs the server to return elements that appear after the element referred to by the specified token. </param>
        <param name="acceptDatetime"> Requests the server to respond with the state of the resource at the specified time. </param>
        <param name="select"> Used to select what fields are present in the returned resource(s). </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Gets a list of labels. </summary>
        <returns> The <see cref="T:Azure.AsyncPageable`1" /> from the service containing a list of <see cref="T:System.BinaryData" /> objects. Details of the body schema for each item in the collection are in the Remarks section below. </returns>
        <remarks>
            Below is the JSON schema for one item in the pageable response.
            
            Response Body:
            
            Schema for <c>LabelListResultItems</c>:
            <code>{
              name: string, # Optional.
            }
            </code></remarks>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
        <example>
            This sample shows how to call GetLabelsAsync and parse the result.
            <code><![CDATA[
            var endpoint = new Uri("<https://my-service.azure.com>");
            var client = new ConfigurationClient(endpoint);
            
            await foreach (var data in client.GetLabelsAsync())
            {
                JsonElement result = JsonDocument.Parse(data.ToStream()).RootElement;
                Console.WriteLine(result.ToString());
            }
            ]]></code>
            This sample shows how to call GetLabelsAsync with all parameters, and how to parse the result.
            <code><![CDATA[
            var endpoint = new Uri("<https://my-service.azure.com>");
            var client = new ConfigurationClient(endpoint);
            
            await foreach (var data in client.GetLabelsAsync("<name>", "<after>", "<acceptDatetime>", new String[]{"<select>"}))
            {
                JsonElement result = JsonDocument.Parse(data.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("name").ToString());
            }
            ]]></code></example>
      </Docs>
    </Member>
    <Member MemberName="GetRevisions">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.Data.AppConfiguration.ConfigurationSetting&gt; GetRevisions (Azure.Data.AppConfiguration.SettingSelector selector, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.Data.AppConfiguration.ConfigurationSetting&gt; GetRevisions(class Azure.Data.AppConfiguration.SettingSelector selector, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Data.AppConfiguration.ConfigurationClient.GetRevisions(Azure.Data.AppConfiguration.SettingSelector,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRevisions (selector As SettingSelector, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ConfigurationSetting)" />
      <MemberSignature Language="F#" Value="abstract member GetRevisions : Azure.Data.AppConfiguration.SettingSelector * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.Data.AppConfiguration.ConfigurationSetting&gt;&#xA;override this.GetRevisions : Azure.Data.AppConfiguration.SettingSelector * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.Data.AppConfiguration.ConfigurationSetting&gt;" Usage="configurationClient.GetRevisions (selector, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Data.AppConfiguration</AssemblyName>
        <AssemblyVersion>1.0.2.0</AssemblyVersion>
        <AssemblyVersion>1.0.3.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.Data.AppConfiguration.ConfigurationSetting&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selector" Type="Azure.Data.AppConfiguration.SettingSelector" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="selector">Set of options for selecting <see cref="T:Azure.Data.AppConfiguration.ConfigurationSetting" /> from the configuration store.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Retrieves the revisions of one or more <see cref="T:Azure.Data.AppConfiguration.ConfigurationSetting" /> entities that satisfy the options of the <see cref="T:Azure.Data.AppConfiguration.SettingSelector" />.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRevisions">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.Data.AppConfiguration.ConfigurationSetting&gt; GetRevisions (string keyFilter, string labelFilter = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.Data.AppConfiguration.ConfigurationSetting&gt; GetRevisions(string keyFilter, string labelFilter, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Data.AppConfiguration.ConfigurationClient.GetRevisions(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRevisions (keyFilter As String, Optional labelFilter As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ConfigurationSetting)" />
      <MemberSignature Language="F#" Value="abstract member GetRevisions : string * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.Data.AppConfiguration.ConfigurationSetting&gt;&#xA;override this.GetRevisions : string * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.Data.AppConfiguration.ConfigurationSetting&gt;" Usage="configurationClient.GetRevisions (keyFilter, labelFilter, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Data.AppConfiguration</AssemblyName>
        <AssemblyVersion>1.0.2.0</AssemblyVersion>
        <AssemblyVersion>1.0.3.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.Data.AppConfiguration.ConfigurationSetting&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyFilter" Type="System.String" />
        <Parameter Name="labelFilter" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="keyFilter">Key filter that will be used to select a set of <see cref="T:Azure.Data.AppConfiguration.ConfigurationSetting" /> entities.</param>
        <param name="labelFilter">Label filter that will be used to select a set of <see cref="T:Azure.Data.AppConfiguration.ConfigurationSetting" /> entities.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Retrieves the revisions of one or more <see cref="T:Azure.Data.AppConfiguration.ConfigurationSetting" /> entities that match the specified <paramref name="keyFilter" /> and <paramref name="labelFilter" />.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRevisions">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;BinaryData&gt; GetRevisions (string key = default, string label = default, string after = default, string acceptDatetime = default, System.Collections.Generic.IEnumerable&lt;string&gt; select = default, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class System.BinaryData&gt; GetRevisions(string key, string label, string after, string acceptDatetime, class System.Collections.Generic.IEnumerable`1&lt;string&gt; select, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Data.AppConfiguration.ConfigurationClient.GetRevisions(System.String,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRevisions (Optional key As String = Nothing, Optional label As String = Nothing, Optional after As String = Nothing, Optional acceptDatetime As String = Nothing, Optional select As IEnumerable(Of String) = Nothing, Optional context As RequestContext = Nothing) As Pageable(Of BinaryData)" />
      <MemberSignature Language="F#" Value="abstract member GetRevisions : string * string * string * string * seq&lt;string&gt; * Azure.RequestContext -&gt; Azure.Pageable&lt;BinaryData&gt;&#xA;override this.GetRevisions : string * string * string * string * seq&lt;string&gt; * Azure.RequestContext -&gt; Azure.Pageable&lt;BinaryData&gt;" Usage="configurationClient.GetRevisions (key, label, after, acceptDatetime, select, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Data.AppConfiguration</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;System.BinaryData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="label" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="after" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="acceptDatetime" Type="System.String" Index="3" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="select" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" Index="4" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="context" Type="Azure.RequestContext" Index="5" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="key"> A filter used to match keys. </param>
        <param name="label"> A filter used to match labels. </param>
        <param name="after"> Instructs the server to return elements that appear after the element referred to by the specified token. </param>
        <param name="acceptDatetime"> Requests the server to respond with the state of the resource at the specified time. </param>
        <param name="select"> Used to select what fields are present in the returned resource(s). </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Gets a list of key-value revisions. </summary>
        <returns> The <see cref="T:Azure.Pageable`1" /> from the service containing a list of <see cref="T:System.BinaryData" /> objects. Details of the body schema for each item in the collection are in the Remarks section below. </returns>
        <remarks>
            Below is the JSON schema for one item in the pageable response.
            
            Response Body:
            
            Schema for <c>KeyValueListResultItems</c>:
            <code>{
              key: string, # Optional.
              label: string, # Optional.
              content_type: string, # Optional.
              value: string, # Optional.
              last_modified: string (ISO 8601 Format), # Optional.
              tags: Dictionary&lt;string, string&gt;, # Optional. Dictionary of &lt;string&gt;
              locked: boolean, # Optional.
              etag: string, # Optional.
            }
            </code></remarks>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
        <example>
            This sample shows how to call GetRevisions and parse the result.
            <code><![CDATA[
            var endpoint = new Uri("<https://my-service.azure.com>");
            var client = new ConfigurationClient(endpoint);
            
            foreach (var data in client.GetRevisions())
            {
                JsonElement result = JsonDocument.Parse(data.ToStream()).RootElement;
                Console.WriteLine(result.ToString());
            }
            ]]></code>
            This sample shows how to call GetRevisions with all parameters, and how to parse the result.
            <code><![CDATA[
            var endpoint = new Uri("<https://my-service.azure.com>");
            var client = new ConfigurationClient(endpoint);
            
            foreach (var data in client.GetRevisions("<key>", "<label>", "<after>", "<acceptDatetime>", new String[]{"<select>"}))
            {
                JsonElement result = JsonDocument.Parse(data.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("key").ToString());
                Console.WriteLine(result.GetProperty("label").ToString());
                Console.WriteLine(result.GetProperty("content_type").ToString());
                Console.WriteLine(result.GetProperty("value").ToString());
                Console.WriteLine(result.GetProperty("last_modified").ToString());
                Console.WriteLine(result.GetProperty("tags").GetProperty("<test>").ToString());
                Console.WriteLine(result.GetProperty("locked").ToString());
                Console.WriteLine(result.GetProperty("etag").ToString());
            }
            ]]></code></example>
      </Docs>
    </Member>
    <Member MemberName="GetRevisionsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.Data.AppConfiguration.ConfigurationSetting&gt; GetRevisionsAsync (Azure.Data.AppConfiguration.SettingSelector selector, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.Data.AppConfiguration.ConfigurationSetting&gt; GetRevisionsAsync(class Azure.Data.AppConfiguration.SettingSelector selector, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Data.AppConfiguration.ConfigurationClient.GetRevisionsAsync(Azure.Data.AppConfiguration.SettingSelector,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRevisionsAsync (selector As SettingSelector, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ConfigurationSetting)" />
      <MemberSignature Language="F#" Value="abstract member GetRevisionsAsync : Azure.Data.AppConfiguration.SettingSelector * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.Data.AppConfiguration.ConfigurationSetting&gt;&#xA;override this.GetRevisionsAsync : Azure.Data.AppConfiguration.SettingSelector * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.Data.AppConfiguration.ConfigurationSetting&gt;" Usage="configurationClient.GetRevisionsAsync (selector, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Data.AppConfiguration</AssemblyName>
        <AssemblyVersion>1.0.2.0</AssemblyVersion>
        <AssemblyVersion>1.0.3.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.Data.AppConfiguration.ConfigurationSetting&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selector" Type="Azure.Data.AppConfiguration.SettingSelector" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="selector">Set of options for selecting <see cref="T:Azure.Data.AppConfiguration.ConfigurationSetting" /> from the configuration store.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Retrieves the revisions of one or more <see cref="T:Azure.Data.AppConfiguration.ConfigurationSetting" /> entities that satisfy the options of the <see cref="T:Azure.Data.AppConfiguration.SettingSelector" />.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRevisionsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.Data.AppConfiguration.ConfigurationSetting&gt; GetRevisionsAsync (string keyFilter, string labelFilter = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.Data.AppConfiguration.ConfigurationSetting&gt; GetRevisionsAsync(string keyFilter, string labelFilter, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Data.AppConfiguration.ConfigurationClient.GetRevisionsAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRevisionsAsync (keyFilter As String, Optional labelFilter As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ConfigurationSetting)" />
      <MemberSignature Language="F#" Value="abstract member GetRevisionsAsync : string * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.Data.AppConfiguration.ConfigurationSetting&gt;&#xA;override this.GetRevisionsAsync : string * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.Data.AppConfiguration.ConfigurationSetting&gt;" Usage="configurationClient.GetRevisionsAsync (keyFilter, labelFilter, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Data.AppConfiguration</AssemblyName>
        <AssemblyVersion>1.0.2.0</AssemblyVersion>
        <AssemblyVersion>1.0.3.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.Data.AppConfiguration.ConfigurationSetting&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyFilter" Type="System.String" />
        <Parameter Name="labelFilter" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="keyFilter">Key filter that will be used to select a set of <see cref="T:Azure.Data.AppConfiguration.ConfigurationSetting" /> entities.</param>
        <param name="labelFilter">Label filter that will be used to select a set of <see cref="T:Azure.Data.AppConfiguration.ConfigurationSetting" /> entities.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Retrieves the revisions of one or more <see cref="T:Azure.Data.AppConfiguration.ConfigurationSetting" /> entities that match the specified <paramref name="keyFilter" /> and <paramref name="labelFilter" />.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRevisionsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;BinaryData&gt; GetRevisionsAsync (string key = default, string label = default, string after = default, string acceptDatetime = default, System.Collections.Generic.IEnumerable&lt;string&gt; select = default, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class System.BinaryData&gt; GetRevisionsAsync(string key, string label, string after, string acceptDatetime, class System.Collections.Generic.IEnumerable`1&lt;string&gt; select, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Data.AppConfiguration.ConfigurationClient.GetRevisionsAsync(System.String,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRevisionsAsync (Optional key As String = Nothing, Optional label As String = Nothing, Optional after As String = Nothing, Optional acceptDatetime As String = Nothing, Optional select As IEnumerable(Of String) = Nothing, Optional context As RequestContext = Nothing) As AsyncPageable(Of BinaryData)" />
      <MemberSignature Language="F#" Value="abstract member GetRevisionsAsync : string * string * string * string * seq&lt;string&gt; * Azure.RequestContext -&gt; Azure.AsyncPageable&lt;BinaryData&gt;&#xA;override this.GetRevisionsAsync : string * string * string * string * seq&lt;string&gt; * Azure.RequestContext -&gt; Azure.AsyncPageable&lt;BinaryData&gt;" Usage="configurationClient.GetRevisionsAsync (key, label, after, acceptDatetime, select, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Data.AppConfiguration</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;System.BinaryData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="label" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="after" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="acceptDatetime" Type="System.String" Index="3" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="select" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" Index="4" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="context" Type="Azure.RequestContext" Index="5" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="key"> A filter used to match keys. </param>
        <param name="label"> A filter used to match labels. </param>
        <param name="after"> Instructs the server to return elements that appear after the element referred to by the specified token. </param>
        <param name="acceptDatetime"> Requests the server to respond with the state of the resource at the specified time. </param>
        <param name="select"> Used to select what fields are present in the returned resource(s). </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Gets a list of key-value revisions. </summary>
        <returns> The <see cref="T:Azure.AsyncPageable`1" /> from the service containing a list of <see cref="T:System.BinaryData" /> objects. Details of the body schema for each item in the collection are in the Remarks section below. </returns>
        <remarks>
            Below is the JSON schema for one item in the pageable response.
            
            Response Body:
            
            Schema for <c>KeyValueListResultItems</c>:
            <code>{
              key: string, # Optional.
              label: string, # Optional.
              content_type: string, # Optional.
              value: string, # Optional.
              last_modified: string (ISO 8601 Format), # Optional.
              tags: Dictionary&lt;string, string&gt;, # Optional. Dictionary of &lt;string&gt;
              locked: boolean, # Optional.
              etag: string, # Optional.
            }
            </code></remarks>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
        <example>
            This sample shows how to call GetRevisionsAsync and parse the result.
            <code><![CDATA[
            var endpoint = new Uri("<https://my-service.azure.com>");
            var client = new ConfigurationClient(endpoint);
            
            await foreach (var data in client.GetRevisionsAsync())
            {
                JsonElement result = JsonDocument.Parse(data.ToStream()).RootElement;
                Console.WriteLine(result.ToString());
            }
            ]]></code>
            This sample shows how to call GetRevisionsAsync with all parameters, and how to parse the result.
            <code><![CDATA[
            var endpoint = new Uri("<https://my-service.azure.com>");
            var client = new ConfigurationClient(endpoint);
            
            await foreach (var data in client.GetRevisionsAsync("<key>", "<label>", "<after>", "<acceptDatetime>", new String[]{"<select>"}))
            {
                JsonElement result = JsonDocument.Parse(data.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("key").ToString());
                Console.WriteLine(result.GetProperty("label").ToString());
                Console.WriteLine(result.GetProperty("content_type").ToString());
                Console.WriteLine(result.GetProperty("value").ToString());
                Console.WriteLine(result.GetProperty("last_modified").ToString());
                Console.WriteLine(result.GetProperty("tags").GetProperty("<test>").ToString());
                Console.WriteLine(result.GetProperty("locked").ToString());
                Console.WriteLine(result.GetProperty("etag").ToString());
            }
            ]]></code></example>
      </Docs>
    </Member>
    <Member MemberName="Pipeline">
      <MemberSignature Language="C#" Value="public virtual Azure.Core.Pipeline.HttpPipeline Pipeline { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Core.Pipeline.HttpPipeline Pipeline" />
      <MemberSignature Language="DocId" Value="P:Azure.Data.AppConfiguration.ConfigurationClient.Pipeline" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Pipeline As HttpPipeline" />
      <MemberSignature Language="F#" Value="member this.Pipeline : Azure.Core.Pipeline.HttpPipeline" Usage="Azure.Data.AppConfiguration.ConfigurationClient.Pipeline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Data.AppConfiguration</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.Pipeline.HttpPipeline</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The HTTP pipeline for sending and receiving REST requests and responses. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetConfigurationSetting">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Data.AppConfiguration.ConfigurationSetting&gt; SetConfigurationSetting (Azure.Data.AppConfiguration.ConfigurationSetting setting, bool onlyIfUnchanged = false, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Data.AppConfiguration.ConfigurationSetting&gt; SetConfigurationSetting(class Azure.Data.AppConfiguration.ConfigurationSetting setting, bool onlyIfUnchanged, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Data.AppConfiguration.ConfigurationClient.SetConfigurationSetting(Azure.Data.AppConfiguration.ConfigurationSetting,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetConfigurationSetting (setting As ConfigurationSetting, Optional onlyIfUnchanged As Boolean = false, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ConfigurationSetting)" />
      <MemberSignature Language="F#" Value="abstract member SetConfigurationSetting : Azure.Data.AppConfiguration.ConfigurationSetting * bool * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Data.AppConfiguration.ConfigurationSetting&gt;&#xA;override this.SetConfigurationSetting : Azure.Data.AppConfiguration.ConfigurationSetting * bool * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Data.AppConfiguration.ConfigurationSetting&gt;" Usage="configurationClient.SetConfigurationSetting (setting, onlyIfUnchanged, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Data.AppConfiguration</AssemblyName>
        <AssemblyVersion>1.0.2.0</AssemblyVersion>
        <AssemblyVersion>1.0.3.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Data.AppConfiguration.ConfigurationSetting&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="setting" Type="Azure.Data.AppConfiguration.ConfigurationSetting" />
        <Parameter Name="onlyIfUnchanged" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="setting">The <see cref="T:Azure.Data.AppConfiguration.ConfigurationSetting" /> to create.</param>
        <param name="onlyIfUnchanged">If set to true and the configuration setting exists in the configuration store, overwrite the setting
            if the passed-in <see cref="T:Azure.Data.AppConfiguration.ConfigurationSetting" /> is the same version as the one in the configuration store.  The setting versions
            are the same if their ETag fields match.  If the two settings are different versions, this method will throw an exception to indicate
            that the setting in the configuration store was modified since it was last obtained by the client.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Creates a <see cref="T:Azure.Data.AppConfiguration.ConfigurationSetting" /> if it doesn't exist or overwrites the existing setting in the configuration store.
            </summary>
        <returns>A response containing the <see cref="T:Azure.Data.AppConfiguration.ConfigurationSetting" /> written to the configuration store.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetConfigurationSetting">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Data.AppConfiguration.ConfigurationSetting&gt; SetConfigurationSetting (string key, string value, string label = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Data.AppConfiguration.ConfigurationSetting&gt; SetConfigurationSetting(string key, string value, string label, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Data.AppConfiguration.ConfigurationClient.SetConfigurationSetting(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetConfigurationSetting (key As String, value As String, Optional label As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ConfigurationSetting)" />
      <MemberSignature Language="F#" Value="abstract member SetConfigurationSetting : string * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Data.AppConfiguration.ConfigurationSetting&gt;&#xA;override this.SetConfigurationSetting : string * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Data.AppConfiguration.ConfigurationSetting&gt;" Usage="configurationClient.SetConfigurationSetting (key, value, label, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Data.AppConfiguration</AssemblyName>
        <AssemblyVersion>1.0.2.0</AssemblyVersion>
        <AssemblyVersion>1.0.3.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Data.AppConfiguration.ConfigurationSetting&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="label" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="key">The primary identifier of the configuration setting.</param>
        <param name="value">The configuration setting's value.</param>
        <param name="label">A label used to group this configuration setting with others.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Creates a <see cref="T:Azure.Data.AppConfiguration.ConfigurationSetting" />, uniquely identified by key and label, if it doesn't exist or overwrites the existing setting in the configuration store.
            </summary>
        <returns>A response containing the <see cref="T:Azure.Data.AppConfiguration.ConfigurationSetting" /> written to the configuration store.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetConfigurationSetting">
      <MemberSignature Language="C#" Value="public virtual Azure.Response SetConfigurationSetting (string key, Azure.Core.RequestContent content, Azure.Core.ContentType contentType, string label = default, Azure.MatchConditions matchConditions = default, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response SetConfigurationSetting(string key, class Azure.Core.RequestContent content, valuetype Azure.Core.ContentType contentType, string label, class Azure.MatchConditions matchConditions, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Data.AppConfiguration.ConfigurationClient.SetConfigurationSetting(System.String,Azure.Core.RequestContent,Azure.Core.ContentType,System.String,Azure.MatchConditions,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetConfigurationSetting (key As String, content As RequestContent, contentType As ContentType, Optional label As String = Nothing, Optional matchConditions As MatchConditions = Nothing, Optional context As RequestContext = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member SetConfigurationSetting : string * Azure.Core.RequestContent * Azure.Core.ContentType * string * Azure.MatchConditions * Azure.RequestContext -&gt; Azure.Response&#xA;override this.SetConfigurationSetting : string * Azure.Core.RequestContent * Azure.Core.ContentType * string * Azure.MatchConditions * Azure.RequestContext -&gt; Azure.Response" Usage="configurationClient.SetConfigurationSetting (key, content, contentType, label, matchConditions, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Data.AppConfiguration</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="content" Type="Azure.Core.RequestContent" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="contentType" Type="Azure.Core.ContentType" Index="2" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="label" Type="System.String" Index="3" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="matchConditions" Type="Azure.MatchConditions" Index="4" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="context" Type="Azure.RequestContext" Index="5" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="key"> The key of the key-value to create. </param>
        <param name="content"> The content to send as the body of the request. Details of the request body schema are in the Remarks section below. </param>
        <param name="contentType"> Body Parameter content-type. Allowed values: "application/*+json" | "application/json" | "application/json-patch+json" | "application/vnd.microsoft.appconfig.kv+json" | "application/vnd.microsoft.appconfig.kvset+json" | "text/json". </param>
        <param name="label"> The label of the key-value to create. </param>
        <param name="matchConditions"> The content to send as the request conditions of the request. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Creates a key-value. </summary>
        <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        <remarks>
            Below is the JSON schema for the request and response payloads.
            
            Request Body:
            
            Schema for <c>KeyValue</c>:
            <code>{
              key: string, # Optional.
              label: string, # Optional.
              content_type: string, # Optional.
              value: string, # Optional.
              last_modified: string (ISO 8601 Format), # Optional.
              tags: Dictionary&lt;string, string&gt;, # Optional. Dictionary of &lt;string&gt;
              locked: boolean, # Optional.
              etag: string, # Optional.
            }
            </code>
            
            Response Body:
            
            Schema for <c>KeyValue</c>:
            <code>{
              key: string, # Optional.
              label: string, # Optional.
              content_type: string, # Optional.
              value: string, # Optional.
              last_modified: string (ISO 8601 Format), # Optional.
              tags: Dictionary&lt;string, string&gt;, # Optional. Dictionary of &lt;string&gt;
              locked: boolean, # Optional.
              etag: string, # Optional.
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="key" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
        <example>
            This sample shows how to call SetConfigurationSetting with required parameters and parse the result.
            <code><![CDATA[
            var endpoint = new Uri("<https://my-service.azure.com>");
            var client = new ConfigurationClient(endpoint);
            
            var data = new {};
            
            Response response = client.SetConfigurationSetting("<key>", RequestContent.Create(data), ContentType.ApplicationOctetStream);
            
            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
            ]]></code>
            This sample shows how to call SetConfigurationSetting with all parameters and request content, and how to parse the result.
            <code><![CDATA[
            var endpoint = new Uri("<https://my-service.azure.com>");
            var client = new ConfigurationClient(endpoint);
            
            var data = new {
                key = "<key>",
                label = "<label>",
                content_type = "<content_type>",
                value = "<value>",
                last_modified = "2022-05-10T18:57:31.2311892Z",
                tags = new {
                    key = "<String>",
                },
                locked = true,
                etag = "<etag>",
            };
            
            Response response = client.SetConfigurationSetting("<key>", RequestContent.Create(data), ContentType.ApplicationOctetStream, "<label>", new MatchConditions { IfMatch = "<YOUR_ETAG>" });
            
            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("key").ToString());
            Console.WriteLine(result.GetProperty("label").ToString());
            Console.WriteLine(result.GetProperty("content_type").ToString());
            Console.WriteLine(result.GetProperty("value").ToString());
            Console.WriteLine(result.GetProperty("last_modified").ToString());
            Console.WriteLine(result.GetProperty("tags").GetProperty("<test>").ToString());
            Console.WriteLine(result.GetProperty("locked").ToString());
            Console.WriteLine(result.GetProperty("etag").ToString());
            ]]></code></example>
      </Docs>
    </Member>
    <Member MemberName="SetConfigurationSettingAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Data.AppConfiguration.ConfigurationSetting&gt;&gt; SetConfigurationSettingAsync (Azure.Data.AppConfiguration.ConfigurationSetting setting, bool onlyIfUnchanged = false, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Data.AppConfiguration.ConfigurationSetting&gt;&gt; SetConfigurationSettingAsync(class Azure.Data.AppConfiguration.ConfigurationSetting setting, bool onlyIfUnchanged, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Data.AppConfiguration.ConfigurationClient.SetConfigurationSettingAsync(Azure.Data.AppConfiguration.ConfigurationSetting,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetConfigurationSettingAsync (setting As ConfigurationSetting, Optional onlyIfUnchanged As Boolean = false, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ConfigurationSetting))" />
      <MemberSignature Language="F#" Value="abstract member SetConfigurationSettingAsync : Azure.Data.AppConfiguration.ConfigurationSetting * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Data.AppConfiguration.ConfigurationSetting&gt;&gt;&#xA;override this.SetConfigurationSettingAsync : Azure.Data.AppConfiguration.ConfigurationSetting * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Data.AppConfiguration.ConfigurationSetting&gt;&gt;" Usage="configurationClient.SetConfigurationSettingAsync (setting, onlyIfUnchanged, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Data.AppConfiguration</AssemblyName>
        <AssemblyVersion>1.0.2.0</AssemblyVersion>
        <AssemblyVersion>1.0.3.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Data.AppConfiguration.ConfigurationSetting&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="setting" Type="Azure.Data.AppConfiguration.ConfigurationSetting" />
        <Parameter Name="onlyIfUnchanged" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="setting">The <see cref="T:Azure.Data.AppConfiguration.ConfigurationSetting" /> to create.</param>
        <param name="onlyIfUnchanged">If set to true and the configuration setting exists in the configuration store, overwrite the setting
            if the passed-in <see cref="T:Azure.Data.AppConfiguration.ConfigurationSetting" /> is the same version as the one in the configuration store.  The setting versions
            are the same if their ETag fields match.  If the two settings are different versions, this method will throw an exception to indicate
            that the setting in the configuration store was modified since it was last obtained by the client.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Creates a <see cref="T:Azure.Data.AppConfiguration.ConfigurationSetting" /> if it doesn't exist or overwrites the existing setting in the configuration store.
            </summary>
        <returns>A response containing the <see cref="T:Azure.Data.AppConfiguration.ConfigurationSetting" /> written to the configuration store.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetConfigurationSettingAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Data.AppConfiguration.ConfigurationSetting&gt;&gt; SetConfigurationSettingAsync (string key, string value, string label = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Data.AppConfiguration.ConfigurationSetting&gt;&gt; SetConfigurationSettingAsync(string key, string value, string label, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Data.AppConfiguration.ConfigurationClient.SetConfigurationSettingAsync(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetConfigurationSettingAsync (key As String, value As String, Optional label As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ConfigurationSetting))" />
      <MemberSignature Language="F#" Value="abstract member SetConfigurationSettingAsync : string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Data.AppConfiguration.ConfigurationSetting&gt;&gt;&#xA;override this.SetConfigurationSettingAsync : string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Data.AppConfiguration.ConfigurationSetting&gt;&gt;" Usage="configurationClient.SetConfigurationSettingAsync (key, value, label, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Data.AppConfiguration</AssemblyName>
        <AssemblyVersion>1.0.2.0</AssemblyVersion>
        <AssemblyVersion>1.0.3.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Data.AppConfiguration.ConfigurationSetting&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="label" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="key">The primary identifier of the configuration setting.</param>
        <param name="value">The configuration setting's value.</param>
        <param name="label">A label used to group this configuration setting with others.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Creates a <see cref="T:Azure.Data.AppConfiguration.ConfigurationSetting" />, uniquely identified by key and label, if it doesn't exist or overwrites the existing setting in the configuration store.
            </summary>
        <returns>A response containing the <see cref="T:Azure.Data.AppConfiguration.ConfigurationSetting" /> written to the configuration store.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetConfigurationSettingAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; SetConfigurationSettingAsync (string key, Azure.Core.RequestContent content, Azure.Core.ContentType contentType, string label = default, Azure.MatchConditions matchConditions = default, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; SetConfigurationSettingAsync(string key, class Azure.Core.RequestContent content, valuetype Azure.Core.ContentType contentType, string label, class Azure.MatchConditions matchConditions, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Data.AppConfiguration.ConfigurationClient.SetConfigurationSettingAsync(System.String,Azure.Core.RequestContent,Azure.Core.ContentType,System.String,Azure.MatchConditions,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetConfigurationSettingAsync (key As String, content As RequestContent, contentType As ContentType, Optional label As String = Nothing, Optional matchConditions As MatchConditions = Nothing, Optional context As RequestContext = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member SetConfigurationSettingAsync : string * Azure.Core.RequestContent * Azure.Core.ContentType * string * Azure.MatchConditions * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.SetConfigurationSettingAsync : string * Azure.Core.RequestContent * Azure.Core.ContentType * string * Azure.MatchConditions * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="configurationClient.SetConfigurationSettingAsync (key, content, contentType, label, matchConditions, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Data.AppConfiguration</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="content" Type="Azure.Core.RequestContent" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="contentType" Type="Azure.Core.ContentType" Index="2" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="label" Type="System.String" Index="3" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="matchConditions" Type="Azure.MatchConditions" Index="4" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="context" Type="Azure.RequestContext" Index="5" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="key"> The key of the key-value to create. </param>
        <param name="content"> The content to send as the body of the request. Details of the request body schema are in the Remarks section below. </param>
        <param name="contentType"> Body Parameter content-type. Allowed values: "application/*+json" | "application/json" | "application/json-patch+json" | "application/vnd.microsoft.appconfig.kv+json" | "application/vnd.microsoft.appconfig.kvset+json" | "text/json". </param>
        <param name="label"> The label of the key-value to create. </param>
        <param name="matchConditions"> The content to send as the request conditions of the request. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Creates a key-value. </summary>
        <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        <remarks>
            Below is the JSON schema for the request and response payloads.
            
            Request Body:
            
            Schema for <c>KeyValue</c>:
            <code>{
              key: string, # Optional.
              label: string, # Optional.
              content_type: string, # Optional.
              value: string, # Optional.
              last_modified: string (ISO 8601 Format), # Optional.
              tags: Dictionary&lt;string, string&gt;, # Optional. Dictionary of &lt;string&gt;
              locked: boolean, # Optional.
              etag: string, # Optional.
            }
            </code>
            
            Response Body:
            
            Schema for <c>KeyValue</c>:
            <code>{
              key: string, # Optional.
              label: string, # Optional.
              content_type: string, # Optional.
              value: string, # Optional.
              last_modified: string (ISO 8601 Format), # Optional.
              tags: Dictionary&lt;string, string&gt;, # Optional. Dictionary of &lt;string&gt;
              locked: boolean, # Optional.
              etag: string, # Optional.
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="key" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
        <example>
            This sample shows how to call SetConfigurationSettingAsync with required parameters and parse the result.
            <code><![CDATA[
            var endpoint = new Uri("<https://my-service.azure.com>");
            var client = new ConfigurationClient(endpoint);
            
            var data = new {};
            
            Response response = await client.SetConfigurationSettingAsync("<key>", RequestContent.Create(data), ContentType.ApplicationOctetStream);
            
            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
            ]]></code>
            This sample shows how to call SetConfigurationSettingAsync with all parameters and request content, and how to parse the result.
            <code><![CDATA[
            var endpoint = new Uri("<https://my-service.azure.com>");
            var client = new ConfigurationClient(endpoint);
            
            var data = new {
                key = "<key>",
                label = "<label>",
                content_type = "<content_type>",
                value = "<value>",
                last_modified = "2022-05-10T18:57:31.2311892Z",
                tags = new {
                    key = "<String>",
                },
                locked = true,
                etag = "<etag>",
            };
            
            Response response = await client.SetConfigurationSettingAsync("<key>", RequestContent.Create(data), ContentType.ApplicationOctetStream, "<label>", new MatchConditions { IfMatch = "<YOUR_ETAG>" });
            
            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("key").ToString());
            Console.WriteLine(result.GetProperty("label").ToString());
            Console.WriteLine(result.GetProperty("content_type").ToString());
            Console.WriteLine(result.GetProperty("value").ToString());
            Console.WriteLine(result.GetProperty("last_modified").ToString());
            Console.WriteLine(result.GetProperty("tags").GetProperty("<test>").ToString());
            Console.WriteLine(result.GetProperty("locked").ToString());
            Console.WriteLine(result.GetProperty("etag").ToString());
            ]]></code></example>
      </Docs>
    </Member>
    <Member MemberName="SetReadOnly">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Data.AppConfiguration.ConfigurationSetting&gt; SetReadOnly (string key, bool isReadOnly, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Data.AppConfiguration.ConfigurationSetting&gt; SetReadOnly(string key, bool isReadOnly, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Data.AppConfiguration.ConfigurationClient.SetReadOnly(System.String,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetReadOnly (key As String, isReadOnly As Boolean, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ConfigurationSetting)" />
      <MemberSignature Language="F#" Value="abstract member SetReadOnly : string * bool * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Data.AppConfiguration.ConfigurationSetting&gt;&#xA;override this.SetReadOnly : string * bool * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Data.AppConfiguration.ConfigurationSetting&gt;" Usage="configurationClient.SetReadOnly (key, isReadOnly, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Data.AppConfiguration</AssemblyName>
        <AssemblyVersion>1.0.2.0</AssemblyVersion>
        <AssemblyVersion>1.0.3.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Data.AppConfiguration.ConfigurationSetting&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="isReadOnly" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="key">The primary identifier of the configuration setting.</param>
        <param name="isReadOnly">If true, the <see cref="T:Azure.Data.AppConfiguration.ConfigurationSetting" /> will be set to read only in the configuration store. If false, it will be set to read write.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Sets an existing <see cref="T:Azure.Data.AppConfiguration.ConfigurationSetting" /> to read only or read write state in the configuration store.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetReadOnly">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Data.AppConfiguration.ConfigurationSetting&gt; SetReadOnly (Azure.Data.AppConfiguration.ConfigurationSetting setting, bool isReadOnly, bool onlyIfUnchanged = false, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Data.AppConfiguration.ConfigurationSetting&gt; SetReadOnly(class Azure.Data.AppConfiguration.ConfigurationSetting setting, bool isReadOnly, bool onlyIfUnchanged, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Data.AppConfiguration.ConfigurationClient.SetReadOnly(Azure.Data.AppConfiguration.ConfigurationSetting,System.Boolean,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetReadOnly (setting As ConfigurationSetting, isReadOnly As Boolean, Optional onlyIfUnchanged As Boolean = false, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ConfigurationSetting)" />
      <MemberSignature Language="F#" Value="abstract member SetReadOnly : Azure.Data.AppConfiguration.ConfigurationSetting * bool * bool * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Data.AppConfiguration.ConfigurationSetting&gt;&#xA;override this.SetReadOnly : Azure.Data.AppConfiguration.ConfigurationSetting * bool * bool * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Data.AppConfiguration.ConfigurationSetting&gt;" Usage="configurationClient.SetReadOnly (setting, isReadOnly, onlyIfUnchanged, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Data.AppConfiguration</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Data.AppConfiguration.ConfigurationSetting&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="setting" Type="Azure.Data.AppConfiguration.ConfigurationSetting" />
        <Parameter Name="isReadOnly" Type="System.Boolean" />
        <Parameter Name="onlyIfUnchanged" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="setting">The <see cref="T:Azure.Data.AppConfiguration.ConfigurationSetting" /> to update.</param>
        <param name="onlyIfUnchanged">If set to true and the configuration setting exists in the configuration store, update the setting
            if the passed-in <see cref="T:Azure.Data.AppConfiguration.ConfigurationSetting" /> is the same version as the one in the configuration store. The setting versions
            are the same if their ETag fields match.  If the two settings are different versions, this method will throw an exception to indicate
            that the setting in the configuration store was modified since it was last obtained by the client.</param>
        <param name="isReadOnly">If true, the <see cref="T:Azure.Data.AppConfiguration.ConfigurationSetting" /> will be set to read only in the configuration store. If false, it will be set to read write.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Sets an existing <see cref="T:Azure.Data.AppConfiguration.ConfigurationSetting" /> to read only or read write state in the configuration store.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetReadOnly">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Data.AppConfiguration.ConfigurationSetting&gt; SetReadOnly (string key, string label, bool isReadOnly, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Data.AppConfiguration.ConfigurationSetting&gt; SetReadOnly(string key, string label, bool isReadOnly, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Data.AppConfiguration.ConfigurationClient.SetReadOnly(System.String,System.String,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetReadOnly (key As String, label As String, isReadOnly As Boolean, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ConfigurationSetting)" />
      <MemberSignature Language="F#" Value="abstract member SetReadOnly : string * string * bool * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Data.AppConfiguration.ConfigurationSetting&gt;&#xA;override this.SetReadOnly : string * string * bool * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Data.AppConfiguration.ConfigurationSetting&gt;" Usage="configurationClient.SetReadOnly (key, label, isReadOnly, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Data.AppConfiguration</AssemblyName>
        <AssemblyVersion>1.0.2.0</AssemblyVersion>
        <AssemblyVersion>1.0.3.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Data.AppConfiguration.ConfigurationSetting&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="label" Type="System.String" />
        <Parameter Name="isReadOnly" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="key">The primary identifier of the configuration setting.</param>
        <param name="label">A label used to group this configuration setting with others.</param>
        <param name="isReadOnly">If true, the <see cref="T:Azure.Data.AppConfiguration.ConfigurationSetting" /> will be set to read only in the configuration store. If false, it will be set to read write.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Sets an existing <see cref="T:Azure.Data.AppConfiguration.ConfigurationSetting" /> to read only or read write state in the configuration store.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetReadOnlyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Data.AppConfiguration.ConfigurationSetting&gt;&gt; SetReadOnlyAsync (string key, bool isReadOnly, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Data.AppConfiguration.ConfigurationSetting&gt;&gt; SetReadOnlyAsync(string key, bool isReadOnly, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Data.AppConfiguration.ConfigurationClient.SetReadOnlyAsync(System.String,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetReadOnlyAsync (key As String, isReadOnly As Boolean, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ConfigurationSetting))" />
      <MemberSignature Language="F#" Value="abstract member SetReadOnlyAsync : string * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Data.AppConfiguration.ConfigurationSetting&gt;&gt;&#xA;override this.SetReadOnlyAsync : string * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Data.AppConfiguration.ConfigurationSetting&gt;&gt;" Usage="configurationClient.SetReadOnlyAsync (key, isReadOnly, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Data.AppConfiguration</AssemblyName>
        <AssemblyVersion>1.0.2.0</AssemblyVersion>
        <AssemblyVersion>1.0.3.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Data.AppConfiguration.ConfigurationSetting&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="isReadOnly" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="key">The primary identifier of the configuration setting.</param>
        <param name="isReadOnly">If true, the <see cref="T:Azure.Data.AppConfiguration.ConfigurationSetting" /> will be set to read only in the configuration store. If false, it will be set to read write.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Sets an existing <see cref="T:Azure.Data.AppConfiguration.ConfigurationSetting" /> to read only or read write state in the configuration store.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetReadOnlyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Data.AppConfiguration.ConfigurationSetting&gt;&gt; SetReadOnlyAsync (Azure.Data.AppConfiguration.ConfigurationSetting setting, bool isReadOnly, bool onlyIfUnchanged = false, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Data.AppConfiguration.ConfigurationSetting&gt;&gt; SetReadOnlyAsync(class Azure.Data.AppConfiguration.ConfigurationSetting setting, bool isReadOnly, bool onlyIfUnchanged, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Data.AppConfiguration.ConfigurationClient.SetReadOnlyAsync(Azure.Data.AppConfiguration.ConfigurationSetting,System.Boolean,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetReadOnlyAsync (setting As ConfigurationSetting, isReadOnly As Boolean, Optional onlyIfUnchanged As Boolean = false, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ConfigurationSetting))" />
      <MemberSignature Language="F#" Value="abstract member SetReadOnlyAsync : Azure.Data.AppConfiguration.ConfigurationSetting * bool * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Data.AppConfiguration.ConfigurationSetting&gt;&gt;&#xA;override this.SetReadOnlyAsync : Azure.Data.AppConfiguration.ConfigurationSetting * bool * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Data.AppConfiguration.ConfigurationSetting&gt;&gt;" Usage="configurationClient.SetReadOnlyAsync (setting, isReadOnly, onlyIfUnchanged, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Data.AppConfiguration</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Data.AppConfiguration.ConfigurationSetting&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="setting" Type="Azure.Data.AppConfiguration.ConfigurationSetting" />
        <Parameter Name="isReadOnly" Type="System.Boolean" />
        <Parameter Name="onlyIfUnchanged" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="setting">The <see cref="T:Azure.Data.AppConfiguration.ConfigurationSetting" /> to update.</param>
        <param name="onlyIfUnchanged">If set to true and the configuration setting exists in the configuration store, update the setting
            if the passed-in <see cref="T:Azure.Data.AppConfiguration.ConfigurationSetting" /> is the same version as the one in the configuration store. The setting versions
            are the same if their ETag fields match.  If the two settings are different versions, this method will throw an exception to indicate
            that the setting in the configuration store was modified since it was last obtained by the client.</param>
        <param name="isReadOnly">If true, the <see cref="T:Azure.Data.AppConfiguration.ConfigurationSetting" /> will be set to read only in the configuration store. If false, it will be set to read write.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Sets an existing <see cref="T:Azure.Data.AppConfiguration.ConfigurationSetting" /> to read only or read write state in the configuration store.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetReadOnlyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Data.AppConfiguration.ConfigurationSetting&gt;&gt; SetReadOnlyAsync (string key, string label, bool isReadOnly, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Data.AppConfiguration.ConfigurationSetting&gt;&gt; SetReadOnlyAsync(string key, string label, bool isReadOnly, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Data.AppConfiguration.ConfigurationClient.SetReadOnlyAsync(System.String,System.String,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetReadOnlyAsync (key As String, label As String, isReadOnly As Boolean, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ConfigurationSetting))" />
      <MemberSignature Language="F#" Value="abstract member SetReadOnlyAsync : string * string * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Data.AppConfiguration.ConfigurationSetting&gt;&gt;&#xA;override this.SetReadOnlyAsync : string * string * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Data.AppConfiguration.ConfigurationSetting&gt;&gt;" Usage="configurationClient.SetReadOnlyAsync (key, label, isReadOnly, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Data.AppConfiguration</AssemblyName>
        <AssemblyVersion>1.0.2.0</AssemblyVersion>
        <AssemblyVersion>1.0.3.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Data.AppConfiguration.ConfigurationSetting&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="label" Type="System.String" />
        <Parameter Name="isReadOnly" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="key">The primary identifier of the configuration setting.</param>
        <param name="label">A label used to group this configuration setting with others.</param>
        <param name="isReadOnly">If true, the <see cref="T:Azure.Data.AppConfiguration.ConfigurationSetting" /> will be set to read only in the configuration store. If false, it will be set to read write.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Sets an existing <see cref="T:Azure.Data.AppConfiguration.ConfigurationSetting" /> to read only or read write state in the configuration store.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Data.AppConfiguration.ConfigurationClient.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="configurationClient.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Data.AppConfiguration</AssemblyName>
        <AssemblyVersion>1.0.2.0</AssemblyVersion>
        <AssemblyVersion>1.0.3.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Creates a Key Value string in reference to the ConfigurationSetting.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateSyncToken">
      <MemberSignature Language="C#" Value="public virtual void UpdateSyncToken (string token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateSyncToken(string token) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Data.AppConfiguration.ConfigurationClient.UpdateSyncToken(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub UpdateSyncToken (token As String)" />
      <MemberSignature Language="F#" Value="abstract member UpdateSyncToken : string -&gt; unit&#xA;override this.UpdateSyncToken : string -&gt; unit" Usage="configurationClient.UpdateSyncToken token" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Data.AppConfiguration</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="token">The synchronization token value.</param>
        <summary>
            Adds an external synchronization token to ensure service requests receive up-to-date values.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="KeyOperations" FullName="Azure.Security.KeyVault.Keys.KeyOperations">
  <TypeSignature Language="C#" Value="public enum KeyOperations" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed KeyOperations extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:Azure.Security.KeyVault.Keys.KeyOperations" />
  <TypeSignature Language="VB.NET" Value="Public Enum KeyOperations" />
  <TypeSignature Language="F#" Value="type KeyOperations = " />
  <AssemblyInfo>
    <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Flags</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Supported JsonWebKey cryptographic operations that may be performed on a key.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="All">
      <MemberSignature Language="C#" Value="All" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Azure.Security.KeyVault.Keys.KeyOperations All = unsigned int32(4294967295)" />
      <MemberSignature Language="DocId" Value="F:Azure.Security.KeyVault.Keys.KeyOperations.All" />
      <MemberSignature Language="VB.NET" Value="All" />
      <MemberSignature Language="F#" Value="All = 4294967295" Usage="Azure.Security.KeyVault.Keys.KeyOperations.All" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Security.KeyVault.Keys.KeyOperations</ReturnType>
      </ReturnValue>
      <MemberValue>4294967295</MemberValue>
      <Docs>
        <summary>
            Include all Key Operations
            For more information, see <see href="https://docs.microsoft.com/en-us/azure/key-vault/about-keys-secrets-and-certificates#key-operations" />.
            </summary>
      </Docs>
    </Member>
    <Member MemberName="Decrypt">
      <MemberSignature Language="C#" Value="Decrypt" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Azure.Security.KeyVault.Keys.KeyOperations Decrypt = unsigned int32(2)" />
      <MemberSignature Language="DocId" Value="F:Azure.Security.KeyVault.Keys.KeyOperations.Decrypt" />
      <MemberSignature Language="VB.NET" Value="Decrypt" />
      <MemberSignature Language="F#" Value="Decrypt = 2" Usage="Azure.Security.KeyVault.Keys.KeyOperations.Decrypt" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Security.KeyVault.Keys.KeyOperations</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
            A key stored in Key Vault may be used to protect another key, 
            typically a symmetric content encryption key (CEK).
            A key stored in Key Vault may be used to decrypt
            a single block of data.
            The size of the block is determined by the key type and selected encryption algorithm.
            For more information, see <see href="https://docs.microsoft.com/en-us/azure/key-vault/about-keys-secrets-and-certificates#key-operations" />.
            </summary>
      </Docs>
    </Member>
    <Member MemberName="Encrypt">
      <MemberSignature Language="C#" Value="Encrypt" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Azure.Security.KeyVault.Keys.KeyOperations Encrypt = unsigned int32(1)" />
      <MemberSignature Language="DocId" Value="F:Azure.Security.KeyVault.Keys.KeyOperations.Encrypt" />
      <MemberSignature Language="VB.NET" Value="Encrypt" />
      <MemberSignature Language="F#" Value="Encrypt = 1" Usage="Azure.Security.KeyVault.Keys.KeyOperations.Encrypt" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Security.KeyVault.Keys.KeyOperations</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
            A key stored in Key Vault may be used to protect another key, 
            typically a symmetric content encryption key (CEK). 
            When the key in Key Vault is asymmetric, key encryption is used.
            A key stored in Key Vault may be used to encrypt
            a single block of data.
            The size of the block is determined by the key type and selected encryption algorithm.
            For more information, see <see href="https://docs.microsoft.com/en-us/azure/key-vault/about-keys-secrets-and-certificates#key-operations" />.
            </summary>
      </Docs>
    </Member>
    <Member MemberName="Other">
      <MemberSignature Language="C#" Value="Other" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Azure.Security.KeyVault.Keys.KeyOperations Other = unsigned int32(64)" />
      <MemberSignature Language="DocId" Value="F:Azure.Security.KeyVault.Keys.KeyOperations.Other" />
      <MemberSignature Language="VB.NET" Value="Other" />
      <MemberSignature Language="F#" Value="Other = 64" Usage="Azure.Security.KeyVault.Keys.KeyOperations.Other" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Security.KeyVault.Keys.KeyOperations</ReturnType>
      </ReturnValue>
      <MemberValue>64</MemberValue>
      <Docs>
        <summary>
            Other type of Key Operation
            For more information, see <see href="https://docs.microsoft.com/en-us/azure/key-vault/about-keys-secrets-and-certificates#key-operations" />.
            </summary>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="Sign" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Azure.Security.KeyVault.Keys.KeyOperations Sign = unsigned int32(4)" />
      <MemberSignature Language="DocId" Value="F:Azure.Security.KeyVault.Keys.KeyOperations.Sign" />
      <MemberSignature Language="VB.NET" Value="Sign" />
      <MemberSignature Language="F#" Value="Sign = 4" Usage="Azure.Security.KeyVault.Keys.KeyOperations.Sign" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Security.KeyVault.Keys.KeyOperations</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>
            This operation is "sign hash" as Key Vault doesn't support hashing
            of content as part of signature creation.
            Applications should hash the data to be signed locally,
            then request that Key Vault sign the hash.
            For more information, see <see href="https://docs.microsoft.com/en-us/azure/key-vault/about-keys-secrets-and-certificates#key-operations" />.
            </summary>
      </Docs>
    </Member>
    <Member MemberName="Unwrap">
      <MemberSignature Language="C#" Value="Unwrap" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Azure.Security.KeyVault.Keys.KeyOperations Unwrap = unsigned int32(32)" />
      <MemberSignature Language="DocId" Value="F:Azure.Security.KeyVault.Keys.KeyOperations.Unwrap" />
      <MemberSignature Language="VB.NET" Value="Unwrap" />
      <MemberSignature Language="F#" Value="Unwrap = 32" Usage="Azure.Security.KeyVault.Keys.KeyOperations.Unwrap" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Security.KeyVault.Keys.KeyOperations</ReturnType>
      </ReturnValue>
      <MemberValue>32</MemberValue>
      <Docs>
        <summary>
            Unwraps a symmetric key using the specified key that was initially used
            for wrapping that key. The unwrap operation supports decryption of a 
            symmetric key using the target key encryption key.
            This operation is the reverse of the WRAP operation.
            For more information, see <see href="https://docs.microsoft.com/en-us/azure/key-vault/about-keys-secrets-and-certificates#key-operations" />.
            </summary>
      </Docs>
    </Member>
    <Member MemberName="Verify">
      <MemberSignature Language="C#" Value="Verify" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Azure.Security.KeyVault.Keys.KeyOperations Verify = unsigned int32(8)" />
      <MemberSignature Language="DocId" Value="F:Azure.Security.KeyVault.Keys.KeyOperations.Verify" />
      <MemberSignature Language="VB.NET" Value="Verify" />
      <MemberSignature Language="F#" Value="Verify = 8" Usage="Azure.Security.KeyVault.Keys.KeyOperations.Verify" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Security.KeyVault.Keys.KeyOperations</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary>
            This operation is "verify hash", as Key Vault doesn't support hashing of content
            as part of signature creation. 
            Verification of signed hashes is supported as a convenience operation
            for applications that may not have access to [public] key material.
            For more information, see <see href="https://docs.microsoft.com/en-us/azure/key-vault/about-keys-secrets-and-certificates#key-operations" />.
            </summary>
      </Docs>
    </Member>
    <Member MemberName="Wrap">
      <MemberSignature Language="C#" Value="Wrap" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Azure.Security.KeyVault.Keys.KeyOperations Wrap = unsigned int32(16)" />
      <MemberSignature Language="DocId" Value="F:Azure.Security.KeyVault.Keys.KeyOperations.Wrap" />
      <MemberSignature Language="VB.NET" Value="Wrap" />
      <MemberSignature Language="F#" Value="Wrap = 16" Usage="Azure.Security.KeyVault.Keys.KeyOperations.Wrap" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Keys</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Security.KeyVault.Keys.KeyOperations</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary>
            The Wrap operation is supported as a convenience for
            applications that may not have access to [public] key material. 
            For best application performance, wrap key operations should be performed locally.
            For more information, see <see href="https://docs.microsoft.com/en-us/azure/key-vault/about-keys-secrets-and-certificates#key-operations" />.
            </summary>
      </Docs>
    </Member>
  </Members>
</Type>

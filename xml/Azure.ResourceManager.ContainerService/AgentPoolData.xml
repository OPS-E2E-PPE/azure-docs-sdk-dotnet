<Type Name="AgentPoolData" FullName="Azure.ResourceManager.ContainerService.AgentPoolData">
  <TypeSignature Language="C#" Value="public class AgentPoolData : Azure.ResourceManager.Models.ResourceData" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AgentPoolData extends Azure.ResourceManager.Models.ResourceData" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.ContainerService.AgentPoolData" />
  <TypeSignature Language="VB.NET" Value="Public Class AgentPoolData&#xA;Inherits ResourceData" />
  <TypeSignature Language="F#" Value="type AgentPoolData = class&#xA;    inherit ResourceData" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.Models.ResourceData</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class representing the AgentPool data model. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AgentPoolData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerService.AgentPoolData.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of AgentPoolData. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AvailabilityZones">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;string&gt; AvailabilityZones { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;string&gt; AvailabilityZones" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.ContainerService.AgentPoolData.AvailabilityZones" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AvailabilityZones As IList(Of String)" />
      <MemberSignature Language="F#" Value="member this.AvailabilityZones : System.Collections.Generic.IList&lt;string&gt;" Usage="Azure.ResourceManager.ContainerService.AgentPoolData.AvailabilityZones" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The list of Availability zones to use for nodes. This can only be specified if the AgentPoolType property is 'VirtualMachineScaleSets'. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int? Count { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; Count" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.ContainerService.AgentPoolData.Count" />
      <MemberSignature Language="VB.NET" Value="Public Property Count As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="member this.Count : Nullable&lt;int&gt; with get, set" Usage="Azure.ResourceManager.ContainerService.AgentPoolData.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Number of agents (VMs) to host docker containers. Allowed values must be in the range of 0 to 1000 (inclusive) for user pools and in the range of 1 to 1000 (inclusive) for system pools. The default value is 1. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreationDataSourceResourceId">
      <MemberSignature Language="C#" Value="public string CreationDataSourceResourceId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CreationDataSourceResourceId" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.ContainerService.AgentPoolData.CreationDataSourceResourceId" />
      <MemberSignature Language="VB.NET" Value="Public Property CreationDataSourceResourceId As String" />
      <MemberSignature Language="F#" Value="member this.CreationDataSourceResourceId : string with get, set" Usage="Azure.ResourceManager.ContainerService.AgentPoolData.CreationDataSourceResourceId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> This is the ARM ID of the source object to be used to create the target object. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentOrchestratorVersion">
      <MemberSignature Language="C#" Value="public string CurrentOrchestratorVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CurrentOrchestratorVersion" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.ContainerService.AgentPoolData.CurrentOrchestratorVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentOrchestratorVersion As String" />
      <MemberSignature Language="F#" Value="member this.CurrentOrchestratorVersion : string" Usage="Azure.ResourceManager.ContainerService.AgentPoolData.CurrentOrchestratorVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> If orchestratorVersion is a fully specified version &lt;major.minor.patch&gt;, this field will be exactly equal to it. If orchestratorVersion is &lt;major.minor&gt;, this field will contain the full &lt;major.minor.patch&gt; version being used. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableAutoScaling">
      <MemberSignature Language="C#" Value="public bool? EnableAutoScaling { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; EnableAutoScaling" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.ContainerService.AgentPoolData.EnableAutoScaling" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableAutoScaling As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.EnableAutoScaling : Nullable&lt;bool&gt; with get, set" Usage="Azure.ResourceManager.ContainerService.AgentPoolData.EnableAutoScaling" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Whether to enable auto-scaler. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableEncryptionAtHost">
      <MemberSignature Language="C#" Value="public bool? EnableEncryptionAtHost { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; EnableEncryptionAtHost" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.ContainerService.AgentPoolData.EnableEncryptionAtHost" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableEncryptionAtHost As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.EnableEncryptionAtHost : Nullable&lt;bool&gt; with get, set" Usage="Azure.ResourceManager.ContainerService.AgentPoolData.EnableEncryptionAtHost" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> This is only supported on certain VM sizes and in certain Azure regions. For more information, see: https://docs.microsoft.com/azure/aks/enable-host-encryption. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableFips">
      <MemberSignature Language="C#" Value="public bool? EnableFips { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; EnableFips" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.ContainerService.AgentPoolData.EnableFips" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableFips As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.EnableFips : Nullable&lt;bool&gt; with get, set" Usage="Azure.ResourceManager.ContainerService.AgentPoolData.EnableFips" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> See [Add a FIPS-enabled node pool](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#add-a-fips-enabled-node-pool-preview) for more details. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableNodePublicIP">
      <MemberSignature Language="C#" Value="public bool? EnableNodePublicIP { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; EnableNodePublicIP" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.ContainerService.AgentPoolData.EnableNodePublicIP" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableNodePublicIP As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.EnableNodePublicIP : Nullable&lt;bool&gt; with get, set" Usage="Azure.ResourceManager.ContainerService.AgentPoolData.EnableNodePublicIP" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Some scenarios may require nodes in a node pool to receive their own dedicated public IP addresses. A common scenario is for gaming workloads, where a console needs to make a direct connection to a cloud virtual machine to minimize hops. For more information see [assigning a public IP per node](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#assign-a-public-ip-per-node-for-your-node-pools). The default is false. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableUltraSSD">
      <MemberSignature Language="C#" Value="public bool? EnableUltraSSD { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; EnableUltraSSD" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.ContainerService.AgentPoolData.EnableUltraSSD" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableUltraSSD As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.EnableUltraSSD : Nullable&lt;bool&gt; with get, set" Usage="Azure.ResourceManager.ContainerService.AgentPoolData.EnableUltraSSD" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Whether to enable UltraSSD. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GpuInstanceProfile">
      <MemberSignature Language="C#" Value="public Azure.ResourceManager.ContainerService.Models.GPUInstanceProfile? GpuInstanceProfile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerService.Models.GPUInstanceProfile&gt; GpuInstanceProfile" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.ContainerService.AgentPoolData.GpuInstanceProfile" />
      <MemberSignature Language="VB.NET" Value="Public Property GpuInstanceProfile As Nullable(Of GPUInstanceProfile)" />
      <MemberSignature Language="F#" Value="member this.GpuInstanceProfile : Nullable&lt;Azure.ResourceManager.ContainerService.Models.GPUInstanceProfile&gt; with get, set" Usage="Azure.ResourceManager.ContainerService.AgentPoolData.GpuInstanceProfile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Azure.ResourceManager.ContainerService.Models.GPUInstanceProfile&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> GPUInstanceProfile to be used to specify GPU MIG instance profile for supported GPU VM SKU. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KubeletConfig">
      <MemberSignature Language="C#" Value="public Azure.ResourceManager.ContainerService.Models.KubeletConfig KubeletConfig { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.ContainerService.Models.KubeletConfig KubeletConfig" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.ContainerService.AgentPoolData.KubeletConfig" />
      <MemberSignature Language="VB.NET" Value="Public Property KubeletConfig As KubeletConfig" />
      <MemberSignature Language="F#" Value="member this.KubeletConfig : Azure.ResourceManager.ContainerService.Models.KubeletConfig with get, set" Usage="Azure.ResourceManager.ContainerService.AgentPoolData.KubeletConfig" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerService.Models.KubeletConfig</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The Kubelet configuration on the agent pool nodes. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KubeletDiskType">
      <MemberSignature Language="C#" Value="public Azure.ResourceManager.ContainerService.Models.KubeletDiskType? KubeletDiskType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerService.Models.KubeletDiskType&gt; KubeletDiskType" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.ContainerService.AgentPoolData.KubeletDiskType" />
      <MemberSignature Language="VB.NET" Value="Public Property KubeletDiskType As Nullable(Of KubeletDiskType)" />
      <MemberSignature Language="F#" Value="member this.KubeletDiskType : Nullable&lt;Azure.ResourceManager.ContainerService.Models.KubeletDiskType&gt; with get, set" Usage="Azure.ResourceManager.ContainerService.AgentPoolData.KubeletDiskType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Azure.ResourceManager.ContainerService.Models.KubeletDiskType&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Determines the placement of emptyDir volumes, container runtime data root, and Kubelet ephemeral storage. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LinuxOSConfig">
      <MemberSignature Language="C#" Value="public Azure.ResourceManager.ContainerService.Models.LinuxOSConfig LinuxOSConfig { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.ContainerService.Models.LinuxOSConfig LinuxOSConfig" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.ContainerService.AgentPoolData.LinuxOSConfig" />
      <MemberSignature Language="VB.NET" Value="Public Property LinuxOSConfig As LinuxOSConfig" />
      <MemberSignature Language="F#" Value="member this.LinuxOSConfig : Azure.ResourceManager.ContainerService.Models.LinuxOSConfig with get, set" Usage="Azure.ResourceManager.ContainerService.AgentPoolData.LinuxOSConfig" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerService.Models.LinuxOSConfig</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The OS configuration of Linux agent nodes. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxCount">
      <MemberSignature Language="C#" Value="public int? MaxCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; MaxCount" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.ContainerService.AgentPoolData.MaxCount" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxCount As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="member this.MaxCount : Nullable&lt;int&gt; with get, set" Usage="Azure.ResourceManager.ContainerService.AgentPoolData.MaxCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The maximum number of nodes for auto-scaling. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxPods">
      <MemberSignature Language="C#" Value="public int? MaxPods { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; MaxPods" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.ContainerService.AgentPoolData.MaxPods" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxPods As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="member this.MaxPods : Nullable&lt;int&gt; with get, set" Usage="Azure.ResourceManager.ContainerService.AgentPoolData.MaxPods" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The maximum number of pods that can run on a node. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinCount">
      <MemberSignature Language="C#" Value="public int? MinCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; MinCount" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.ContainerService.AgentPoolData.MinCount" />
      <MemberSignature Language="VB.NET" Value="Public Property MinCount As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="member this.MinCount : Nullable&lt;int&gt; with get, set" Usage="Azure.ResourceManager.ContainerService.AgentPoolData.MinCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The minimum number of nodes for auto-scaling. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Mode">
      <MemberSignature Language="C#" Value="public Azure.ResourceManager.ContainerService.Models.AgentPoolMode? Mode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerService.Models.AgentPoolMode&gt; Mode" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.ContainerService.AgentPoolData.Mode" />
      <MemberSignature Language="VB.NET" Value="Public Property Mode As Nullable(Of AgentPoolMode)" />
      <MemberSignature Language="F#" Value="member this.Mode : Nullable&lt;Azure.ResourceManager.ContainerService.Models.AgentPoolMode&gt; with get, set" Usage="Azure.ResourceManager.ContainerService.AgentPoolData.Mode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Azure.ResourceManager.ContainerService.Models.AgentPoolMode&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> A cluster must have at least one 'System' Agent Pool at all times. For additional information on agent pool restrictions and best practices, see: https://docs.microsoft.com/azure/aks/use-system-pools. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NodeImageVersion">
      <MemberSignature Language="C#" Value="public string NodeImageVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NodeImageVersion" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.ContainerService.AgentPoolData.NodeImageVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NodeImageVersion As String" />
      <MemberSignature Language="F#" Value="member this.NodeImageVersion : string" Usage="Azure.ResourceManager.ContainerService.AgentPoolData.NodeImageVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The version of node image. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NodeLabels">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,string&gt; NodeLabels { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; NodeLabels" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.ContainerService.AgentPoolData.NodeLabels" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NodeLabels As IDictionary(Of String, String)" />
      <MemberSignature Language="F#" Value="member this.NodeLabels : System.Collections.Generic.IDictionary&lt;string, string&gt;" Usage="Azure.ResourceManager.ContainerService.AgentPoolData.NodeLabels" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The node labels to be persisted across all nodes in agent pool. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NodePublicIPPrefixId">
      <MemberSignature Language="C#" Value="public string NodePublicIPPrefixId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NodePublicIPPrefixId" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.ContainerService.AgentPoolData.NodePublicIPPrefixId" />
      <MemberSignature Language="VB.NET" Value="Public Property NodePublicIPPrefixId As String" />
      <MemberSignature Language="F#" Value="member this.NodePublicIPPrefixId : string with get, set" Usage="Azure.ResourceManager.ContainerService.AgentPoolData.NodePublicIPPrefixId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPPrefixes/{publicIPPrefixName}. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NodeTaints">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;string&gt; NodeTaints { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;string&gt; NodeTaints" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.ContainerService.AgentPoolData.NodeTaints" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NodeTaints As IList(Of String)" />
      <MemberSignature Language="F#" Value="member this.NodeTaints : System.Collections.Generic.IList&lt;string&gt;" Usage="Azure.ResourceManager.ContainerService.AgentPoolData.NodeTaints" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrchestratorVersion">
      <MemberSignature Language="C#" Value="public string OrchestratorVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OrchestratorVersion" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.ContainerService.AgentPoolData.OrchestratorVersion" />
      <MemberSignature Language="VB.NET" Value="Public Property OrchestratorVersion As String" />
      <MemberSignature Language="F#" Value="member this.OrchestratorVersion : string with get, set" Usage="Azure.ResourceManager.ContainerService.AgentPoolData.OrchestratorVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Both patch version &lt;major.minor.patch&gt; (e.g. 1.20.13) and &lt;major.minor&gt; (e.g. 1.20) are supported. When &lt;major.minor&gt; is specified, the latest supported GA patch version is chosen automatically. Updating the cluster with the same &lt;major.minor&gt; once it has been created (e.g. 1.14.x -&gt; 1.14) will not trigger an upgrade, even if a newer patch version is available. As a best practice, you should upgrade all node pools in an AKS cluster to the same Kubernetes version. The node pool version must have the same major version as the control plane. The node pool minor version must be within two minor versions of the control plane version. The node pool version cannot be greater than the control plane version. For more information see [upgrading a node pool](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#upgrade-a-node-pool). </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OSDiskSizeGB">
      <MemberSignature Language="C#" Value="public int? OSDiskSizeGB { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; OSDiskSizeGB" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.ContainerService.AgentPoolData.OSDiskSizeGB" />
      <MemberSignature Language="VB.NET" Value="Public Property OSDiskSizeGB As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="member this.OSDiskSizeGB : Nullable&lt;int&gt; with get, set" Usage="Azure.ResourceManager.ContainerService.AgentPoolData.OSDiskSizeGB" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> OS Disk Size in GB to be used to specify the disk size for every machine in the master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OSDiskType">
      <MemberSignature Language="C#" Value="public Azure.ResourceManager.ContainerService.Models.OSDiskType? OSDiskType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerService.Models.OSDiskType&gt; OSDiskType" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.ContainerService.AgentPoolData.OSDiskType" />
      <MemberSignature Language="VB.NET" Value="Public Property OSDiskType As Nullable(Of OSDiskType)" />
      <MemberSignature Language="F#" Value="member this.OSDiskType : Nullable&lt;Azure.ResourceManager.ContainerService.Models.OSDiskType&gt; with get, set" Usage="Azure.ResourceManager.ContainerService.AgentPoolData.OSDiskType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Azure.ResourceManager.ContainerService.Models.OSDiskType&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The default is 'Ephemeral' if the VM supports it and has a cache disk larger than the requested OSDiskSizeGB. Otherwise, defaults to 'Managed'. May not be changed after creation. For more information see [Ephemeral OS](https://docs.microsoft.com/azure/aks/cluster-configuration#ephemeral-os). </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OSSKU">
      <MemberSignature Language="C#" Value="public Azure.ResourceManager.ContainerService.Models.Ossku? OSSKU { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerService.Models.Ossku&gt; OSSKU" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.ContainerService.AgentPoolData.OSSKU" />
      <MemberSignature Language="VB.NET" Value="Public Property OSSKU As Nullable(Of Ossku)" />
      <MemberSignature Language="F#" Value="member this.OSSKU : Nullable&lt;Azure.ResourceManager.ContainerService.Models.Ossku&gt; with get, set" Usage="Azure.ResourceManager.ContainerService.AgentPoolData.OSSKU" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Azure.ResourceManager.ContainerService.Models.Ossku&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Specifies an OS SKU. This value must not be specified if OSType is Windows. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OSType">
      <MemberSignature Language="C#" Value="public Azure.ResourceManager.ContainerService.Models.OSType? OSType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerService.Models.OSType&gt; OSType" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.ContainerService.AgentPoolData.OSType" />
      <MemberSignature Language="VB.NET" Value="Public Property OSType As Nullable(Of OSType)" />
      <MemberSignature Language="F#" Value="member this.OSType : Nullable&lt;Azure.ResourceManager.ContainerService.Models.OSType&gt; with get, set" Usage="Azure.ResourceManager.ContainerService.AgentPoolData.OSType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Azure.ResourceManager.ContainerService.Models.OSType&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The operating system type. The default is Linux. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PodSubnetId">
      <MemberSignature Language="C#" Value="public string PodSubnetId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PodSubnetId" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.ContainerService.AgentPoolData.PodSubnetId" />
      <MemberSignature Language="VB.NET" Value="Public Property PodSubnetId As String" />
      <MemberSignature Language="F#" Value="member this.PodSubnetId : string with get, set" Usage="Azure.ResourceManager.ContainerService.AgentPoolData.PodSubnetId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> If omitted, pod IPs are statically assigned on the node subnet (see vnetSubnetID for more details). This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PowerStateCode">
      <MemberSignature Language="C#" Value="public Azure.ResourceManager.ContainerService.Models.Code? PowerStateCode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerService.Models.Code&gt; PowerStateCode" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.ContainerService.AgentPoolData.PowerStateCode" />
      <MemberSignature Language="VB.NET" Value="Public Property PowerStateCode As Nullable(Of Code)" />
      <MemberSignature Language="F#" Value="member this.PowerStateCode : Nullable&lt;Azure.ResourceManager.ContainerService.Models.Code&gt; with get, set" Usage="Azure.ResourceManager.ContainerService.AgentPoolData.PowerStateCode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Azure.ResourceManager.ContainerService.Models.Code&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Tells whether the cluster is Running or Stopped. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProvisioningState">
      <MemberSignature Language="C#" Value="public string ProvisioningState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProvisioningState" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.ContainerService.AgentPoolData.ProvisioningState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProvisioningState As String" />
      <MemberSignature Language="F#" Value="member this.ProvisioningState : string" Usage="Azure.ResourceManager.ContainerService.AgentPoolData.ProvisioningState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The current deployment or provisioning state. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProximityPlacementGroupId">
      <MemberSignature Language="C#" Value="public string ProximityPlacementGroupId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProximityPlacementGroupId" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.ContainerService.AgentPoolData.ProximityPlacementGroupId" />
      <MemberSignature Language="VB.NET" Value="Public Property ProximityPlacementGroupId As String" />
      <MemberSignature Language="F#" Value="member this.ProximityPlacementGroupId : string with get, set" Usage="Azure.ResourceManager.ContainerService.AgentPoolData.ProximityPlacementGroupId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The ID for Proximity Placement Group. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScaleDownMode">
      <MemberSignature Language="C#" Value="public Azure.ResourceManager.ContainerService.Models.ScaleDownMode? ScaleDownMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerService.Models.ScaleDownMode&gt; ScaleDownMode" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.ContainerService.AgentPoolData.ScaleDownMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ScaleDownMode As Nullable(Of ScaleDownMode)" />
      <MemberSignature Language="F#" Value="member this.ScaleDownMode : Nullable&lt;Azure.ResourceManager.ContainerService.Models.ScaleDownMode&gt; with get, set" Usage="Azure.ResourceManager.ContainerService.AgentPoolData.ScaleDownMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Azure.ResourceManager.ContainerService.Models.ScaleDownMode&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> This also effects the cluster autoscaler behavior. If not specified, it defaults to Delete. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScaleSetEvictionPolicy">
      <MemberSignature Language="C#" Value="public Azure.ResourceManager.ContainerService.Models.ScaleSetEvictionPolicy? ScaleSetEvictionPolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerService.Models.ScaleSetEvictionPolicy&gt; ScaleSetEvictionPolicy" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.ContainerService.AgentPoolData.ScaleSetEvictionPolicy" />
      <MemberSignature Language="VB.NET" Value="Public Property ScaleSetEvictionPolicy As Nullable(Of ScaleSetEvictionPolicy)" />
      <MemberSignature Language="F#" Value="member this.ScaleSetEvictionPolicy : Nullable&lt;Azure.ResourceManager.ContainerService.Models.ScaleSetEvictionPolicy&gt; with get, set" Usage="Azure.ResourceManager.ContainerService.AgentPoolData.ScaleSetEvictionPolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Azure.ResourceManager.ContainerService.Models.ScaleSetEvictionPolicy&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> This cannot be specified unless the scaleSetPriority is 'Spot'. If not specified, the default is 'Delete'. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScaleSetPriority">
      <MemberSignature Language="C#" Value="public Azure.ResourceManager.ContainerService.Models.ScaleSetPriority? ScaleSetPriority { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerService.Models.ScaleSetPriority&gt; ScaleSetPriority" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.ContainerService.AgentPoolData.ScaleSetPriority" />
      <MemberSignature Language="VB.NET" Value="Public Property ScaleSetPriority As Nullable(Of ScaleSetPriority)" />
      <MemberSignature Language="F#" Value="member this.ScaleSetPriority : Nullable&lt;Azure.ResourceManager.ContainerService.Models.ScaleSetPriority&gt; with get, set" Usage="Azure.ResourceManager.ContainerService.AgentPoolData.ScaleSetPriority" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Azure.ResourceManager.ContainerService.Models.ScaleSetPriority&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The Virtual Machine Scale Set priority. If not specified, the default is 'Regular'. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SpotMaxPrice">
      <MemberSignature Language="C#" Value="public float? SpotMaxPrice { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;float32&gt; SpotMaxPrice" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.ContainerService.AgentPoolData.SpotMaxPrice" />
      <MemberSignature Language="VB.NET" Value="Public Property SpotMaxPrice As Nullable(Of Single)" />
      <MemberSignature Language="F#" Value="member this.SpotMaxPrice : Nullable&lt;single&gt; with get, set" Usage="Azure.ResourceManager.ContainerService.AgentPoolData.SpotMaxPrice" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Possible values are any decimal value greater than zero or -1 which indicates the willingness to pay any on-demand price. For more details on spot pricing, see [spot VMs pricing](https://docs.microsoft.com/azure/virtual-machines/spot-vms#pricing). </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Tags">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,string&gt; Tags { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; Tags" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.ContainerService.AgentPoolData.Tags" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Tags As IDictionary(Of String, String)" />
      <MemberSignature Language="F#" Value="member this.Tags : System.Collections.Generic.IDictionary&lt;string, string&gt;" Usage="Azure.ResourceManager.ContainerService.AgentPoolData.Tags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The tags to be persisted on the agent pool virtual machine scale set. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypePropertiesType">
      <MemberSignature Language="C#" Value="public Azure.ResourceManager.ContainerService.Models.AgentPoolType? TypePropertiesType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerService.Models.AgentPoolType&gt; TypePropertiesType" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.ContainerService.AgentPoolData.TypePropertiesType" />
      <MemberSignature Language="VB.NET" Value="Public Property TypePropertiesType As Nullable(Of AgentPoolType)" />
      <MemberSignature Language="F#" Value="member this.TypePropertiesType : Nullable&lt;Azure.ResourceManager.ContainerService.Models.AgentPoolType&gt; with get, set" Usage="Azure.ResourceManager.ContainerService.AgentPoolData.TypePropertiesType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Azure.ResourceManager.ContainerService.Models.AgentPoolType&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The type of Agent Pool. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpgradeMaxSurge">
      <MemberSignature Language="C#" Value="public string UpgradeMaxSurge { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UpgradeMaxSurge" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.ContainerService.AgentPoolData.UpgradeMaxSurge" />
      <MemberSignature Language="VB.NET" Value="Public Property UpgradeMaxSurge As String" />
      <MemberSignature Language="F#" Value="member this.UpgradeMaxSurge : string with get, set" Usage="Azure.ResourceManager.ContainerService.AgentPoolData.UpgradeMaxSurge" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> This can either be set to an integer (e.g. '5') or a percentage (e.g. '50%'). If a percentage is specified, it is the percentage of the total agent pool size at the time of the upgrade. For percentages, fractional nodes are rounded up. If not specified, the default is 1. For more information, including best practices, see: https://docs.microsoft.com/azure/aks/upgrade-cluster#customize-node-surge-upgrade. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VmSize">
      <MemberSignature Language="C#" Value="public string VmSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VmSize" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.ContainerService.AgentPoolData.VmSize" />
      <MemberSignature Language="VB.NET" Value="Public Property VmSize As String" />
      <MemberSignature Language="F#" Value="member this.VmSize : string with get, set" Usage="Azure.ResourceManager.ContainerService.AgentPoolData.VmSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> VM size availability varies by region. If a node contains insufficient compute resources (memory, cpu, etc) pods might fail to run correctly. For more details on restricted VM sizes, see: https://docs.microsoft.com/azure/aks/quotas-skus-regions. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VnetSubnetId">
      <MemberSignature Language="C#" Value="public string VnetSubnetId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VnetSubnetId" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.ContainerService.AgentPoolData.VnetSubnetId" />
      <MemberSignature Language="VB.NET" Value="Public Property VnetSubnetId As String" />
      <MemberSignature Language="F#" Value="member this.VnetSubnetId : string with get, set" Usage="Azure.ResourceManager.ContainerService.AgentPoolData.VnetSubnetId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> If this is not specified, a VNET and subnet will be generated and used. If no podSubnetID is specified, this applies to nodes and pods, otherwise it applies to just nodes. This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WorkloadRuntime">
      <MemberSignature Language="C#" Value="public Azure.ResourceManager.ContainerService.Models.WorkloadRuntime? WorkloadRuntime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.ContainerService.Models.WorkloadRuntime&gt; WorkloadRuntime" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.ContainerService.AgentPoolData.WorkloadRuntime" />
      <MemberSignature Language="VB.NET" Value="Public Property WorkloadRuntime As Nullable(Of WorkloadRuntime)" />
      <MemberSignature Language="F#" Value="member this.WorkloadRuntime : Nullable&lt;Azure.ResourceManager.ContainerService.Models.WorkloadRuntime&gt; with get, set" Usage="Azure.ResourceManager.ContainerService.AgentPoolData.WorkloadRuntime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerService</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Azure.ResourceManager.ContainerService.Models.WorkloadRuntime&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Determines the type of workload a node can run. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

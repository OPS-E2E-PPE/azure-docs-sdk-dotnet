<Type Name="ManagementLockCreateOrUpdateByScopeOperation" FullName="Azure.ResourceManager.Resources.Models.ManagementLockCreateOrUpdateByScopeOperation">
  <TypeSignature Language="C#" Value="public class ManagementLockCreateOrUpdateByScopeOperation : Azure.Operation&lt;Azure.ResourceManager.Resources.ManagementLockObject&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ManagementLockCreateOrUpdateByScopeOperation extends Azure.Operation`1&lt;class Azure.ResourceManager.Resources.ManagementLockObject&gt;" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Resources.Models.ManagementLockCreateOrUpdateByScopeOperation" />
  <TypeSignature Language="VB.NET" Value="Public Class ManagementLockCreateOrUpdateByScopeOperation&#xA;Inherits Operation(Of ManagementLockObject)" />
  <TypeSignature Language="F#" Value="type ManagementLockCreateOrUpdateByScopeOperation = class&#xA;    inherit Operation&lt;ManagementLockObject&gt;" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.Operation&lt;Azure.ResourceManager.Resources.ManagementLockObject&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="!0">Azure.ResourceManager.Resources.ManagementLockObject</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <summary> Create or update a management lock by scope. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ManagementLockCreateOrUpdateByScopeOperation ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.Models.ManagementLockCreateOrUpdateByScopeOperation.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of ManagementLockCreateOrUpdateByScopeOperation for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRawResponse">
      <MemberSignature Language="C#" Value="public override Azure.Response GetRawResponse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Azure.Response GetRawResponse() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.Models.ManagementLockCreateOrUpdateByScopeOperation.GetRawResponse" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetRawResponse () As Response" />
      <MemberSignature Language="F#" Value="override this.GetRawResponse : unit -&gt; Azure.Response" Usage="managementLockCreateOrUpdateByScopeOperation.GetRawResponse " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            The last HTTP response received from the server.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            The last response returned from the server during the lifecycle of this instance.
            An instance of <see cref="T:Azure.Operation`1" /> sends requests to a server in UpdateStatusAsync, UpdateStatus, and other methods.
            Responses from these requests can be accessed using GetRawResponse.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasCompleted">
      <MemberSignature Language="C#" Value="public override bool HasCompleted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasCompleted" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Resources.Models.ManagementLockCreateOrUpdateByScopeOperation.HasCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property HasCompleted As Boolean" />
      <MemberSignature Language="F#" Value="member this.HasCompleted : bool" Usage="Azure.ResourceManager.Resources.Models.ManagementLockCreateOrUpdateByScopeOperation.HasCompleted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns true if the long-running operation completed.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasValue">
      <MemberSignature Language="C#" Value="public override bool HasValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasValue" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Resources.Models.ManagementLockCreateOrUpdateByScopeOperation.HasValue" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property HasValue As Boolean" />
      <MemberSignature Language="F#" Value="member this.HasValue : bool" Usage="Azure.ResourceManager.Resources.Models.ManagementLockCreateOrUpdateByScopeOperation.HasValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns true if the long-running operation completed successfully and has produced final result (accessible by Value property).
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public override string Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Resources.Models.ManagementLockCreateOrUpdateByScopeOperation.Id" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Id As String" />
      <MemberSignature Language="F#" Value="member this.Id : string" Usage="Azure.ResourceManager.Resources.Models.ManagementLockCreateOrUpdateByScopeOperation.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets an ID representing the operation that can be used to poll for
            the status of the long-running operation.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateStatus">
      <MemberSignature Language="C#" Value="public override Azure.Response UpdateStatus (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Azure.Response UpdateStatus(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.Models.ManagementLockCreateOrUpdateByScopeOperation.UpdateStatus(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function UpdateStatus (Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="override this.UpdateStatus : System.Threading.CancellationToken -&gt; Azure.Response" Usage="managementLockCreateOrUpdateByScopeOperation.UpdateStatus cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the service call.</param>
        <summary>
            Calls the server to get updated status of the long-running operation.
            </summary>
        <returns>The HTTP response received from the server.</returns>
        <remarks>
            This operation will update the value returned from GetRawResponse and might update HasCompleted, HasValue, and Value.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateStatusAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.ValueTask&lt;Azure.Response&gt; UpdateStatusAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;class Azure.Response&gt; UpdateStatusAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.Models.ManagementLockCreateOrUpdateByScopeOperation.UpdateStatusAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function UpdateStatusAsync (Optional cancellationToken As CancellationToken = Nothing) As ValueTask(Of Response)" />
      <MemberSignature Language="F#" Value="override this.UpdateStatusAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;Azure.Response&gt;" Usage="managementLockCreateOrUpdateByScopeOperation.UpdateStatusAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the service call.</param>
        <summary>
            Calls the server to get updated status of the long-running operation.
            </summary>
        <returns>The HTTP response received from the server.</returns>
        <remarks>
            This operation will update the value returned from GetRawResponse and might update HasCompleted, HasValue, and Value.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public override Azure.ResourceManager.Resources.ManagementLockObject Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.Resources.ManagementLockObject Value" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Resources.Models.ManagementLockCreateOrUpdateByScopeOperation.Value" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Value As ManagementLockObject" />
      <MemberSignature Language="F#" Value="member this.Value : Azure.ResourceManager.Resources.ManagementLockObject" Usage="Azure.ResourceManager.Resources.Models.ManagementLockCreateOrUpdateByScopeOperation.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Resources.ManagementLockObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Final result of the long-running operation.
            </summary>
        <value>To be added.</value>
        <remarks>
            This property can be accessed only after the operation completes successfully (HasValue is true).
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="WaitForCompletionAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.ValueTask&lt;Azure.Response&lt;Azure.ResourceManager.Resources.ManagementLockObject&gt;&gt; WaitForCompletionAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Resources.ManagementLockObject&gt;&gt; WaitForCompletionAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.Models.ManagementLockCreateOrUpdateByScopeOperation.WaitForCompletionAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WaitForCompletionAsync (Optional cancellationToken As CancellationToken = Nothing) As ValueTask(Of Response(Of ManagementLockObject))" />
      <MemberSignature Language="F#" Value="override this.WaitForCompletionAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;Azure.Response&lt;Azure.ResourceManager.Resources.ManagementLockObject&gt;&gt;" Usage="managementLockCreateOrUpdateByScopeOperation.WaitForCompletionAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;Azure.Response&lt;Azure.ResourceManager.Resources.ManagementLockObject&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the periodical service calls.</param>
        <summary>
            Periodically calls the server till the long-running operation completes.
            </summary>
        <returns>The last HTTP response received from the server.</returns>
        <remarks>
            This method will periodically call UpdateStatusAsync till HasCompleted is true, then return the final result of the operation.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="WaitForCompletionAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.ValueTask&lt;Azure.Response&lt;Azure.ResourceManager.Resources.ManagementLockObject&gt;&gt; WaitForCompletionAsync (TimeSpan pollingInterval, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Resources.ManagementLockObject&gt;&gt; WaitForCompletionAsync(valuetype System.TimeSpan pollingInterval, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.Models.ManagementLockCreateOrUpdateByScopeOperation.WaitForCompletionAsync(System.TimeSpan,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WaitForCompletionAsync (pollingInterval As TimeSpan, Optional cancellationToken As CancellationToken = Nothing) As ValueTask(Of Response(Of ManagementLockObject))" />
      <MemberSignature Language="F#" Value="override this.WaitForCompletionAsync : TimeSpan * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;Azure.Response&lt;Azure.ResourceManager.Resources.ManagementLockObject&gt;&gt;" Usage="managementLockCreateOrUpdateByScopeOperation.WaitForCompletionAsync (pollingInterval, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;Azure.Response&lt;Azure.ResourceManager.Resources.ManagementLockObject&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pollingInterval" Type="System.TimeSpan" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="pollingInterval">
            The interval between status requests to the server.
            The interval can change based on information returned from the server.
            For example, the server might communicate to the client that there is not reason to poll for status change sooner than some time.
            </param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the periodical service calls.</param>
        <summary>
            Periodically calls the server till the long-running operation completes.
            </summary>
        <returns>The last HTTP response received from the server.</returns>
        <remarks>
            This method will periodically call UpdateStatusAsync till HasCompleted is true, then return the final result of the operation.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>

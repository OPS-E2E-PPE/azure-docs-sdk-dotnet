<Type Name="CdnEndpoint" FullName="Azure.ResourceManager.Cdn.CdnEndpoint">
  <TypeSignature Language="C#" Value="public class CdnEndpoint : Azure.ResourceManager.Core.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CdnEndpoint extends Azure.ResourceManager.Core.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Cdn.CdnEndpoint" />
  <TypeSignature Language="VB.NET" Value="Public Class CdnEndpoint&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type CdnEndpoint = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.Core.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A Class representing a CdnEndpoint along with the instance operations that can be performed on it. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CdnEndpoint ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Cdn.CdnEndpoint.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Cdn.CdnEndpoint" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddTag">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Cdn.CdnEndpoint&gt; AddTag (string key, string value, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Cdn.CdnEndpoint&gt; AddTag(string key, string value, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Cdn.CdnEndpoint.AddTag(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddTag (key As String, value As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of CdnEndpoint)" />
      <MemberSignature Language="F#" Value="abstract member AddTag : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Cdn.CdnEndpoint&gt;&#xA;override this.AddTag : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Cdn.CdnEndpoint&gt;" Usage="cdnEndpoint.AddTag (key, value, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Cdn.CdnEndpoint&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="key"> The key for the tag. </param>
        <param name="value"> The value for the tag. </param>
        <param name="cancellationToken"> A token to allow the caller to cancel the call to the service. The default value is <see cref="P:System.Threading.CancellationToken.None" />. </param>
        <summary> Add a tag to the current resource. </summary>
        <returns> The updated resource with the tag added. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddTagAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.CdnEndpoint&gt;&gt; AddTagAsync (string key, string value, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Cdn.CdnEndpoint&gt;&gt; AddTagAsync(string key, string value, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Cdn.CdnEndpoint.AddTagAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddTagAsync (key As String, value As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of CdnEndpoint))" />
      <MemberSignature Language="F#" Value="abstract member AddTagAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.CdnEndpoint&gt;&gt;&#xA;override this.AddTagAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.CdnEndpoint&gt;&gt;" Usage="cdnEndpoint.AddTagAsync (key, value, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.CdnEndpoint&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="key"> The key for the tag. </param>
        <param name="value"> The value for the tag. </param>
        <param name="cancellationToken"> A token to allow the caller to cancel the call to the service. The default value is <see cref="P:System.Threading.CancellationToken.None" />. </param>
        <summary> Add a tag to the current resource. </summary>
        <returns> The updated resource with the tag added. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateResourceIdentifier">
      <MemberSignature Language="C#" Value="public static Azure.Core.ResourceIdentifier CreateResourceIdentifier (string subscriptionId, string resourceGroupName, string profileName, string endpointName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Core.ResourceIdentifier CreateResourceIdentifier(string subscriptionId, string resourceGroupName, string profileName, string endpointName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Cdn.CdnEndpoint.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateResourceIdentifier (subscriptionId As String, resourceGroupName As String, profileName As String, endpointName As String) As ResourceIdentifier" />
      <MemberSignature Language="F#" Value="static member CreateResourceIdentifier : string * string * string * string -&gt; Azure.Core.ResourceIdentifier" Usage="Azure.ResourceManager.Cdn.CdnEndpoint.CreateResourceIdentifier (subscriptionId, resourceGroupName, profileName, endpointName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.ResourceIdentifier</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionId" Type="System.String" />
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="profileName" Type="System.String" />
        <Parameter Name="endpointName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subscriptionId">To be added.</param>
        <param name="resourceGroupName">To be added.</param>
        <param name="profileName">To be added.</param>
        <param name="endpointName">To be added.</param>
        <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.Cdn.CdnEndpoint" /> instance. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Cdn.CdnEndpointData Data { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.Cdn.CdnEndpointData Data" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Cdn.CdnEndpoint.Data" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Data As CdnEndpointData" />
      <MemberSignature Language="F#" Value="member this.Data : Azure.ResourceManager.Cdn.CdnEndpointData" Usage="Azure.ResourceManager.Cdn.CdnEndpoint.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Cdn.CdnEndpointData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets the data representing this Feature. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Cdn.Models.CdnEndpointDeleteOperation Delete (bool waitForCompletion, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Cdn.Models.CdnEndpointDeleteOperation Delete(bool waitForCompletion, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Cdn.CdnEndpoint.Delete(System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Delete (waitForCompletion As Boolean, Optional cancellationToken As CancellationToken = Nothing) As CdnEndpointDeleteOperation" />
      <MemberSignature Language="F#" Value="abstract member Delete : bool * System.Threading.CancellationToken -&gt; Azure.ResourceManager.Cdn.Models.CdnEndpointDeleteOperation&#xA;override this.Delete : bool * System.Threading.CancellationToken -&gt; Azure.ResourceManager.Cdn.Models.CdnEndpointDeleteOperation" Usage="cdnEndpoint.Delete (waitForCompletion, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Cdn.Models.CdnEndpointDeleteOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitForCompletion" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitForCompletion"> Waits for the completion of the long running operations. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Deletes an existing CDN endpoint with the specified endpoint name under the specified subscription, resource group and profile. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.Cdn.Models.CdnEndpointDeleteOperation&gt; DeleteAsync (bool waitForCompletion, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.Cdn.Models.CdnEndpointDeleteOperation&gt; DeleteAsync(bool waitForCompletion, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Cdn.CdnEndpoint.DeleteAsync(System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteAsync (waitForCompletion As Boolean, Optional cancellationToken As CancellationToken = Nothing) As Task(Of CdnEndpointDeleteOperation)" />
      <MemberSignature Language="F#" Value="abstract member DeleteAsync : bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.Cdn.Models.CdnEndpointDeleteOperation&gt;&#xA;override this.DeleteAsync : bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.Cdn.Models.CdnEndpointDeleteOperation&gt;" Usage="cdnEndpoint.DeleteAsync (waitForCompletion, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.Cdn.Models.CdnEndpointDeleteOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitForCompletion" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitForCompletion"> Waits for the completion of the long running operations. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Deletes an existing CDN endpoint with the specified endpoint name under the specified subscription, resource group and profile. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Cdn.CdnEndpoint&gt; Get (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Cdn.CdnEndpoint&gt; Get(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Cdn.CdnEndpoint.Get(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Get (Optional cancellationToken As CancellationToken = Nothing) As Response(Of CdnEndpoint)" />
      <MemberSignature Language="F#" Value="abstract member Get : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Cdn.CdnEndpoint&gt;&#xA;override this.Get : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Cdn.CdnEndpoint&gt;" Usage="cdnEndpoint.Get cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Cdn.CdnEndpoint&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets an existing CDN endpoint with the specified endpoint name under the specified subscription, resource group and profile. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.CdnEndpoint&gt;&gt; GetAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Cdn.CdnEndpoint&gt;&gt; GetAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Cdn.CdnEndpoint.GetAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of CdnEndpoint))" />
      <MemberSignature Language="F#" Value="abstract member GetAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.CdnEndpoint&gt;&gt;&#xA;override this.GetAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.CdnEndpoint&gt;&gt;" Usage="cdnEndpoint.GetAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.CdnEndpoint&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets an existing CDN endpoint with the specified endpoint name under the specified subscription, resource group and profile. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAvailableLocations">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;Azure.Core.AzureLocation&gt; GetAvailableLocations (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;valuetype Azure.Core.AzureLocation&gt; GetAvailableLocations(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Cdn.CdnEndpoint.GetAvailableLocations(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAvailableLocations (Optional cancellationToken As CancellationToken = Nothing) As IEnumerable(Of AzureLocation)" />
      <MemberSignature Language="F#" Value="abstract member GetAvailableLocations : System.Threading.CancellationToken -&gt; seq&lt;Azure.Core.AzureLocation&gt;&#xA;override this.GetAvailableLocations : System.Threading.CancellationToken -&gt; seq&lt;Azure.Core.AzureLocation&gt;" Usage="cdnEndpoint.GetAvailableLocations cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Azure.Core.AzureLocation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> A token to allow the caller to cancel the call to the service. The default value is <see cref="P:System.Threading.CancellationToken.None" />. </param>
        <summary> Lists all available geo-locations. </summary>
        <returns> A collection of locations that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAvailableLocationsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.IEnumerable&lt;Azure.Core.AzureLocation&gt;&gt; GetAvailableLocationsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IEnumerable`1&lt;valuetype Azure.Core.AzureLocation&gt;&gt; GetAvailableLocationsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Cdn.CdnEndpoint.GetAvailableLocationsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAvailableLocationsAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of IEnumerable(Of AzureLocation))" />
      <MemberSignature Language="F#" Value="abstract member GetAvailableLocationsAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;seq&lt;Azure.Core.AzureLocation&gt;&gt;&#xA;override this.GetAvailableLocationsAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;seq&lt;Azure.Core.AzureLocation&gt;&gt;" Usage="cdnEndpoint.GetAvailableLocationsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IEnumerable&lt;Azure.Core.AzureLocation&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> A token to allow the caller to cancel the call to the service. The default value is <see cref="P:System.Threading.CancellationToken.None" />. </param>
        <summary> Lists all available geo-locations. </summary>
        <returns> A collection of locations that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCdnCustomDomains">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Cdn.CdnCustomDomainCollection GetCdnCustomDomains ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Cdn.CdnCustomDomainCollection GetCdnCustomDomains() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Cdn.CdnEndpoint.GetCdnCustomDomains" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCdnCustomDomains () As CdnCustomDomainCollection" />
      <MemberSignature Language="F#" Value="abstract member GetCdnCustomDomains : unit -&gt; Azure.ResourceManager.Cdn.CdnCustomDomainCollection&#xA;override this.GetCdnCustomDomains : unit -&gt; Azure.ResourceManager.Cdn.CdnCustomDomainCollection" Usage="cdnEndpoint.GetCdnCustomDomains " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Cdn.CdnCustomDomainCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of CdnCustomDomains in the CdnEndpoint. </summary>
        <returns> An object representing collection of CdnCustomDomains and their operations over a CdnEndpoint. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCdnOriginGroups">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Cdn.CdnOriginGroupCollection GetCdnOriginGroups ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Cdn.CdnOriginGroupCollection GetCdnOriginGroups() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Cdn.CdnEndpoint.GetCdnOriginGroups" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCdnOriginGroups () As CdnOriginGroupCollection" />
      <MemberSignature Language="F#" Value="abstract member GetCdnOriginGroups : unit -&gt; Azure.ResourceManager.Cdn.CdnOriginGroupCollection&#xA;override this.GetCdnOriginGroups : unit -&gt; Azure.ResourceManager.Cdn.CdnOriginGroupCollection" Usage="cdnEndpoint.GetCdnOriginGroups " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Cdn.CdnOriginGroupCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of CdnOriginGroups in the CdnEndpoint. </summary>
        <returns> An object representing collection of CdnOriginGroups and their operations over a CdnEndpoint. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCdnOrigins">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Cdn.CdnOriginCollection GetCdnOrigins ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Cdn.CdnOriginCollection GetCdnOrigins() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Cdn.CdnEndpoint.GetCdnOrigins" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCdnOrigins () As CdnOriginCollection" />
      <MemberSignature Language="F#" Value="abstract member GetCdnOrigins : unit -&gt; Azure.ResourceManager.Cdn.CdnOriginCollection&#xA;override this.GetCdnOrigins : unit -&gt; Azure.ResourceManager.Cdn.CdnOriginCollection" Usage="cdnEndpoint.GetCdnOrigins " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Cdn.CdnOriginCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of CdnOrigins in the CdnEndpoint. </summary>
        <returns> An object representing collection of CdnOrigins and their operations over a CdnEndpoint. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetResourceUsage">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Cdn.Models.ResourceUsage&gt; GetResourceUsage (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Cdn.Models.ResourceUsage&gt; GetResourceUsage(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Cdn.CdnEndpoint.GetResourceUsage(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetResourceUsage (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ResourceUsage)" />
      <MemberSignature Language="F#" Value="abstract member GetResourceUsage : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Cdn.Models.ResourceUsage&gt;&#xA;override this.GetResourceUsage : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Cdn.Models.ResourceUsage&gt;" Usage="cdnEndpoint.GetResourceUsage cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Cdn.Models.ResourceUsage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Checks the quota and usage of geo filters and custom domains under the given endpoint. </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Cdn.Models.ResourceUsage" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetResourceUsageAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Cdn.Models.ResourceUsage&gt; GetResourceUsageAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Cdn.Models.ResourceUsage&gt; GetResourceUsageAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Cdn.CdnEndpoint.GetResourceUsageAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetResourceUsageAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ResourceUsage)" />
      <MemberSignature Language="F#" Value="abstract member GetResourceUsageAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Cdn.Models.ResourceUsage&gt;&#xA;override this.GetResourceUsageAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Cdn.Models.ResourceUsage&gt;" Usage="cdnEndpoint.GetResourceUsageAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Cdn.Models.ResourceUsage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Checks the quota and usage of geo filters and custom domains under the given endpoint. </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Cdn.Models.ResourceUsage" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasData">
      <MemberSignature Language="C#" Value="public virtual bool HasData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasData" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Cdn.CdnEndpoint.HasData" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HasData As Boolean" />
      <MemberSignature Language="F#" Value="member this.HasData : bool" Usage="Azure.ResourceManager.Cdn.CdnEndpoint.HasData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets whether or not the current instance has data. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadContent">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Cdn.Models.CdnEndpointLoadContentOperation LoadContent (bool waitForCompletion, Azure.ResourceManager.Cdn.Models.LoadOptions contentFilePaths, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Cdn.Models.CdnEndpointLoadContentOperation LoadContent(bool waitForCompletion, class Azure.ResourceManager.Cdn.Models.LoadOptions contentFilePaths, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Cdn.CdnEndpoint.LoadContent(System.Boolean,Azure.ResourceManager.Cdn.Models.LoadOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LoadContent (waitForCompletion As Boolean, contentFilePaths As LoadOptions, Optional cancellationToken As CancellationToken = Nothing) As CdnEndpointLoadContentOperation" />
      <MemberSignature Language="F#" Value="abstract member LoadContent : bool * Azure.ResourceManager.Cdn.Models.LoadOptions * System.Threading.CancellationToken -&gt; Azure.ResourceManager.Cdn.Models.CdnEndpointLoadContentOperation&#xA;override this.LoadContent : bool * Azure.ResourceManager.Cdn.Models.LoadOptions * System.Threading.CancellationToken -&gt; Azure.ResourceManager.Cdn.Models.CdnEndpointLoadContentOperation" Usage="cdnEndpoint.LoadContent (waitForCompletion, contentFilePaths, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Cdn.Models.CdnEndpointLoadContentOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitForCompletion" Type="System.Boolean" />
        <Parameter Name="contentFilePaths" Type="Azure.ResourceManager.Cdn.Models.LoadOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitForCompletion"> Waits for the completion of the long running operations. </param>
        <param name="contentFilePaths"> The path to the content to be loaded. Path should be a full URL, e.g. ‘/pictures/city.png' which loads a single file. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Pre-loads a content to CDN. Available for Verizon Profiles. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="contentFilePaths" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="LoadContentAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.Cdn.Models.CdnEndpointLoadContentOperation&gt; LoadContentAsync (bool waitForCompletion, Azure.ResourceManager.Cdn.Models.LoadOptions contentFilePaths, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.Cdn.Models.CdnEndpointLoadContentOperation&gt; LoadContentAsync(bool waitForCompletion, class Azure.ResourceManager.Cdn.Models.LoadOptions contentFilePaths, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Cdn.CdnEndpoint.LoadContentAsync(System.Boolean,Azure.ResourceManager.Cdn.Models.LoadOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LoadContentAsync (waitForCompletion As Boolean, contentFilePaths As LoadOptions, Optional cancellationToken As CancellationToken = Nothing) As Task(Of CdnEndpointLoadContentOperation)" />
      <MemberSignature Language="F#" Value="abstract member LoadContentAsync : bool * Azure.ResourceManager.Cdn.Models.LoadOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.Cdn.Models.CdnEndpointLoadContentOperation&gt;&#xA;override this.LoadContentAsync : bool * Azure.ResourceManager.Cdn.Models.LoadOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.Cdn.Models.CdnEndpointLoadContentOperation&gt;" Usage="cdnEndpoint.LoadContentAsync (waitForCompletion, contentFilePaths, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.Cdn.Models.CdnEndpointLoadContentOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitForCompletion" Type="System.Boolean" />
        <Parameter Name="contentFilePaths" Type="Azure.ResourceManager.Cdn.Models.LoadOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitForCompletion"> Waits for the completion of the long running operations. </param>
        <param name="contentFilePaths"> The path to the content to be loaded. Path should be a full URL, e.g. ‘/pictures/city.png' which loads a single file. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Pre-loads a content to CDN. Available for Verizon Profiles. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="contentFilePaths" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="PurgeContent">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Cdn.Models.CdnEndpointPurgeContentOperation PurgeContent (bool waitForCompletion, Azure.ResourceManager.Cdn.Models.PurgeOptions contentFilePaths, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Cdn.Models.CdnEndpointPurgeContentOperation PurgeContent(bool waitForCompletion, class Azure.ResourceManager.Cdn.Models.PurgeOptions contentFilePaths, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Cdn.CdnEndpoint.PurgeContent(System.Boolean,Azure.ResourceManager.Cdn.Models.PurgeOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PurgeContent (waitForCompletion As Boolean, contentFilePaths As PurgeOptions, Optional cancellationToken As CancellationToken = Nothing) As CdnEndpointPurgeContentOperation" />
      <MemberSignature Language="F#" Value="abstract member PurgeContent : bool * Azure.ResourceManager.Cdn.Models.PurgeOptions * System.Threading.CancellationToken -&gt; Azure.ResourceManager.Cdn.Models.CdnEndpointPurgeContentOperation&#xA;override this.PurgeContent : bool * Azure.ResourceManager.Cdn.Models.PurgeOptions * System.Threading.CancellationToken -&gt; Azure.ResourceManager.Cdn.Models.CdnEndpointPurgeContentOperation" Usage="cdnEndpoint.PurgeContent (waitForCompletion, contentFilePaths, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Cdn.Models.CdnEndpointPurgeContentOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitForCompletion" Type="System.Boolean" />
        <Parameter Name="contentFilePaths" Type="Azure.ResourceManager.Cdn.Models.PurgeOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitForCompletion"> Waits for the completion of the long running operations. </param>
        <param name="contentFilePaths"> The path to the content to be purged. Path can be a full URL, e.g. '/pictures/city.png' which removes a single file, or a directory with a wildcard, e.g. '/pictures/*' which removes all folders and files in the directory. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Removes a content from CDN. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="contentFilePaths" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="PurgeContentAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.Cdn.Models.CdnEndpointPurgeContentOperation&gt; PurgeContentAsync (bool waitForCompletion, Azure.ResourceManager.Cdn.Models.PurgeOptions contentFilePaths, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.Cdn.Models.CdnEndpointPurgeContentOperation&gt; PurgeContentAsync(bool waitForCompletion, class Azure.ResourceManager.Cdn.Models.PurgeOptions contentFilePaths, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Cdn.CdnEndpoint.PurgeContentAsync(System.Boolean,Azure.ResourceManager.Cdn.Models.PurgeOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PurgeContentAsync (waitForCompletion As Boolean, contentFilePaths As PurgeOptions, Optional cancellationToken As CancellationToken = Nothing) As Task(Of CdnEndpointPurgeContentOperation)" />
      <MemberSignature Language="F#" Value="abstract member PurgeContentAsync : bool * Azure.ResourceManager.Cdn.Models.PurgeOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.Cdn.Models.CdnEndpointPurgeContentOperation&gt;&#xA;override this.PurgeContentAsync : bool * Azure.ResourceManager.Cdn.Models.PurgeOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.Cdn.Models.CdnEndpointPurgeContentOperation&gt;" Usage="cdnEndpoint.PurgeContentAsync (waitForCompletion, contentFilePaths, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.Cdn.Models.CdnEndpointPurgeContentOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitForCompletion" Type="System.Boolean" />
        <Parameter Name="contentFilePaths" Type="Azure.ResourceManager.Cdn.Models.PurgeOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitForCompletion"> Waits for the completion of the long running operations. </param>
        <param name="contentFilePaths"> The path to the content to be purged. Path can be a full URL, e.g. '/pictures/city.png' which removes a single file, or a directory with a wildcard, e.g. '/pictures/*' which removes all folders and files in the directory. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Removes a content from CDN. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="contentFilePaths" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveTag">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Cdn.CdnEndpoint&gt; RemoveTag (string key, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Cdn.CdnEndpoint&gt; RemoveTag(string key, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Cdn.CdnEndpoint.RemoveTag(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoveTag (key As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of CdnEndpoint)" />
      <MemberSignature Language="F#" Value="abstract member RemoveTag : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Cdn.CdnEndpoint&gt;&#xA;override this.RemoveTag : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Cdn.CdnEndpoint&gt;" Usage="cdnEndpoint.RemoveTag (key, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Cdn.CdnEndpoint&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="key"> The key of the tag to remove. </param>
        <param name="cancellationToken"> A token to allow the caller to cancel the call to the service. The default value is <see cref="P:System.Threading.CancellationToken.None" />. </param>
        <summary> Removes a tag by key from the resource. </summary>
        <returns> The updated resource with the tag removed. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveTagAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.CdnEndpoint&gt;&gt; RemoveTagAsync (string key, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Cdn.CdnEndpoint&gt;&gt; RemoveTagAsync(string key, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Cdn.CdnEndpoint.RemoveTagAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoveTagAsync (key As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of CdnEndpoint))" />
      <MemberSignature Language="F#" Value="abstract member RemoveTagAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.CdnEndpoint&gt;&gt;&#xA;override this.RemoveTagAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.CdnEndpoint&gt;&gt;" Usage="cdnEndpoint.RemoveTagAsync (key, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.CdnEndpoint&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="key"> The key of the tag to remove. </param>
        <param name="cancellationToken"> A token to allow the caller to cancel the call to the service. The default value is <see cref="P:System.Threading.CancellationToken.None" />. </param>
        <summary> Removes a tag by key from the resource. </summary>
        <returns> The updated resource with the tag removed. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResourceType">
      <MemberSignature Language="C#" Value="public static readonly Azure.Core.ResourceType ResourceType;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype Azure.Core.ResourceType ResourceType" />
      <MemberSignature Language="DocId" Value="F:Azure.ResourceManager.Cdn.CdnEndpoint.ResourceType" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ResourceType As ResourceType " />
      <MemberSignature Language="F#" Value=" staticval mutable ResourceType : Azure.Core.ResourceType" Usage="Azure.ResourceManager.Cdn.CdnEndpoint.ResourceType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.ResourceType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets the resource type for the operations. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTags">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Cdn.CdnEndpoint&gt; SetTags (System.Collections.Generic.IDictionary&lt;string,string&gt; tags, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Cdn.CdnEndpoint&gt; SetTags(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Cdn.CdnEndpoint.SetTags(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetTags (tags As IDictionary(Of String, String), Optional cancellationToken As CancellationToken = Nothing) As Response(Of CdnEndpoint)" />
      <MemberSignature Language="F#" Value="abstract member SetTags : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Cdn.CdnEndpoint&gt;&#xA;override this.SetTags : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Cdn.CdnEndpoint&gt;" Usage="cdnEndpoint.SetTags (tags, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Cdn.CdnEndpoint&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tags"> The set of tags to use as replacement. </param>
        <param name="cancellationToken"> A token to allow the caller to cancel the call to the service. The default value is <see cref="P:System.Threading.CancellationToken.None" />. </param>
        <summary> Replace the tags on the resource with the given set. </summary>
        <returns> The updated resource with the tags replaced. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTagsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.CdnEndpoint&gt;&gt; SetTagsAsync (System.Collections.Generic.IDictionary&lt;string,string&gt; tags, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Cdn.CdnEndpoint&gt;&gt; SetTagsAsync(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Cdn.CdnEndpoint.SetTagsAsync(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetTagsAsync (tags As IDictionary(Of String, String), Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of CdnEndpoint))" />
      <MemberSignature Language="F#" Value="abstract member SetTagsAsync : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.CdnEndpoint&gt;&gt;&#xA;override this.SetTagsAsync : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.CdnEndpoint&gt;&gt;" Usage="cdnEndpoint.SetTagsAsync (tags, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.CdnEndpoint&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tags"> The set of tags to use as replacement. </param>
        <param name="cancellationToken"> A token to allow the caller to cancel the call to the service. The default value is <see cref="P:System.Threading.CancellationToken.None" />. </param>
        <summary> Replace the tags on the resource with the given set. </summary>
        <returns> The updated resource with the tags replaced. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Cdn.Models.CdnEndpointStartOperation Start (bool waitForCompletion, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Cdn.Models.CdnEndpointStartOperation Start(bool waitForCompletion, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Cdn.CdnEndpoint.Start(System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Start (waitForCompletion As Boolean, Optional cancellationToken As CancellationToken = Nothing) As CdnEndpointStartOperation" />
      <MemberSignature Language="F#" Value="abstract member Start : bool * System.Threading.CancellationToken -&gt; Azure.ResourceManager.Cdn.Models.CdnEndpointStartOperation&#xA;override this.Start : bool * System.Threading.CancellationToken -&gt; Azure.ResourceManager.Cdn.Models.CdnEndpointStartOperation" Usage="cdnEndpoint.Start (waitForCompletion, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Cdn.Models.CdnEndpointStartOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitForCompletion" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitForCompletion"> Waits for the completion of the long running operations. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Starts an existing CDN endpoint that is on a stopped state. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.Cdn.Models.CdnEndpointStartOperation&gt; StartAsync (bool waitForCompletion, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.Cdn.Models.CdnEndpointStartOperation&gt; StartAsync(bool waitForCompletion, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Cdn.CdnEndpoint.StartAsync(System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartAsync (waitForCompletion As Boolean, Optional cancellationToken As CancellationToken = Nothing) As Task(Of CdnEndpointStartOperation)" />
      <MemberSignature Language="F#" Value="abstract member StartAsync : bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.Cdn.Models.CdnEndpointStartOperation&gt;&#xA;override this.StartAsync : bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.Cdn.Models.CdnEndpointStartOperation&gt;" Usage="cdnEndpoint.StartAsync (waitForCompletion, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.Cdn.Models.CdnEndpointStartOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitForCompletion" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitForCompletion"> Waits for the completion of the long running operations. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Starts an existing CDN endpoint that is on a stopped state. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Cdn.Models.CdnEndpointStopOperation Stop (bool waitForCompletion, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Cdn.Models.CdnEndpointStopOperation Stop(bool waitForCompletion, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Cdn.CdnEndpoint.Stop(System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Stop (waitForCompletion As Boolean, Optional cancellationToken As CancellationToken = Nothing) As CdnEndpointStopOperation" />
      <MemberSignature Language="F#" Value="abstract member Stop : bool * System.Threading.CancellationToken -&gt; Azure.ResourceManager.Cdn.Models.CdnEndpointStopOperation&#xA;override this.Stop : bool * System.Threading.CancellationToken -&gt; Azure.ResourceManager.Cdn.Models.CdnEndpointStopOperation" Usage="cdnEndpoint.Stop (waitForCompletion, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Cdn.Models.CdnEndpointStopOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitForCompletion" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitForCompletion"> Waits for the completion of the long running operations. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Stops an existing running CDN endpoint. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StopAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.Cdn.Models.CdnEndpointStopOperation&gt; StopAsync (bool waitForCompletion, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.Cdn.Models.CdnEndpointStopOperation&gt; StopAsync(bool waitForCompletion, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Cdn.CdnEndpoint.StopAsync(System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StopAsync (waitForCompletion As Boolean, Optional cancellationToken As CancellationToken = Nothing) As Task(Of CdnEndpointStopOperation)" />
      <MemberSignature Language="F#" Value="abstract member StopAsync : bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.Cdn.Models.CdnEndpointStopOperation&gt;&#xA;override this.StopAsync : bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.Cdn.Models.CdnEndpointStopOperation&gt;" Usage="cdnEndpoint.StopAsync (waitForCompletion, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.Cdn.Models.CdnEndpointStopOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitForCompletion" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitForCompletion"> Waits for the completion of the long running operations. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Stops an existing running CDN endpoint. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Cdn.Models.CdnEndpointUpdateOperation Update (bool waitForCompletion, Azure.ResourceManager.Cdn.Models.EndpointUpdateOptions endpointUpdateProperties, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Cdn.Models.CdnEndpointUpdateOperation Update(bool waitForCompletion, class Azure.ResourceManager.Cdn.Models.EndpointUpdateOptions endpointUpdateProperties, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Cdn.CdnEndpoint.Update(System.Boolean,Azure.ResourceManager.Cdn.Models.EndpointUpdateOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Update (waitForCompletion As Boolean, endpointUpdateProperties As EndpointUpdateOptions, Optional cancellationToken As CancellationToken = Nothing) As CdnEndpointUpdateOperation" />
      <MemberSignature Language="F#" Value="abstract member Update : bool * Azure.ResourceManager.Cdn.Models.EndpointUpdateOptions * System.Threading.CancellationToken -&gt; Azure.ResourceManager.Cdn.Models.CdnEndpointUpdateOperation&#xA;override this.Update : bool * Azure.ResourceManager.Cdn.Models.EndpointUpdateOptions * System.Threading.CancellationToken -&gt; Azure.ResourceManager.Cdn.Models.CdnEndpointUpdateOperation" Usage="cdnEndpoint.Update (waitForCompletion, endpointUpdateProperties, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Cdn.Models.CdnEndpointUpdateOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitForCompletion" Type="System.Boolean" />
        <Parameter Name="endpointUpdateProperties" Type="Azure.ResourceManager.Cdn.Models.EndpointUpdateOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitForCompletion"> Waits for the completion of the long running operations. </param>
        <param name="endpointUpdateProperties"> Endpoint update properties. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Updates an existing CDN endpoint with the specified endpoint name under the specified subscription, resource group and profile. Only tags can be updated after creating an endpoint. To update origins, use the Update Origin operation. To update origin groups, use the Update Origin group operation. To update custom domains, use the Update Custom Domain operation. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="endpointUpdateProperties" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.Cdn.Models.CdnEndpointUpdateOperation&gt; UpdateAsync (bool waitForCompletion, Azure.ResourceManager.Cdn.Models.EndpointUpdateOptions endpointUpdateProperties, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.Cdn.Models.CdnEndpointUpdateOperation&gt; UpdateAsync(bool waitForCompletion, class Azure.ResourceManager.Cdn.Models.EndpointUpdateOptions endpointUpdateProperties, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Cdn.CdnEndpoint.UpdateAsync(System.Boolean,Azure.ResourceManager.Cdn.Models.EndpointUpdateOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateAsync (waitForCompletion As Boolean, endpointUpdateProperties As EndpointUpdateOptions, Optional cancellationToken As CancellationToken = Nothing) As Task(Of CdnEndpointUpdateOperation)" />
      <MemberSignature Language="F#" Value="abstract member UpdateAsync : bool * Azure.ResourceManager.Cdn.Models.EndpointUpdateOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.Cdn.Models.CdnEndpointUpdateOperation&gt;&#xA;override this.UpdateAsync : bool * Azure.ResourceManager.Cdn.Models.EndpointUpdateOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.Cdn.Models.CdnEndpointUpdateOperation&gt;" Usage="cdnEndpoint.UpdateAsync (waitForCompletion, endpointUpdateProperties, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.Cdn.Models.CdnEndpointUpdateOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitForCompletion" Type="System.Boolean" />
        <Parameter Name="endpointUpdateProperties" Type="Azure.ResourceManager.Cdn.Models.EndpointUpdateOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitForCompletion"> Waits for the completion of the long running operations. </param>
        <param name="endpointUpdateProperties"> Endpoint update properties. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Updates an existing CDN endpoint with the specified endpoint name under the specified subscription, resource group and profile. Only tags can be updated after creating an endpoint. To update origins, use the Update Origin operation. To update origin groups, use the Update Origin group operation. To update custom domains, use the Update Custom Domain operation. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="endpointUpdateProperties" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ValidateCustomDomain">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Cdn.Models.ValidateCustomDomainOutput&gt; ValidateCustomDomain (Azure.ResourceManager.Cdn.Models.ValidateCustomDomainInput customDomainProperties, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Cdn.Models.ValidateCustomDomainOutput&gt; ValidateCustomDomain(class Azure.ResourceManager.Cdn.Models.ValidateCustomDomainInput customDomainProperties, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Cdn.CdnEndpoint.ValidateCustomDomain(Azure.ResourceManager.Cdn.Models.ValidateCustomDomainInput,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ValidateCustomDomain (customDomainProperties As ValidateCustomDomainInput, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ValidateCustomDomainOutput)" />
      <MemberSignature Language="F#" Value="abstract member ValidateCustomDomain : Azure.ResourceManager.Cdn.Models.ValidateCustomDomainInput * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Cdn.Models.ValidateCustomDomainOutput&gt;&#xA;override this.ValidateCustomDomain : Azure.ResourceManager.Cdn.Models.ValidateCustomDomainInput * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Cdn.Models.ValidateCustomDomainOutput&gt;" Usage="cdnEndpoint.ValidateCustomDomain (customDomainProperties, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Cdn.Models.ValidateCustomDomainOutput&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="customDomainProperties" Type="Azure.ResourceManager.Cdn.Models.ValidateCustomDomainInput" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="customDomainProperties"> Custom domain to be validated. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Validates the custom domain mapping to ensure it maps to the correct CDN endpoint in DNS. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="customDomainProperties" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ValidateCustomDomainAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.Models.ValidateCustomDomainOutput&gt;&gt; ValidateCustomDomainAsync (Azure.ResourceManager.Cdn.Models.ValidateCustomDomainInput customDomainProperties, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Cdn.Models.ValidateCustomDomainOutput&gt;&gt; ValidateCustomDomainAsync(class Azure.ResourceManager.Cdn.Models.ValidateCustomDomainInput customDomainProperties, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Cdn.CdnEndpoint.ValidateCustomDomainAsync(Azure.ResourceManager.Cdn.Models.ValidateCustomDomainInput,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ValidateCustomDomainAsync (customDomainProperties As ValidateCustomDomainInput, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ValidateCustomDomainOutput))" />
      <MemberSignature Language="F#" Value="abstract member ValidateCustomDomainAsync : Azure.ResourceManager.Cdn.Models.ValidateCustomDomainInput * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.Models.ValidateCustomDomainOutput&gt;&gt;&#xA;override this.ValidateCustomDomainAsync : Azure.ResourceManager.Cdn.Models.ValidateCustomDomainInput * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.Models.ValidateCustomDomainOutput&gt;&gt;" Usage="cdnEndpoint.ValidateCustomDomainAsync (customDomainProperties, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.Models.ValidateCustomDomainOutput&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="customDomainProperties" Type="Azure.ResourceManager.Cdn.Models.ValidateCustomDomainInput" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="customDomainProperties"> Custom domain to be validated. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Validates the custom domain mapping to ensure it maps to the correct CDN endpoint in DNS. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="customDomainProperties" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>

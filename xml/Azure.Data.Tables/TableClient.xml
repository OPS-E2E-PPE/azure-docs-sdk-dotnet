<Type Name="TableClient" FullName="Azure.Data.Tables.TableClient">
  <TypeSignature Language="C#" Value="public class TableClient" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TableClient extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Data.Tables.TableClient" />
  <TypeSignature Language="VB.NET" Value="Public Class TableClient" />
  <TypeSignature Language="F#" Value="type TableClient = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Data.Tables</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            The <see cref="T:Azure.Data.Tables.TableClient" /> allows you to interact with Azure Storage
            Tables.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TableClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Data.Tables.TableClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Data.Tables</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.Data.Tables.TableClient" />
            class for mocking.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TableClient (string connectionString, string tableName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString, string tableName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Data.Tables.TableClient.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String, tableName As String)" />
      <MemberSignature Language="F#" Value="new Azure.Data.Tables.TableClient : string * string -&gt; Azure.Data.Tables.TableClient" Usage="new Azure.Data.Tables.TableClient (connectionString, tableName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Data.Tables</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="tableName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">
             A connection string includes the authentication information
             required for your application to access data in an Azure Storage
             account at runtime.
            
             For more information,
             <see href="https://docs.microsoft.com/azure/storage/common/storage-configure-connection-string">
             Configure Azure Storage connection strings</see>.
             </param>
        <param name="tableName">The name of the table with which this client instance will interact.</param>
        <summary>
             Initializes a new instance of the <see cref="T:Azure.Data.Tables.TableServiceClient" />.
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TableClient (string connectionString, string tableName, Azure.Data.Tables.TableClientOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString, string tableName, class Azure.Data.Tables.TableClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Data.Tables.TableClient.#ctor(System.String,System.String,Azure.Data.Tables.TableClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String, tableName As String, Optional options As TableClientOptions = Nothing)" />
      <MemberSignature Language="F#" Value="new Azure.Data.Tables.TableClient : string * string * Azure.Data.Tables.TableClientOptions -&gt; Azure.Data.Tables.TableClient" Usage="new Azure.Data.Tables.TableClient (connectionString, tableName, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Data.Tables</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="tableName" Type="System.String" />
        <Parameter Name="options" Type="Azure.Data.Tables.TableClientOptions" />
      </Parameters>
      <Docs>
        <param name="connectionString">
             A connection string includes the authentication information
             required for your application to access data in an Azure Storage
             account at runtime.
            
             For more information,
             <see href="https://docs.microsoft.com/azure/storage/common/storage-configure-connection-string">
             Configure Azure Storage connection strings</see>.
             </param>
        <param name="tableName">The name of the table with which this client instance will interact.</param>
        <param name="options">
             Optional client options that define the transport pipeline policies for authentication, retries, etc., that are applied to every request.
             </param>
        <summary>
             Initializes a new instance of the <see cref="T:Azure.Data.Tables.TableServiceClient" />.
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TableClient (Uri endpoint, string tableName, Azure.Data.Tables.TableClientOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, string tableName, class Azure.Data.Tables.TableClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Data.Tables.TableClient.#ctor(System.Uri,System.String,Azure.Data.Tables.TableClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, tableName As String, Optional options As TableClientOptions = Nothing)" />
      <MemberSignature Language="F#" Value="new Azure.Data.Tables.TableClient : Uri * string * Azure.Data.Tables.TableClientOptions -&gt; Azure.Data.Tables.TableClient" Usage="new Azure.Data.Tables.TableClient (endpoint, tableName, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Data.Tables</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="tableName" Type="System.String" />
        <Parameter Name="options" Type="Azure.Data.Tables.TableClientOptions" />
      </Parameters>
      <Docs>
        <param name="endpoint">
            A <see cref="T:System.Uri" /> referencing the table service account.
            This is likely to be similar to "https://{account_name}.table.core.windows.net/" or "https://{account_name}.table.cosmos.azure.com/".
            </param>
        <param name="tableName">The name of the table with which this client instance will interact.</param>
        <param name="options">
            Optional client options that define the transport pipeline policies for authentication, retries, etc., that are applied to every request.
            </param>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.Data.Tables.TableClient" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="endpoint" /> is not https.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TableClient (Uri endpoint, string tableName, Azure.Data.Tables.TableSharedKeyCredential credential);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, string tableName, class Azure.Data.Tables.TableSharedKeyCredential credential) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Data.Tables.TableClient.#ctor(System.Uri,System.String,Azure.Data.Tables.TableSharedKeyCredential)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, tableName As String, credential As TableSharedKeyCredential)" />
      <MemberSignature Language="F#" Value="new Azure.Data.Tables.TableClient : Uri * string * Azure.Data.Tables.TableSharedKeyCredential -&gt; Azure.Data.Tables.TableClient" Usage="new Azure.Data.Tables.TableClient (endpoint, tableName, credential)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Data.Tables</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="tableName" Type="System.String" />
        <Parameter Name="credential" Type="Azure.Data.Tables.TableSharedKeyCredential" />
      </Parameters>
      <Docs>
        <param name="endpoint">
            A <see cref="T:System.Uri" /> referencing the table service account.
            This is likely to be similar to "https://{account_name}.table.core.windows.net/" or "https://{account_name}.table.cosmos.azure.com/".
            </param>
        <param name="tableName">The name of the table with which this client instance will interact.</param>
        <param name="credential">The shared key credential used to sign requests.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.Data.Tables.TableClient" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tableName" /> or <paramref name="credential" /> is null.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TableClient (Uri endpoint, string tableName, Azure.Data.Tables.TableSharedKeyCredential credential, Azure.Data.Tables.TableClientOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, string tableName, class Azure.Data.Tables.TableSharedKeyCredential credential, class Azure.Data.Tables.TableClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Data.Tables.TableClient.#ctor(System.Uri,System.String,Azure.Data.Tables.TableSharedKeyCredential,Azure.Data.Tables.TableClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, tableName As String, credential As TableSharedKeyCredential, Optional options As TableClientOptions = Nothing)" />
      <MemberSignature Language="F#" Value="new Azure.Data.Tables.TableClient : Uri * string * Azure.Data.Tables.TableSharedKeyCredential * Azure.Data.Tables.TableClientOptions -&gt; Azure.Data.Tables.TableClient" Usage="new Azure.Data.Tables.TableClient (endpoint, tableName, credential, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Data.Tables</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="tableName" Type="System.String" />
        <Parameter Name="credential" Type="Azure.Data.Tables.TableSharedKeyCredential" />
        <Parameter Name="options" Type="Azure.Data.Tables.TableClientOptions" />
      </Parameters>
      <Docs>
        <param name="endpoint">
            A <see cref="T:System.Uri" /> referencing the table service account.
            This is likely to be similar to "https://{account_name}.table.core.windows.net/" or "https://{account_name}.table.cosmos.azure.com/".
            </param>
        <param name="tableName">The name of the table with which this client instance will interact.</param>
        <param name="credential">The shared key credential used to sign requests.</param>
        <param name="options">
            Optional client options that define the transport pipeline policies for authentication, retries, etc., that are applied to every request.
            </param>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.Data.Tables.TableClient" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tableName" /> or <paramref name="credential" /> is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddEntity&lt;T&gt;">
      <MemberSignature Language="C#" Value="public virtual Azure.Response AddEntity&lt;T&gt; (T entity, System.Threading.CancellationToken cancellationToken = default) where T : class, Azure.Data.Tables.ITableEntity, new();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response AddEntity&lt;class .ctor (class Azure.Data.Tables.ITableEntity) T&gt;(!!T entity, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Data.Tables.TableClient.AddEntity``1(``0,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddEntity(Of T As {Class, ITableEntity, New}) (entity As T, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member AddEntity : 'T * System.Threading.CancellationToken -&gt; Azure.Response (requires 'T : null and 'T :&gt; Azure.Data.Tables.ITableEntity and 'T : (new : unit -&gt; 'T))&#xA;override this.AddEntity : 'T * System.Threading.CancellationToken -&gt; Azure.Response (requires 'T : null and 'T :&gt; Azure.Data.Tables.ITableEntity and 'T : (new : unit -&gt; 'T))" Usage="tableClient.AddEntity (entity, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Data.Tables</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>Azure.Data.Tables.ITableEntity</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="entity" Type="T" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="entity">The entity to add.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Adds a Table Entity into the Table.
            </summary>
        <returns>A <see cref="T:Azure.Response" /> containing headers such as ETag</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">Exception thrown if entity already exists.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddEntityAsync&lt;T&gt;">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; AddEntityAsync&lt;T&gt; (T entity, System.Threading.CancellationToken cancellationToken = default) where T : class, Azure.Data.Tables.ITableEntity, new();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; AddEntityAsync&lt;class .ctor (class Azure.Data.Tables.ITableEntity) T&gt;(!!T entity, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Data.Tables.TableClient.AddEntityAsync``1(``0,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddEntityAsync(Of T As {Class, ITableEntity, New}) (entity As T, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member AddEntityAsync : 'T * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt; (requires 'T : null and 'T :&gt; Azure.Data.Tables.ITableEntity and 'T : (new : unit -&gt; 'T))&#xA;override this.AddEntityAsync : 'T * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt; (requires 'T : null and 'T :&gt; Azure.Data.Tables.ITableEntity and 'T : (new : unit -&gt; 'T))" Usage="tableClient.AddEntityAsync (entity, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Data.Tables</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>Azure.Data.Tables.ITableEntity</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="entity" Type="T" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="entity">The entity to add.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Adds a Table Entity into the Table.
            </summary>
        <returns>A <see cref="T:Azure.Response" /> containing headers such as ETag.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">Exception thrown if entity already exists.</exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Data.Tables.Models.TableItem&gt; Create (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Data.Tables.Models.TableItem&gt; Create(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Data.Tables.TableClient.Create(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Create (Optional cancellationToken As CancellationToken = Nothing) As Response(Of TableItem)" />
      <MemberSignature Language="F#" Value="abstract member Create : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Data.Tables.Models.TableItem&gt;&#xA;override this.Create : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Data.Tables.Models.TableItem&gt;" Usage="tableClient.Create cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Data.Tables</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Data.Tables.Models.TableItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Creates the current table.
            </summary>
        <returns>A <see cref="T:Azure.Response`1" /> containing properties of the table.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Data.Tables.Models.TableItem&gt;&gt; CreateAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Data.Tables.Models.TableItem&gt;&gt; CreateAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Data.Tables.TableClient.CreateAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of TableItem))" />
      <MemberSignature Language="F#" Value="abstract member CreateAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Data.Tables.Models.TableItem&gt;&gt;&#xA;override this.CreateAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Data.Tables.Models.TableItem&gt;&gt;" Usage="tableClient.CreateAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Data.Tables</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Data.Tables.Models.TableItem&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Creates the current table.
            </summary>
        <returns>A <see cref="T:Azure.Response`1" /> containing properties of the table.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateIfNotExists">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Data.Tables.Models.TableItem&gt; CreateIfNotExists (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Data.Tables.Models.TableItem&gt; CreateIfNotExists(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Data.Tables.TableClient.CreateIfNotExists(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateIfNotExists (Optional cancellationToken As CancellationToken = Nothing) As Response(Of TableItem)" />
      <MemberSignature Language="F#" Value="abstract member CreateIfNotExists : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Data.Tables.Models.TableItem&gt;&#xA;override this.CreateIfNotExists : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Data.Tables.Models.TableItem&gt;" Usage="tableClient.CreateIfNotExists cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Data.Tables</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Data.Tables.Models.TableItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Creates the current table.
            </summary>
        <returns>If the table does not already exist, a <see cref="T:Azure.Response`1" />. If the table already exists, <c>null</c>.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateIfNotExistsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Data.Tables.Models.TableItem&gt;&gt; CreateIfNotExistsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Data.Tables.Models.TableItem&gt;&gt; CreateIfNotExistsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Data.Tables.TableClient.CreateIfNotExistsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateIfNotExistsAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of TableItem))" />
      <MemberSignature Language="F#" Value="abstract member CreateIfNotExistsAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Data.Tables.Models.TableItem&gt;&gt;&#xA;override this.CreateIfNotExistsAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Data.Tables.Models.TableItem&gt;&gt;" Usage="tableClient.CreateIfNotExistsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Data.Tables</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Data.Tables.Models.TableItem&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Creates the current table.
            </summary>
        <returns>If the table does not already exist, a <see cref="T:Azure.Response`1" />. If the table already exists, <c>null</c>.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateQueryFilter&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static string CreateQueryFilter&lt;T&gt; (System.Linq.Expressions.Expression&lt;Func&lt;T,bool&gt;&gt; filter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string CreateQueryFilter&lt;T&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!T, bool&gt;&gt; filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Data.Tables.TableClient.CreateQueryFilter``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateQueryFilter(Of T) (filter As Expression(Of Func(Of T, Boolean))) As String" />
      <MemberSignature Language="F#" Value="static member CreateQueryFilter : System.Linq.Expressions.Expression&lt;Func&lt;'T, bool&gt;&gt; -&gt; string" Usage="Azure.Data.Tables.TableClient.CreateQueryFilter filter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Data.Tables</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="filter" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;T,System.Boolean&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of the entity being queried. Typically this will be derrived from <see cref="T:Azure.Data.Tables.ITableEntity" /> or <see cref="T:System.Collections.Generic.Dictionary`2" />.</typeparam>
        <param name="filter">A filter expresssion.</param>
        <summary>
            Creates an Odata filter query string from the provided expression.
            </summary>
        <returns>The string representation of the filter expression.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateTransactionalBatch">
      <MemberSignature Language="C#" Value="public virtual Azure.Data.Tables.TableTransactionalBatch CreateTransactionalBatch (string partitionKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Data.Tables.TableTransactionalBatch CreateTransactionalBatch(string partitionKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Data.Tables.TableClient.CreateTransactionalBatch(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateTransactionalBatch (partitionKey As String) As TableTransactionalBatch" />
      <MemberSignature Language="F#" Value="abstract member CreateTransactionalBatch : string -&gt; Azure.Data.Tables.TableTransactionalBatch&#xA;override this.CreateTransactionalBatch : string -&gt; Azure.Data.Tables.TableTransactionalBatch" Usage="tableClient.CreateTransactionalBatch partitionKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Data.Tables</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Data.Tables.TableTransactionalBatch</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partitionKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="partitionKey">The partitionKey context for the batch.</param>
        <summary>
            Create a <see cref="T:Azure.Data.Tables.TableTransactionalBatch" /> for the given partitionkey value.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public virtual Azure.Response Delete (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response Delete(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Data.Tables.TableClient.Delete(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Delete (Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member Delete : System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.Delete : System.Threading.CancellationToken -&gt; Azure.Response" Usage="tableClient.Delete cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Data.Tables</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Deletes the current table.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DeleteAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeleteAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Data.Tables.TableClient.DeleteAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DeleteAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DeleteAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="tableClient.DeleteAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Data.Tables</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Deletes the current table.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteEntity">
      <MemberSignature Language="C#" Value="public virtual Azure.Response DeleteEntity (string partitionKey, string rowKey, Azure.ETag ifMatch = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response DeleteEntity(string partitionKey, string rowKey, valuetype Azure.ETag ifMatch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Data.Tables.TableClient.DeleteEntity(System.String,System.String,Azure.ETag,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteEntity (partitionKey As String, rowKey As String, Optional ifMatch As ETag = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member DeleteEntity : string * string * Azure.ETag * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.DeleteEntity : string * string * Azure.ETag * System.Threading.CancellationToken -&gt; Azure.Response" Usage="tableClient.DeleteEntity (partitionKey, rowKey, ifMatch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Data.Tables</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partitionKey" Type="System.String" />
        <Parameter Name="rowKey" Type="System.String" />
        <Parameter Name="ifMatch" Type="Azure.ETag" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="partitionKey">The partitionKey that identifies the table entity.</param>
        <param name="rowKey">The rowKey that identifies the table entity.</param>
        <param name="ifMatch">The If-Match value to be used for optimistic concurrency. The default is to delete unconditionally.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Deletes the specified table entity.
            </summary>
        <returns>The <see cref="T:Azure.Response" /> indicating the result of the operation.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteEntityAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DeleteEntityAsync (string partitionKey, string rowKey, Azure.ETag ifMatch = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeleteEntityAsync(string partitionKey, string rowKey, valuetype Azure.ETag ifMatch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Data.Tables.TableClient.DeleteEntityAsync(System.String,System.String,Azure.ETag,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteEntityAsync (partitionKey As String, rowKey As String, Optional ifMatch As ETag = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DeleteEntityAsync : string * string * Azure.ETag * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DeleteEntityAsync : string * string * Azure.ETag * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="tableClient.DeleteEntityAsync (partitionKey, rowKey, ifMatch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Data.Tables</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partitionKey" Type="System.String" />
        <Parameter Name="rowKey" Type="System.String" />
        <Parameter Name="ifMatch" Type="Azure.ETag" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="partitionKey">The partitionKey that identifies the table entity.</param>
        <param name="rowKey">The rowKey that identifies the table entity.</param>
        <param name="ifMatch">The If-Match value to be used for optimistic concurrency.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Deletes the specified table entity.
            </summary>
        <returns>The <see cref="T:Azure.Response" /> indicating the result of the operation.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetAccessPolicy">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.Data.Tables.Models.SignedIdentifier&gt;&gt; GetAccessPolicy (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class System.Collections.Generic.IReadOnlyList`1&lt;class Azure.Data.Tables.Models.SignedIdentifier&gt;&gt; GetAccessPolicy(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Data.Tables.TableClient.GetAccessPolicy(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAccessPolicy (Optional cancellationToken As CancellationToken = Nothing) As Response(Of IReadOnlyList(Of SignedIdentifier))" />
      <MemberSignature Language="F#" Value="abstract member GetAccessPolicy : System.Threading.CancellationToken -&gt; Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.Data.Tables.Models.SignedIdentifier&gt;&gt;&#xA;override this.GetAccessPolicy : System.Threading.CancellationToken -&gt; Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.Data.Tables.Models.SignedIdentifier&gt;&gt;" Usage="tableClient.GetAccessPolicy cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Data.Tables</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.Data.Tables.Models.SignedIdentifier&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Retrieves details about any stored access policies specified on the table that may be used with Shared Access Signatures. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetAccessPolicyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.Data.Tables.Models.SignedIdentifier&gt;&gt;&gt; GetAccessPolicyAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class System.Collections.Generic.IReadOnlyList`1&lt;class Azure.Data.Tables.Models.SignedIdentifier&gt;&gt;&gt; GetAccessPolicyAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Data.Tables.TableClient.GetAccessPolicyAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAccessPolicyAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of IReadOnlyList(Of SignedIdentifier)))" />
      <MemberSignature Language="F#" Value="abstract member GetAccessPolicyAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.Data.Tables.Models.SignedIdentifier&gt;&gt;&gt;&#xA;override this.GetAccessPolicyAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.Data.Tables.Models.SignedIdentifier&gt;&gt;&gt;" Usage="tableClient.GetAccessPolicyAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Data.Tables</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Collections.Generic.IReadOnlyList&lt;Azure.Data.Tables.Models.SignedIdentifier&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Retrieves details about any stored access policies specified on the table that may be used with Shared Access Signatures. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetEntity&lt;T&gt;">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;T&gt; GetEntity&lt;T&gt; (string partitionKey, string rowKey, System.Collections.Generic.IEnumerable&lt;string&gt; select = default, System.Threading.CancellationToken cancellationToken = default) where T : class, Azure.Data.Tables.ITableEntity, new();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;!!T&gt; GetEntity&lt;class .ctor (class Azure.Data.Tables.ITableEntity) T&gt;(string partitionKey, string rowKey, class System.Collections.Generic.IEnumerable`1&lt;string&gt; select, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Data.Tables.TableClient.GetEntity``1(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEntity(Of T As {Class, ITableEntity, New}) (partitionKey As String, rowKey As String, Optional select As IEnumerable(Of String) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of T)" />
      <MemberSignature Language="F#" Value="abstract member GetEntity : string * string * seq&lt;string&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;'T (requires 'T : null and 'T :&gt; Azure.Data.Tables.ITableEntity and 'T : (new : unit -&gt; 'T))&gt; (requires 'T : null and 'T :&gt; Azure.Data.Tables.ITableEntity and 'T : (new : unit -&gt; 'T))&#xA;override this.GetEntity : string * string * seq&lt;string&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;'T (requires 'T : null and 'T :&gt; Azure.Data.Tables.ITableEntity and 'T : (new : unit -&gt; 'T))&gt; (requires 'T : null and 'T :&gt; Azure.Data.Tables.ITableEntity and 'T : (new : unit -&gt; 'T))" Usage="tableClient.GetEntity (partitionKey, rowKey, select, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Data.Tables</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>Azure.Data.Tables.ITableEntity</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="partitionKey" Type="System.String" />
        <Parameter Name="rowKey" Type="System.String" />
        <Parameter Name="select" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="partitionKey">The partitionKey that identifies the table entity.</param>
        <param name="rowKey">The rowKey that identifies the table entity.</param>
        <param name="select">Selects which set of entity properties to return in the result set.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Gets the specified table entity.
            </summary>
        <returns>The <see cref="T:Azure.Response" /> indicating the result of the operation.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">Exception thrown if the entity doesn't exist.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="partitionKey" /> or <paramref name="rowKey" /> is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetEntityAsync&lt;T&gt;">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;T&gt;&gt; GetEntityAsync&lt;T&gt; (string partitionKey, string rowKey, System.Collections.Generic.IEnumerable&lt;string&gt; select = default, System.Threading.CancellationToken cancellationToken = default) where T : class, Azure.Data.Tables.ITableEntity, new();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;!!T&gt;&gt; GetEntityAsync&lt;class .ctor (class Azure.Data.Tables.ITableEntity) T&gt;(string partitionKey, string rowKey, class System.Collections.Generic.IEnumerable`1&lt;string&gt; select, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Data.Tables.TableClient.GetEntityAsync``1(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEntityAsync(Of T As {Class, ITableEntity, New}) (partitionKey As String, rowKey As String, Optional select As IEnumerable(Of String) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of T))" />
      <MemberSignature Language="F#" Value="abstract member GetEntityAsync : string * string * seq&lt;string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;'T&gt;&gt; (requires 'T : null and 'T :&gt; Azure.Data.Tables.ITableEntity and 'T : (new : unit -&gt; 'T))&#xA;override this.GetEntityAsync : string * string * seq&lt;string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;'T&gt;&gt; (requires 'T : null and 'T :&gt; Azure.Data.Tables.ITableEntity and 'T : (new : unit -&gt; 'T))" Usage="tableClient.GetEntityAsync (partitionKey, rowKey, select, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Data.Tables</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;T&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>Azure.Data.Tables.ITableEntity</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="partitionKey" Type="System.String" />
        <Parameter Name="rowKey" Type="System.String" />
        <Parameter Name="select" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="partitionKey">The partitionKey that identifies the table entity.</param>
        <param name="rowKey">The rowKey that identifies the table entity.</param>
        <param name="select">Selects which set of entity properties to return in the result set.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Gets the specified table entity.
            </summary>
        <returns>The <see cref="T:Azure.Response" /> indicating the result of the operation.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">Exception thrown if the entity doesn't exist.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="partitionKey" /> or <paramref name="rowKey" /> is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSasBuilder">
      <MemberSignature Language="C#" Value="public virtual Azure.Data.Tables.Sas.TableSasBuilder GetSasBuilder (Azure.Data.Tables.Sas.TableSasPermissions permissions, DateTimeOffset expiresOn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Data.Tables.Sas.TableSasBuilder GetSasBuilder(valuetype Azure.Data.Tables.Sas.TableSasPermissions permissions, valuetype System.DateTimeOffset expiresOn) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Data.Tables.TableClient.GetSasBuilder(Azure.Data.Tables.Sas.TableSasPermissions,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSasBuilder (permissions As TableSasPermissions, expiresOn As DateTimeOffset) As TableSasBuilder" />
      <MemberSignature Language="F#" Value="abstract member GetSasBuilder : Azure.Data.Tables.Sas.TableSasPermissions * DateTimeOffset -&gt; Azure.Data.Tables.Sas.TableSasBuilder&#xA;override this.GetSasBuilder : Azure.Data.Tables.Sas.TableSasPermissions * DateTimeOffset -&gt; Azure.Data.Tables.Sas.TableSasBuilder" Usage="tableClient.GetSasBuilder (permissions, expiresOn)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Data.Tables</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Data.Tables.Sas.TableSasBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="permissions" Type="Azure.Data.Tables.Sas.TableSasPermissions" />
        <Parameter Name="expiresOn" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="permissions">
          <see cref="T:Azure.Data.Tables.Sas.TableSasPermissions" /> containing the allowed permissions.</param>
        <param name="expiresOn">The time at which the shared access signature becomes invalid.</param>
        <summary>
            Gets a <see cref="T:Azure.Data.Tables.Sas.TableSasBuilder" /> instance scoped to the current table.
            </summary>
        <returns>An instance of <see cref="T:Azure.Data.Tables.Sas.TableSasBuilder" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSasBuilder">
      <MemberSignature Language="C#" Value="public virtual Azure.Data.Tables.Sas.TableSasBuilder GetSasBuilder (string rawPermissions, DateTimeOffset expiresOn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Data.Tables.Sas.TableSasBuilder GetSasBuilder(string rawPermissions, valuetype System.DateTimeOffset expiresOn) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Data.Tables.TableClient.GetSasBuilder(System.String,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSasBuilder (rawPermissions As String, expiresOn As DateTimeOffset) As TableSasBuilder" />
      <MemberSignature Language="F#" Value="abstract member GetSasBuilder : string * DateTimeOffset -&gt; Azure.Data.Tables.Sas.TableSasBuilder&#xA;override this.GetSasBuilder : string * DateTimeOffset -&gt; Azure.Data.Tables.Sas.TableSasBuilder" Usage="tableClient.GetSasBuilder (rawPermissions, expiresOn)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Data.Tables</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Data.Tables.Sas.TableSasBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawPermissions" Type="System.String" />
        <Parameter Name="expiresOn" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="rawPermissions">The permissions associated with the shared access signature. This string should contain one or more of the following permission characters in this order: "racwdl".</param>
        <param name="expiresOn">The time at which the shared access signature becomes invalid.</param>
        <summary>
            Gets a <see cref="T:Azure.Data.Tables.Sas.TableSasBuilder" /> instance scoped to the current table.
            </summary>
        <returns>An instance of <see cref="T:Azure.Data.Tables.Sas.TableSasBuilder" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Query&lt;T&gt;">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;T&gt; Query&lt;T&gt; (System.Linq.Expressions.Expression&lt;Func&lt;T,bool&gt;&gt; filter, int? maxPerPage = default, System.Collections.Generic.IEnumerable&lt;string&gt; select = default, System.Threading.CancellationToken cancellationToken = default) where T : class, Azure.Data.Tables.ITableEntity, new();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;!!T&gt; Query&lt;class .ctor (class Azure.Data.Tables.ITableEntity) T&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!T, bool&gt;&gt; filter, valuetype System.Nullable`1&lt;int32&gt; maxPerPage, class System.Collections.Generic.IEnumerable`1&lt;string&gt; select, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Data.Tables.TableClient.Query``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Query(Of T As {Class, ITableEntity, New}) (filter As Expression(Of Func(Of T, Boolean)), Optional maxPerPage As Nullable(Of Integer) = Nothing, Optional select As IEnumerable(Of String) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of T)" />
      <MemberSignature Language="F#" Value="abstract member Query : System.Linq.Expressions.Expression&lt;Func&lt;'T, bool&gt;&gt; * Nullable&lt;int&gt; * seq&lt;string&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;'T (requires 'T : null and 'T :&gt; Azure.Data.Tables.ITableEntity and 'T : (new : unit -&gt; 'T))&gt; (requires 'T : null and 'T :&gt; Azure.Data.Tables.ITableEntity and 'T : (new : unit -&gt; 'T))&#xA;override this.Query : System.Linq.Expressions.Expression&lt;Func&lt;'T, bool&gt;&gt; * Nullable&lt;int&gt; * seq&lt;string&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;'T (requires 'T : null and 'T :&gt; Azure.Data.Tables.ITableEntity and 'T : (new : unit -&gt; 'T))&gt; (requires 'T : null and 'T :&gt; Azure.Data.Tables.ITableEntity and 'T : (new : unit -&gt; 'T))" Usage="tableClient.Query (filter, maxPerPage, select, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Data.Tables</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>Azure.Data.Tables.ITableEntity</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="filter" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;T,System.Boolean&gt;&gt;" />
        <Parameter Name="maxPerPage" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="select" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="filter">Returns only entities that satisfy the specified filter.</param>
        <param name="maxPerPage">The maximum number of entities that will be returned per page.</param>
        <param name="select">Selects which set of entity properties to return in the result set.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Queries entities in the table.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="Query&lt;T&gt;">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;T&gt; Query&lt;T&gt; (string filter = default, int? maxPerPage = default, System.Collections.Generic.IEnumerable&lt;string&gt; select = default, System.Threading.CancellationToken cancellationToken = default) where T : class, Azure.Data.Tables.ITableEntity, new();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;!!T&gt; Query&lt;class .ctor (class Azure.Data.Tables.ITableEntity) T&gt;(string filter, valuetype System.Nullable`1&lt;int32&gt; maxPerPage, class System.Collections.Generic.IEnumerable`1&lt;string&gt; select, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Data.Tables.TableClient.Query``1(System.String,System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Query(Of T As {Class, ITableEntity, New}) (Optional filter As String = Nothing, Optional maxPerPage As Nullable(Of Integer) = Nothing, Optional select As IEnumerable(Of String) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of T)" />
      <MemberSignature Language="F#" Value="abstract member Query : string * Nullable&lt;int&gt; * seq&lt;string&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;'T (requires 'T : null and 'T :&gt; Azure.Data.Tables.ITableEntity and 'T : (new : unit -&gt; 'T))&gt; (requires 'T : null and 'T :&gt; Azure.Data.Tables.ITableEntity and 'T : (new : unit -&gt; 'T))&#xA;override this.Query : string * Nullable&lt;int&gt; * seq&lt;string&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;'T (requires 'T : null and 'T :&gt; Azure.Data.Tables.ITableEntity and 'T : (new : unit -&gt; 'T))&gt; (requires 'T : null and 'T :&gt; Azure.Data.Tables.ITableEntity and 'T : (new : unit -&gt; 'T))" Usage="tableClient.Query (filter, maxPerPage, select, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Data.Tables</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>Azure.Data.Tables.ITableEntity</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="maxPerPage" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="select" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="filter">Returns only entities that satisfy the specified filter.</param>
        <param name="maxPerPage">The maximum number of entities that will be returned per page.</param>
        <param name="select">Selects which set of entity properties to return in the result set.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Queries entities in the table.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryAsync&lt;T&gt;">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;T&gt; QueryAsync&lt;T&gt; (System.Linq.Expressions.Expression&lt;Func&lt;T,bool&gt;&gt; filter, int? maxPerPage = default, System.Collections.Generic.IEnumerable&lt;string&gt; select = default, System.Threading.CancellationToken cancellationToken = default) where T : class, Azure.Data.Tables.ITableEntity, new();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;!!T&gt; QueryAsync&lt;class .ctor (class Azure.Data.Tables.ITableEntity) T&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!T, bool&gt;&gt; filter, valuetype System.Nullable`1&lt;int32&gt; maxPerPage, class System.Collections.Generic.IEnumerable`1&lt;string&gt; select, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Data.Tables.TableClient.QueryAsync``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function QueryAsync(Of T As {Class, ITableEntity, New}) (filter As Expression(Of Func(Of T, Boolean)), Optional maxPerPage As Nullable(Of Integer) = Nothing, Optional select As IEnumerable(Of String) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of T)" />
      <MemberSignature Language="F#" Value="abstract member QueryAsync : System.Linq.Expressions.Expression&lt;Func&lt;'T, bool&gt;&gt; * Nullable&lt;int&gt; * seq&lt;string&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;'T (requires 'T : null and 'T :&gt; Azure.Data.Tables.ITableEntity and 'T : (new : unit -&gt; 'T))&gt; (requires 'T : null and 'T :&gt; Azure.Data.Tables.ITableEntity and 'T : (new : unit -&gt; 'T))&#xA;override this.QueryAsync : System.Linq.Expressions.Expression&lt;Func&lt;'T, bool&gt;&gt; * Nullable&lt;int&gt; * seq&lt;string&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;'T (requires 'T : null and 'T :&gt; Azure.Data.Tables.ITableEntity and 'T : (new : unit -&gt; 'T))&gt; (requires 'T : null and 'T :&gt; Azure.Data.Tables.ITableEntity and 'T : (new : unit -&gt; 'T))" Usage="tableClient.QueryAsync (filter, maxPerPage, select, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Data.Tables</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>Azure.Data.Tables.ITableEntity</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="filter" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;T,System.Boolean&gt;&gt;" />
        <Parameter Name="maxPerPage" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="select" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="filter">Returns only entities that satisfy the specified filter.</param>
        <param name="maxPerPage">The maximum number of entities that will be returned per page.</param>
        <param name="select">Selects which set of entity properties to return in the result set.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Queries entities in the table.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="QueryAsync&lt;T&gt;">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;T&gt; QueryAsync&lt;T&gt; (string filter = default, int? maxPerPage = default, System.Collections.Generic.IEnumerable&lt;string&gt; select = default, System.Threading.CancellationToken cancellationToken = default) where T : class, Azure.Data.Tables.ITableEntity, new();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;!!T&gt; QueryAsync&lt;class .ctor (class Azure.Data.Tables.ITableEntity) T&gt;(string filter, valuetype System.Nullable`1&lt;int32&gt; maxPerPage, class System.Collections.Generic.IEnumerable`1&lt;string&gt; select, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Data.Tables.TableClient.QueryAsync``1(System.String,System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function QueryAsync(Of T As {Class, ITableEntity, New}) (Optional filter As String = Nothing, Optional maxPerPage As Nullable(Of Integer) = Nothing, Optional select As IEnumerable(Of String) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of T)" />
      <MemberSignature Language="F#" Value="abstract member QueryAsync : string * Nullable&lt;int&gt; * seq&lt;string&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;'T (requires 'T : null and 'T :&gt; Azure.Data.Tables.ITableEntity and 'T : (new : unit -&gt; 'T))&gt; (requires 'T : null and 'T :&gt; Azure.Data.Tables.ITableEntity and 'T : (new : unit -&gt; 'T))&#xA;override this.QueryAsync : string * Nullable&lt;int&gt; * seq&lt;string&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;'T (requires 'T : null and 'T :&gt; Azure.Data.Tables.ITableEntity and 'T : (new : unit -&gt; 'T))&gt; (requires 'T : null and 'T :&gt; Azure.Data.Tables.ITableEntity and 'T : (new : unit -&gt; 'T))" Usage="tableClient.QueryAsync (filter, maxPerPage, select, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Data.Tables</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>Azure.Data.Tables.ITableEntity</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="maxPerPage" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="select" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="filter">Returns only entities that satisfy the specified filter.</param>
        <param name="maxPerPage">The maximum number of entities that will be returned per page.</param>
        <param name="select">Selects which set of entity properties to return in the result set.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Queries entities in the table.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAccessPolicy">
      <MemberSignature Language="C#" Value="public virtual Azure.Response SetAccessPolicy (System.Collections.Generic.IEnumerable&lt;Azure.Data.Tables.Models.SignedIdentifier&gt; tableAcl, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response SetAccessPolicy(class System.Collections.Generic.IEnumerable`1&lt;class Azure.Data.Tables.Models.SignedIdentifier&gt; tableAcl, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Data.Tables.TableClient.SetAccessPolicy(System.Collections.Generic.IEnumerable{Azure.Data.Tables.Models.SignedIdentifier},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetAccessPolicy (tableAcl As IEnumerable(Of SignedIdentifier), Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member SetAccessPolicy : seq&lt;Azure.Data.Tables.Models.SignedIdentifier&gt; * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.SetAccessPolicy : seq&lt;Azure.Data.Tables.Models.SignedIdentifier&gt; * System.Threading.CancellationToken -&gt; Azure.Response" Usage="tableClient.SetAccessPolicy (tableAcl, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Data.Tables</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tableAcl" Type="System.Collections.Generic.IEnumerable&lt;Azure.Data.Tables.Models.SignedIdentifier&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tableAcl"> the access policies for the table. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> sets stored access policies for the table that may be used with Shared Access Signatures. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetAccessPolicyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; SetAccessPolicyAsync (System.Collections.Generic.IEnumerable&lt;Azure.Data.Tables.Models.SignedIdentifier&gt; tableAcl, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; SetAccessPolicyAsync(class System.Collections.Generic.IEnumerable`1&lt;class Azure.Data.Tables.Models.SignedIdentifier&gt; tableAcl, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Data.Tables.TableClient.SetAccessPolicyAsync(System.Collections.Generic.IEnumerable{Azure.Data.Tables.Models.SignedIdentifier},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetAccessPolicyAsync (tableAcl As IEnumerable(Of SignedIdentifier), Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member SetAccessPolicyAsync : seq&lt;Azure.Data.Tables.Models.SignedIdentifier&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.SetAccessPolicyAsync : seq&lt;Azure.Data.Tables.Models.SignedIdentifier&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="tableClient.SetAccessPolicyAsync (tableAcl, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Data.Tables</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tableAcl" Type="System.Collections.Generic.IEnumerable&lt;Azure.Data.Tables.Models.SignedIdentifier&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tableAcl"> the access policies for the table. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> sets stored access policies for the table that may be used with Shared Access Signatures. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateEntity&lt;T&gt;">
      <MemberSignature Language="C#" Value="public virtual Azure.Response UpdateEntity&lt;T&gt; (T entity, Azure.ETag ifMatch, Azure.Data.Tables.TableUpdateMode mode = Azure.Data.Tables.TableUpdateMode.Merge, System.Threading.CancellationToken cancellationToken = default) where T : class, Azure.Data.Tables.ITableEntity, new();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response UpdateEntity&lt;class .ctor (class Azure.Data.Tables.ITableEntity) T&gt;(!!T entity, valuetype Azure.ETag ifMatch, valuetype Azure.Data.Tables.TableUpdateMode mode, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Data.Tables.TableClient.UpdateEntity``1(``0,Azure.ETag,Azure.Data.Tables.TableUpdateMode,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateEntity(Of T As {Class, ITableEntity, New}) (entity As T, ifMatch As ETag, Optional mode As TableUpdateMode = Azure.Data.Tables.TableUpdateMode.Merge, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member UpdateEntity : 'T * Azure.ETag * Azure.Data.Tables.TableUpdateMode * System.Threading.CancellationToken -&gt; Azure.Response (requires 'T : null and 'T :&gt; Azure.Data.Tables.ITableEntity and 'T : (new : unit -&gt; 'T))&#xA;override this.UpdateEntity : 'T * Azure.ETag * Azure.Data.Tables.TableUpdateMode * System.Threading.CancellationToken -&gt; Azure.Response (requires 'T : null and 'T :&gt; Azure.Data.Tables.ITableEntity and 'T : (new : unit -&gt; 'T))" Usage="tableClient.UpdateEntity (entity, ifMatch, mode, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Data.Tables</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>Azure.Data.Tables.ITableEntity</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="entity" Type="T" />
        <Parameter Name="ifMatch" Type="Azure.ETag" />
        <Parameter Name="mode" Type="Azure.Data.Tables.TableUpdateMode" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="entity">The entity to update.</param>
        <param name="ifMatch">The If-Match value to be used for optimistic concurrency.</param>
        <param name="mode">An enum that determines which upsert operation to perform.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Replaces the specified table entity, if it exists.
            </summary>
        <returns>The <see cref="T:Azure.Response" /> indicating the result of the operation.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateEntityAsync&lt;T&gt;">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; UpdateEntityAsync&lt;T&gt; (T entity, Azure.ETag ifMatch, Azure.Data.Tables.TableUpdateMode mode = Azure.Data.Tables.TableUpdateMode.Merge, System.Threading.CancellationToken cancellationToken = default) where T : class, Azure.Data.Tables.ITableEntity, new();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; UpdateEntityAsync&lt;class .ctor (class Azure.Data.Tables.ITableEntity) T&gt;(!!T entity, valuetype Azure.ETag ifMatch, valuetype Azure.Data.Tables.TableUpdateMode mode, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Data.Tables.TableClient.UpdateEntityAsync``1(``0,Azure.ETag,Azure.Data.Tables.TableUpdateMode,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateEntityAsync(Of T As {Class, ITableEntity, New}) (entity As T, ifMatch As ETag, Optional mode As TableUpdateMode = Azure.Data.Tables.TableUpdateMode.Merge, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member UpdateEntityAsync : 'T * Azure.ETag * Azure.Data.Tables.TableUpdateMode * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt; (requires 'T : null and 'T :&gt; Azure.Data.Tables.ITableEntity and 'T : (new : unit -&gt; 'T))&#xA;override this.UpdateEntityAsync : 'T * Azure.ETag * Azure.Data.Tables.TableUpdateMode * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt; (requires 'T : null and 'T :&gt; Azure.Data.Tables.ITableEntity and 'T : (new : unit -&gt; 'T))" Usage="tableClient.UpdateEntityAsync (entity, ifMatch, mode, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Data.Tables</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>Azure.Data.Tables.ITableEntity</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="entity" Type="T" />
        <Parameter Name="ifMatch" Type="Azure.ETag" />
        <Parameter Name="mode" Type="Azure.Data.Tables.TableUpdateMode" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="entity">The entity to update.</param>
        <param name="ifMatch">The If-Match value to be used for optimistic concurrency.</param>
        <param name="mode">An enum that determines which upsert operation to perform.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Replaces the specified table entity, if it exists.
            </summary>
        <returns>The <see cref="T:Azure.Response" /> indicating the result of the operation.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="UpsertEntity&lt;T&gt;">
      <MemberSignature Language="C#" Value="public virtual Azure.Response UpsertEntity&lt;T&gt; (T entity, Azure.Data.Tables.TableUpdateMode mode = Azure.Data.Tables.TableUpdateMode.Merge, System.Threading.CancellationToken cancellationToken = default) where T : class, Azure.Data.Tables.ITableEntity, new();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response UpsertEntity&lt;class .ctor (class Azure.Data.Tables.ITableEntity) T&gt;(!!T entity, valuetype Azure.Data.Tables.TableUpdateMode mode, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Data.Tables.TableClient.UpsertEntity``1(``0,Azure.Data.Tables.TableUpdateMode,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpsertEntity(Of T As {Class, ITableEntity, New}) (entity As T, Optional mode As TableUpdateMode = Azure.Data.Tables.TableUpdateMode.Merge, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member UpsertEntity : 'T * Azure.Data.Tables.TableUpdateMode * System.Threading.CancellationToken -&gt; Azure.Response (requires 'T : null and 'T :&gt; Azure.Data.Tables.ITableEntity and 'T : (new : unit -&gt; 'T))&#xA;override this.UpsertEntity : 'T * Azure.Data.Tables.TableUpdateMode * System.Threading.CancellationToken -&gt; Azure.Response (requires 'T : null and 'T :&gt; Azure.Data.Tables.ITableEntity and 'T : (new : unit -&gt; 'T))" Usage="tableClient.UpsertEntity (entity, mode, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Data.Tables</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>Azure.Data.Tables.ITableEntity</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="entity" Type="T" />
        <Parameter Name="mode" Type="Azure.Data.Tables.TableUpdateMode" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="entity">The entity to upsert.</param>
        <param name="mode">An enum that determines which upsert operation to perform.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Replaces the specified table entity, if it exists. Creates the entity if it does not exist.
            </summary>
        <returns>The <see cref="T:Azure.Response" /> indicating the result of the operation.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="UpsertEntityAsync&lt;T&gt;">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; UpsertEntityAsync&lt;T&gt; (T entity, Azure.Data.Tables.TableUpdateMode mode = Azure.Data.Tables.TableUpdateMode.Merge, System.Threading.CancellationToken cancellationToken = default) where T : class, Azure.Data.Tables.ITableEntity, new();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; UpsertEntityAsync&lt;class .ctor (class Azure.Data.Tables.ITableEntity) T&gt;(!!T entity, valuetype Azure.Data.Tables.TableUpdateMode mode, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Data.Tables.TableClient.UpsertEntityAsync``1(``0,Azure.Data.Tables.TableUpdateMode,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpsertEntityAsync(Of T As {Class, ITableEntity, New}) (entity As T, Optional mode As TableUpdateMode = Azure.Data.Tables.TableUpdateMode.Merge, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member UpsertEntityAsync : 'T * Azure.Data.Tables.TableUpdateMode * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt; (requires 'T : null and 'T :&gt; Azure.Data.Tables.ITableEntity and 'T : (new : unit -&gt; 'T))&#xA;override this.UpsertEntityAsync : 'T * Azure.Data.Tables.TableUpdateMode * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt; (requires 'T : null and 'T :&gt; Azure.Data.Tables.ITableEntity and 'T : (new : unit -&gt; 'T))" Usage="tableClient.UpsertEntityAsync (entity, mode, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Data.Tables</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>Azure.Data.Tables.ITableEntity</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="entity" Type="T" />
        <Parameter Name="mode" Type="Azure.Data.Tables.TableUpdateMode" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="entity">The entity to upsert.</param>
        <param name="mode">An enum that determines which upsert operation to perform.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Replaces the specified table entity, if it exists. Creates the entity if it does not exist.
            </summary>
        <returns>The <see cref="T:Azure.Response" /> indicating the result of the operation.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
  </Members>
</Type>

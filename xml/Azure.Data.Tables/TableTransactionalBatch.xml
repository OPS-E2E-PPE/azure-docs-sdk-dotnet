<Type Name="TableTransactionalBatch" FullName="Azure.Data.Tables.TableTransactionalBatch">
  <TypeSignature Language="C#" Value="public class TableTransactionalBatch" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TableTransactionalBatch extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Data.Tables.TableTransactionalBatch" />
  <TypeSignature Language="VB.NET" Value="Public Class TableTransactionalBatch" />
  <TypeSignature Language="F#" Value="type TableTransactionalBatch = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Data.Tables</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TableTransactionalBatch ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Data.Tables.TableTransactionalBatch.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Data.Tables</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.Data.Tables.TableTransactionalBatch" /> class for mocking.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddEntities&lt;T&gt;">
      <MemberSignature Language="C#" Value="public virtual void AddEntities&lt;T&gt; (System.Collections.Generic.IEnumerable&lt;T&gt; entities) where T : class, Azure.Data.Tables.ITableEntity, new();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddEntities&lt;class .ctor (class Azure.Data.Tables.ITableEntity) T&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; entities) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Data.Tables.TableTransactionalBatch.AddEntities``1(System.Collections.Generic.IEnumerable{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddEntities(Of T As {Class, ITableEntity, New}) (entities As IEnumerable(Of T))" />
      <MemberSignature Language="F#" Value="abstract member AddEntities : seq&lt;'T (requires 'T : null and 'T :&gt; Azure.Data.Tables.ITableEntity and 'T : (new : unit -&gt; 'T))&gt; -&gt; unit (requires 'T : null and 'T :&gt; Azure.Data.Tables.ITableEntity and 'T : (new : unit -&gt; 'T))&#xA;override this.AddEntities : seq&lt;'T (requires 'T : null and 'T :&gt; Azure.Data.Tables.ITableEntity and 'T : (new : unit -&gt; 'T))&gt; -&gt; unit (requires 'T : null and 'T :&gt; Azure.Data.Tables.ITableEntity and 'T : (new : unit -&gt; 'T))" Usage="tableTransactionalBatch.AddEntities entities" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Data.Tables</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>Azure.Data.Tables.ITableEntity</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="entities" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T" />
        <param name="entities" />
        <summary>
            Add a collection of AddEntity requests to the batch.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddEntity&lt;T&gt;">
      <MemberSignature Language="C#" Value="public virtual void AddEntity&lt;T&gt; (T entity) where T : class, Azure.Data.Tables.ITableEntity, new();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddEntity&lt;class .ctor (class Azure.Data.Tables.ITableEntity) T&gt;(!!T entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Data.Tables.TableTransactionalBatch.AddEntity``1(``0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddEntity(Of T As {Class, ITableEntity, New}) (entity As T)" />
      <MemberSignature Language="F#" Value="abstract member AddEntity : 'T -&gt; unit (requires 'T : null and 'T :&gt; Azure.Data.Tables.ITableEntity and 'T : (new : unit -&gt; 'T))&#xA;override this.AddEntity : 'T -&gt; unit (requires 'T : null and 'T :&gt; Azure.Data.Tables.ITableEntity and 'T : (new : unit -&gt; 'T))" Usage="tableTransactionalBatch.AddEntity entity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Data.Tables</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>Azure.Data.Tables.ITableEntity</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="entity" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T" />
        <param name="entity" />
        <summary>
            Add an AddEntity requests to the batch.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteEntity">
      <MemberSignature Language="C#" Value="public virtual void DeleteEntity (string partitionKey, string rowKey, Azure.ETag ifMatch = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteEntity(string partitionKey, string rowKey, valuetype Azure.ETag ifMatch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Data.Tables.TableTransactionalBatch.DeleteEntity(System.String,System.String,Azure.ETag)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DeleteEntity (partitionKey As String, rowKey As String, Optional ifMatch As ETag = Nothing)" />
      <MemberSignature Language="F#" Value="abstract member DeleteEntity : string * string * Azure.ETag -&gt; unit&#xA;override this.DeleteEntity : string * string * Azure.ETag -&gt; unit" Usage="tableTransactionalBatch.DeleteEntity (partitionKey, rowKey, ifMatch)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Data.Tables</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partitionKey" Type="System.String" />
        <Parameter Name="rowKey" Type="System.String" />
        <Parameter Name="ifMatch" Type="Azure.ETag" />
      </Parameters>
      <Docs>
        <param name="partitionKey" />
        <param name="rowKey" />
        <param name="ifMatch" />
        <summary>
            Add a DeleteEntity request to the batch.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubmitBatch&lt;T&gt;">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Data.Tables.Models.TableBatchResponse&gt; SubmitBatch&lt;T&gt; (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Data.Tables.Models.TableBatchResponse&gt; SubmitBatch&lt;T&gt;(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Data.Tables.TableTransactionalBatch.SubmitBatch``1(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SubmitBatch(Of T) (Optional cancellationToken As CancellationToken = Nothing) As Response(Of TableBatchResponse)" />
      <MemberSignature Language="F#" Value="abstract member SubmitBatch : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Data.Tables.Models.TableBatchResponse&gt;&#xA;override this.SubmitBatch : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Data.Tables.Models.TableBatchResponse&gt;" Usage="tableTransactionalBatch.SubmitBatch cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Data.Tables</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Data.Tables.Models.TableBatchResponse&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="T" />
        <param name="cancellationToken">To be added.</param>
        <summary>
            Placeholder for batch operations. This is just being used for testing.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubmitBatchAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Data.Tables.Models.TableBatchResponse&gt;&gt; SubmitBatchAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Data.Tables.Models.TableBatchResponse&gt;&gt; SubmitBatchAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Data.Tables.TableTransactionalBatch.SubmitBatchAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SubmitBatchAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of TableBatchResponse))" />
      <MemberSignature Language="F#" Value="abstract member SubmitBatchAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Data.Tables.Models.TableBatchResponse&gt;&gt;&#xA;override this.SubmitBatchAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Data.Tables.Models.TableBatchResponse&gt;&gt;" Usage="tableTransactionalBatch.SubmitBatchAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Data.Tables</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Data.Tables.Models.TableBatchResponse&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken" />
        <summary>
            Placeholder for batch operations. This is just being used for testing.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateEntity&lt;T&gt;">
      <MemberSignature Language="C#" Value="public virtual void UpdateEntity&lt;T&gt; (T entity, Azure.ETag ifMatch, Azure.Data.Tables.TableUpdateMode mode = Azure.Data.Tables.TableUpdateMode.Merge) where T : class, Azure.Data.Tables.ITableEntity, new();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateEntity&lt;class .ctor (class Azure.Data.Tables.ITableEntity) T&gt;(!!T entity, valuetype Azure.ETag ifMatch, valuetype Azure.Data.Tables.TableUpdateMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Data.Tables.TableTransactionalBatch.UpdateEntity``1(``0,Azure.ETag,Azure.Data.Tables.TableUpdateMode)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub UpdateEntity(Of T As {Class, ITableEntity, New}) (entity As T, ifMatch As ETag, Optional mode As TableUpdateMode = Azure.Data.Tables.TableUpdateMode.Merge)" />
      <MemberSignature Language="F#" Value="abstract member UpdateEntity : 'T * Azure.ETag * Azure.Data.Tables.TableUpdateMode -&gt; unit (requires 'T : null and 'T :&gt; Azure.Data.Tables.ITableEntity and 'T : (new : unit -&gt; 'T))&#xA;override this.UpdateEntity : 'T * Azure.ETag * Azure.Data.Tables.TableUpdateMode -&gt; unit (requires 'T : null and 'T :&gt; Azure.Data.Tables.ITableEntity and 'T : (new : unit -&gt; 'T))" Usage="tableTransactionalBatch.UpdateEntity (entity, ifMatch, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Data.Tables</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>Azure.Data.Tables.ITableEntity</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="entity" Type="T" />
        <Parameter Name="ifMatch" Type="Azure.ETag" />
        <Parameter Name="mode" Type="Azure.Data.Tables.TableUpdateMode" />
      </Parameters>
      <Docs>
        <typeparam name="T" />
        <param name="entity">To be added.</param>
        <param name="ifMatch">To be added.</param>
        <param name="mode">To be added.</param>
        <summary>
            Add an UpdateEntity request to the batch.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

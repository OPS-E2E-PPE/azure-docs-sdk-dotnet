<Type Name="ChatThreadClient" FullName="Azure.Communication.Chat.ChatThreadClient">
  <TypeSignature Language="C#" Value="public class ChatThreadClient" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ChatThreadClient extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Communication.Chat.ChatThreadClient" />
  <TypeSignature Language="VB.NET" Value="Public Class ChatThreadClient" />
  <TypeSignature Language="F#" Value="type ChatThreadClient = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Communication.Chat</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            The Azure Communication Services ChatThread client.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ChatThreadClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.Chat.ChatThreadClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.Chat</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of <see cref="T:Azure.Communication.Chat.ChatThreadClient" /> for mocking.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMembers">
      <MemberSignature Language="C#" Value="public virtual Azure.Response AddMembers (System.Collections.Generic.IEnumerable&lt;Azure.Communication.Chat.ChatThreadMember&gt; members, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response AddMembers(class System.Collections.Generic.IEnumerable`1&lt;class Azure.Communication.Chat.ChatThreadMember&gt; members, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.Chat.ChatThreadClient.AddMembers(System.Collections.Generic.IEnumerable{Azure.Communication.Chat.ChatThreadMember},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddMembers (members As IEnumerable(Of ChatThreadMember), Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member AddMembers : seq&lt;Azure.Communication.Chat.ChatThreadMember&gt; * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.AddMembers : seq&lt;Azure.Communication.Chat.ChatThreadMember&gt; * System.Threading.CancellationToken -&gt; Azure.Response" Usage="chatThreadClient.AddMembers (members, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.Chat</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="members" Type="System.Collections.Generic.IEnumerable&lt;Azure.Communication.Chat.ChatThreadMember&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="members"> Members to add to a chat thread. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Adds thread members to a thread. If members already exist, no change occurs. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddMembersAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; AddMembersAsync (System.Collections.Generic.IEnumerable&lt;Azure.Communication.Chat.ChatThreadMember&gt; members, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; AddMembersAsync(class System.Collections.Generic.IEnumerable`1&lt;class Azure.Communication.Chat.ChatThreadMember&gt; members, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.Chat.ChatThreadClient.AddMembersAsync(System.Collections.Generic.IEnumerable{Azure.Communication.Chat.ChatThreadMember},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddMembersAsync (members As IEnumerable(Of ChatThreadMember), Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member AddMembersAsync : seq&lt;Azure.Communication.Chat.ChatThreadMember&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.AddMembersAsync : seq&lt;Azure.Communication.Chat.ChatThreadMember&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="chatThreadClient.AddMembersAsync (members, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.Chat</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="members" Type="System.Collections.Generic.IEnumerable&lt;Azure.Communication.Chat.ChatThreadMember&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="members"> Members to add to a chat thread. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Adds thread members to a thread asynchronously. If members already exist, no change occurs. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteMessage">
      <MemberSignature Language="C#" Value="public virtual Azure.Response DeleteMessage (string messageId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response DeleteMessage(string messageId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.Chat.ChatThreadClient.DeleteMessage(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteMessage (messageId As String, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member DeleteMessage : string * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.DeleteMessage : string * System.Threading.CancellationToken -&gt; Azure.Response" Usage="chatThreadClient.DeleteMessage (messageId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.Chat</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="messageId"> The message id. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Deletes a message. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteMessageAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DeleteMessageAsync (string messageId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeleteMessageAsync(string messageId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.Chat.ChatThreadClient.DeleteMessageAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteMessageAsync (messageId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DeleteMessageAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DeleteMessageAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="chatThreadClient.DeleteMessageAsync (messageId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.Chat</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="messageId"> The message id. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Deletes a message. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetMembers">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.Communication.Chat.ChatThreadMember&gt; GetMembers (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.Communication.Chat.ChatThreadMember&gt; GetMembers(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.Chat.ChatThreadClient.GetMembers(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMembers (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ChatThreadMember)" />
      <MemberSignature Language="F#" Value="abstract member GetMembers : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.Communication.Chat.ChatThreadMember&gt;&#xA;override this.GetMembers : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.Communication.Chat.ChatThreadMember&gt;" Usage="chatThreadClient.GetMembers cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.Chat</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.Communication.Chat.ChatThreadMember&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets the members of a thread. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetMembersAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.Communication.Chat.ChatThreadMember&gt; GetMembersAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.Communication.Chat.ChatThreadMember&gt; GetMembersAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.Chat.ChatThreadClient.GetMembersAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMembersAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ChatThreadMember)" />
      <MemberSignature Language="F#" Value="abstract member GetMembersAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.Communication.Chat.ChatThreadMember&gt;&#xA;override this.GetMembersAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.Communication.Chat.ChatThreadMember&gt;" Usage="chatThreadClient.GetMembersAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.Chat</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.Communication.Chat.ChatThreadMember&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets the members of a thread asynchronously. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetMessage">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Communication.Chat.ChatMessage&gt; GetMessage (string messageId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Communication.Chat.ChatMessage&gt; GetMessage(string messageId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.Chat.ChatThreadClient.GetMessage(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMessage (messageId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ChatMessage)" />
      <MemberSignature Language="F#" Value="abstract member GetMessage : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.Chat.ChatMessage&gt;&#xA;override this.GetMessage : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.Chat.ChatMessage&gt;" Usage="chatThreadClient.GetMessage (messageId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.Chat</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Communication.Chat.ChatMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="messageId"> The message id. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets a message by id. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetMessageAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.Chat.ChatMessage&gt;&gt; GetMessageAsync (string messageId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Communication.Chat.ChatMessage&gt;&gt; GetMessageAsync(string messageId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.Chat.ChatThreadClient.GetMessageAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMessageAsync (messageId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ChatMessage))" />
      <MemberSignature Language="F#" Value="abstract member GetMessageAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.Chat.ChatMessage&gt;&gt;&#xA;override this.GetMessageAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.Chat.ChatMessage&gt;&gt;" Usage="chatThreadClient.GetMessageAsync (messageId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.Chat</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.Chat.ChatMessage&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="messageId"> The message id. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets a message by id asynchronously. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetMessages">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.Communication.Chat.ChatMessage&gt; GetMessages (DateTimeOffset? startTime = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.Communication.Chat.ChatMessage&gt; GetMessages(valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; startTime, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.Chat.ChatThreadClient.GetMessages(System.Nullable{System.DateTimeOffset},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMessages (Optional startTime As Nullable(Of DateTimeOffset) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ChatMessage)" />
      <MemberSignature Language="F#" Value="abstract member GetMessages : Nullable&lt;DateTimeOffset&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.Communication.Chat.ChatMessage&gt;&#xA;override this.GetMessages : Nullable&lt;DateTimeOffset&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.Communication.Chat.ChatMessage&gt;" Usage="chatThreadClient.GetMessages (startTime, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.Chat</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.Communication.Chat.ChatMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="startTime"> The earliest point in time to get messages up to. The timestamp should be in ISO8601 format: `yyyy-MM-ddTHH:mm:ssZ`. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets a list of messages from a thread. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetMessagesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.Communication.Chat.ChatMessage&gt; GetMessagesAsync (DateTimeOffset? startTime = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.Communication.Chat.ChatMessage&gt; GetMessagesAsync(valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; startTime, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.Chat.ChatThreadClient.GetMessagesAsync(System.Nullable{System.DateTimeOffset},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMessagesAsync (Optional startTime As Nullable(Of DateTimeOffset) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ChatMessage)" />
      <MemberSignature Language="F#" Value="abstract member GetMessagesAsync : Nullable&lt;DateTimeOffset&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.Communication.Chat.ChatMessage&gt;&#xA;override this.GetMessagesAsync : Nullable&lt;DateTimeOffset&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.Communication.Chat.ChatMessage&gt;" Usage="chatThreadClient.GetMessagesAsync (startTime, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.Chat</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.Communication.Chat.ChatMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="startTime"> The earliest point in time to get messages up to. The timestamp should be in ISO8601 format: `yyyy-MM-ddTHH:mm:ssZ`. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets a list of messages from a thread asynchronously. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetReadReceipts">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.Communication.Chat.ReadReceipt&gt; GetReadReceipts (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.Communication.Chat.ReadReceipt&gt; GetReadReceipts(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.Chat.ChatThreadClient.GetReadReceipts(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetReadReceipts (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ReadReceipt)" />
      <MemberSignature Language="F#" Value="abstract member GetReadReceipts : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.Communication.Chat.ReadReceipt&gt;&#xA;override this.GetReadReceipts : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.Communication.Chat.ReadReceipt&gt;" Usage="chatThreadClient.GetReadReceipts cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.Chat</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.Communication.Chat.ReadReceipt&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets read receipts for a thread. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetReadReceiptsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.Communication.Chat.ReadReceipt&gt; GetReadReceiptsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.Communication.Chat.ReadReceipt&gt; GetReadReceiptsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.Chat.ChatThreadClient.GetReadReceiptsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetReadReceiptsAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ReadReceipt)" />
      <MemberSignature Language="F#" Value="abstract member GetReadReceiptsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.Communication.Chat.ReadReceipt&gt;&#xA;override this.GetReadReceiptsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.Communication.Chat.ReadReceipt&gt;" Usage="chatThreadClient.GetReadReceiptsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.Chat</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.Communication.Chat.ReadReceipt&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets read receipts for a thread asynchronously. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public virtual string Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:Azure.Communication.Chat.ChatThreadClient.Id" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Id As String" />
      <MemberSignature Language="F#" Value="member this.Id : string" Usage="Azure.Communication.Chat.ChatThreadClient.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.Chat</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Represents the unique identifier for the thread associated to this instance.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveMember">
      <MemberSignature Language="C#" Value="public virtual Azure.Response RemoveMember (Azure.Communication.CommunicationUser user, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response RemoveMember(class Azure.Communication.CommunicationUser user, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.Chat.ChatThreadClient.RemoveMember(Azure.Communication.CommunicationUser,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoveMember (user As CommunicationUser, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member RemoveMember : Azure.Communication.CommunicationUser * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.RemoveMember : Azure.Communication.CommunicationUser * System.Threading.CancellationToken -&gt; Azure.Response" Usage="chatThreadClient.RemoveMember (user, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.Chat</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="user" Type="Azure.Communication.CommunicationUser" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="user">
          <see cref="T:Azure.Communication.CommunicationUser" /> to be removed from the chat thread members.</param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Remove a member from a thread .</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveMemberAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; RemoveMemberAsync (Azure.Communication.CommunicationUser user, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; RemoveMemberAsync(class Azure.Communication.CommunicationUser user, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.Chat.ChatThreadClient.RemoveMemberAsync(Azure.Communication.CommunicationUser,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoveMemberAsync (user As CommunicationUser, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member RemoveMemberAsync : Azure.Communication.CommunicationUser * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.RemoveMemberAsync : Azure.Communication.CommunicationUser * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="chatThreadClient.RemoveMemberAsync (user, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.Chat</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="user" Type="Azure.Communication.CommunicationUser" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="user">
          <see cref="T:Azure.Communication.CommunicationUser" /> to be removed from the chat thread members.</param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Remove a member from a thread asynchronously.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="SendMessage">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Communication.Chat.SendChatMessageResult&gt; SendMessage (string content, Azure.Communication.Chat.ChatMessagePriority? priority = default, string senderDisplayName = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Communication.Chat.SendChatMessageResult&gt; SendMessage(string content, valuetype System.Nullable`1&lt;valuetype Azure.Communication.Chat.ChatMessagePriority&gt; priority, string senderDisplayName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.Chat.ChatThreadClient.SendMessage(System.String,System.Nullable{Azure.Communication.Chat.ChatMessagePriority},System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SendMessage (content As String, Optional priority As Nullable(Of ChatMessagePriority) = Nothing, Optional senderDisplayName As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SendChatMessageResult)" />
      <MemberSignature Language="F#" Value="abstract member SendMessage : string * Nullable&lt;Azure.Communication.Chat.ChatMessagePriority&gt; * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.Chat.SendChatMessageResult&gt;&#xA;override this.SendMessage : string * Nullable&lt;Azure.Communication.Chat.ChatMessagePriority&gt; * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.Chat.SendChatMessageResult&gt;" Usage="chatThreadClient.SendMessage (content, priority, senderDisplayName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.Chat</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Communication.Chat.SendChatMessageResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="System.String" />
        <Parameter Name="priority" Type="System.Nullable&lt;Azure.Communication.Chat.ChatMessagePriority&gt;" />
        <Parameter Name="senderDisplayName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content"> Message content. </param>
        <param name="priority"> Message priority. </param>
        <param name="senderDisplayName"> The display name of the message sender. This property is used to populate sender name for push notifications. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Sends a message to a thread. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="SendMessageAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.Chat.SendChatMessageResult&gt;&gt; SendMessageAsync (string content, Azure.Communication.Chat.ChatMessagePriority? priority = default, string senderDisplayName = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Communication.Chat.SendChatMessageResult&gt;&gt; SendMessageAsync(string content, valuetype System.Nullable`1&lt;valuetype Azure.Communication.Chat.ChatMessagePriority&gt; priority, string senderDisplayName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.Chat.ChatThreadClient.SendMessageAsync(System.String,System.Nullable{Azure.Communication.Chat.ChatMessagePriority},System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SendMessageAsync (content As String, Optional priority As Nullable(Of ChatMessagePriority) = Nothing, Optional senderDisplayName As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SendChatMessageResult))" />
      <MemberSignature Language="F#" Value="abstract member SendMessageAsync : string * Nullable&lt;Azure.Communication.Chat.ChatMessagePriority&gt; * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.Chat.SendChatMessageResult&gt;&gt;&#xA;override this.SendMessageAsync : string * Nullable&lt;Azure.Communication.Chat.ChatMessagePriority&gt; * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.Chat.SendChatMessageResult&gt;&gt;" Usage="chatThreadClient.SendMessageAsync (content, priority, senderDisplayName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.Chat</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.Chat.SendChatMessageResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="System.String" />
        <Parameter Name="priority" Type="System.Nullable&lt;Azure.Communication.Chat.ChatMessagePriority&gt;" />
        <Parameter Name="senderDisplayName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content"> Message content. </param>
        <param name="priority"> Message priority. </param>
        <param name="senderDisplayName"> The display name of the message sender. This property is used to populate sender name for push notifications. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Sends a message to a thread asynchronously. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="SendReadReceipt">
      <MemberSignature Language="C#" Value="public virtual Azure.Response SendReadReceipt (string messageId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response SendReadReceipt(string messageId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.Chat.ChatThreadClient.SendReadReceipt(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SendReadReceipt (messageId As String, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member SendReadReceipt : string * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.SendReadReceipt : string * System.Threading.CancellationToken -&gt; Azure.Response" Usage="chatThreadClient.SendReadReceipt (messageId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.Chat</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="messageId"> Id of the latest chat message read by the user. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Sends a read receipt event to a thread, on behalf of a user. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="SendReadReceiptAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; SendReadReceiptAsync (string messageId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; SendReadReceiptAsync(string messageId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.Chat.ChatThreadClient.SendReadReceiptAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SendReadReceiptAsync (messageId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member SendReadReceiptAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.SendReadReceiptAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="chatThreadClient.SendReadReceiptAsync (messageId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.Chat</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="messageId"> Id of the latest chat message read by the user. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Sends a read receipt event to a thread, on behalf of a user asynchronously. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="SendTypingNotification">
      <MemberSignature Language="C#" Value="public virtual Azure.Response SendTypingNotification (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response SendTypingNotification(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.Chat.ChatThreadClient.SendTypingNotification(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SendTypingNotification (Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member SendTypingNotification : System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.SendTypingNotification : System.Threading.CancellationToken -&gt; Azure.Response" Usage="chatThreadClient.SendTypingNotification cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.Chat</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Posts a typing event to a thread, on behalf of a user. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="SendTypingNotificationAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; SendTypingNotificationAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; SendTypingNotificationAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.Chat.ChatThreadClient.SendTypingNotificationAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SendTypingNotificationAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member SendTypingNotificationAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.SendTypingNotificationAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="chatThreadClient.SendTypingNotificationAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.Chat</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Posts a typing event to a thread, on behalf of a user asynchronously. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateMessage">
      <MemberSignature Language="C#" Value="public virtual Azure.Response UpdateMessage (string messageId, string content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response UpdateMessage(string messageId, string content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.Chat.ChatThreadClient.UpdateMessage(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateMessage (messageId As String, content As String, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member UpdateMessage : string * string * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.UpdateMessage : string * string * System.Threading.CancellationToken -&gt; Azure.Response" Usage="chatThreadClient.UpdateMessage (messageId, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.Chat</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageId" Type="System.String" />
        <Parameter Name="content" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="messageId"> The message id. </param>
        <param name="content"> Chat message content. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Updates a message asynchronously. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateMessageAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; UpdateMessageAsync (string messageId, string content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; UpdateMessageAsync(string messageId, string content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.Chat.ChatThreadClient.UpdateMessageAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateMessageAsync (messageId As String, content As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member UpdateMessageAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.UpdateMessageAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="chatThreadClient.UpdateMessageAsync (messageId, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.Chat</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageId" Type="System.String" />
        <Parameter Name="content" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="messageId"> The message id. </param>
        <param name="content"> Chat message content. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Updates a message asynchronously. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateThread">
      <MemberSignature Language="C#" Value="public virtual Azure.Response UpdateThread (string topic, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response UpdateThread(string topic, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.Chat.ChatThreadClient.UpdateThread(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateThread (topic As String, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member UpdateThread : string * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.UpdateThread : string * System.Threading.CancellationToken -&gt; Azure.Response" Usage="chatThreadClient.UpdateThread (topic, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.Chat</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="topic" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="topic"> Chat thread topic. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Updates thread's properties. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateThreadAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; UpdateThreadAsync (string topic, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; UpdateThreadAsync(string topic, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.Chat.ChatThreadClient.UpdateThreadAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateThreadAsync (topic As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member UpdateThreadAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.UpdateThreadAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="chatThreadClient.UpdateThreadAsync (topic, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.Chat</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="topic" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="topic"> Chat thread topic. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Updates thread's properties asynchronously. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="ChatClient" FullName="Azure.Communication.Chat.ChatClient">
  <TypeSignature Language="C#" Value="public class ChatClient" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ChatClient extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Communication.Chat.ChatClient" />
  <TypeSignature Language="VB.NET" Value="Public Class ChatClient" />
  <TypeSignature Language="F#" Value="type ChatClient = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Communication.Chat</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            The Azure Communication Services Chat client.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ChatClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.Chat.ChatClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.Chat</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of <see cref="T:Azure.Communication.Chat.ChatClient" /> for mocking.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ChatClient (Uri endpointUrl, Azure.Communication.CommunicationTokenCredential communicationTokenCredential, Azure.Communication.Chat.ChatClientOptions? options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpointUrl, class Azure.Communication.CommunicationTokenCredential communicationTokenCredential, class Azure.Communication.Chat.ChatClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.Chat.ChatClient.#ctor(System.Uri,Azure.Communication.CommunicationTokenCredential,Azure.Communication.Chat.ChatClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpointUrl As Uri, communicationTokenCredential As CommunicationTokenCredential, Optional options As ChatClientOptions = Nothing)" />
      <MemberSignature Language="F#" Value="new Azure.Communication.Chat.ChatClient : Uri * Azure.Communication.CommunicationTokenCredential * Azure.Communication.Chat.ChatClientOptions -&gt; Azure.Communication.Chat.ChatClient" Usage="new Azure.Communication.Chat.ChatClient (endpointUrl, communicationTokenCredential, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.Chat</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpointUrl" Type="System.Uri" />
        <Parameter Name="communicationTokenCredential" Type="Azure.Communication.CommunicationTokenCredential" />
        <Parameter Name="options" Type="Azure.Communication.Chat.ChatClientOptions" />
      </Parameters>
      <Docs>
        <param name="endpointUrl">The uri for the Azure Communication Services Chat.</param>
        <param name="communicationTokenCredential">Instance of <see cref="T:Azure.Communication.CommunicationTokenCredential" />.</param>
        <param name="options">Chat client options exposing <see cref="P:Azure.Core.ClientOptions.Diagnostics" />, <see cref="P:Azure.Core.ClientOptions.Retry" />, <see cref="P:Azure.Core.ClientOptions.Transport" />, etc.</param>
        <summary> Initializes a new instance of <see cref="T:Azure.Communication.Chat.ChatClient" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateChatThread">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Communication.Chat.CreateChatThreadResult&gt; CreateChatThread (string topic, System.Collections.Generic.IEnumerable&lt;Azure.Communication.Chat.ChatParticipant&gt; participants, string? repeatabilityRequestId = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Communication.Chat.CreateChatThreadResult&gt; CreateChatThread(string topic, class System.Collections.Generic.IEnumerable`1&lt;class Azure.Communication.Chat.ChatParticipant&gt; participants, string repeatabilityRequestId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.Chat.ChatClient.CreateChatThread(System.String,System.Collections.Generic.IEnumerable{Azure.Communication.Chat.ChatParticipant},System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateChatThread (topic As String, participants As IEnumerable(Of ChatParticipant), Optional repeatabilityRequestId As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of CreateChatThreadResult)" />
      <MemberSignature Language="F#" Value="abstract member CreateChatThread : string * seq&lt;Azure.Communication.Chat.ChatParticipant&gt; * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.Chat.CreateChatThreadResult&gt;&#xA;override this.CreateChatThread : string * seq&lt;Azure.Communication.Chat.ChatParticipant&gt; * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.Chat.CreateChatThreadResult&gt;" Usage="chatClient.CreateChatThread (topic, participants, repeatabilityRequestId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.Chat</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Communication.Chat.CreateChatThreadResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="topic" Type="System.String" />
        <Parameter Name="participants" Type="System.Collections.Generic.IEnumerable&lt;Azure.Communication.Chat.ChatParticipant&gt;" />
        <Parameter Name="repeatabilityRequestId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="topic">Topic for the chat thread</param>
        <param name="participants">Participants to be included in the chat thread</param>
        <param name="repeatabilityRequestId"> If specified, the client directs that the request is repeatable; that is, that the client can make the request multiple times with the same Repeatability-Request-ID and get back an appropriate response without the server executing the request multiple times. The value of the Repeatability-Request-ID is an opaque string representing a client-generated, globally unique for all time, identifier for the request. It is recommended to use version 4 (random) UUIDs. </param>
        <param name="cancellationToken">The cancellation token for the task.</param>
        <summary>Creates a ChatThreadClient synchronously.<see cref="T:Azure.Communication.Chat.ChatThreadClient" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateChatThreadAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.Chat.CreateChatThreadResult&gt;&gt; CreateChatThreadAsync (string topic, System.Collections.Generic.IEnumerable&lt;Azure.Communication.Chat.ChatParticipant&gt; participants, string? repeatabilityRequestId = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Communication.Chat.CreateChatThreadResult&gt;&gt; CreateChatThreadAsync(string topic, class System.Collections.Generic.IEnumerable`1&lt;class Azure.Communication.Chat.ChatParticipant&gt; participants, string repeatabilityRequestId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.Chat.ChatClient.CreateChatThreadAsync(System.String,System.Collections.Generic.IEnumerable{Azure.Communication.Chat.ChatParticipant},System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateChatThreadAsync (topic As String, participants As IEnumerable(Of ChatParticipant), Optional repeatabilityRequestId As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of CreateChatThreadResult))" />
      <MemberSignature Language="F#" Value="abstract member CreateChatThreadAsync : string * seq&lt;Azure.Communication.Chat.ChatParticipant&gt; * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.Chat.CreateChatThreadResult&gt;&gt;&#xA;override this.CreateChatThreadAsync : string * seq&lt;Azure.Communication.Chat.ChatParticipant&gt; * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.Chat.CreateChatThreadResult&gt;&gt;" Usage="chatClient.CreateChatThreadAsync (topic, participants, repeatabilityRequestId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.Chat</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.Chat.CreateChatThreadResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="topic" Type="System.String" />
        <Parameter Name="participants" Type="System.Collections.Generic.IEnumerable&lt;Azure.Communication.Chat.ChatParticipant&gt;" />
        <Parameter Name="repeatabilityRequestId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="topic">Topic for the chat thread</param>
        <param name="participants">Participants to be included in the chat thread</param>
        <param name="repeatabilityRequestId"> If specified, the client directs that the request is repeatable; that is, that the client can make the request multiple times with the same Repeatability-Request-ID and get back an appropriate response without the server executing the request multiple times. The value of the Repeatability-Request-ID is an opaque string representing a client-generated, globally unique for all time, identifier for the request. It is recommended to use version 4 (random) UUIDs. </param>
        <param name="cancellationToken">The cancellation token for the task.</param>
        <summary>Creates a ChatThreadClient asynchronously. <see cref="T:Azure.Communication.Chat.ChatThreadClient" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteChatThread">
      <MemberSignature Language="C#" Value="public virtual Azure.Response DeleteChatThread (string threadId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response DeleteChatThread(string threadId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.Chat.ChatClient.DeleteChatThread(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteChatThread (threadId As String, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member DeleteChatThread : string * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.DeleteChatThread : string * System.Threading.CancellationToken -&gt; Azure.Response" Usage="chatClient.DeleteChatThread (threadId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.Chat</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="threadId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="threadId"> Thread id to delete. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Deletes a thread. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteChatThreadAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DeleteChatThreadAsync (string threadId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeleteChatThreadAsync(string threadId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.Chat.ChatClient.DeleteChatThreadAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteChatThreadAsync (threadId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DeleteChatThreadAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DeleteChatThreadAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="chatClient.DeleteChatThreadAsync (threadId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.Chat</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="threadId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="threadId"> Thread id to delete. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Deletes a thread asynchronously. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetChatThread">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Communication.Chat.ChatThread&gt; GetChatThread (string threadId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Communication.Chat.ChatThread&gt; GetChatThread(string threadId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.Chat.ChatClient.GetChatThread(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetChatThread (threadId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ChatThread)" />
      <MemberSignature Language="F#" Value="abstract member GetChatThread : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.Chat.ChatThread&gt;&#xA;override this.GetChatThread : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.Chat.ChatThread&gt;" Usage="chatClient.GetChatThread (threadId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.Chat</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Communication.Chat.ChatThread&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="threadId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="threadId"> Thread id of the chat thread. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets a chat thread. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetChatThreadAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.Chat.ChatThread&gt;&gt; GetChatThreadAsync (string threadId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Communication.Chat.ChatThread&gt;&gt; GetChatThreadAsync(string threadId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.Chat.ChatClient.GetChatThreadAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetChatThreadAsync (threadId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ChatThread))" />
      <MemberSignature Language="F#" Value="abstract member GetChatThreadAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.Chat.ChatThread&gt;&gt;&#xA;override this.GetChatThreadAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.Chat.ChatThread&gt;&gt;" Usage="chatClient.GetChatThreadAsync (threadId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.Chat</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.Chat.ChatThread&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="threadId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="threadId"> Thread id of the chat thread. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets a chat thread asynchronously. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetChatThreadClient">
      <MemberSignature Language="C#" Value="public virtual Azure.Communication.Chat.ChatThreadClient GetChatThreadClient (string threadId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Communication.Chat.ChatThreadClient GetChatThreadClient(string threadId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.Chat.ChatClient.GetChatThreadClient(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetChatThreadClient (threadId As String) As ChatThreadClient" />
      <MemberSignature Language="F#" Value="abstract member GetChatThreadClient : string -&gt; Azure.Communication.Chat.ChatThreadClient&#xA;override this.GetChatThreadClient : string -&gt; Azure.Communication.Chat.ChatThreadClient" Usage="chatClient.GetChatThreadClient threadId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.Chat</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Communication.Chat.ChatThreadClient</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="threadId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="threadId"> The thread id for the ChatThreadClient instance. </param>
        <summary> Initializes a new instance of ChatThreadClient. <see cref="T:Azure.Communication.Chat.ChatThreadClient" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChatThreadsInfo">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.Communication.Chat.ChatThreadInfo&gt; GetChatThreadsInfo (DateTimeOffset? startTime = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.Communication.Chat.ChatThreadInfo&gt; GetChatThreadsInfo(valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; startTime, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.Chat.ChatClient.GetChatThreadsInfo(System.Nullable{System.DateTimeOffset},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetChatThreadsInfo (Optional startTime As Nullable(Of DateTimeOffset) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ChatThreadInfo)" />
      <MemberSignature Language="F#" Value="abstract member GetChatThreadsInfo : Nullable&lt;DateTimeOffset&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.Communication.Chat.ChatThreadInfo&gt;&#xA;override this.GetChatThreadsInfo : Nullable&lt;DateTimeOffset&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.Communication.Chat.ChatThreadInfo&gt;" Usage="chatClient.GetChatThreadsInfo (startTime, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.Chat</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.Communication.Chat.ChatThreadInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="startTime"> The earliest point in time to get chat threads up to. The timestamp should be in ISO8601 format: `yyyy-MM-ddTHH:mm:ssZ`. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets the list of chat threads of a user<see cref="T:Azure.Communication.Chat.ChatThreadInfo" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetChatThreadsInfoAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.Communication.Chat.ChatThreadInfo&gt; GetChatThreadsInfoAsync (DateTimeOffset? startTime = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.Communication.Chat.ChatThreadInfo&gt; GetChatThreadsInfoAsync(valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; startTime, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.Chat.ChatClient.GetChatThreadsInfoAsync(System.Nullable{System.DateTimeOffset},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetChatThreadsInfoAsync (Optional startTime As Nullable(Of DateTimeOffset) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ChatThreadInfo)" />
      <MemberSignature Language="F#" Value="abstract member GetChatThreadsInfoAsync : Nullable&lt;DateTimeOffset&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.Communication.Chat.ChatThreadInfo&gt;&#xA;override this.GetChatThreadsInfoAsync : Nullable&lt;DateTimeOffset&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.Communication.Chat.ChatThreadInfo&gt;" Usage="chatClient.GetChatThreadsInfoAsync (startTime, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.Chat</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.Communication.Chat.ChatThreadInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="startTime"> The earliest point in time to get chat threads up to. The timestamp should be in ISO8601 format: `yyyy-MM-ddTHH:mm:ssZ`. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets the list of chat threads of a user<see cref="T:Azure.Communication.Chat.ChatThreadInfo" /> asynchronously.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="SchemaRegistryAvroEncoder" FullName="Microsoft.Azure.Data.SchemaRegistry.ApacheAvro.SchemaRegistryAvroEncoder">
  <TypeSignature Language="C#" Value="public class SchemaRegistryAvroEncoder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SchemaRegistryAvroEncoder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Data.SchemaRegistry.ApacheAvro.SchemaRegistryAvroEncoder" />
  <TypeSignature Language="VB.NET" Value="Public Class SchemaRegistryAvroEncoder" />
  <TypeSignature Language="F#" Value="type SchemaRegistryAvroEncoder = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Data.SchemaRegistry.ApacheAvro</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            A <see cref="T:Microsoft.Azure.Data.SchemaRegistry.ApacheAvro.SchemaRegistryAvroEncoder" /> uses the <see cref="T:Azure.Data.SchemaRegistry.SchemaRegistryClient" /> to
            encode and decode Avro payloads.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SchemaRegistryAvroEncoder (Azure.Data.SchemaRegistry.SchemaRegistryClient client, string groupName, Microsoft.Azure.Data.SchemaRegistry.ApacheAvro.SchemaRegistryAvroObjectEncoderOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Azure.Data.SchemaRegistry.SchemaRegistryClient client, string groupName, class Microsoft.Azure.Data.SchemaRegistry.ApacheAvro.SchemaRegistryAvroObjectEncoderOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Data.SchemaRegistry.ApacheAvro.SchemaRegistryAvroEncoder.#ctor(Azure.Data.SchemaRegistry.SchemaRegistryClient,System.String,Microsoft.Azure.Data.SchemaRegistry.ApacheAvro.SchemaRegistryAvroObjectEncoderOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (client As SchemaRegistryClient, groupName As String, Optional options As SchemaRegistryAvroObjectEncoderOptions = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.Data.SchemaRegistry.ApacheAvro.SchemaRegistryAvroEncoder : Azure.Data.SchemaRegistry.SchemaRegistryClient * string * Microsoft.Azure.Data.SchemaRegistry.ApacheAvro.SchemaRegistryAvroObjectEncoderOptions -&gt; Microsoft.Azure.Data.SchemaRegistry.ApacheAvro.SchemaRegistryAvroEncoder" Usage="new Microsoft.Azure.Data.SchemaRegistry.ApacheAvro.SchemaRegistryAvroEncoder (client, groupName, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Data.SchemaRegistry.ApacheAvro</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="client" Type="Azure.Data.SchemaRegistry.SchemaRegistryClient" />
        <Parameter Name="groupName" Type="System.String" />
        <Parameter Name="options" Type="Microsoft.Azure.Data.SchemaRegistry.ApacheAvro.SchemaRegistryAvroObjectEncoderOptions" />
      </Parameters>
      <Docs>
        <param name="client">To be added.</param>
        <param name="groupName">To be added.</param>
        <param name="options">To be added.</param>
        <summary>
            Initializes new instance of <see cref="T:Microsoft.Azure.Data.SchemaRegistry.ApacheAvro.SchemaRegistryAvroEncoder" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DecodeMessageData">
      <MemberSignature Language="C#" Value="public object DecodeMessageData (Azure.Messaging.MessageWithMetadata message, Type returnType, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object DecodeMessageData(class Azure.Messaging.MessageWithMetadata message, class System.Type returnType, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Data.SchemaRegistry.ApacheAvro.SchemaRegistryAvroEncoder.DecodeMessageData(Azure.Messaging.MessageWithMetadata,System.Type,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function DecodeMessageData (message As MessageWithMetadata, returnType As Type, Optional cancellationToken As CancellationToken = Nothing) As Object" />
      <MemberSignature Language="F#" Value="member this.DecodeMessageData : Azure.Messaging.MessageWithMetadata * Type * System.Threading.CancellationToken -&gt; obj" Usage="schemaRegistryAvroEncoder.DecodeMessageData (message, returnType, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Data.SchemaRegistry.ApacheAvro</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="Azure.Messaging.MessageWithMetadata" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="message">The message containing the data to decode.</param>
        <param name="returnType">The type to deserialize to.</param>
        <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken" /> instance to signal the request to cancel the operation.</param>
        <summary>
            Decodes the message data into the specified type using the schema information populated in <see cref="P:Azure.Messaging.MessageWithMetadata.ContentType" />.
            </summary>
        <returns>The deserialized data.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">Thrown if the content type is not in the expected format.</exception>
        <exception cref="T:System.InvalidOperationException">Thrown if an attempt is made to decode non-Avro data.</exception>
      </Docs>
    </Member>
    <Member MemberName="DecodeMessageDataAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.ValueTask&lt;object&gt; DecodeMessageDataAsync (Azure.Messaging.MessageWithMetadata message, Type returnType, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Threading.Tasks.ValueTask`1&lt;object&gt; DecodeMessageDataAsync(class Azure.Messaging.MessageWithMetadata message, class System.Type returnType, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Data.SchemaRegistry.ApacheAvro.SchemaRegistryAvroEncoder.DecodeMessageDataAsync(Azure.Messaging.MessageWithMetadata,System.Type,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function DecodeMessageDataAsync (message As MessageWithMetadata, returnType As Type, Optional cancellationToken As CancellationToken = Nothing) As ValueTask(Of Object)" />
      <MemberSignature Language="F#" Value="member this.DecodeMessageDataAsync : Azure.Messaging.MessageWithMetadata * Type * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;obj&gt;" Usage="schemaRegistryAvroEncoder.DecodeMessageDataAsync (message, returnType, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Data.SchemaRegistry.ApacheAvro</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="Azure.Messaging.MessageWithMetadata" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="message">The message containing the data to decode.</param>
        <param name="returnType">The type to deserialize to.</param>
        <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken" /> instance to signal the request to cancel the operation.</param>
        <summary>
            Decodes the message data into the specified type using the schema information populated in <see cref="P:Azure.Messaging.MessageWithMetadata.ContentType" />.
            </summary>
        <returns>The deserialized data.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">Thrown if the content type is not in the expected format.</exception>
        <exception cref="T:System.InvalidOperationException">Thrown if an attempt is made to decode non-Avro data.</exception>
      </Docs>
    </Member>
    <Member MemberName="EncodeMessageData&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T EncodeMessageData&lt;T&gt; (object data, Type inputType = default, Func&lt;BinaryData,T&gt; messageFactory = default, System.Threading.CancellationToken cancellationToken = default) where T : Azure.Messaging.MessageWithMetadata;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T EncodeMessageData&lt;(class Azure.Messaging.MessageWithMetadata) T&gt;(object data, class System.Type inputType, class System.Func`2&lt;class System.BinaryData, !!T&gt; messageFactory, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Data.SchemaRegistry.ApacheAvro.SchemaRegistryAvroEncoder.EncodeMessageData``1(System.Object,System.Type,System.Func{System.BinaryData,``0},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function EncodeMessageData(Of T As MessageWithMetadata) (data As Object, Optional inputType As Type = Nothing, Optional messageFactory As Func(Of BinaryData, T) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As T" />
      <MemberSignature Language="F#" Value="member this.EncodeMessageData : obj * Type * Func&lt;BinaryData, 'T (requires 'T :&gt; Azure.Messaging.MessageWithMetadata)&gt; * System.Threading.CancellationToken -&gt; 'T (requires 'T :&gt; Azure.Messaging.MessageWithMetadata)" Usage="schemaRegistryAvroEncoder.EncodeMessageData (data, inputType, messageFactory, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Data.SchemaRegistry.ApacheAvro</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>Azure.Messaging.MessageWithMetadata</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
        <Parameter Name="inputType" Type="System.Type" />
        <Parameter Name="messageFactory" Type="System.Func&lt;System.BinaryData,T&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="data">The data to serialize to Avro and encode into the message.</param>
        <param name="inputType">The type to use to serialize the data.</param>
        <param name="messageFactory">Optional func to create a derived instance of <see cref="T:Azure.Messaging.MessageWithMetadata" /> given the serialized Avro.
            If not specified, it is assumed that the derived type has a public constructor accepting a <see cref="T:System.BinaryData" /> instance.</param>
        <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken" /> instance to signal the request to cancel the operation.</param>
        <summary>
            Encodes the message data into Avro and stores it in <see cref="P:Azure.Messaging.MessageWithMetadata.Data" />. The <see cref="P:Azure.Messaging.MessageWithMetadata.ContentType" />
            will be set to "avro/binary+schemaId" where schemaId is the ID of the schema used to encode the data.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EncodeMessageDataAsync&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.ValueTask&lt;T&gt; EncodeMessageDataAsync&lt;T&gt; (object data, Type inputType = default, Func&lt;BinaryData,T&gt; messageFactory = default, System.Threading.CancellationToken cancellationToken = default) where T : Azure.Messaging.MessageWithMetadata;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Threading.Tasks.ValueTask`1&lt;!!T&gt; EncodeMessageDataAsync&lt;(class Azure.Messaging.MessageWithMetadata) T&gt;(object data, class System.Type inputType, class System.Func`2&lt;class System.BinaryData, !!T&gt; messageFactory, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Data.SchemaRegistry.ApacheAvro.SchemaRegistryAvroEncoder.EncodeMessageDataAsync``1(System.Object,System.Type,System.Func{System.BinaryData,``0},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function EncodeMessageDataAsync(Of T As MessageWithMetadata) (data As Object, Optional inputType As Type = Nothing, Optional messageFactory As Func(Of BinaryData, T) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As ValueTask(Of T)" />
      <MemberSignature Language="F#" Value="member this.EncodeMessageDataAsync : obj * Type * Func&lt;BinaryData, 'T (requires 'T :&gt; Azure.Messaging.MessageWithMetadata)&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;'T (requires 'T :&gt; Azure.Messaging.MessageWithMetadata)&gt; (requires 'T :&gt; Azure.Messaging.MessageWithMetadata)" Usage="schemaRegistryAvroEncoder.EncodeMessageDataAsync (data, inputType, messageFactory, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Data.SchemaRegistry.ApacheAvro</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>Azure.Messaging.MessageWithMetadata</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
        <Parameter Name="inputType" Type="System.Type" />
        <Parameter Name="messageFactory" Type="System.Func&lt;System.BinaryData,T&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="data">The data to serialize to Avro and encode into the message.</param>
        <param name="inputType">The type to use to serialize the data.</param>
        <param name="messageFactory">Optional func to create a derived instance of <see cref="T:Azure.Messaging.MessageWithMetadata" /> given the serialized Avro.
            If not specified, it is assumed that the derived type has a public constructor accepting a <see cref="T:System.BinaryData" /> instance.</param>
        <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken" /> instance to signal the request to cancel the operation.</param>
        <summary>
            Encodes the message data into Avro and stores it in <see cref="P:Azure.Messaging.MessageWithMetadata.Data" />. The <see cref="P:Azure.Messaging.MessageWithMetadata.ContentType" />
            will be set to "avro/binary+schemaId" where schemaId is the ID of the schema used to encode the data.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

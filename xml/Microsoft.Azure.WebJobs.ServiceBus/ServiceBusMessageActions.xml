<Type Name="ServiceBusMessageActions" FullName="Microsoft.Azure.WebJobs.ServiceBus.ServiceBusMessageActions">
  <TypeSignature Language="C#" Value="public class ServiceBusMessageActions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServiceBusMessageActions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.WebJobs.ServiceBus.ServiceBusMessageActions" />
  <TypeSignature Language="VB.NET" Value="Public Class ServiceBusMessageActions" />
  <TypeSignature Language="F#" Value="type ServiceBusMessageActions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.WebJobs.Extensions.ServiceBus</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Represents the set of message actions that can be performed on a <see cref="T:Azure.Messaging.ServiceBus.ServiceBusReceivedMessage" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AbandonMessageAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AbandonMessageAsync (Azure.Messaging.ServiceBus.ServiceBusReceivedMessage message, System.Collections.Generic.IDictionary&lt;string,object&gt; propertiesToModify = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AbandonMessageAsync(class Azure.Messaging.ServiceBus.ServiceBusReceivedMessage message, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; propertiesToModify, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.WebJobs.ServiceBus.ServiceBusMessageActions.AbandonMessageAsync(Azure.Messaging.ServiceBus.ServiceBusReceivedMessage,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AbandonMessageAsync (message As ServiceBusReceivedMessage, Optional propertiesToModify As IDictionary(Of String, Object) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="abstract member AbandonMessageAsync : Azure.Messaging.ServiceBus.ServiceBusReceivedMessage * System.Collections.Generic.IDictionary&lt;string, obj&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.AbandonMessageAsync : Azure.Messaging.ServiceBus.ServiceBusReceivedMessage * System.Collections.Generic.IDictionary&lt;string, obj&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="serviceBusMessageActions.AbandonMessageAsync (message, propertiesToModify, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.WebJobs.Extensions.ServiceBus</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="Azure.Messaging.ServiceBus.ServiceBusReceivedMessage" />
        <Parameter Name="propertiesToModify" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="message">The <see cref="T:Azure.Messaging.ServiceBus.ServiceBusReceivedMessage" /> to abandon.</param>
        <param name="propertiesToModify">The properties of the message to modify while abandoning the message.</param>
        <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken" /> instance to signal the request to cancel the operation.</param>
        <summary>
             Abandons a <see cref="T:Azure.Messaging.ServiceBus.ServiceBusReceivedMessage" />.This will make the message available again for immediate processing as the lock on the message held by the receiver will be released.
             </summary>
        <returns>A task to be resolved on when the operation has completed.</returns>
        <remarks>
             Abandoning a message will increase the delivery count on the message.
             This operation can only be performed on messages that were received by this receiver
             when <see cref="P:Azure.Messaging.ServiceBus.ServiceBusReceiver.ReceiveMode" /> is set to <see cref="F:Azure.Messaging.ServiceBus.ServiceBusReceiveMode.PeekLock" />.
             </remarks>
        <exception cref="T:Azure.Messaging.ServiceBus.ServiceBusException">
               The lock for the session has expired or the message has already been completed. This only applies for session-enabled
               entities.
               The <see cref="P:Azure.Messaging.ServiceBus.ServiceBusException.Reason" /> will be set to <see cref="F:Azure.Messaging.ServiceBus.ServiceBusFailureReason.SessionLockLost" /> in this case.
             </exception>
      </Docs>
    </Member>
    <Member MemberName="CompleteMessageAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task CompleteMessageAsync (Azure.Messaging.ServiceBus.ServiceBusReceivedMessage message, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task CompleteMessageAsync(class Azure.Messaging.ServiceBus.ServiceBusReceivedMessage message, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.WebJobs.ServiceBus.ServiceBusMessageActions.CompleteMessageAsync(Azure.Messaging.ServiceBus.ServiceBusReceivedMessage,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CompleteMessageAsync (message As ServiceBusReceivedMessage, Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="abstract member CompleteMessageAsync : Azure.Messaging.ServiceBus.ServiceBusReceivedMessage * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.CompleteMessageAsync : Azure.Messaging.ServiceBus.ServiceBusReceivedMessage * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="serviceBusMessageActions.CompleteMessageAsync (message, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.WebJobs.Extensions.ServiceBus</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="Azure.Messaging.ServiceBus.ServiceBusReceivedMessage" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="message">The message to complete.</param>
        <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken" /> instance to signal the request to cancel the operation.</param>
        <summary>
             Completes a <see cref="T:Azure.Messaging.ServiceBus.ServiceBusReceivedMessage" />. This will delete the message from the service.
             </summary>
        <returns>A task to be resolved on when the operation has completed.</returns>
        <remarks>
             This operation can only be performed on a message that was received by this receiver
             when <see cref="P:Azure.Messaging.ServiceBus.ServiceBusReceiver.ReceiveMode" /> is set to <see cref="F:Azure.Messaging.ServiceBus.ServiceBusReceiveMode.PeekLock" />.
             </remarks>
        <exception cref="T:Azure.Messaging.ServiceBus.ServiceBusException">
               The lock for the session has expired or the message has already been completed. This only applies for session-enabled
               entities.
               The <see cref="P:Azure.Messaging.ServiceBus.ServiceBusException.Reason" /> will be set to <see cref="F:Azure.Messaging.ServiceBus.ServiceBusFailureReason.SessionLockLost" /> in this case.
             </exception>
      </Docs>
    </Member>
    <Member MemberName="DeadLetterMessageAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task DeadLetterMessageAsync (Azure.Messaging.ServiceBus.ServiceBusReceivedMessage message, System.Collections.Generic.IDictionary&lt;string,object&gt; propertiesToModify = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task DeadLetterMessageAsync(class Azure.Messaging.ServiceBus.ServiceBusReceivedMessage message, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; propertiesToModify, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.WebJobs.ServiceBus.ServiceBusMessageActions.DeadLetterMessageAsync(Azure.Messaging.ServiceBus.ServiceBusReceivedMessage,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeadLetterMessageAsync (message As ServiceBusReceivedMessage, Optional propertiesToModify As IDictionary(Of String, Object) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="abstract member DeadLetterMessageAsync : Azure.Messaging.ServiceBus.ServiceBusReceivedMessage * System.Collections.Generic.IDictionary&lt;string, obj&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.DeadLetterMessageAsync : Azure.Messaging.ServiceBus.ServiceBusReceivedMessage * System.Collections.Generic.IDictionary&lt;string, obj&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="serviceBusMessageActions.DeadLetterMessageAsync (message, propertiesToModify, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.WebJobs.Extensions.ServiceBus</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="Azure.Messaging.ServiceBus.ServiceBusReceivedMessage" />
        <Parameter Name="propertiesToModify" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="message">The <see cref="T:Azure.Messaging.ServiceBus.ServiceBusReceivedMessage" /> to dead-letter.</param>
        <param name="propertiesToModify">The properties of the message to modify while moving to subqueue.</param>
        <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken" /> instance to signal the request to cancel the operation.</param>
        <summary>
             Moves a message to the dead-letter subqueue.
             </summary>
        <returns>To be added.</returns>
        <remarks>
             In order to receive a message from the dead-letter queue or transfer dead-letter queue,
             set the <see cref="P:Azure.Messaging.ServiceBus.ServiceBusReceiverOptions.SubQueue" /> property to <see cref="F:Azure.Messaging.ServiceBus.SubQueue.DeadLetter" />
             or <see cref="F:Azure.Messaging.ServiceBus.SubQueue.TransferDeadLetter" /> when calling
             <see cref="M:Azure.Messaging.ServiceBus.ServiceBusClient.CreateReceiver(System.String,Azure.Messaging.ServiceBus.ServiceBusReceiverOptions)" /> or
             <see cref="M:Azure.Messaging.ServiceBus.ServiceBusClient.CreateReceiver(System.String,System.String,Azure.Messaging.ServiceBus.ServiceBusReceiverOptions)" />.
             This operation can only be performed when <see cref="P:Azure.Messaging.ServiceBus.ServiceBusReceiver.ReceiveMode" /> is set to <see cref="F:Azure.Messaging.ServiceBus.ServiceBusReceiveMode.PeekLock" />.
             </remarks>
        <exception cref="T:Azure.Messaging.ServiceBus.ServiceBusException">
               The lock for the session has expired or the message has already been completed. This only applies for session-enabled
               entities.
               The <see cref="P:Azure.Messaging.ServiceBus.ServiceBusException.Reason" /> will be set to <see cref="F:Azure.Messaging.ServiceBus.ServiceBusFailureReason.SessionLockLost" /> in this case.
             </exception>
      </Docs>
    </Member>
    <Member MemberName="DeadLetterMessageAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task DeadLetterMessageAsync (Azure.Messaging.ServiceBus.ServiceBusReceivedMessage message, string deadLetterReason, string deadLetterErrorDescription = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task DeadLetterMessageAsync(class Azure.Messaging.ServiceBus.ServiceBusReceivedMessage message, string deadLetterReason, string deadLetterErrorDescription, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.WebJobs.ServiceBus.ServiceBusMessageActions.DeadLetterMessageAsync(Azure.Messaging.ServiceBus.ServiceBusReceivedMessage,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeadLetterMessageAsync (message As ServiceBusReceivedMessage, deadLetterReason As String, Optional deadLetterErrorDescription As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="abstract member DeadLetterMessageAsync : Azure.Messaging.ServiceBus.ServiceBusReceivedMessage * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.DeadLetterMessageAsync : Azure.Messaging.ServiceBus.ServiceBusReceivedMessage * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="serviceBusMessageActions.DeadLetterMessageAsync (message, deadLetterReason, deadLetterErrorDescription, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.WebJobs.Extensions.ServiceBus</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="Azure.Messaging.ServiceBus.ServiceBusReceivedMessage" />
        <Parameter Name="deadLetterReason" Type="System.String" />
        <Parameter Name="deadLetterErrorDescription" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="message">The <see cref="T:Azure.Messaging.ServiceBus.ServiceBusReceivedMessage" /> to dead-letter.</param>
        <param name="deadLetterReason">The reason for dead-lettering the message.</param>
        <param name="deadLetterErrorDescription">The error description for dead-lettering the message.</param>
        <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken" /> instance to signal the request to cancel the operation.</param>
        <summary>
             Moves a message to the dead-letter subqueue.
             </summary>
        <returns>To be added.</returns>
        <remarks>
             In order to receive a message from the dead-letter queue or transfer dead-letter queue,
             set the <see cref="P:Azure.Messaging.ServiceBus.ServiceBusReceiverOptions.SubQueue" /> property to <see cref="F:Azure.Messaging.ServiceBus.SubQueue.DeadLetter" />
             or <see cref="F:Azure.Messaging.ServiceBus.SubQueue.TransferDeadLetter" /> when calling
             <see cref="M:Azure.Messaging.ServiceBus.ServiceBusClient.CreateReceiver(System.String,Azure.Messaging.ServiceBus.ServiceBusReceiverOptions)" /> or
             <see cref="M:Azure.Messaging.ServiceBus.ServiceBusClient.CreateReceiver(System.String,System.String,Azure.Messaging.ServiceBus.ServiceBusReceiverOptions)" />.
             This operation can only be performed when <see cref="P:Azure.Messaging.ServiceBus.ServiceBusReceiver.ReceiveMode" /> is set to <see cref="F:Azure.Messaging.ServiceBus.ServiceBusReceiveMode.PeekLock" />.
             </remarks>
        <exception cref="T:Azure.Messaging.ServiceBus.ServiceBusException">
               The lock for the session has expired or the message has already been completed. This only applies for session-enabled
               entities.
               The <see cref="P:Azure.Messaging.ServiceBus.ServiceBusException.Reason" /> will be set to <see cref="F:Azure.Messaging.ServiceBus.ServiceBusFailureReason.SessionLockLost" /> in this case.
             </exception>
      </Docs>
    </Member>
    <Member MemberName="DeferMessageAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task DeferMessageAsync (Azure.Messaging.ServiceBus.ServiceBusReceivedMessage message, System.Collections.Generic.IDictionary&lt;string,object&gt; propertiesToModify = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task DeferMessageAsync(class Azure.Messaging.ServiceBus.ServiceBusReceivedMessage message, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; propertiesToModify, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.WebJobs.ServiceBus.ServiceBusMessageActions.DeferMessageAsync(Azure.Messaging.ServiceBus.ServiceBusReceivedMessage,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeferMessageAsync (message As ServiceBusReceivedMessage, Optional propertiesToModify As IDictionary(Of String, Object) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="abstract member DeferMessageAsync : Azure.Messaging.ServiceBus.ServiceBusReceivedMessage * System.Collections.Generic.IDictionary&lt;string, obj&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.DeferMessageAsync : Azure.Messaging.ServiceBus.ServiceBusReceivedMessage * System.Collections.Generic.IDictionary&lt;string, obj&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="serviceBusMessageActions.DeferMessageAsync (message, propertiesToModify, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.WebJobs.Extensions.ServiceBus</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="Azure.Messaging.ServiceBus.ServiceBusReceivedMessage" />
        <Parameter Name="propertiesToModify" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="message">The <see cref="T:Azure.Messaging.ServiceBus.ServiceBusReceivedMessage" /> to defer.</param>
        <param name="propertiesToModify">The properties of the message to modify while deferring the message.</param>
        <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken" /> instance to signal the request to cancel the operation.</param>
        <summary> Indicates that the receiver wants to defer the processing for the message.</summary>
        <returns>A task to be resolved on when the operation has completed.</returns>
        <remarks>
             In order to receive this message again in the future, you will need to save the
             <see cref="P:Azure.Messaging.ServiceBus.ServiceBusReceivedMessage.SequenceNumber" />
             and receive it using <see cref="M:Azure.Messaging.ServiceBus.ServiceBusReceiver.ReceiveDeferredMessageAsync(System.Int64,System.Threading.CancellationToken)" />.
             Deferring messages does not impact message's expiration, meaning that deferred messages can still expire.
             This operation can only be performed on messages that were received by this receiver.
             </remarks>
        <exception cref="T:Azure.Messaging.ServiceBus.ServiceBusException">
               The lock for the session has expired or the message has already been completed. This only applies for session-enabled
               entities.
               The <see cref="P:Azure.Messaging.ServiceBus.ServiceBusException.Reason" /> will be set to <see cref="F:Azure.Messaging.ServiceBus.ServiceBusFailureReason.SessionLockLost" /> in this case.
             </exception>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="ConditionalRequestOptions" FullName="Azure.ConditionalRequestOptions">
  <TypeSignature Language="C#" Value="public class ConditionalRequestOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ConditionalRequestOptions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.ConditionalRequestOptions" />
  <TypeSignature Language="VB.NET" Value="Public Class ConditionalRequestOptions" />
  <TypeSignature Language="F#" Value="type ConditionalRequestOptions = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Core</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Specifies HTTP options for conditional requests.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConditionalRequestOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ConditionalRequestOptions.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IfMatch">
      <MemberSignature Language="C#" Value="public Nullable&lt;Azure.Core.Http.ETag&gt; IfMatch { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype Azure.Core.Http.ETag&gt; IfMatch" />
      <MemberSignature Language="DocId" Value="P:Azure.ConditionalRequestOptions.IfMatch" />
      <MemberSignature Language="VB.NET" Value="Public Property IfMatch As Nullable(Of ETag)" />
      <MemberSignature Language="F#" Value="member this.IfMatch : Nullable&lt;Azure.Core.Http.ETag&gt; with get, set" Usage="Azure.ConditionalRequestOptions.IfMatch" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Azure.Core.Http.ETag&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Optionally limit requests to resources that have a matching ETag.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IfNoneMatch">
      <MemberSignature Language="C#" Value="public Nullable&lt;Azure.Core.Http.ETag&gt; IfNoneMatch { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype Azure.Core.Http.ETag&gt; IfNoneMatch" />
      <MemberSignature Language="DocId" Value="P:Azure.ConditionalRequestOptions.IfNoneMatch" />
      <MemberSignature Language="VB.NET" Value="Public Property IfNoneMatch As Nullable(Of ETag)" />
      <MemberSignature Language="F#" Value="member this.IfNoneMatch : Nullable&lt;Azure.Core.Http.ETag&gt; with get, set" Usage="Azure.ConditionalRequestOptions.IfNoneMatch" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Azure.Core.Http.ETag&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Optionally limit requests to resources that do not match the ETag.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetIfExistsCondition">
      <MemberSignature Language="C#" Value="public virtual void SetIfExistsCondition ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetIfExistsCondition() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ConditionalRequestOptions.SetIfExistsCondition" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetIfExistsCondition ()" />
      <MemberSignature Language="F#" Value="abstract member SetIfExistsCondition : unit -&gt; unit&#xA;override this.SetIfExistsCondition : unit -&gt; unit" Usage="conditionalRequestOptions.SetIfExistsCondition " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Set preconditions that indicate to apply an operation only if the
            target resource is present.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetIfModifiedCondition">
      <MemberSignature Language="C#" Value="public virtual void SetIfModifiedCondition (Azure.Core.Http.ETag etag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetIfModifiedCondition(valuetype Azure.Core.Http.ETag etag) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ConditionalRequestOptions.SetIfModifiedCondition(Azure.Core.Http.ETag)" />
      <MemberSignature Language="F#" Value="abstract member SetIfModifiedCondition : Azure.Core.Http.ETag -&gt; unit&#xA;override this.SetIfModifiedCondition : Azure.Core.Http.ETag -&gt; unit" Usage="conditionalRequestOptions.SetIfModifiedCondition etag" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="etag" Type="Azure.Core.Http.ETag" />
      </Parameters>
      <Docs>
        <param name="etag">The version of the resource to compare to.</param>
        <summary>
            Set preconditions that indicate to apply an operation only if the
            target resource has changed.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetIfNotExistsCondition">
      <MemberSignature Language="C#" Value="public virtual void SetIfNotExistsCondition ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetIfNotExistsCondition() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ConditionalRequestOptions.SetIfNotExistsCondition" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetIfNotExistsCondition ()" />
      <MemberSignature Language="F#" Value="abstract member SetIfNotExistsCondition : unit -&gt; unit&#xA;override this.SetIfNotExistsCondition : unit -&gt; unit" Usage="conditionalRequestOptions.SetIfNotExistsCondition " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Set preconditions that indicate to apply an operation only if the
            target resource is not present.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetIfUnmodifiedCondition">
      <MemberSignature Language="C#" Value="public virtual void SetIfUnmodifiedCondition (Azure.Core.Http.ETag etag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetIfUnmodifiedCondition(valuetype Azure.Core.Http.ETag etag) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ConditionalRequestOptions.SetIfUnmodifiedCondition(Azure.Core.Http.ETag)" />
      <MemberSignature Language="F#" Value="abstract member SetIfUnmodifiedCondition : Azure.Core.Http.ETag -&gt; unit&#xA;override this.SetIfUnmodifiedCondition : Azure.Core.Http.ETag -&gt; unit" Usage="conditionalRequestOptions.SetIfUnmodifiedCondition etag" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="etag" Type="Azure.Core.Http.ETag" />
      </Parameters>
      <Docs>
        <param name="etag">To be added.</param>
        <summary>
            Set preconditions that indicate to apply an operation only if the
            target resource has not changed.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

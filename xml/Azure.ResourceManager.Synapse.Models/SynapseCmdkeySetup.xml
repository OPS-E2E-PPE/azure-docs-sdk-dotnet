<Type Name="SynapseCmdkeySetup" FullName="Azure.ResourceManager.Synapse.Models.SynapseCmdkeySetup">
  <TypeSignature Language="C#" Value="public class SynapseCmdkeySetup : Azure.ResourceManager.Synapse.Models.SynapseCustomSetupBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SynapseCmdkeySetup extends Azure.ResourceManager.Synapse.Models.SynapseCustomSetupBase" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Synapse.Models.SynapseCmdkeySetup" />
  <TypeSignature Language="VB.NET" Value="Public Class SynapseCmdkeySetup&#xA;Inherits SynapseCustomSetupBase" />
  <TypeSignature Language="F#" Value="type SynapseCmdkeySetup = class&#xA;    inherit SynapseCustomSetupBase" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.Synapse.Models.SynapseCustomSetupBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> The custom setup of running cmdkey commands. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SynapseCmdkeySetup (BinaryData targetName, BinaryData userName, Azure.ResourceManager.Synapse.Models.SynapseSecretBase password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.BinaryData targetName, class System.BinaryData userName, class Azure.ResourceManager.Synapse.Models.SynapseSecretBase password) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Synapse.Models.SynapseCmdkeySetup.#ctor(System.BinaryData,System.BinaryData,Azure.ResourceManager.Synapse.Models.SynapseSecretBase)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (targetName As BinaryData, userName As BinaryData, password As SynapseSecretBase)" />
      <MemberSignature Language="F#" Value="new Azure.ResourceManager.Synapse.Models.SynapseCmdkeySetup : BinaryData * BinaryData * Azure.ResourceManager.Synapse.Models.SynapseSecretBase -&gt; Azure.ResourceManager.Synapse.Models.SynapseCmdkeySetup" Usage="new Azure.ResourceManager.Synapse.Models.SynapseCmdkeySetup (targetName, userName, password)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="targetName" Type="System.BinaryData" />
        <Parameter Name="userName" Type="System.BinaryData" />
        <Parameter Name="password" Type="Azure.ResourceManager.Synapse.Models.SynapseSecretBase" />
      </Parameters>
      <Docs>
        <param name="targetName"> The server name of data source access. </param>
        <param name="userName"> The user name of data source access. </param>
        <param name="password">
            The password of data source access.
            Please note <see cref="T:Azure.ResourceManager.Synapse.Models.SynapseSecretBase" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
            The available derived classes include <see cref="T:Azure.ResourceManager.Synapse.Models.SynapseSecureString" />.
            </param>
        <summary> Initializes a new instance of SynapseCmdkeySetup. </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="targetName" />, <paramref name="userName" /> or <paramref name="password" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Password">
      <MemberSignature Language="C#" Value="public Azure.ResourceManager.Synapse.Models.SynapseSecretBase Password { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.Synapse.Models.SynapseSecretBase Password" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Synapse.Models.SynapseCmdkeySetup.Password" />
      <MemberSignature Language="VB.NET" Value="Public Property Password As SynapseSecretBase" />
      <MemberSignature Language="F#" Value="member this.Password : Azure.ResourceManager.Synapse.Models.SynapseSecretBase with get, set" Usage="Azure.ResourceManager.Synapse.Models.SynapseCmdkeySetup.Password" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Synapse.Models.SynapseSecretBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The password of data source access.
            Please note <see cref="T:Azure.ResourceManager.Synapse.Models.SynapseSecretBase" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
            The available derived classes include <see cref="T:Azure.ResourceManager.Synapse.Models.SynapseSecureString" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetName">
      <MemberSignature Language="C#" Value="public BinaryData TargetName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.BinaryData TargetName" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Synapse.Models.SynapseCmdkeySetup.TargetName" />
      <MemberSignature Language="VB.NET" Value="Public Property TargetName As BinaryData" />
      <MemberSignature Language="F#" Value="member this.TargetName : BinaryData with get, set" Usage="Azure.ResourceManager.Synapse.Models.SynapseCmdkeySetup.TargetName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The server name of data source access.
            <para>
            To assign an object to this property use <see cref="M:System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions)" />.
            </para><para>
            To assign an already formated json string to this property use <see cref="M:System.BinaryData.FromString(System.String)" />.
            </para><para>
            Examples:
            <list type="bullet"><item><term>BinaryData.FromObjectAsJson("foo")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromString("\"foo\"")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromObjectAsJson(new { key = "value" })</term><description>Creates a payload of { "key": "value" }.</description></item><item><term>BinaryData.FromString("{\"key\": \"value\"}")</term><description>Creates a payload of { "key": "value" }.</description></item></list></para></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserName">
      <MemberSignature Language="C#" Value="public BinaryData UserName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.BinaryData UserName" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Synapse.Models.SynapseCmdkeySetup.UserName" />
      <MemberSignature Language="VB.NET" Value="Public Property UserName As BinaryData" />
      <MemberSignature Language="F#" Value="member this.UserName : BinaryData with get, set" Usage="Azure.ResourceManager.Synapse.Models.SynapseCmdkeySetup.UserName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Synapse</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The user name of data source access.
            <para>
            To assign an object to this property use <see cref="M:System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions)" />.
            </para><para>
            To assign an already formated json string to this property use <see cref="M:System.BinaryData.FromString(System.String)" />.
            </para><para>
            Examples:
            <list type="bullet"><item><term>BinaryData.FromObjectAsJson("foo")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromString("\"foo\"")</term><description>Creates a payload of "foo".</description></item><item><term>BinaryData.FromObjectAsJson(new { key = "value" })</term><description>Creates a payload of { "key": "value" }.</description></item><item><term>BinaryData.FromString("{\"key\": \"value\"}")</term><description>Creates a payload of { "key": "value" }.</description></item></list></para></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

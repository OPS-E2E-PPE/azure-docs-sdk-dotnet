<Type Name="SecretClient" FullName="Azure.Security.KeyVault.Secrets.SecretClient">
  <TypeSignature Language="C#" Value="public class SecretClient" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SecretClient extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Security.KeyVault.Secrets.SecretClient" />
  <TypeSignature Language="VB.NET" Value="Public Class SecretClient" />
  <TypeSignature Language="F#" Value="type SecretClient = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Security.KeyVault.Secrets</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            The SecretClient provides synchronous and asynchronous methods to manage <see cref="T:Azure.Security.KeyVault.Secrets.Secret" /> in the Azure Key Vault. The client
            supports creating, retrieving, updating, deleting, purging, backing up, restoring and listing <see cref="T:Azure.Security.KeyVault.Secrets.Secret" />.
            The client also supports listing <see cref="T:Azure.Security.KeyVault.Secrets.DeletedSecret" /> for a soft-delete enabled Azure Key Vault.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SecretClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Secrets.SecretClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Secrets</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Protected constructor to allow mocking
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecretClient (Uri vaultUri, Azure.Core.TokenCredential credential);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri vaultUri, class Azure.Core.TokenCredential credential) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Secrets.SecretClient.#ctor(System.Uri,Azure.Core.TokenCredential)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (vaultUri As Uri, credential As TokenCredential)" />
      <MemberSignature Language="F#" Value="new Azure.Security.KeyVault.Secrets.SecretClient : Uri * Azure.Core.TokenCredential -&gt; Azure.Security.KeyVault.Secrets.SecretClient" Usage="new Azure.Security.KeyVault.Secrets.SecretClient (vaultUri, credential)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Secrets</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="vaultUri" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.Core.TokenCredential" />
      </Parameters>
      <Docs>
        <param name="vaultUri">Endpoint URL for the Azure Key Vault service.</param>
        <param name="credential">Represents a credential capable of providing an OAuth token.</param>
        <summary>
            Initializes a new instance of the SecretClient class.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="vaultUri" /> or <paramref name="credential" /> is null.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecretClient (Uri vaultUri, Azure.Core.TokenCredential credential, Azure.Security.KeyVault.Secrets.SecretClientOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri vaultUri, class Azure.Core.TokenCredential credential, class Azure.Security.KeyVault.Secrets.SecretClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Secrets.SecretClient.#ctor(System.Uri,Azure.Core.TokenCredential,Azure.Security.KeyVault.Secrets.SecretClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (vaultUri As Uri, credential As TokenCredential, options As SecretClientOptions)" />
      <MemberSignature Language="F#" Value="new Azure.Security.KeyVault.Secrets.SecretClient : Uri * Azure.Core.TokenCredential * Azure.Security.KeyVault.Secrets.SecretClientOptions -&gt; Azure.Security.KeyVault.Secrets.SecretClient" Usage="new Azure.Security.KeyVault.Secrets.SecretClient (vaultUri, credential, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Secrets</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="vaultUri" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.Core.TokenCredential" />
        <Parameter Name="options" Type="Azure.Security.KeyVault.Secrets.SecretClientOptions" />
      </Parameters>
      <Docs>
        <param name="vaultUri">Endpoint URL for the Azure Key Vault service.</param>
        <param name="credential">Represents a credential capable of providing an OAuth token.</param>
        <param name="options">Options that allow to configure the management of the request sent to Key Vault.</param>
        <summary>
            Initializes a new instance of the SecretClient class.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="vaultUri" /> or <paramref name="credential" /> is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="BackupSecret">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;byte[]&gt; BackupSecret (string name, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;unsigned int8[]&gt; BackupSecret(string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Secrets.SecretClient.BackupSecret(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member BackupSecret : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;byte[]&gt;&#xA;override this.BackupSecret : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;byte[]&gt;" Usage="secretClient.BackupSecret (name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Secrets</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="name">The name of the secret.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Backs up the specified secret.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            Requests that a backup of the specified secret be downloaded to the client.
            All versions of the secret will be downloaded. This operation requires the
            secrets/backup permission.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackupSecretAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;byte[]&gt;&gt; BackupSecretAsync (string name, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;unsigned int8[]&gt;&gt; BackupSecretAsync(string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Secrets.SecretClient.BackupSecretAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member BackupSecretAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;byte[]&gt;&gt;&#xA;override this.BackupSecretAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;byte[]&gt;&gt;" Usage="secretClient.BackupSecretAsync (name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Secrets</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Byte[]&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="name">The name of the secret.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Backs up the specified secret.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            Requests that a backup of the specified secret be downloaded to the client.
            All versions of the secret will be downloaded. This operation requires the
            secrets/backup permission.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteSecret">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Security.KeyVault.Secrets.DeletedSecret&gt; DeleteSecret (string name, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Security.KeyVault.Secrets.DeletedSecret&gt; DeleteSecret(string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Secrets.SecretClient.DeleteSecret(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member DeleteSecret : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Security.KeyVault.Secrets.DeletedSecret&gt;&#xA;override this.DeleteSecret : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Security.KeyVault.Secrets.DeletedSecret&gt;" Usage="secretClient.DeleteSecret (name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Secrets</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Security.KeyVault.Secrets.DeletedSecret&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="name">The name of the secret.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Deletes a secret from a specified key vault.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            The delete operation applies to any secret stored in Azure Key Vault.
            Delete cannot be applied to an individual version of a secret. This
            operation requires the secrets/delete permission.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteSecretAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Secrets.DeletedSecret&gt;&gt; DeleteSecretAsync (string name, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Security.KeyVault.Secrets.DeletedSecret&gt;&gt; DeleteSecretAsync(string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Secrets.SecretClient.DeleteSecretAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member DeleteSecretAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Secrets.DeletedSecret&gt;&gt;&#xA;override this.DeleteSecretAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Secrets.DeletedSecret&gt;&gt;" Usage="secretClient.DeleteSecretAsync (name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Secrets</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Secrets.DeletedSecret&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="name">The name of the secret.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Deletes a secret from a specified key vault.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            The delete operation applies to any secret stored in Azure Key Vault.
            Delete cannot be applied to an individual version of a secret. This
            operation requires the secrets/delete permission.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDeletedSecret">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Security.KeyVault.Secrets.DeletedSecret&gt; GetDeletedSecret (string name, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Security.KeyVault.Secrets.DeletedSecret&gt; GetDeletedSecret(string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Secrets.SecretClient.GetDeletedSecret(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetDeletedSecret : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Security.KeyVault.Secrets.DeletedSecret&gt;&#xA;override this.GetDeletedSecret : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Security.KeyVault.Secrets.DeletedSecret&gt;" Usage="secretClient.GetDeletedSecret (name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Secrets</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Security.KeyVault.Secrets.DeletedSecret&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="name">The name of the secret.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Gets the specified deleted secret.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            The Get Deleted Secret operation returns the specified deleted secret along
            with its attributes. This operation requires the secrets/get permission.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDeletedSecretAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Secrets.DeletedSecret&gt;&gt; GetDeletedSecretAsync (string name, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Security.KeyVault.Secrets.DeletedSecret&gt;&gt; GetDeletedSecretAsync(string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Secrets.SecretClient.GetDeletedSecretAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetDeletedSecretAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Secrets.DeletedSecret&gt;&gt;&#xA;override this.GetDeletedSecretAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Secrets.DeletedSecret&gt;&gt;" Usage="secretClient.GetDeletedSecretAsync (name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Secrets</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Secrets.DeletedSecret&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="name">The name of the secret.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Gets the specified deleted secret.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            The Get Deleted Secret operation returns the specified deleted secret along
            with its attributes. This operation requires the secrets/get permission.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDeletedSecrets">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.Security.KeyVault.Secrets.DeletedSecret&gt; GetDeletedSecrets (System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.Security.KeyVault.Secrets.DeletedSecret&gt; GetDeletedSecrets(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Secrets.SecretClient.GetDeletedSecrets(System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetDeletedSecrets : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.Security.KeyVault.Secrets.DeletedSecret&gt;&#xA;override this.GetDeletedSecrets : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.Security.KeyVault.Secrets.DeletedSecret&gt;" Usage="secretClient.GetDeletedSecrets cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Secrets</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.Security.KeyVault.Secrets.DeletedSecret&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Lists deleted secrets for the specified vault.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            The Get Deleted Secrets operation returns the secrets that have been
            deleted for a vault enabled for soft-delete. This operation requires the
            secrets/list permission.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDeletedSecretsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncCollection&lt;Azure.Security.KeyVault.Secrets.DeletedSecret&gt; GetDeletedSecretsAsync (System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncCollection`1&lt;class Azure.Security.KeyVault.Secrets.DeletedSecret&gt; GetDeletedSecretsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Secrets.SecretClient.GetDeletedSecretsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetDeletedSecretsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncCollection&lt;Azure.Security.KeyVault.Secrets.DeletedSecret&gt;&#xA;override this.GetDeletedSecretsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncCollection&lt;Azure.Security.KeyVault.Secrets.DeletedSecret&gt;" Usage="secretClient.GetDeletedSecretsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Secrets</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncCollection&lt;Azure.Security.KeyVault.Secrets.DeletedSecret&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Lists deleted secrets for the specified vault.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            The Get Deleted Secrets operation returns the secrets that have been
            deleted for a vault enabled for soft-delete. This operation requires the
            secrets/list permission.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSecret">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Security.KeyVault.Secrets.Secret&gt; GetSecret (string name, string version = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Security.KeyVault.Secrets.Secret&gt; GetSecret(string name, string version, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Secrets.SecretClient.GetSecret(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetSecret : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Security.KeyVault.Secrets.Secret&gt;&#xA;override this.GetSecret : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Security.KeyVault.Secrets.Secret&gt;" Usage="secretClient.GetSecret (name, version, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Secrets</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Security.KeyVault.Secrets.Secret&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="version" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="name">The name of the secret.</param>
        <param name="version">The version of the secret.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Get a specified secret from a given key vault.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            The get operation is applicable to any secret stored in Azure Key Vault.
            This operation requires the secrets/get permission.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSecretAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Secrets.Secret&gt;&gt; GetSecretAsync (string name, string version = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Security.KeyVault.Secrets.Secret&gt;&gt; GetSecretAsync(string name, string version, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Secrets.SecretClient.GetSecretAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetSecretAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Secrets.Secret&gt;&gt;&#xA;override this.GetSecretAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Secrets.Secret&gt;&gt;" Usage="secretClient.GetSecretAsync (name, version, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Secrets</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Secrets.Secret&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="version" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="name">The name of the secret.</param>
        <param name="version">The version of the secret.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Get a specified secret from a given key vault.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            The get operation is applicable to any secret stored in Azure Key Vault.
            This operation requires the secrets/get permission.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSecrets">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.Security.KeyVault.Secrets.SecretProperties&gt; GetSecrets (System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.Security.KeyVault.Secrets.SecretProperties&gt; GetSecrets(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Secrets.SecretClient.GetSecrets(System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetSecrets : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.Security.KeyVault.Secrets.SecretProperties&gt;&#xA;override this.GetSecrets : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.Security.KeyVault.Secrets.SecretProperties&gt;" Usage="secretClient.GetSecrets cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Secrets</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.Security.KeyVault.Secrets.SecretProperties&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            List secrets in a specified key vault.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            The Get Secrets operation is applicable to the entire vault. However, only
            the base secret identifier and its attributes are provided in the response.
            Individual secret versions are not listed in the response. This operation
            requires the secrets/list permission.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSecretsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncCollection&lt;Azure.Security.KeyVault.Secrets.SecretBase&gt; GetSecretsAsync (System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncCollection`1&lt;class Azure.Security.KeyVault.Secrets.SecretBase&gt; GetSecretsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Secrets.SecretClient.GetSecretsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetSecretsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncCollection&lt;Azure.Security.KeyVault.Secrets.SecretBase&gt;&#xA;override this.GetSecretsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncCollection&lt;Azure.Security.KeyVault.Secrets.SecretBase&gt;" Usage="secretClient.GetSecretsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Secrets</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncCollection&lt;Azure.Security.KeyVault.Secrets.SecretBase&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            List secrets in a specified key vault.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            The Get Secrets operation is applicable to the entire vault. However, only
            the base secret identifier and its attributes are provided in the response.
            Individual secret versions are not listed in the response. This operation
            requires the secrets/list permission.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSecretVersions">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.Security.KeyVault.Secrets.SecretProperties&gt; GetSecretVersions (string name, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.Security.KeyVault.Secrets.SecretProperties&gt; GetSecretVersions(string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Secrets.SecretClient.GetSecretVersions(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetSecretVersions : string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.Security.KeyVault.Secrets.SecretProperties&gt;&#xA;override this.GetSecretVersions : string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.Security.KeyVault.Secrets.SecretProperties&gt;" Usage="secretClient.GetSecretVersions (name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Secrets</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.Security.KeyVault.Secrets.SecretProperties&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="name">The name of the secret.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            List all versions of the specified secret.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            The full secret identifier and attributes are provided in the response. No
            values are returned for the secrets. This operations requires the
            secrets/list permission.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSecretVersionsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncCollection&lt;Azure.Security.KeyVault.Secrets.SecretBase&gt; GetSecretVersionsAsync (string name, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncCollection`1&lt;class Azure.Security.KeyVault.Secrets.SecretBase&gt; GetSecretVersionsAsync(string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Secrets.SecretClient.GetSecretVersionsAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetSecretVersionsAsync : string * System.Threading.CancellationToken -&gt; Azure.AsyncCollection&lt;Azure.Security.KeyVault.Secrets.SecretBase&gt;&#xA;override this.GetSecretVersionsAsync : string * System.Threading.CancellationToken -&gt; Azure.AsyncCollection&lt;Azure.Security.KeyVault.Secrets.SecretBase&gt;" Usage="secretClient.GetSecretVersionsAsync (name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Secrets</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncCollection&lt;Azure.Security.KeyVault.Secrets.SecretBase&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="name">The name of the secret.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            List all versions of the specified secret.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            The full secret identifier and attributes are provided in the response. No
            values are returned for the secrets. This operations requires the
            secrets/list permission.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="PurgeDeletedSecret">
      <MemberSignature Language="C#" Value="public virtual Azure.Response PurgeDeletedSecret (string name, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response PurgeDeletedSecret(string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Secrets.SecretClient.PurgeDeletedSecret(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member PurgeDeletedSecret : string * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.PurgeDeletedSecret : string * System.Threading.CancellationToken -&gt; Azure.Response" Usage="secretClient.PurgeDeletedSecret (name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Secrets</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="name">The name of the secret.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Permanently deletes the specified secret.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            The purge deleted secret operation removes the secret permanently, without
            the possibility of recovery. This operation can only be enabled on a
            soft-delete enabled vault. This operation requires the secrets/purge
            permission.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="PurgeDeletedSecretAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; PurgeDeletedSecretAsync (string name, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; PurgeDeletedSecretAsync(string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Secrets.SecretClient.PurgeDeletedSecretAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member PurgeDeletedSecretAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.PurgeDeletedSecretAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="secretClient.PurgeDeletedSecretAsync (name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Secrets</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="name">The name of the secret.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Permanently deletes the specified secret.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            The purge deleted secret operation removes the secret permanently, without
            the possibility of recovery. This operation can only be enabled on a
            soft-delete enabled vault. This operation requires the secrets/purge
            permission.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="RecoverDeletedSecret">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Security.KeyVault.Secrets.SecretProperties&gt; RecoverDeletedSecret (string name, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Security.KeyVault.Secrets.SecretProperties&gt; RecoverDeletedSecret(string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Secrets.SecretClient.RecoverDeletedSecret(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member RecoverDeletedSecret : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Security.KeyVault.Secrets.SecretProperties&gt;&#xA;override this.RecoverDeletedSecret : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Security.KeyVault.Secrets.SecretProperties&gt;" Usage="secretClient.RecoverDeletedSecret (name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Secrets</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Security.KeyVault.Secrets.SecretProperties&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="name">The name of the secret.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Recovers the deleted secret to the latest version.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            Recovers the deleted secret in the specified vault. This operation can only
            be performed on a soft-delete enabled vault. This operation requires the
            secrets/recover permission.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="RecoverDeletedSecretAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Secrets.SecretProperties&gt;&gt; RecoverDeletedSecretAsync (string name, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Security.KeyVault.Secrets.SecretProperties&gt;&gt; RecoverDeletedSecretAsync(string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Secrets.SecretClient.RecoverDeletedSecretAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member RecoverDeletedSecretAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Secrets.SecretProperties&gt;&gt;&#xA;override this.RecoverDeletedSecretAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Secrets.SecretProperties&gt;&gt;" Usage="secretClient.RecoverDeletedSecretAsync (name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Secrets</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Secrets.SecretProperties&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="name">The name of the secret.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Recovers the deleted secret to the latest version.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            Recovers the deleted secret in the specified vault. This operation can only
            be performed on a soft-delete enabled vault. This operation requires the
            secrets/recover permission.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="RestoreSecret">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Security.KeyVault.Secrets.SecretProperties&gt; RestoreSecret (byte[] backup, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Security.KeyVault.Secrets.SecretProperties&gt; RestoreSecret(unsigned int8[] backup, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Secrets.SecretClient.RestoreSecret(System.Byte[],System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member RestoreSecret : byte[] * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Security.KeyVault.Secrets.SecretProperties&gt;&#xA;override this.RestoreSecret : byte[] * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Security.KeyVault.Secrets.SecretProperties&gt;" Usage="secretClient.RestoreSecret (backup, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Secrets</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Security.KeyVault.Secrets.SecretProperties&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="backup" Type="System.Byte[]" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="backup">The backup blob associated with a secret.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Restores a backed up secret to a vault.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            Restores a backed up secret, and all its versions, to a vault. This
            operation requires the secrets/restore permission.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="RestoreSecretAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Secrets.SecretProperties&gt;&gt; RestoreSecretAsync (byte[] backup, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Security.KeyVault.Secrets.SecretProperties&gt;&gt; RestoreSecretAsync(unsigned int8[] backup, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Secrets.SecretClient.RestoreSecretAsync(System.Byte[],System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member RestoreSecretAsync : byte[] * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Secrets.SecretProperties&gt;&gt;&#xA;override this.RestoreSecretAsync : byte[] * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Secrets.SecretProperties&gt;&gt;" Usage="secretClient.RestoreSecretAsync (backup, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Secrets</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Secrets.SecretProperties&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="backup" Type="System.Byte[]" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="backup">The backup blob associated with a secret.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Restores a backed up secret to a vault.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            Restores a backed up secret, and all its versions, to a vault. This
            operation requires the secrets/restore permission.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSecret">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Security.KeyVault.Secrets.Secret&gt; SetSecret (Azure.Security.KeyVault.Secrets.Secret secret, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Security.KeyVault.Secrets.Secret&gt; SetSecret(class Azure.Security.KeyVault.Secrets.Secret secret, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Secrets.SecretClient.SetSecret(Azure.Security.KeyVault.Secrets.Secret,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member SetSecret : Azure.Security.KeyVault.Secrets.Secret * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Security.KeyVault.Secrets.Secret&gt;&#xA;override this.SetSecret : Azure.Security.KeyVault.Secrets.Secret * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Security.KeyVault.Secrets.Secret&gt;" Usage="secretClient.SetSecret (secret, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Secrets</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Security.KeyVault.Secrets.Secret&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="secret" Type="Azure.Security.KeyVault.Secrets.Secret" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="secret">The Secret object containing information about the secret and its properties. The properties secret.Name and secret.Value must be non null.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Sets a secret in a specified key vault.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            The set operation adds a secret to the Azure Key Vault. If the named secret
            already exists, Azure Key Vault creates a new version of that secret. This
            operation requires the secrets/set permission.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSecret">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Security.KeyVault.Secrets.Secret&gt; SetSecret (string name, string value, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Security.KeyVault.Secrets.Secret&gt; SetSecret(string name, string value, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Secrets.SecretClient.SetSecret(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member SetSecret : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Security.KeyVault.Secrets.Secret&gt;&#xA;override this.SetSecret : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Security.KeyVault.Secrets.Secret&gt;" Usage="secretClient.SetSecret (name, value, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Secrets</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Security.KeyVault.Secrets.Secret&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="name">The name of the secret.</param>
        <param name="value">The value of the secret.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Sets a secret in a specified key vault.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            The set operation adds a secret to the Azure Key Vault. If the named secret
            already exists, Azure Key Vault creates a new version of that secret. This
            operation requires the secrets/set permission.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSecretAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Secrets.Secret&gt;&gt; SetSecretAsync (Azure.Security.KeyVault.Secrets.Secret secret, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Security.KeyVault.Secrets.Secret&gt;&gt; SetSecretAsync(class Azure.Security.KeyVault.Secrets.Secret secret, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Secrets.SecretClient.SetSecretAsync(Azure.Security.KeyVault.Secrets.Secret,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member SetSecretAsync : Azure.Security.KeyVault.Secrets.Secret * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Secrets.Secret&gt;&gt;&#xA;override this.SetSecretAsync : Azure.Security.KeyVault.Secrets.Secret * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Secrets.Secret&gt;&gt;" Usage="secretClient.SetSecretAsync (secret, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Secrets</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Secrets.Secret&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="secret" Type="Azure.Security.KeyVault.Secrets.Secret" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="secret">The Secret object containing information about the secret and its properties. The properties secret.Name and secret.Value must be non null.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Sets a secret in a specified key vault.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            The set operation adds a secret to the Azure Key Vault. If the named secret
            already exists, Azure Key Vault creates a new version of that secret. This
            operation requires the secrets/set permission.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSecretAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Secrets.Secret&gt;&gt; SetSecretAsync (string name, string value, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Security.KeyVault.Secrets.Secret&gt;&gt; SetSecretAsync(string name, string value, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Secrets.SecretClient.SetSecretAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member SetSecretAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Secrets.Secret&gt;&gt;&#xA;override this.SetSecretAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Secrets.Secret&gt;&gt;" Usage="secretClient.SetSecretAsync (name, value, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Secrets</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Secrets.Secret&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="name">The name of the secret. It must not be null.</param>
        <param name="value">The value of the secret. It must not be null.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Sets a secret in a specified key vault.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            The set operation adds a secret to the Azure Key Vault. If the named secret
            already exists, Azure Key Vault creates a new version of that secret. This
            operation requires the secrets/set permission.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateSecretProperties">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Security.KeyVault.Secrets.SecretProperties&gt; UpdateSecretProperties (Azure.Security.KeyVault.Secrets.SecretProperties properties, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Security.KeyVault.Secrets.SecretProperties&gt; UpdateSecretProperties(class Azure.Security.KeyVault.Secrets.SecretProperties properties, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Secrets.SecretClient.UpdateSecretProperties(Azure.Security.KeyVault.Secrets.SecretProperties,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member UpdateSecretProperties : Azure.Security.KeyVault.Secrets.SecretProperties * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Security.KeyVault.Secrets.SecretProperties&gt;&#xA;override this.UpdateSecretProperties : Azure.Security.KeyVault.Secrets.SecretProperties * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Security.KeyVault.Secrets.SecretProperties&gt;" Usage="secretClient.UpdateSecretProperties (properties, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Secrets</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Security.KeyVault.Secrets.SecretProperties&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="Azure.Security.KeyVault.Secrets.SecretProperties" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="properties">The secret object with updated properties.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Updates the attributes associated with a specified secret.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            The update operation changes specified attributes of an existing stored
            secret. Attributes that are not specified in the request are left
            unchanged. The value of a secret itself cannot be changed. This operation
            requires the secrets/set permission.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateSecretPropertiesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Secrets.SecretProperties&gt;&gt; UpdateSecretPropertiesAsync (Azure.Security.KeyVault.Secrets.SecretProperties properties, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Security.KeyVault.Secrets.SecretProperties&gt;&gt; UpdateSecretPropertiesAsync(class Azure.Security.KeyVault.Secrets.SecretProperties properties, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Secrets.SecretClient.UpdateSecretPropertiesAsync(Azure.Security.KeyVault.Secrets.SecretProperties,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member UpdateSecretPropertiesAsync : Azure.Security.KeyVault.Secrets.SecretProperties * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Secrets.SecretProperties&gt;&gt;&#xA;override this.UpdateSecretPropertiesAsync : Azure.Security.KeyVault.Secrets.SecretProperties * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Secrets.SecretProperties&gt;&gt;" Usage="secretClient.UpdateSecretPropertiesAsync (properties, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Secrets</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Security.KeyVault.Secrets.SecretProperties&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="Azure.Security.KeyVault.Secrets.SecretProperties" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="properties">The secret object with updated properties.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Updates the attributes associated with a specified secret.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            The update operation changes specified attributes of an existing stored
            secret. Attributes that are not specified in the request are left
            unchanged. The value of a secret itself cannot be changed. This operation
            requires the secrets/set permission.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>

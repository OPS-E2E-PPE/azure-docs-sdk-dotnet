<Type Name="PredictionExtensions" FullName="Microsoft.Azure.CognitiveServices.Language.LUIS.Runtime.PredictionExtensions">
  <TypeSignature Language="C#" Value="public static class PredictionExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit PredictionExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.CognitiveServices.Language.LUIS.Runtime.PredictionExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module PredictionExtensions" />
  <TypeSignature Language="F#" Value="type PredictionExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.CognitiveServices.Language.LUIS</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Extension methods for Prediction.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ResolveAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.CognitiveServices.Language.LUIS.Runtime.Models.LuisResult&gt; ResolveAsync (this Microsoft.Azure.CognitiveServices.Language.LUIS.Runtime.IPrediction operations, string appId, string query, Nullable&lt;double&gt; timezoneOffset = null, Nullable&lt;bool&gt; verbose = null, Nullable&lt;bool&gt; staging = null, Nullable&lt;bool&gt; spellCheck = null, string bingSpellCheckSubscriptionKey = null, Nullable&lt;bool&gt; log = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.CognitiveServices.Language.LUIS.Runtime.Models.LuisResult&gt; ResolveAsync(class Microsoft.Azure.CognitiveServices.Language.LUIS.Runtime.IPrediction operations, string appId, string query, valuetype System.Nullable`1&lt;float64&gt; timezoneOffset, valuetype System.Nullable`1&lt;bool&gt; verbose, valuetype System.Nullable`1&lt;bool&gt; staging, valuetype System.Nullable`1&lt;bool&gt; spellCheck, string bingSpellCheckSubscriptionKey, valuetype System.Nullable`1&lt;bool&gt; log, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.Language.LUIS.Runtime.PredictionExtensions.ResolveAsync(Microsoft.Azure.CognitiveServices.Language.LUIS.Runtime.IPrediction,System.String,System.String,System.Nullable{System.Double},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="static member ResolveAsync : Microsoft.Azure.CognitiveServices.Language.LUIS.Runtime.IPrediction * string * string * Nullable&lt;double&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * string * Nullable&lt;bool&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.CognitiveServices.Language.LUIS.Runtime.Models.LuisResult&gt;" Usage="Microsoft.Azure.CognitiveServices.Language.LUIS.Runtime.PredictionExtensions.ResolveAsync (operations, appId, query, timezoneOffset, verbose, staging, spellCheck, bingSpellCheckSubscriptionKey, log, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Language.LUIS</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.CognitiveServices.Language.LUIS.Runtime.Models.LuisResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.Azure.CognitiveServices.Language.LUIS.Runtime.IPrediction" RefType="this" />
        <Parameter Name="appId" Type="System.String" />
        <Parameter Name="query" Type="System.String" />
        <Parameter Name="timezoneOffset" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="verbose" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="staging" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="spellCheck" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="bingSpellCheckSubscriptionKey" Type="System.String" />
        <Parameter Name="log" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">
            The operations group for this extension method.
            </param>
        <param name="appId">
            The LUIS application ID (Guid).
            </param>
        <param name="query">
            The utterance to predict.
            </param>
        <param name="timezoneOffset">
            The timezone offset for the location of the request.
            </param>
        <param name="verbose">
            If true, return all intents instead of just the top scoring intent.
            </param>
        <param name="staging">
            Use the staging endpoint slot.
            </param>
        <param name="spellCheck">
            Enable spell checking.
            </param>
        <param name="bingSpellCheckSubscriptionKey">
            The subscription key to use when enabling bing spell check
            </param>
        <param name="log">
            Log query (default is true)
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Gets predictions for a given utterance, in the form of intents and
            entities. The current maximum query size is 500 characters.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="IPrediction" FullName="Microsoft.Azure.CognitiveServices.Language.LUIS.Runtime.IPrediction">
  <TypeSignature Language="C#" Value="public interface IPrediction" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IPrediction" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.CognitiveServices.Language.LUIS.Runtime.IPrediction" />
  <TypeSignature Language="VB.NET" Value="Public Interface IPrediction" />
  <TypeSignature Language="F#" Value="type IPrediction = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.CognitiveServices.Language.LUIS</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            Prediction operations.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ResolveWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.Language.LUIS.Runtime.Models.LuisResult&gt;&gt; ResolveWithHttpMessagesAsync (string appId, string query, Nullable&lt;double&gt; timezoneOffset = null, Nullable&lt;bool&gt; verbose = null, Nullable&lt;bool&gt; staging = null, Nullable&lt;bool&gt; spellCheck = null, string bingSpellCheckSubscriptionKey = null, Nullable&lt;bool&gt; log = null, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.HttpOperationResponse`1&lt;class Microsoft.Azure.CognitiveServices.Language.LUIS.Runtime.Models.LuisResult&gt;&gt; ResolveWithHttpMessagesAsync(string appId, string query, valuetype System.Nullable`1&lt;float64&gt; timezoneOffset, valuetype System.Nullable`1&lt;bool&gt; verbose, valuetype System.Nullable`1&lt;bool&gt; staging, valuetype System.Nullable`1&lt;bool&gt; spellCheck, string bingSpellCheckSubscriptionKey, valuetype System.Nullable`1&lt;bool&gt; log, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.Language.LUIS.Runtime.IPrediction.ResolveWithHttpMessagesAsync(System.String,System.String,System.Nullable{System.Double},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.Nullable{System.Boolean},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member ResolveWithHttpMessagesAsync : string * string * Nullable&lt;double&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * string * Nullable&lt;bool&gt; * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.Language.LUIS.Runtime.Models.LuisResult&gt;&gt;" Usage="iPrediction.ResolveWithHttpMessagesAsync (appId, query, timezoneOffset, verbose, staging, spellCheck, bingSpellCheckSubscriptionKey, log, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Language.LUIS</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Azure.CognitiveServices.Language.LUIS.Runtime.Models.LuisResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appId" Type="System.String" />
        <Parameter Name="query" Type="System.String" />
        <Parameter Name="timezoneOffset" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="verbose" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="staging" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="spellCheck" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="bingSpellCheckSubscriptionKey" Type="System.String" />
        <Parameter Name="log" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="appId">
            The LUIS application ID (Guid).
            </param>
        <param name="query">
            The utterance to predict.
            </param>
        <param name="timezoneOffset">
            The timezone offset for the location of the request.
            </param>
        <param name="verbose">
            If true, return all intents instead of just the top scoring intent.
            </param>
        <param name="staging">
            Use the staging endpoint slot.
            </param>
        <param name="spellCheck">
            Enable spell checking.
            </param>
        <param name="bingSpellCheckSubscriptionKey">
            The subscription key to use when enabling bing spell check
            </param>
        <param name="log">
            Log query (default is true)
            </param>
        <param name="customHeaders">
            The headers that will be added to request.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            Gets predictions for a given utterance, in the form of intents and
            entities. The current maximum query size is 500 characters.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Azure.CognitiveServices.Language.LUIS.Runtime.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
        <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
        <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
      </Docs>
    </Member>
  </Members>
</Type>
<Type Name="RoleAssignmentsClient" FullName="Azure.Analytics.Synapse.AccessControl.RoleAssignmentsClient">
  <TypeSignature Language="C#" Value="public class RoleAssignmentsClient" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RoleAssignmentsClient extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Analytics.Synapse.AccessControl.RoleAssignmentsClient" />
  <TypeSignature Language="VB.NET" Value="Public Class RoleAssignmentsClient" />
  <TypeSignature Language="F#" Value="type RoleAssignmentsClient = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Analytics.Synapse.AccessControl</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> The RoleAssignments service client. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected RoleAssignmentsClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.AccessControl.RoleAssignmentsClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.AccessControl</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of RoleAssignmentsClient for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RoleAssignmentsClient (Uri endpoint, Azure.Core.TokenCredential credential, Azure.Analytics.Synapse.AccessControl.AccessControlClientOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, class Azure.Core.TokenCredential credential, class Azure.Analytics.Synapse.AccessControl.AccessControlClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.AccessControl.RoleAssignmentsClient.#ctor(System.Uri,Azure.Core.TokenCredential,Azure.Analytics.Synapse.AccessControl.AccessControlClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, credential As TokenCredential, Optional options As AccessControlClientOptions = Nothing)" />
      <MemberSignature Language="F#" Value="new Azure.Analytics.Synapse.AccessControl.RoleAssignmentsClient : Uri * Azure.Core.TokenCredential * Azure.Analytics.Synapse.AccessControl.AccessControlClientOptions -&gt; Azure.Analytics.Synapse.AccessControl.RoleAssignmentsClient" Usage="new Azure.Analytics.Synapse.AccessControl.RoleAssignmentsClient (endpoint, credential, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.AccessControl</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.Core.TokenCredential" />
        <Parameter Name="options" Type="Azure.Analytics.Synapse.AccessControl.AccessControlClientOptions" />
      </Parameters>
      <Docs>
        <param name="endpoint"> The workspace development endpoint, for example https://myworkspace.dev.azuresynapse.net. </param>
        <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        <param name="options"> The options for configuring the client. </param>
        <summary> Initializes a new instance of RoleAssignmentsClient. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckPrincipalAccess">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Analytics.Synapse.AccessControl.Models.CheckPrincipalAccessResponse&gt; CheckPrincipalAccess (Azure.Analytics.Synapse.AccessControl.Models.SubjectInfo subject, System.Collections.Generic.IEnumerable&lt;Azure.Analytics.Synapse.AccessControl.Models.RequiredAction&gt; actions, string scope, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Analytics.Synapse.AccessControl.Models.CheckPrincipalAccessResponse&gt; CheckPrincipalAccess(class Azure.Analytics.Synapse.AccessControl.Models.SubjectInfo subject, class System.Collections.Generic.IEnumerable`1&lt;class Azure.Analytics.Synapse.AccessControl.Models.RequiredAction&gt; actions, string scope, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.AccessControl.RoleAssignmentsClient.CheckPrincipalAccess(Azure.Analytics.Synapse.AccessControl.Models.SubjectInfo,System.Collections.Generic.IEnumerable{Azure.Analytics.Synapse.AccessControl.Models.RequiredAction},System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckPrincipalAccess (subject As SubjectInfo, actions As IEnumerable(Of RequiredAction), scope As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of CheckPrincipalAccessResponse)" />
      <MemberSignature Language="F#" Value="abstract member CheckPrincipalAccess : Azure.Analytics.Synapse.AccessControl.Models.SubjectInfo * seq&lt;Azure.Analytics.Synapse.AccessControl.Models.RequiredAction&gt; * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Analytics.Synapse.AccessControl.Models.CheckPrincipalAccessResponse&gt;&#xA;override this.CheckPrincipalAccess : Azure.Analytics.Synapse.AccessControl.Models.SubjectInfo * seq&lt;Azure.Analytics.Synapse.AccessControl.Models.RequiredAction&gt; * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Analytics.Synapse.AccessControl.Models.CheckPrincipalAccessResponse&gt;" Usage="roleAssignmentsClient.CheckPrincipalAccess (subject, actions, scope, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.AccessControl</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Analytics.Synapse.AccessControl.Models.CheckPrincipalAccessResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subject" Type="Azure.Analytics.Synapse.AccessControl.Models.SubjectInfo" />
        <Parameter Name="actions" Type="System.Collections.Generic.IEnumerable&lt;Azure.Analytics.Synapse.AccessControl.Models.RequiredAction&gt;" />
        <Parameter Name="scope" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subject"> Subject details. </param>
        <param name="actions"> List of actions. </param>
        <param name="scope"> Scope at which the check access is done. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Check if the given principalId has access to perform list of actions at a given scope. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckPrincipalAccessAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.AccessControl.Models.CheckPrincipalAccessResponse&gt;&gt; CheckPrincipalAccessAsync (Azure.Analytics.Synapse.AccessControl.Models.SubjectInfo subject, System.Collections.Generic.IEnumerable&lt;Azure.Analytics.Synapse.AccessControl.Models.RequiredAction&gt; actions, string scope, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Analytics.Synapse.AccessControl.Models.CheckPrincipalAccessResponse&gt;&gt; CheckPrincipalAccessAsync(class Azure.Analytics.Synapse.AccessControl.Models.SubjectInfo subject, class System.Collections.Generic.IEnumerable`1&lt;class Azure.Analytics.Synapse.AccessControl.Models.RequiredAction&gt; actions, string scope, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.AccessControl.RoleAssignmentsClient.CheckPrincipalAccessAsync(Azure.Analytics.Synapse.AccessControl.Models.SubjectInfo,System.Collections.Generic.IEnumerable{Azure.Analytics.Synapse.AccessControl.Models.RequiredAction},System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckPrincipalAccessAsync (subject As SubjectInfo, actions As IEnumerable(Of RequiredAction), scope As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of CheckPrincipalAccessResponse))" />
      <MemberSignature Language="F#" Value="abstract member CheckPrincipalAccessAsync : Azure.Analytics.Synapse.AccessControl.Models.SubjectInfo * seq&lt;Azure.Analytics.Synapse.AccessControl.Models.RequiredAction&gt; * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.AccessControl.Models.CheckPrincipalAccessResponse&gt;&gt;&#xA;override this.CheckPrincipalAccessAsync : Azure.Analytics.Synapse.AccessControl.Models.SubjectInfo * seq&lt;Azure.Analytics.Synapse.AccessControl.Models.RequiredAction&gt; * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.AccessControl.Models.CheckPrincipalAccessResponse&gt;&gt;" Usage="roleAssignmentsClient.CheckPrincipalAccessAsync (subject, actions, scope, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.AccessControl</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.AccessControl.Models.CheckPrincipalAccessResponse&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subject" Type="Azure.Analytics.Synapse.AccessControl.Models.SubjectInfo" />
        <Parameter Name="actions" Type="System.Collections.Generic.IEnumerable&lt;Azure.Analytics.Synapse.AccessControl.Models.RequiredAction&gt;" />
        <Parameter Name="scope" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subject"> Subject details. </param>
        <param name="actions"> List of actions. </param>
        <param name="scope"> Scope at which the check access is done. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Check if the given principalId has access to perform list of actions at a given scope. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRoleAssignment">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Analytics.Synapse.AccessControl.Models.RoleAssignmentDetails&gt; CreateRoleAssignment (string roleAssignmentId, Guid roleId, Guid principalId, string scope, string principalType = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Analytics.Synapse.AccessControl.Models.RoleAssignmentDetails&gt; CreateRoleAssignment(string roleAssignmentId, valuetype System.Guid roleId, valuetype System.Guid principalId, string scope, string principalType, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.AccessControl.RoleAssignmentsClient.CreateRoleAssignment(System.String,System.Guid,System.Guid,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateRoleAssignment (roleAssignmentId As String, roleId As Guid, principalId As Guid, scope As String, Optional principalType As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of RoleAssignmentDetails)" />
      <MemberSignature Language="F#" Value="abstract member CreateRoleAssignment : string * Guid * Guid * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Analytics.Synapse.AccessControl.Models.RoleAssignmentDetails&gt;&#xA;override this.CreateRoleAssignment : string * Guid * Guid * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Analytics.Synapse.AccessControl.Models.RoleAssignmentDetails&gt;" Usage="roleAssignmentsClient.CreateRoleAssignment (roleAssignmentId, roleId, principalId, scope, principalType, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.AccessControl</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Analytics.Synapse.AccessControl.Models.RoleAssignmentDetails&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleAssignmentId" Type="System.String" />
        <Parameter Name="roleId" Type="System.Guid" />
        <Parameter Name="principalId" Type="System.Guid" />
        <Parameter Name="scope" Type="System.String" />
        <Parameter Name="principalType" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="roleAssignmentId"> The ID of the role assignment. </param>
        <param name="roleId"> Role ID of the Synapse Built-In Role. </param>
        <param name="principalId"> Object ID of the AAD principal or security-group. </param>
        <param name="scope"> Scope at which the role assignment is created. </param>
        <param name="principalType"> Type of the principal Id: User, Group or ServicePrincipal. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Create role assignment. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRoleAssignmentAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.AccessControl.Models.RoleAssignmentDetails&gt;&gt; CreateRoleAssignmentAsync (string roleAssignmentId, Guid roleId, Guid principalId, string scope, string principalType = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Analytics.Synapse.AccessControl.Models.RoleAssignmentDetails&gt;&gt; CreateRoleAssignmentAsync(string roleAssignmentId, valuetype System.Guid roleId, valuetype System.Guid principalId, string scope, string principalType, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.AccessControl.RoleAssignmentsClient.CreateRoleAssignmentAsync(System.String,System.Guid,System.Guid,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateRoleAssignmentAsync (roleAssignmentId As String, roleId As Guid, principalId As Guid, scope As String, Optional principalType As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of RoleAssignmentDetails))" />
      <MemberSignature Language="F#" Value="abstract member CreateRoleAssignmentAsync : string * Guid * Guid * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.AccessControl.Models.RoleAssignmentDetails&gt;&gt;&#xA;override this.CreateRoleAssignmentAsync : string * Guid * Guid * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.AccessControl.Models.RoleAssignmentDetails&gt;&gt;" Usage="roleAssignmentsClient.CreateRoleAssignmentAsync (roleAssignmentId, roleId, principalId, scope, principalType, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.AccessControl</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.AccessControl.Models.RoleAssignmentDetails&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleAssignmentId" Type="System.String" />
        <Parameter Name="roleId" Type="System.Guid" />
        <Parameter Name="principalId" Type="System.Guid" />
        <Parameter Name="scope" Type="System.String" />
        <Parameter Name="principalType" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="roleAssignmentId"> The ID of the role assignment. </param>
        <param name="roleId"> Role ID of the Synapse Built-In Role. </param>
        <param name="principalId"> Object ID of the AAD principal or security-group. </param>
        <param name="scope"> Scope at which the role assignment is created. </param>
        <param name="principalType"> Type of the principal Id: User, Group or ServicePrincipal. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Create role assignment. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteRoleAssignmentById">
      <MemberSignature Language="C#" Value="public virtual Azure.Response DeleteRoleAssignmentById (string roleAssignmentId, string scope = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response DeleteRoleAssignmentById(string roleAssignmentId, string scope, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.AccessControl.RoleAssignmentsClient.DeleteRoleAssignmentById(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteRoleAssignmentById (roleAssignmentId As String, Optional scope As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member DeleteRoleAssignmentById : string * string * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.DeleteRoleAssignmentById : string * string * System.Threading.CancellationToken -&gt; Azure.Response" Usage="roleAssignmentsClient.DeleteRoleAssignmentById (roleAssignmentId, scope, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.AccessControl</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleAssignmentId" Type="System.String" />
        <Parameter Name="scope" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="roleAssignmentId"> The ID of the role assignment. </param>
        <param name="scope"> Scope of the Synapse Built-in Role. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Delete role assignment by role assignment Id. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteRoleAssignmentByIdAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DeleteRoleAssignmentByIdAsync (string roleAssignmentId, string scope = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeleteRoleAssignmentByIdAsync(string roleAssignmentId, string scope, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.AccessControl.RoleAssignmentsClient.DeleteRoleAssignmentByIdAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteRoleAssignmentByIdAsync (roleAssignmentId As String, Optional scope As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DeleteRoleAssignmentByIdAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DeleteRoleAssignmentByIdAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="roleAssignmentsClient.DeleteRoleAssignmentByIdAsync (roleAssignmentId, scope, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.AccessControl</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleAssignmentId" Type="System.String" />
        <Parameter Name="scope" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="roleAssignmentId"> The ID of the role assignment. </param>
        <param name="scope"> Scope of the Synapse Built-in Role. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Delete role assignment by role assignment Id. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRoleAssignmentById">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Analytics.Synapse.AccessControl.Models.RoleAssignmentDetails&gt; GetRoleAssignmentById (string roleAssignmentId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Analytics.Synapse.AccessControl.Models.RoleAssignmentDetails&gt; GetRoleAssignmentById(string roleAssignmentId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.AccessControl.RoleAssignmentsClient.GetRoleAssignmentById(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRoleAssignmentById (roleAssignmentId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of RoleAssignmentDetails)" />
      <MemberSignature Language="F#" Value="abstract member GetRoleAssignmentById : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Analytics.Synapse.AccessControl.Models.RoleAssignmentDetails&gt;&#xA;override this.GetRoleAssignmentById : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Analytics.Synapse.AccessControl.Models.RoleAssignmentDetails&gt;" Usage="roleAssignmentsClient.GetRoleAssignmentById (roleAssignmentId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.AccessControl</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Analytics.Synapse.AccessControl.Models.RoleAssignmentDetails&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleAssignmentId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="roleAssignmentId"> The ID of the role assignment. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Get role assignment by role assignment Id. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRoleAssignmentByIdAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.AccessControl.Models.RoleAssignmentDetails&gt;&gt; GetRoleAssignmentByIdAsync (string roleAssignmentId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Analytics.Synapse.AccessControl.Models.RoleAssignmentDetails&gt;&gt; GetRoleAssignmentByIdAsync(string roleAssignmentId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.AccessControl.RoleAssignmentsClient.GetRoleAssignmentByIdAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRoleAssignmentByIdAsync (roleAssignmentId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of RoleAssignmentDetails))" />
      <MemberSignature Language="F#" Value="abstract member GetRoleAssignmentByIdAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.AccessControl.Models.RoleAssignmentDetails&gt;&gt;&#xA;override this.GetRoleAssignmentByIdAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.AccessControl.Models.RoleAssignmentDetails&gt;&gt;" Usage="roleAssignmentsClient.GetRoleAssignmentByIdAsync (roleAssignmentId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.AccessControl</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.AccessControl.Models.RoleAssignmentDetails&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleAssignmentId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="roleAssignmentId"> The ID of the role assignment. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Get role assignment by role assignment Id. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListRoleAssignments">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Analytics.Synapse.AccessControl.Models.RoleAssignmentDetailsList&gt; ListRoleAssignments (string roleId = default, string principalId = default, string scope = default, string continuationToken = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Analytics.Synapse.AccessControl.Models.RoleAssignmentDetailsList&gt; ListRoleAssignments(string roleId, string principalId, string scope, string continuationToken, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.AccessControl.RoleAssignmentsClient.ListRoleAssignments(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ListRoleAssignments (Optional roleId As String = Nothing, Optional principalId As String = Nothing, Optional scope As String = Nothing, Optional continuationToken As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of RoleAssignmentDetailsList)" />
      <MemberSignature Language="F#" Value="abstract member ListRoleAssignments : string * string * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Analytics.Synapse.AccessControl.Models.RoleAssignmentDetailsList&gt;&#xA;override this.ListRoleAssignments : string * string * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Analytics.Synapse.AccessControl.Models.RoleAssignmentDetailsList&gt;" Usage="roleAssignmentsClient.ListRoleAssignments (roleId, principalId, scope, continuationToken, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.AccessControl</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Analytics.Synapse.AccessControl.Models.RoleAssignmentDetailsList&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleId" Type="System.String" />
        <Parameter Name="principalId" Type="System.String" />
        <Parameter Name="scope" Type="System.String" />
        <Parameter Name="continuationToken" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="roleId"> Synapse Built-In Role Id. </param>
        <param name="principalId"> Object ID of the AAD principal or security-group. </param>
        <param name="scope"> Scope of the Synapse Built-in Role. </param>
        <param name="continuationToken"> Continuation token. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> List role assignments. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListRoleAssignmentsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.AccessControl.Models.RoleAssignmentDetailsList&gt;&gt; ListRoleAssignmentsAsync (string roleId = default, string principalId = default, string scope = default, string continuationToken = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Analytics.Synapse.AccessControl.Models.RoleAssignmentDetailsList&gt;&gt; ListRoleAssignmentsAsync(string roleId, string principalId, string scope, string continuationToken, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.AccessControl.RoleAssignmentsClient.ListRoleAssignmentsAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ListRoleAssignmentsAsync (Optional roleId As String = Nothing, Optional principalId As String = Nothing, Optional scope As String = Nothing, Optional continuationToken As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of RoleAssignmentDetailsList))" />
      <MemberSignature Language="F#" Value="abstract member ListRoleAssignmentsAsync : string * string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.AccessControl.Models.RoleAssignmentDetailsList&gt;&gt;&#xA;override this.ListRoleAssignmentsAsync : string * string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.AccessControl.Models.RoleAssignmentDetailsList&gt;&gt;" Usage="roleAssignmentsClient.ListRoleAssignmentsAsync (roleId, principalId, scope, continuationToken, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.AccessControl</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.AccessControl.Models.RoleAssignmentDetailsList&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleId" Type="System.String" />
        <Parameter Name="principalId" Type="System.String" />
        <Parameter Name="scope" Type="System.String" />
        <Parameter Name="continuationToken" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="roleId"> Synapse Built-In Role Id. </param>
        <param name="principalId"> Object ID of the AAD principal or security-group. </param>
        <param name="scope"> Scope of the Synapse Built-in Role. </param>
        <param name="continuationToken"> Continuation token. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> List role assignments. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

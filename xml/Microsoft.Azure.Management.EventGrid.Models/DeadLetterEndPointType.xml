<Type Name="DeadLetterEndPointType" FullName="Microsoft.Azure.Management.EventGrid.Models.DeadLetterEndPointType">
  <TypeSignature Language="C#" Value="public static class DeadLetterEndPointType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit DeadLetterEndPointType extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Management.EventGrid.Models.DeadLetterEndPointType" />
  <TypeSignature Language="VB.NET" Value="Public Class DeadLetterEndPointType" />
  <TypeSignature Language="F#" Value="type DeadLetterEndPointType = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Management.EventGrid</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Defines values for DeadLetterEndPointType.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="StorageBlob">
      <MemberSignature Language="C#" Value="public const string StorageBlob;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string StorageBlob" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Azure.Management.EventGrid.Models.DeadLetterEndPointType.StorageBlob" />
      <MemberSignature Language="VB.NET" Value="Public Const StorageBlob As String " />
      <MemberSignature Language="F#" Value="val mutable StorageBlob : string" Usage="Microsoft.Azure.Management.EventGrid.Models.DeadLetterEndPointType.StorageBlob" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.EventGrid</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

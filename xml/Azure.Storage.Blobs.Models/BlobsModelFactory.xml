<Type Name="BlobsModelFactory" FullName="Azure.Storage.Blobs.Models.BlobsModelFactory">
  <TypeSignature Language="C#" Value="public static class BlobsModelFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit BlobsModelFactory extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Storage.Blobs.Models.BlobsModelFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class BlobsModelFactory" />
  <TypeSignature Language="F#" Value="type BlobsModelFactory = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Storage.Blobs</AssemblyName>
    <AssemblyVersion>12.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            BlobsModelFactory provides utilities for mocking.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AccountInfo">
      <MemberSignature Language="C#" Value="public static Azure.Storage.Blobs.Models.AccountInfo AccountInfo (Azure.Storage.Blobs.Models.SkuName skuName, Azure.Storage.Blobs.Models.AccountKind accountKind);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Storage.Blobs.Models.AccountInfo AccountInfo(valuetype Azure.Storage.Blobs.Models.SkuName skuName, valuetype Azure.Storage.Blobs.Models.AccountKind accountKind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Models.BlobsModelFactory.AccountInfo(Azure.Storage.Blobs.Models.SkuName,Azure.Storage.Blobs.Models.AccountKind)" />
      <MemberSignature Language="F#" Value="static member AccountInfo : Azure.Storage.Blobs.Models.SkuName * Azure.Storage.Blobs.Models.AccountKind -&gt; Azure.Storage.Blobs.Models.AccountInfo" Usage="Azure.Storage.Blobs.Models.BlobsModelFactory.AccountInfo (skuName, accountKind)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Storage.Blobs.Models.AccountInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="skuName" Type="Azure.Storage.Blobs.Models.SkuName" />
        <Parameter Name="accountKind" Type="Azure.Storage.Blobs.Models.AccountKind" />
      </Parameters>
      <Docs>
        <param name="skuName">To be added.</param>
        <param name="accountKind">To be added.</param>
        <summary>
            Creates a new AccountInfo instance for mocking.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BlobAppendInfo">
      <MemberSignature Language="C#" Value="public static Azure.Storage.Blobs.Models.BlobAppendInfo BlobAppendInfo (Azure.Core.Http.ETag eTag, DateTimeOffset lastModified, byte[] contentHash, byte[] xMSContentCrc64, string blobAppendOffset, int blobCommittedBlockCount, bool isServerEncrypted, string encryptionKeySha256);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Storage.Blobs.Models.BlobAppendInfo BlobAppendInfo(valuetype Azure.Core.Http.ETag eTag, valuetype System.DateTimeOffset lastModified, unsigned int8[] contentHash, unsigned int8[] xMSContentCrc64, string blobAppendOffset, int32 blobCommittedBlockCount, bool isServerEncrypted, string encryptionKeySha256) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobAppendInfo(Azure.Core.Http.ETag,System.DateTimeOffset,System.Byte[],System.Byte[],System.String,System.Int32,System.Boolean,System.String)" />
      <MemberSignature Language="F#" Value="static member BlobAppendInfo : Azure.Core.Http.ETag * DateTimeOffset * byte[] * byte[] * string * int * bool * string -&gt; Azure.Storage.Blobs.Models.BlobAppendInfo" Usage="Azure.Storage.Blobs.Models.BlobsModelFactory.BlobAppendInfo (eTag, lastModified, contentHash, xMSContentCrc64, blobAppendOffset, blobCommittedBlockCount, isServerEncrypted, encryptionKeySha256)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Storage.Blobs.Models.BlobAppendInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eTag" Type="Azure.Core.Http.ETag" />
        <Parameter Name="lastModified" Type="System.DateTimeOffset" />
        <Parameter Name="contentHash" Type="System.Byte[]" />
        <Parameter Name="xMSContentCrc64" Type="System.Byte[]" />
        <Parameter Name="blobAppendOffset" Type="System.String" />
        <Parameter Name="blobCommittedBlockCount" Type="System.Int32" />
        <Parameter Name="isServerEncrypted" Type="System.Boolean" />
        <Parameter Name="encryptionKeySha256" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eTag">To be added.</param>
        <param name="lastModified">To be added.</param>
        <param name="contentHash">To be added.</param>
        <param name="xMSContentCrc64">To be added.</param>
        <param name="blobAppendOffset">To be added.</param>
        <param name="blobCommittedBlockCount">To be added.</param>
        <param name="isServerEncrypted">To be added.</param>
        <param name="encryptionKeySha256">To be added.</param>
        <summary>
            Creates a new BlobAppendInfo instance for mocking.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BlobContentInfo">
      <MemberSignature Language="C#" Value="public static Azure.Storage.Blobs.Models.BlobContentInfo BlobContentInfo (Azure.Core.Http.ETag eTag, DateTimeOffset lastModified, byte[] contentHash, string encryptionKeySha256, long blobSequenceNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Storage.Blobs.Models.BlobContentInfo BlobContentInfo(valuetype Azure.Core.Http.ETag eTag, valuetype System.DateTimeOffset lastModified, unsigned int8[] contentHash, string encryptionKeySha256, int64 blobSequenceNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobContentInfo(Azure.Core.Http.ETag,System.DateTimeOffset,System.Byte[],System.String,System.Int64)" />
      <MemberSignature Language="F#" Value="static member BlobContentInfo : Azure.Core.Http.ETag * DateTimeOffset * byte[] * string * int64 -&gt; Azure.Storage.Blobs.Models.BlobContentInfo" Usage="Azure.Storage.Blobs.Models.BlobsModelFactory.BlobContentInfo (eTag, lastModified, contentHash, encryptionKeySha256, blobSequenceNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Storage.Blobs.Models.BlobContentInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eTag" Type="Azure.Core.Http.ETag" />
        <Parameter Name="lastModified" Type="System.DateTimeOffset" />
        <Parameter Name="contentHash" Type="System.Byte[]" />
        <Parameter Name="encryptionKeySha256" Type="System.String" />
        <Parameter Name="blobSequenceNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="eTag">To be added.</param>
        <param name="lastModified">To be added.</param>
        <param name="contentHash">To be added.</param>
        <param name="encryptionKeySha256">To be added.</param>
        <param name="blobSequenceNumber">To be added.</param>
        <summary>
            Creates a new BlobContentInfo instance for mocking.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BlobCopyInfo">
      <MemberSignature Language="C#" Value="public static Azure.Storage.Blobs.Models.BlobCopyInfo BlobCopyInfo (Azure.Core.Http.ETag eTag, DateTimeOffset lastModified, string copyId, Azure.Storage.Blobs.Models.CopyStatus copyStatus);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Storage.Blobs.Models.BlobCopyInfo BlobCopyInfo(valuetype Azure.Core.Http.ETag eTag, valuetype System.DateTimeOffset lastModified, string copyId, valuetype Azure.Storage.Blobs.Models.CopyStatus copyStatus) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobCopyInfo(Azure.Core.Http.ETag,System.DateTimeOffset,System.String,Azure.Storage.Blobs.Models.CopyStatus)" />
      <MemberSignature Language="F#" Value="static member BlobCopyInfo : Azure.Core.Http.ETag * DateTimeOffset * string * Azure.Storage.Blobs.Models.CopyStatus -&gt; Azure.Storage.Blobs.Models.BlobCopyInfo" Usage="Azure.Storage.Blobs.Models.BlobsModelFactory.BlobCopyInfo (eTag, lastModified, copyId, copyStatus)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Storage.Blobs.Models.BlobCopyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eTag" Type="Azure.Core.Http.ETag" />
        <Parameter Name="lastModified" Type="System.DateTimeOffset" />
        <Parameter Name="copyId" Type="System.String" />
        <Parameter Name="copyStatus" Type="Azure.Storage.Blobs.Models.CopyStatus" />
      </Parameters>
      <Docs>
        <param name="eTag">To be added.</param>
        <param name="lastModified">To be added.</param>
        <param name="copyId">To be added.</param>
        <param name="copyStatus">To be added.</param>
        <summary>
            Creates a new BlobCopyInfo instance for mocking.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BlobGetAccessControlResult">
      <MemberSignature Language="C#" Value="public static Azure.Storage.Blobs.Models.BlobGetAccessControlResult BlobGetAccessControlResult (Azure.Core.Http.ETag eTag, DateTimeOffset lastModified, string xMSOwner, string xMSGroup, string xMSPermissions, string xMSAcl);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Storage.Blobs.Models.BlobGetAccessControlResult BlobGetAccessControlResult(valuetype Azure.Core.Http.ETag eTag, valuetype System.DateTimeOffset lastModified, string xMSOwner, string xMSGroup, string xMSPermissions, string xMSAcl) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobGetAccessControlResult(Azure.Core.Http.ETag,System.DateTimeOffset,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="F#" Value="static member BlobGetAccessControlResult : Azure.Core.Http.ETag * DateTimeOffset * string * string * string * string -&gt; Azure.Storage.Blobs.Models.BlobGetAccessControlResult" Usage="Azure.Storage.Blobs.Models.BlobsModelFactory.BlobGetAccessControlResult (eTag, lastModified, xMSOwner, xMSGroup, xMSPermissions, xMSAcl)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Storage.Blobs.Models.BlobGetAccessControlResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eTag" Type="Azure.Core.Http.ETag" />
        <Parameter Name="lastModified" Type="System.DateTimeOffset" />
        <Parameter Name="xMSOwner" Type="System.String" />
        <Parameter Name="xMSGroup" Type="System.String" />
        <Parameter Name="xMSPermissions" Type="System.String" />
        <Parameter Name="xMSAcl" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eTag">To be added.</param>
        <param name="lastModified">To be added.</param>
        <param name="xMSOwner">To be added.</param>
        <param name="xMSGroup">To be added.</param>
        <param name="xMSPermissions">To be added.</param>
        <param name="xMSAcl">To be added.</param>
        <summary>
            Creates a new BlobGetAccessControlResult instance for mocking.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BlobHierarchyItem">
      <MemberSignature Language="C#" Value="public static Azure.Storage.Blobs.Models.BlobHierarchyItem BlobHierarchyItem (string prefix, Azure.Storage.Blobs.Models.BlobItem blob);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Storage.Blobs.Models.BlobHierarchyItem BlobHierarchyItem(string prefix, class Azure.Storage.Blobs.Models.BlobItem blob) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobHierarchyItem(System.String,Azure.Storage.Blobs.Models.BlobItem)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BlobHierarchyItem (prefix As String, blob As BlobItem) As BlobHierarchyItem" />
      <MemberSignature Language="F#" Value="static member BlobHierarchyItem : string * Azure.Storage.Blobs.Models.BlobItem -&gt; Azure.Storage.Blobs.Models.BlobHierarchyItem" Usage="Azure.Storage.Blobs.Models.BlobsModelFactory.BlobHierarchyItem (prefix, blob)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Storage.Blobs.Models.BlobHierarchyItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="blob" Type="Azure.Storage.Blobs.Models.BlobItem" />
      </Parameters>
      <Docs>
        <param name="prefix">To be added.</param>
        <param name="blob">To be added.</param>
        <summary>
            Creates a new BlobHierarchyItem instance for mocking.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BlobInfo">
      <MemberSignature Language="C#" Value="public static Azure.Storage.Blobs.Models.BlobInfo BlobInfo (Azure.Core.Http.ETag eTag, DateTimeOffset lastModified);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Storage.Blobs.Models.BlobInfo BlobInfo(valuetype Azure.Core.Http.ETag eTag, valuetype System.DateTimeOffset lastModified) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobInfo(Azure.Core.Http.ETag,System.DateTimeOffset)" />
      <MemberSignature Language="F#" Value="static member BlobInfo : Azure.Core.Http.ETag * DateTimeOffset -&gt; Azure.Storage.Blobs.Models.BlobInfo" Usage="Azure.Storage.Blobs.Models.BlobsModelFactory.BlobInfo (eTag, lastModified)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Storage.Blobs.Models.BlobInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eTag" Type="Azure.Core.Http.ETag" />
        <Parameter Name="lastModified" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="eTag">To be added.</param>
        <param name="lastModified">To be added.</param>
        <summary>
            Creates a new BlobInfo instance for mocking.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BlobItem">
      <MemberSignature Language="C#" Value="public static Azure.Storage.Blobs.Models.BlobItem BlobItem (string name, Azure.Storage.Blobs.Models.BlobItemProperties properties, Nullable&lt;bool&gt; deleted = null, string snapshot = null, System.Collections.Generic.IDictionary&lt;string,string&gt; metadata = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Storage.Blobs.Models.BlobItem BlobItem(string name, class Azure.Storage.Blobs.Models.BlobItemProperties properties, valuetype System.Nullable`1&lt;bool&gt; deleted, string snapshot, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; metadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobItem(System.String,Azure.Storage.Blobs.Models.BlobItemProperties,System.Nullable{System.Boolean},System.String,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BlobItem (name As String, properties As BlobItemProperties, Optional deleted As Nullable(Of Boolean) = null, Optional snapshot As String = null, Optional metadata As IDictionary(Of String, String) = null) As BlobItem" />
      <MemberSignature Language="F#" Value="static member BlobItem : string * Azure.Storage.Blobs.Models.BlobItemProperties * Nullable&lt;bool&gt; * string * System.Collections.Generic.IDictionary&lt;string, string&gt; -&gt; Azure.Storage.Blobs.Models.BlobItem" Usage="Azure.Storage.Blobs.Models.BlobsModelFactory.BlobItem (name, properties, deleted, snapshot, metadata)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Storage.Blobs.Models.BlobItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="properties" Type="Azure.Storage.Blobs.Models.BlobItemProperties" />
        <Parameter Name="deleted" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="snapshot" Type="System.String" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="properties">To be added.</param>
        <param name="deleted">To be added.</param>
        <param name="snapshot">To be added.</param>
        <param name="metadata">To be added.</param>
        <summary>
            Creates a new BlobItem instance for mocking.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BlobItemProperties">
      <MemberSignature Language="C#" Value="public static Azure.Storage.Blobs.Models.BlobItemProperties BlobItemProperties (Nullable&lt;Azure.Storage.Blobs.Models.CopyStatus&gt; copyStatus = null, Nullable&lt;DateTimeOffset&gt; creationTime = null, Nullable&lt;long&gt; contentLength = null, string contentType = null, string contentEncoding = null, string contentLanguage = null, byte[] contentHash = null, string contentDisposition = null, string cacheControl = null, Nullable&lt;long&gt; blobSequenceNumber = null, Nullable&lt;Azure.Storage.Blobs.Models.BlobType&gt; blobType = null, Nullable&lt;Azure.Storage.Blobs.Models.LeaseStatus&gt; leaseStatus = null, Nullable&lt;Azure.Storage.Blobs.Models.LeaseState&gt; leaseState = null, Nullable&lt;Azure.Storage.Blobs.Models.LeaseDurationType&gt; leaseDuration = null, string copyId = null, Nullable&lt;DateTimeOffset&gt; lastModified = null, Uri copySource = null, string copyProgress = null, Nullable&lt;DateTimeOffset&gt; copyCompletionTime = null, string copyStatusDescription = null, Nullable&lt;bool&gt; serverEncrypted = null, Nullable&lt;bool&gt; incrementalCopy = null, string destinationSnapshot = null, Nullable&lt;DateTimeOffset&gt; deletedTime = null, Nullable&lt;int&gt; remainingRetentionDays = null, Nullable&lt;Azure.Storage.Blobs.Models.AccessTier&gt; accessTier = null, Nullable&lt;bool&gt; accessTierInferred = null, Nullable&lt;Azure.Storage.Blobs.Models.ArchiveStatus&gt; archiveStatus = null, string customerProvidedKeySha256 = null, Nullable&lt;DateTimeOffset&gt; accessTierChangeTime = null, Nullable&lt;Azure.Core.Http.ETag&gt; eTag = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Storage.Blobs.Models.BlobItemProperties BlobItemProperties(valuetype System.Nullable`1&lt;valuetype Azure.Storage.Blobs.Models.CopyStatus&gt; copyStatus, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; creationTime, valuetype System.Nullable`1&lt;int64&gt; contentLength, string contentType, string contentEncoding, string contentLanguage, unsigned int8[] contentHash, string contentDisposition, string cacheControl, valuetype System.Nullable`1&lt;int64&gt; blobSequenceNumber, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Blobs.Models.BlobType&gt; blobType, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Blobs.Models.LeaseStatus&gt; leaseStatus, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Blobs.Models.LeaseState&gt; leaseState, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Blobs.Models.LeaseDurationType&gt; leaseDuration, string copyId, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; lastModified, class System.Uri copySource, string copyProgress, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; copyCompletionTime, string copyStatusDescription, valuetype System.Nullable`1&lt;bool&gt; serverEncrypted, valuetype System.Nullable`1&lt;bool&gt; incrementalCopy, string destinationSnapshot, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; deletedTime, valuetype System.Nullable`1&lt;int32&gt; remainingRetentionDays, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Blobs.Models.AccessTier&gt; accessTier, valuetype System.Nullable`1&lt;bool&gt; accessTierInferred, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Blobs.Models.ArchiveStatus&gt; archiveStatus, string customerProvidedKeySha256, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; accessTierChangeTime, valuetype System.Nullable`1&lt;valuetype Azure.Core.Http.ETag&gt; eTag) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobItemProperties(System.Nullable{Azure.Storage.Blobs.Models.CopyStatus},System.Nullable{System.DateTimeOffset},System.Nullable{System.Int64},System.String,System.String,System.String,System.Byte[],System.String,System.String,System.Nullable{System.Int64},System.Nullable{Azure.Storage.Blobs.Models.BlobType},System.Nullable{Azure.Storage.Blobs.Models.LeaseStatus},System.Nullable{Azure.Storage.Blobs.Models.LeaseState},System.Nullable{Azure.Storage.Blobs.Models.LeaseDurationType},System.String,System.Nullable{System.DateTimeOffset},System.Uri,System.String,System.Nullable{System.DateTimeOffset},System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.Int32},System.Nullable{Azure.Storage.Blobs.Models.AccessTier},System.Nullable{System.Boolean},System.Nullable{Azure.Storage.Blobs.Models.ArchiveStatus},System.String,System.Nullable{System.DateTimeOffset},System.Nullable{Azure.Core.Http.ETag})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BlobItemProperties (Optional copyStatus As Nullable(Of CopyStatus) = null, Optional creationTime As Nullable(Of DateTimeOffset) = null, Optional contentLength As Nullable(Of Long) = null, Optional contentType As String = null, Optional contentEncoding As String = null, Optional contentLanguage As String = null, Optional contentHash As Byte() = null, Optional contentDisposition As String = null, Optional cacheControl As String = null, Optional blobSequenceNumber As Nullable(Of Long) = null, Optional blobType As Nullable(Of BlobType) = null, Optional leaseStatus As Nullable(Of LeaseStatus) = null, Optional leaseState As Nullable(Of LeaseState) = null, Optional leaseDuration As Nullable(Of LeaseDurationType) = null, Optional copyId As String = null, Optional lastModified As Nullable(Of DateTimeOffset) = null, Optional copySource As Uri = null, Optional copyProgress As String = null, Optional copyCompletionTime As Nullable(Of DateTimeOffset) = null, Optional copyStatusDescription As String = null, Optional serverEncrypted As Nullable(Of Boolean) = null, Optional incrementalCopy As Nullable(Of Boolean) = null, Optional destinationSnapshot As String = null, Optional deletedTime As Nullable(Of DateTimeOffset) = null, Optional remainingRetentionDays As Nullable(Of Integer) = null, Optional accessTier As Nullable(Of AccessTier) = null, Optional accessTierInferred As Nullable(Of Boolean) = null, Optional archiveStatus As Nullable(Of ArchiveStatus) = null, Optional customerProvidedKeySha256 As String = null, Optional accessTierChangeTime As Nullable(Of DateTimeOffset) = null, Optional eTag As Nullable(Of ETag) = null) As BlobItemProperties" />
      <MemberSignature Language="F#" Value="static member BlobItemProperties : Nullable&lt;Azure.Storage.Blobs.Models.CopyStatus&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;int64&gt; * string * string * string * byte[] * string * string * Nullable&lt;int64&gt; * Nullable&lt;Azure.Storage.Blobs.Models.BlobType&gt; * Nullable&lt;Azure.Storage.Blobs.Models.LeaseStatus&gt; * Nullable&lt;Azure.Storage.Blobs.Models.LeaseState&gt; * Nullable&lt;Azure.Storage.Blobs.Models.LeaseDurationType&gt; * string * Nullable&lt;DateTimeOffset&gt; * Uri * string * Nullable&lt;DateTimeOffset&gt; * string * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * string * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;int&gt; * Nullable&lt;Azure.Storage.Blobs.Models.AccessTier&gt; * Nullable&lt;bool&gt; * Nullable&lt;Azure.Storage.Blobs.Models.ArchiveStatus&gt; * string * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;Azure.Core.Http.ETag&gt; -&gt; Azure.Storage.Blobs.Models.BlobItemProperties" Usage="Azure.Storage.Blobs.Models.BlobsModelFactory.BlobItemProperties (copyStatus, creationTime, contentLength, contentType, contentEncoding, contentLanguage, contentHash, contentDisposition, cacheControl, blobSequenceNumber, blobType, leaseStatus, leaseState, leaseDuration, copyId, lastModified, copySource, copyProgress, copyCompletionTime, copyStatusDescription, serverEncrypted, incrementalCopy, destinationSnapshot, deletedTime, remainingRetentionDays, accessTier, accessTierInferred, archiveStatus, customerProvidedKeySha256, accessTierChangeTime, eTag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Storage.Blobs.Models.BlobItemProperties</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="copyStatus" Type="System.Nullable&lt;Azure.Storage.Blobs.Models.CopyStatus&gt;" />
        <Parameter Name="creationTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="contentLength" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="contentType" Type="System.String" />
        <Parameter Name="contentEncoding" Type="System.String" />
        <Parameter Name="contentLanguage" Type="System.String" />
        <Parameter Name="contentHash" Type="System.Byte[]" />
        <Parameter Name="contentDisposition" Type="System.String" />
        <Parameter Name="cacheControl" Type="System.String" />
        <Parameter Name="blobSequenceNumber" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="blobType" Type="System.Nullable&lt;Azure.Storage.Blobs.Models.BlobType&gt;" />
        <Parameter Name="leaseStatus" Type="System.Nullable&lt;Azure.Storage.Blobs.Models.LeaseStatus&gt;" />
        <Parameter Name="leaseState" Type="System.Nullable&lt;Azure.Storage.Blobs.Models.LeaseState&gt;" />
        <Parameter Name="leaseDuration" Type="System.Nullable&lt;Azure.Storage.Blobs.Models.LeaseDurationType&gt;" />
        <Parameter Name="copyId" Type="System.String" />
        <Parameter Name="lastModified" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="copySource" Type="System.Uri" />
        <Parameter Name="copyProgress" Type="System.String" />
        <Parameter Name="copyCompletionTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="copyStatusDescription" Type="System.String" />
        <Parameter Name="serverEncrypted" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="incrementalCopy" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="destinationSnapshot" Type="System.String" />
        <Parameter Name="deletedTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="remainingRetentionDays" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="accessTier" Type="System.Nullable&lt;Azure.Storage.Blobs.Models.AccessTier&gt;" />
        <Parameter Name="accessTierInferred" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="archiveStatus" Type="System.Nullable&lt;Azure.Storage.Blobs.Models.ArchiveStatus&gt;" />
        <Parameter Name="customerProvidedKeySha256" Type="System.String" />
        <Parameter Name="accessTierChangeTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="eTag" Type="System.Nullable&lt;Azure.Core.Http.ETag&gt;" />
      </Parameters>
      <Docs>
        <param name="copyStatus">To be added.</param>
        <param name="creationTime">To be added.</param>
        <param name="contentLength">To be added.</param>
        <param name="contentType">To be added.</param>
        <param name="contentEncoding">To be added.</param>
        <param name="contentLanguage">To be added.</param>
        <param name="contentHash">To be added.</param>
        <param name="contentDisposition">To be added.</param>
        <param name="cacheControl">To be added.</param>
        <param name="blobSequenceNumber">To be added.</param>
        <param name="blobType">To be added.</param>
        <param name="leaseStatus">To be added.</param>
        <param name="leaseState">To be added.</param>
        <param name="leaseDuration">To be added.</param>
        <param name="copyId">To be added.</param>
        <param name="lastModified">To be added.</param>
        <param name="copySource">To be added.</param>
        <param name="copyProgress">To be added.</param>
        <param name="copyCompletionTime">To be added.</param>
        <param name="copyStatusDescription">To be added.</param>
        <param name="serverEncrypted">To be added.</param>
        <param name="incrementalCopy">To be added.</param>
        <param name="destinationSnapshot">To be added.</param>
        <param name="deletedTime">To be added.</param>
        <param name="remainingRetentionDays">To be added.</param>
        <param name="accessTier">To be added.</param>
        <param name="accessTierInferred">To be added.</param>
        <param name="archiveStatus">To be added.</param>
        <param name="customerProvidedKeySha256">To be added.</param>
        <param name="accessTierChangeTime">To be added.</param>
        <param name="eTag">To be added.</param>
        <summary>
            Creates a new BlobItemProperties instance for mocking.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BlobProperties">
      <MemberSignature Language="C#" Value="public static Azure.Storage.Blobs.Models.BlobProperties BlobProperties (DateTimeOffset lastModified, Azure.Storage.Blobs.Models.LeaseDurationType leaseDuration, Azure.Storage.Blobs.Models.LeaseState leaseState, Azure.Storage.Blobs.Models.LeaseStatus leaseStatus, long contentLength, string destinationSnapshot, Azure.Core.Http.ETag eTag, byte[] contentHash, System.Collections.Generic.IEnumerable&lt;string&gt; contentEncoding, string contentDisposition, System.Collections.Generic.IEnumerable&lt;string&gt; contentLanguage, bool isIncrementalCopy, string cacheControl, Azure.Storage.Blobs.Models.CopyStatus copyStatus, long blobSequenceNumber, Uri copySource, string acceptRanges, string copyProgress, int blobCommittedBlockCount, string copyId, bool isServerEncrypted, string copyStatusDescription, string encryptionKeySha256, DateTimeOffset copyCompletionTime, string accessTier, Azure.Storage.Blobs.Models.BlobType blobType, bool accessTierInferred, System.Collections.Generic.IDictionary&lt;string,string&gt; metadata, string archiveStatus, DateTimeOffset creationTime, DateTimeOffset accessTierChangeTime, string contentType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Storage.Blobs.Models.BlobProperties BlobProperties(valuetype System.DateTimeOffset lastModified, valuetype Azure.Storage.Blobs.Models.LeaseDurationType leaseDuration, valuetype Azure.Storage.Blobs.Models.LeaseState leaseState, valuetype Azure.Storage.Blobs.Models.LeaseStatus leaseStatus, int64 contentLength, string destinationSnapshot, valuetype Azure.Core.Http.ETag eTag, unsigned int8[] contentHash, class System.Collections.Generic.IEnumerable`1&lt;string&gt; contentEncoding, string contentDisposition, class System.Collections.Generic.IEnumerable`1&lt;string&gt; contentLanguage, bool isIncrementalCopy, string cacheControl, valuetype Azure.Storage.Blobs.Models.CopyStatus copyStatus, int64 blobSequenceNumber, class System.Uri copySource, string acceptRanges, string copyProgress, int32 blobCommittedBlockCount, string copyId, bool isServerEncrypted, string copyStatusDescription, string encryptionKeySha256, valuetype System.DateTimeOffset copyCompletionTime, string accessTier, valuetype Azure.Storage.Blobs.Models.BlobType blobType, bool accessTierInferred, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; metadata, string archiveStatus, valuetype System.DateTimeOffset creationTime, valuetype System.DateTimeOffset accessTierChangeTime, string contentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobProperties(System.DateTimeOffset,Azure.Storage.Blobs.Models.LeaseDurationType,Azure.Storage.Blobs.Models.LeaseState,Azure.Storage.Blobs.Models.LeaseStatus,System.Int64,System.String,Azure.Core.Http.ETag,System.Byte[],System.Collections.Generic.IEnumerable{System.String},System.String,System.Collections.Generic.IEnumerable{System.String},System.Boolean,System.String,Azure.Storage.Blobs.Models.CopyStatus,System.Int64,System.Uri,System.String,System.String,System.Int32,System.String,System.Boolean,System.String,System.String,System.DateTimeOffset,System.String,Azure.Storage.Blobs.Models.BlobType,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.DateTimeOffset,System.DateTimeOffset,System.String)" />
      <MemberSignature Language="F#" Value="static member BlobProperties : DateTimeOffset * Azure.Storage.Blobs.Models.LeaseDurationType * Azure.Storage.Blobs.Models.LeaseState * Azure.Storage.Blobs.Models.LeaseStatus * int64 * string * Azure.Core.Http.ETag * byte[] * seq&lt;string&gt; * string * seq&lt;string&gt; * bool * string * Azure.Storage.Blobs.Models.CopyStatus * int64 * Uri * string * string * int * string * bool * string * string * DateTimeOffset * string * Azure.Storage.Blobs.Models.BlobType * bool * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * DateTimeOffset * DateTimeOffset * string -&gt; Azure.Storage.Blobs.Models.BlobProperties" Usage="Azure.Storage.Blobs.Models.BlobsModelFactory.BlobProperties (lastModified, leaseDuration, leaseState, leaseStatus, contentLength, destinationSnapshot, eTag, contentHash, contentEncoding, contentDisposition, contentLanguage, isIncrementalCopy, cacheControl, copyStatus, blobSequenceNumber, copySource, acceptRanges, copyProgress, blobCommittedBlockCount, copyId, isServerEncrypted, copyStatusDescription, encryptionKeySha256, copyCompletionTime, accessTier, blobType, accessTierInferred, metadata, archiveStatus, creationTime, accessTierChangeTime, contentType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Storage.Blobs.Models.BlobProperties</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lastModified" Type="System.DateTimeOffset" />
        <Parameter Name="leaseDuration" Type="Azure.Storage.Blobs.Models.LeaseDurationType" />
        <Parameter Name="leaseState" Type="Azure.Storage.Blobs.Models.LeaseState" />
        <Parameter Name="leaseStatus" Type="Azure.Storage.Blobs.Models.LeaseStatus" />
        <Parameter Name="contentLength" Type="System.Int64" />
        <Parameter Name="destinationSnapshot" Type="System.String" />
        <Parameter Name="eTag" Type="Azure.Core.Http.ETag" />
        <Parameter Name="contentHash" Type="System.Byte[]" />
        <Parameter Name="contentEncoding" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="contentDisposition" Type="System.String" />
        <Parameter Name="contentLanguage" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="isIncrementalCopy" Type="System.Boolean" />
        <Parameter Name="cacheControl" Type="System.String" />
        <Parameter Name="copyStatus" Type="Azure.Storage.Blobs.Models.CopyStatus" />
        <Parameter Name="blobSequenceNumber" Type="System.Int64" />
        <Parameter Name="copySource" Type="System.Uri" />
        <Parameter Name="acceptRanges" Type="System.String" />
        <Parameter Name="copyProgress" Type="System.String" />
        <Parameter Name="blobCommittedBlockCount" Type="System.Int32" />
        <Parameter Name="copyId" Type="System.String" />
        <Parameter Name="isServerEncrypted" Type="System.Boolean" />
        <Parameter Name="copyStatusDescription" Type="System.String" />
        <Parameter Name="encryptionKeySha256" Type="System.String" />
        <Parameter Name="copyCompletionTime" Type="System.DateTimeOffset" />
        <Parameter Name="accessTier" Type="System.String" />
        <Parameter Name="blobType" Type="Azure.Storage.Blobs.Models.BlobType" />
        <Parameter Name="accessTierInferred" Type="System.Boolean" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="archiveStatus" Type="System.String" />
        <Parameter Name="creationTime" Type="System.DateTimeOffset" />
        <Parameter Name="accessTierChangeTime" Type="System.DateTimeOffset" />
        <Parameter Name="contentType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="lastModified">To be added.</param>
        <param name="leaseDuration">To be added.</param>
        <param name="leaseState">To be added.</param>
        <param name="leaseStatus">To be added.</param>
        <param name="contentLength">To be added.</param>
        <param name="destinationSnapshot">To be added.</param>
        <param name="eTag">To be added.</param>
        <param name="contentHash">To be added.</param>
        <param name="contentEncoding">To be added.</param>
        <param name="contentDisposition">To be added.</param>
        <param name="contentLanguage">To be added.</param>
        <param name="isIncrementalCopy">To be added.</param>
        <param name="cacheControl">To be added.</param>
        <param name="copyStatus">To be added.</param>
        <param name="blobSequenceNumber">To be added.</param>
        <param name="copySource">To be added.</param>
        <param name="acceptRanges">To be added.</param>
        <param name="copyProgress">To be added.</param>
        <param name="blobCommittedBlockCount">To be added.</param>
        <param name="copyId">To be added.</param>
        <param name="isServerEncrypted">To be added.</param>
        <param name="copyStatusDescription">To be added.</param>
        <param name="encryptionKeySha256">To be added.</param>
        <param name="copyCompletionTime">To be added.</param>
        <param name="accessTier">To be added.</param>
        <param name="blobType">To be added.</param>
        <param name="accessTierInferred">To be added.</param>
        <param name="metadata">To be added.</param>
        <param name="archiveStatus">To be added.</param>
        <param name="creationTime">To be added.</param>
        <param name="accessTierChangeTime">To be added.</param>
        <param name="contentType">To be added.</param>
        <summary>
            Creates a new BlobProperties instance for mocking.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BlobRenameResult">
      <MemberSignature Language="C#" Value="public static Azure.Storage.Blobs.Models.BlobRenameResult BlobRenameResult (Azure.Core.Http.ETag eTag, DateTimeOffset lastModified, long contentLength);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Storage.Blobs.Models.BlobRenameResult BlobRenameResult(valuetype Azure.Core.Http.ETag eTag, valuetype System.DateTimeOffset lastModified, int64 contentLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobRenameResult(Azure.Core.Http.ETag,System.DateTimeOffset,System.Int64)" />
      <MemberSignature Language="F#" Value="static member BlobRenameResult : Azure.Core.Http.ETag * DateTimeOffset * int64 -&gt; Azure.Storage.Blobs.Models.BlobRenameResult" Usage="Azure.Storage.Blobs.Models.BlobsModelFactory.BlobRenameResult (eTag, lastModified, contentLength)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Storage.Blobs.Models.BlobRenameResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eTag" Type="Azure.Core.Http.ETag" />
        <Parameter Name="lastModified" Type="System.DateTimeOffset" />
        <Parameter Name="contentLength" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="eTag">To be added.</param>
        <param name="lastModified">To be added.</param>
        <param name="contentLength">To be added.</param>
        <summary>
            Creates a new BlobRenameResult instance for mocking.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BlobServiceStatistics">
      <MemberSignature Language="C#" Value="public static Azure.Storage.Blobs.Models.BlobServiceStatistics BlobServiceStatistics (Azure.Storage.Blobs.Models.GeoReplication geoReplication = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Storage.Blobs.Models.BlobServiceStatistics BlobServiceStatistics(class Azure.Storage.Blobs.Models.GeoReplication geoReplication) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobServiceStatistics(Azure.Storage.Blobs.Models.GeoReplication)" />
      <MemberSignature Language="F#" Value="static member BlobServiceStatistics : Azure.Storage.Blobs.Models.GeoReplication -&gt; Azure.Storage.Blobs.Models.BlobServiceStatistics" Usage="Azure.Storage.Blobs.Models.BlobsModelFactory.BlobServiceStatistics geoReplication" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Storage.Blobs.Models.BlobServiceStatistics</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="geoReplication" Type="Azure.Storage.Blobs.Models.GeoReplication" />
      </Parameters>
      <Docs>
        <param name="geoReplication">To be added.</param>
        <summary>
            Creates a new BlobServiceStatistics instance for mocking.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BlobSetAccessControlResult">
      <MemberSignature Language="C#" Value="public static Azure.Storage.Blobs.Models.BlobSetAccessControlResult BlobSetAccessControlResult (Azure.Core.Http.ETag eTag, DateTimeOffset lastModified);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Storage.Blobs.Models.BlobSetAccessControlResult BlobSetAccessControlResult(valuetype Azure.Core.Http.ETag eTag, valuetype System.DateTimeOffset lastModified) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobSetAccessControlResult(Azure.Core.Http.ETag,System.DateTimeOffset)" />
      <MemberSignature Language="F#" Value="static member BlobSetAccessControlResult : Azure.Core.Http.ETag * DateTimeOffset -&gt; Azure.Storage.Blobs.Models.BlobSetAccessControlResult" Usage="Azure.Storage.Blobs.Models.BlobsModelFactory.BlobSetAccessControlResult (eTag, lastModified)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Storage.Blobs.Models.BlobSetAccessControlResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eTag" Type="Azure.Core.Http.ETag" />
        <Parameter Name="lastModified" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="eTag">To be added.</param>
        <param name="lastModified">To be added.</param>
        <summary>
            Creates a new BlobSetAccessControlResult instance for mocking.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BlobSnapshotInfo">
      <MemberSignature Language="C#" Value="public static Azure.Storage.Blobs.Models.BlobSnapshotInfo BlobSnapshotInfo (string snapshot, Azure.Core.Http.ETag eTag, DateTimeOffset lastModified, bool isServerEncrypted);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Storage.Blobs.Models.BlobSnapshotInfo BlobSnapshotInfo(string snapshot, valuetype Azure.Core.Http.ETag eTag, valuetype System.DateTimeOffset lastModified, bool isServerEncrypted) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlobSnapshotInfo(System.String,Azure.Core.Http.ETag,System.DateTimeOffset,System.Boolean)" />
      <MemberSignature Language="F#" Value="static member BlobSnapshotInfo : string * Azure.Core.Http.ETag * DateTimeOffset * bool -&gt; Azure.Storage.Blobs.Models.BlobSnapshotInfo" Usage="Azure.Storage.Blobs.Models.BlobsModelFactory.BlobSnapshotInfo (snapshot, eTag, lastModified, isServerEncrypted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Storage.Blobs.Models.BlobSnapshotInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="snapshot" Type="System.String" />
        <Parameter Name="eTag" Type="Azure.Core.Http.ETag" />
        <Parameter Name="lastModified" Type="System.DateTimeOffset" />
        <Parameter Name="isServerEncrypted" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="snapshot">To be added.</param>
        <param name="eTag">To be added.</param>
        <param name="lastModified">To be added.</param>
        <param name="isServerEncrypted">To be added.</param>
        <summary>
            Creates a new BlobSnapshotInfo instance for mocking.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Block">
      <MemberSignature Language="C#" Value="public static Azure.Storage.Blobs.Models.Block Block (string name, int size);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Storage.Blobs.Models.Block Block(string name, int32 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Models.BlobsModelFactory.Block(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Block (name As String, size As Integer) As Block" />
      <MemberSignature Language="F#" Value="static member Block : string * int -&gt; Azure.Storage.Blobs.Models.Block" Usage="Azure.Storage.Blobs.Models.BlobsModelFactory.Block (name, size)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Storage.Blobs.Models.Block</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="size">To be added.</param>
        <summary>
            Creates a new Block instance for mocking.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BlockInfo">
      <MemberSignature Language="C#" Value="public static Azure.Storage.Blobs.Models.BlockInfo BlockInfo (byte[] contentHash, byte[] xMSContentCrc64, string encryptionKeySha256);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Storage.Blobs.Models.BlockInfo BlockInfo(unsigned int8[] contentHash, unsigned int8[] xMSContentCrc64, string encryptionKeySha256) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlockInfo(System.Byte[],System.Byte[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BlockInfo (contentHash As Byte(), xMSContentCrc64 As Byte(), encryptionKeySha256 As String) As BlockInfo" />
      <MemberSignature Language="F#" Value="static member BlockInfo : byte[] * byte[] * string -&gt; Azure.Storage.Blobs.Models.BlockInfo" Usage="Azure.Storage.Blobs.Models.BlobsModelFactory.BlockInfo (contentHash, xMSContentCrc64, encryptionKeySha256)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Storage.Blobs.Models.BlockInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contentHash" Type="System.Byte[]" />
        <Parameter Name="xMSContentCrc64" Type="System.Byte[]" />
        <Parameter Name="encryptionKeySha256" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="contentHash">To be added.</param>
        <param name="xMSContentCrc64">To be added.</param>
        <param name="encryptionKeySha256">To be added.</param>
        <summary>
            Creates a new BlockInfo instance for mocking.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BlockList">
      <MemberSignature Language="C#" Value="public static Azure.Storage.Blobs.Models.BlockList BlockList (System.Collections.Generic.IEnumerable&lt;Azure.Storage.Blobs.Models.Block&gt; committedBlocks = null, System.Collections.Generic.IEnumerable&lt;Azure.Storage.Blobs.Models.Block&gt; uncommittedBlocks = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Storage.Blobs.Models.BlockList BlockList(class System.Collections.Generic.IEnumerable`1&lt;class Azure.Storage.Blobs.Models.Block&gt; committedBlocks, class System.Collections.Generic.IEnumerable`1&lt;class Azure.Storage.Blobs.Models.Block&gt; uncommittedBlocks) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Models.BlobsModelFactory.BlockList(System.Collections.Generic.IEnumerable{Azure.Storage.Blobs.Models.Block},System.Collections.Generic.IEnumerable{Azure.Storage.Blobs.Models.Block})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BlockList (Optional committedBlocks As IEnumerable(Of Block) = null, Optional uncommittedBlocks As IEnumerable(Of Block) = null) As BlockList" />
      <MemberSignature Language="F#" Value="static member BlockList : seq&lt;Azure.Storage.Blobs.Models.Block&gt; * seq&lt;Azure.Storage.Blobs.Models.Block&gt; -&gt; Azure.Storage.Blobs.Models.BlockList" Usage="Azure.Storage.Blobs.Models.BlobsModelFactory.BlockList (committedBlocks, uncommittedBlocks)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Storage.Blobs.Models.BlockList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="committedBlocks" Type="System.Collections.Generic.IEnumerable&lt;Azure.Storage.Blobs.Models.Block&gt;" />
        <Parameter Name="uncommittedBlocks" Type="System.Collections.Generic.IEnumerable&lt;Azure.Storage.Blobs.Models.Block&gt;" />
      </Parameters>
      <Docs>
        <param name="committedBlocks">To be added.</param>
        <param name="uncommittedBlocks">To be added.</param>
        <summary>
            Creates a new BlockList instance for mocking.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearRange">
      <MemberSignature Language="C#" Value="public static Azure.Storage.Blobs.Models.ClearRange ClearRange (long start, long end);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Storage.Blobs.Models.ClearRange ClearRange(int64 start, int64 end) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Models.BlobsModelFactory.ClearRange(System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ClearRange (start As Long, end As Long) As ClearRange" />
      <MemberSignature Language="F#" Value="static member ClearRange : int64 * int64 -&gt; Azure.Storage.Blobs.Models.ClearRange" Usage="Azure.Storage.Blobs.Models.BlobsModelFactory.ClearRange (start, end)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Storage.Blobs.Models.ClearRange</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Int64" />
        <Parameter Name="end" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="start">To be added.</param>
        <param name="end">To be added.</param>
        <summary>
            Creates a new ClearRange instance for mocking.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerAccessPolicy">
      <MemberSignature Language="C#" Value="public static Azure.Storage.Blobs.Models.ContainerAccessPolicy ContainerAccessPolicy (Azure.Storage.Blobs.Models.PublicAccessType blobPublicAccess, Azure.Core.Http.ETag eTag, DateTimeOffset lastModified, System.Collections.Generic.IEnumerable&lt;Azure.Storage.Blobs.Models.SignedIdentifier&gt; signedIdentifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Storage.Blobs.Models.ContainerAccessPolicy ContainerAccessPolicy(valuetype Azure.Storage.Blobs.Models.PublicAccessType blobPublicAccess, valuetype Azure.Core.Http.ETag eTag, valuetype System.DateTimeOffset lastModified, class System.Collections.Generic.IEnumerable`1&lt;class Azure.Storage.Blobs.Models.SignedIdentifier&gt; signedIdentifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Models.BlobsModelFactory.ContainerAccessPolicy(Azure.Storage.Blobs.Models.PublicAccessType,Azure.Core.Http.ETag,System.DateTimeOffset,System.Collections.Generic.IEnumerable{Azure.Storage.Blobs.Models.SignedIdentifier})" />
      <MemberSignature Language="F#" Value="static member ContainerAccessPolicy : Azure.Storage.Blobs.Models.PublicAccessType * Azure.Core.Http.ETag * DateTimeOffset * seq&lt;Azure.Storage.Blobs.Models.SignedIdentifier&gt; -&gt; Azure.Storage.Blobs.Models.ContainerAccessPolicy" Usage="Azure.Storage.Blobs.Models.BlobsModelFactory.ContainerAccessPolicy (blobPublicAccess, eTag, lastModified, signedIdentifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Storage.Blobs.Models.ContainerAccessPolicy</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="blobPublicAccess" Type="Azure.Storage.Blobs.Models.PublicAccessType" />
        <Parameter Name="eTag" Type="Azure.Core.Http.ETag" />
        <Parameter Name="lastModified" Type="System.DateTimeOffset" />
        <Parameter Name="signedIdentifiers" Type="System.Collections.Generic.IEnumerable&lt;Azure.Storage.Blobs.Models.SignedIdentifier&gt;" />
      </Parameters>
      <Docs>
        <param name="blobPublicAccess">To be added.</param>
        <param name="eTag">To be added.</param>
        <param name="lastModified">To be added.</param>
        <param name="signedIdentifiers">To be added.</param>
        <summary>
            Creates a new ContainerAccessPolicy instance for mocking.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerInfo">
      <MemberSignature Language="C#" Value="public static Azure.Storage.Blobs.Models.ContainerInfo ContainerInfo (Azure.Core.Http.ETag eTag, DateTimeOffset lastModified);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Storage.Blobs.Models.ContainerInfo ContainerInfo(valuetype Azure.Core.Http.ETag eTag, valuetype System.DateTimeOffset lastModified) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Models.BlobsModelFactory.ContainerInfo(Azure.Core.Http.ETag,System.DateTimeOffset)" />
      <MemberSignature Language="F#" Value="static member ContainerInfo : Azure.Core.Http.ETag * DateTimeOffset -&gt; Azure.Storage.Blobs.Models.ContainerInfo" Usage="Azure.Storage.Blobs.Models.BlobsModelFactory.ContainerInfo (eTag, lastModified)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Storage.Blobs.Models.ContainerInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eTag" Type="Azure.Core.Http.ETag" />
        <Parameter Name="lastModified" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="eTag">To be added.</param>
        <param name="lastModified">To be added.</param>
        <summary>
            Creates a new ContainerInfo instance for mocking.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerItem">
      <MemberSignature Language="C#" Value="public static Azure.Storage.Blobs.Models.ContainerItem ContainerItem (string name, Azure.Storage.Blobs.Models.ContainerProperties properties, System.Collections.Generic.IDictionary&lt;string,string&gt; metadata = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Storage.Blobs.Models.ContainerItem ContainerItem(string name, class Azure.Storage.Blobs.Models.ContainerProperties properties, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; metadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Models.BlobsModelFactory.ContainerItem(System.String,Azure.Storage.Blobs.Models.ContainerProperties,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainerItem (name As String, properties As ContainerProperties, Optional metadata As IDictionary(Of String, String) = null) As ContainerItem" />
      <MemberSignature Language="F#" Value="static member ContainerItem : string * Azure.Storage.Blobs.Models.ContainerProperties * System.Collections.Generic.IDictionary&lt;string, string&gt; -&gt; Azure.Storage.Blobs.Models.ContainerItem" Usage="Azure.Storage.Blobs.Models.BlobsModelFactory.ContainerItem (name, properties, metadata)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Storage.Blobs.Models.ContainerItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="properties" Type="Azure.Storage.Blobs.Models.ContainerProperties" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="properties">To be added.</param>
        <param name="metadata">To be added.</param>
        <summary>
            Creates a new ContainerItem instance for mocking.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerProperties">
      <MemberSignature Language="C#" Value="public static Azure.Storage.Blobs.Models.ContainerProperties ContainerProperties (DateTimeOffset lastModified, Azure.Core.Http.ETag eTag, Nullable&lt;Azure.Storage.Blobs.Models.LeaseStatus&gt; leaseStatus = null, Nullable&lt;Azure.Storage.Blobs.Models.LeaseState&gt; leaseState = null, Nullable&lt;Azure.Storage.Blobs.Models.LeaseDurationType&gt; leaseDuration = null, Nullable&lt;Azure.Storage.Blobs.Models.PublicAccessType&gt; publicAccess = null, Nullable&lt;bool&gt; hasImmutabilityPolicy = null, Nullable&lt;bool&gt; hasLegalHold = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Storage.Blobs.Models.ContainerProperties ContainerProperties(valuetype System.DateTimeOffset lastModified, valuetype Azure.Core.Http.ETag eTag, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Blobs.Models.LeaseStatus&gt; leaseStatus, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Blobs.Models.LeaseState&gt; leaseState, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Blobs.Models.LeaseDurationType&gt; leaseDuration, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Blobs.Models.PublicAccessType&gt; publicAccess, valuetype System.Nullable`1&lt;bool&gt; hasImmutabilityPolicy, valuetype System.Nullable`1&lt;bool&gt; hasLegalHold) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Models.BlobsModelFactory.ContainerProperties(System.DateTimeOffset,Azure.Core.Http.ETag,System.Nullable{Azure.Storage.Blobs.Models.LeaseStatus},System.Nullable{Azure.Storage.Blobs.Models.LeaseState},System.Nullable{Azure.Storage.Blobs.Models.LeaseDurationType},System.Nullable{Azure.Storage.Blobs.Models.PublicAccessType},System.Nullable{System.Boolean},System.Nullable{System.Boolean})" />
      <MemberSignature Language="F#" Value="static member ContainerProperties : DateTimeOffset * Azure.Core.Http.ETag * Nullable&lt;Azure.Storage.Blobs.Models.LeaseStatus&gt; * Nullable&lt;Azure.Storage.Blobs.Models.LeaseState&gt; * Nullable&lt;Azure.Storage.Blobs.Models.LeaseDurationType&gt; * Nullable&lt;Azure.Storage.Blobs.Models.PublicAccessType&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; -&gt; Azure.Storage.Blobs.Models.ContainerProperties" Usage="Azure.Storage.Blobs.Models.BlobsModelFactory.ContainerProperties (lastModified, eTag, leaseStatus, leaseState, leaseDuration, publicAccess, hasImmutabilityPolicy, hasLegalHold)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Storage.Blobs.Models.ContainerProperties</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lastModified" Type="System.DateTimeOffset" />
        <Parameter Name="eTag" Type="Azure.Core.Http.ETag" />
        <Parameter Name="leaseStatus" Type="System.Nullable&lt;Azure.Storage.Blobs.Models.LeaseStatus&gt;" />
        <Parameter Name="leaseState" Type="System.Nullable&lt;Azure.Storage.Blobs.Models.LeaseState&gt;" />
        <Parameter Name="leaseDuration" Type="System.Nullable&lt;Azure.Storage.Blobs.Models.LeaseDurationType&gt;" />
        <Parameter Name="publicAccess" Type="System.Nullable&lt;Azure.Storage.Blobs.Models.PublicAccessType&gt;" />
        <Parameter Name="hasImmutabilityPolicy" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="hasLegalHold" Type="System.Nullable&lt;System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="lastModified">To be added.</param>
        <param name="eTag">To be added.</param>
        <param name="leaseStatus">To be added.</param>
        <param name="leaseState">To be added.</param>
        <param name="leaseDuration">To be added.</param>
        <param name="publicAccess">To be added.</param>
        <param name="hasImmutabilityPolicy">To be added.</param>
        <param name="hasLegalHold">To be added.</param>
        <summary>
            Creates a new ContainerProperties instance for mocking.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyFromUriOperation">
      <MemberSignature Language="C#" Value="public static Azure.Operation&lt;long&gt; CopyFromUriOperation (string copyId, bool hasCompleted, Nullable&lt;long&gt; value = null, Azure.Response rawResponse = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Operation`1&lt;int64&gt; CopyFromUriOperation(string copyId, bool hasCompleted, valuetype System.Nullable`1&lt;int64&gt; value, class Azure.Response rawResponse) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Models.BlobsModelFactory.CopyFromUriOperation(System.String,System.Boolean,System.Nullable{System.Int64},Azure.Response)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CopyFromUriOperation (copyId As String, hasCompleted As Boolean, Optional value As Nullable(Of Long) = null, Optional rawResponse As Response = null) As Operation(Of Long)" />
      <MemberSignature Language="F#" Value="static member CopyFromUriOperation : string * bool * Nullable&lt;int64&gt; * Azure.Response -&gt; Azure.Operation&lt;int64&gt;" Usage="Azure.Storage.Blobs.Models.BlobsModelFactory.CopyFromUriOperation (copyId, hasCompleted, value, rawResponse)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Operation&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="copyId" Type="System.String" />
        <Parameter Name="hasCompleted" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="rawResponse" Type="Azure.Response" />
      </Parameters>
      <Docs>
        <param name="copyId">To be added.</param>
        <param name="hasCompleted">To be added.</param>
        <param name="value">To be added.</param>
        <param name="rawResponse">To be added.</param>
        <summary>
            Creates a new Operation{long} instance for mocking long running
            Copy From URI operations.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DirectoryCreateResult">
      <MemberSignature Language="C#" Value="public static Azure.Storage.Blobs.Models.DirectoryCreateResult DirectoryCreateResult (Azure.Core.Http.ETag eTag, DateTimeOffset lastModified, long contentLength);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Storage.Blobs.Models.DirectoryCreateResult DirectoryCreateResult(valuetype Azure.Core.Http.ETag eTag, valuetype System.DateTimeOffset lastModified, int64 contentLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Models.BlobsModelFactory.DirectoryCreateResult(Azure.Core.Http.ETag,System.DateTimeOffset,System.Int64)" />
      <MemberSignature Language="F#" Value="static member DirectoryCreateResult : Azure.Core.Http.ETag * DateTimeOffset * int64 -&gt; Azure.Storage.Blobs.Models.DirectoryCreateResult" Usage="Azure.Storage.Blobs.Models.BlobsModelFactory.DirectoryCreateResult (eTag, lastModified, contentLength)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Storage.Blobs.Models.DirectoryCreateResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eTag" Type="Azure.Core.Http.ETag" />
        <Parameter Name="lastModified" Type="System.DateTimeOffset" />
        <Parameter Name="contentLength" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="eTag">To be added.</param>
        <param name="lastModified">To be added.</param>
        <param name="contentLength">To be added.</param>
        <summary>
            Creates a new DirectoryCreateResult instance for mocking.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DirectoryDeleteResult">
      <MemberSignature Language="C#" Value="public static Azure.Storage.Blobs.Models.DirectoryDeleteResult DirectoryDeleteResult (string marker);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Storage.Blobs.Models.DirectoryDeleteResult DirectoryDeleteResult(string marker) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Models.BlobsModelFactory.DirectoryDeleteResult(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DirectoryDeleteResult (marker As String) As DirectoryDeleteResult" />
      <MemberSignature Language="F#" Value="static member DirectoryDeleteResult : string -&gt; Azure.Storage.Blobs.Models.DirectoryDeleteResult" Usage="Azure.Storage.Blobs.Models.BlobsModelFactory.DirectoryDeleteResult marker" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Storage.Blobs.Models.DirectoryDeleteResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="marker" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="marker">To be added.</param>
        <summary>
            Creates a new DirectoryDeleteResult instance for mocking.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DirectoryGetAccessControlResult">
      <MemberSignature Language="C#" Value="public static Azure.Storage.Blobs.Models.DirectoryGetAccessControlResult DirectoryGetAccessControlResult (Azure.Core.Http.ETag eTag, DateTimeOffset lastModified, string xMSOwner, string xMSGroup, string xMSPermissions, string xMSAcl);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Storage.Blobs.Models.DirectoryGetAccessControlResult DirectoryGetAccessControlResult(valuetype Azure.Core.Http.ETag eTag, valuetype System.DateTimeOffset lastModified, string xMSOwner, string xMSGroup, string xMSPermissions, string xMSAcl) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Models.BlobsModelFactory.DirectoryGetAccessControlResult(Azure.Core.Http.ETag,System.DateTimeOffset,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="F#" Value="static member DirectoryGetAccessControlResult : Azure.Core.Http.ETag * DateTimeOffset * string * string * string * string -&gt; Azure.Storage.Blobs.Models.DirectoryGetAccessControlResult" Usage="Azure.Storage.Blobs.Models.BlobsModelFactory.DirectoryGetAccessControlResult (eTag, lastModified, xMSOwner, xMSGroup, xMSPermissions, xMSAcl)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Storage.Blobs.Models.DirectoryGetAccessControlResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eTag" Type="Azure.Core.Http.ETag" />
        <Parameter Name="lastModified" Type="System.DateTimeOffset" />
        <Parameter Name="xMSOwner" Type="System.String" />
        <Parameter Name="xMSGroup" Type="System.String" />
        <Parameter Name="xMSPermissions" Type="System.String" />
        <Parameter Name="xMSAcl" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eTag">To be added.</param>
        <param name="lastModified">To be added.</param>
        <param name="xMSOwner">To be added.</param>
        <param name="xMSGroup">To be added.</param>
        <param name="xMSPermissions">To be added.</param>
        <param name="xMSAcl">To be added.</param>
        <summary>
            Creates a new DirectoryGetAccessControlResult instance for mocking.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DirectoryRenameResult">
      <MemberSignature Language="C#" Value="public static Azure.Storage.Blobs.Models.DirectoryRenameResult DirectoryRenameResult (string marker, Azure.Core.Http.ETag eTag, DateTimeOffset lastModified, long contentLength);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Storage.Blobs.Models.DirectoryRenameResult DirectoryRenameResult(string marker, valuetype Azure.Core.Http.ETag eTag, valuetype System.DateTimeOffset lastModified, int64 contentLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Models.BlobsModelFactory.DirectoryRenameResult(System.String,Azure.Core.Http.ETag,System.DateTimeOffset,System.Int64)" />
      <MemberSignature Language="F#" Value="static member DirectoryRenameResult : string * Azure.Core.Http.ETag * DateTimeOffset * int64 -&gt; Azure.Storage.Blobs.Models.DirectoryRenameResult" Usage="Azure.Storage.Blobs.Models.BlobsModelFactory.DirectoryRenameResult (marker, eTag, lastModified, contentLength)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Storage.Blobs.Models.DirectoryRenameResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="marker" Type="System.String" />
        <Parameter Name="eTag" Type="Azure.Core.Http.ETag" />
        <Parameter Name="lastModified" Type="System.DateTimeOffset" />
        <Parameter Name="contentLength" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="marker">To be added.</param>
        <param name="eTag">To be added.</param>
        <param name="lastModified">To be added.</param>
        <param name="contentLength">To be added.</param>
        <summary>
            Creates a new DirectoryRenameResult instance for mocking.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DirectorySetAccessControlResult">
      <MemberSignature Language="C#" Value="public static Azure.Storage.Blobs.Models.DirectorySetAccessControlResult DirectorySetAccessControlResult (Azure.Core.Http.ETag eTag, DateTimeOffset lastModified);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Storage.Blobs.Models.DirectorySetAccessControlResult DirectorySetAccessControlResult(valuetype Azure.Core.Http.ETag eTag, valuetype System.DateTimeOffset lastModified) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Models.BlobsModelFactory.DirectorySetAccessControlResult(Azure.Core.Http.ETag,System.DateTimeOffset)" />
      <MemberSignature Language="F#" Value="static member DirectorySetAccessControlResult : Azure.Core.Http.ETag * DateTimeOffset -&gt; Azure.Storage.Blobs.Models.DirectorySetAccessControlResult" Usage="Azure.Storage.Blobs.Models.BlobsModelFactory.DirectorySetAccessControlResult (eTag, lastModified)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Storage.Blobs.Models.DirectorySetAccessControlResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eTag" Type="Azure.Core.Http.ETag" />
        <Parameter Name="lastModified" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="eTag">To be added.</param>
        <param name="lastModified">To be added.</param>
        <summary>
            Creates a new DirectorySetAccessControlResult instance for mocking.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Error">
      <MemberSignature Language="C#" Value="public static Azure.Storage.Blobs.Models.Error Error (string code = null, string message = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Storage.Blobs.Models.Error Error(string code, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Models.BlobsModelFactory.Error(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Error (Optional code As String = null, Optional message As String = null) As Error" />
      <MemberSignature Language="F#" Value="static member Error : string * string -&gt; Azure.Storage.Blobs.Models.Error" Usage="Azure.Storage.Blobs.Models.BlobsModelFactory.Error (code, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Storage.Blobs.Models.Error</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="code" Type="System.String" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="code">To be added.</param>
        <param name="message">To be added.</param>
        <summary>
            Creates a new Error instance for mocking.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GeoReplication">
      <MemberSignature Language="C#" Value="public static Azure.Storage.Blobs.Models.GeoReplication GeoReplication (Azure.Storage.Blobs.Models.GeoReplicationStatus status, DateTimeOffset lastSyncTime);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Storage.Blobs.Models.GeoReplication GeoReplication(valuetype Azure.Storage.Blobs.Models.GeoReplicationStatus status, valuetype System.DateTimeOffset lastSyncTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Models.BlobsModelFactory.GeoReplication(Azure.Storage.Blobs.Models.GeoReplicationStatus,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GeoReplication (status As GeoReplicationStatus, lastSyncTime As DateTimeOffset) As GeoReplication" />
      <MemberSignature Language="F#" Value="static member GeoReplication : Azure.Storage.Blobs.Models.GeoReplicationStatus * DateTimeOffset -&gt; Azure.Storage.Blobs.Models.GeoReplication" Usage="Azure.Storage.Blobs.Models.BlobsModelFactory.GeoReplication (status, lastSyncTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Storage.Blobs.Models.GeoReplication</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="status" Type="Azure.Storage.Blobs.Models.GeoReplicationStatus" />
        <Parameter Name="lastSyncTime" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="status">To be added.</param>
        <param name="lastSyncTime">To be added.</param>
        <summary>
            Creates a new GeoReplication instance for mocking.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lease">
      <MemberSignature Language="C#" Value="public static Azure.Storage.Blobs.Models.Lease Lease (Azure.Core.Http.ETag eTag, DateTimeOffset lastModified, string leaseId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Storage.Blobs.Models.Lease Lease(valuetype Azure.Core.Http.ETag eTag, valuetype System.DateTimeOffset lastModified, string leaseId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Models.BlobsModelFactory.Lease(Azure.Core.Http.ETag,System.DateTimeOffset,System.String)" />
      <MemberSignature Language="F#" Value="static member Lease : Azure.Core.Http.ETag * DateTimeOffset * string -&gt; Azure.Storage.Blobs.Models.Lease" Usage="Azure.Storage.Blobs.Models.BlobsModelFactory.Lease (eTag, lastModified, leaseId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Storage.Blobs.Models.Lease</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eTag" Type="Azure.Core.Http.ETag" />
        <Parameter Name="lastModified" Type="System.DateTimeOffset" />
        <Parameter Name="leaseId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eTag">To be added.</param>
        <param name="lastModified">To be added.</param>
        <param name="leaseId">To be added.</param>
        <summary>
            Creates a new Lease instance for mocking.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PageBlobInfo">
      <MemberSignature Language="C#" Value="public static Azure.Storage.Blobs.Models.PageBlobInfo PageBlobInfo (Azure.Core.Http.ETag eTag, DateTimeOffset lastModified, long blobSequenceNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Storage.Blobs.Models.PageBlobInfo PageBlobInfo(valuetype Azure.Core.Http.ETag eTag, valuetype System.DateTimeOffset lastModified, int64 blobSequenceNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Models.BlobsModelFactory.PageBlobInfo(Azure.Core.Http.ETag,System.DateTimeOffset,System.Int64)" />
      <MemberSignature Language="F#" Value="static member PageBlobInfo : Azure.Core.Http.ETag * DateTimeOffset * int64 -&gt; Azure.Storage.Blobs.Models.PageBlobInfo" Usage="Azure.Storage.Blobs.Models.BlobsModelFactory.PageBlobInfo (eTag, lastModified, blobSequenceNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Storage.Blobs.Models.PageBlobInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eTag" Type="Azure.Core.Http.ETag" />
        <Parameter Name="lastModified" Type="System.DateTimeOffset" />
        <Parameter Name="blobSequenceNumber" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="eTag">To be added.</param>
        <param name="lastModified">To be added.</param>
        <param name="blobSequenceNumber">To be added.</param>
        <summary>
            Creates a new PageBlobInfo instance for mocking.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PageInfo">
      <MemberSignature Language="C#" Value="public static Azure.Storage.Blobs.Models.PageInfo PageInfo (Azure.Core.Http.ETag eTag, DateTimeOffset lastModified, byte[] contentHash, byte[] xMSContentCrc64, long blobSequenceNumber, string encryptionKeySha256);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Storage.Blobs.Models.PageInfo PageInfo(valuetype Azure.Core.Http.ETag eTag, valuetype System.DateTimeOffset lastModified, unsigned int8[] contentHash, unsigned int8[] xMSContentCrc64, int64 blobSequenceNumber, string encryptionKeySha256) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Models.BlobsModelFactory.PageInfo(Azure.Core.Http.ETag,System.DateTimeOffset,System.Byte[],System.Byte[],System.Int64,System.String)" />
      <MemberSignature Language="F#" Value="static member PageInfo : Azure.Core.Http.ETag * DateTimeOffset * byte[] * byte[] * int64 * string -&gt; Azure.Storage.Blobs.Models.PageInfo" Usage="Azure.Storage.Blobs.Models.BlobsModelFactory.PageInfo (eTag, lastModified, contentHash, xMSContentCrc64, blobSequenceNumber, encryptionKeySha256)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Storage.Blobs.Models.PageInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eTag" Type="Azure.Core.Http.ETag" />
        <Parameter Name="lastModified" Type="System.DateTimeOffset" />
        <Parameter Name="contentHash" Type="System.Byte[]" />
        <Parameter Name="xMSContentCrc64" Type="System.Byte[]" />
        <Parameter Name="blobSequenceNumber" Type="System.Int64" />
        <Parameter Name="encryptionKeySha256" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eTag">To be added.</param>
        <param name="lastModified">To be added.</param>
        <param name="contentHash">To be added.</param>
        <param name="xMSContentCrc64">To be added.</param>
        <param name="blobSequenceNumber">To be added.</param>
        <param name="encryptionKeySha256">To be added.</param>
        <summary>
            Creates a new PageInfo instance for mocking.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PageList">
      <MemberSignature Language="C#" Value="public static Azure.Storage.Blobs.Models.PageList PageList (System.Collections.Generic.IEnumerable&lt;Azure.Storage.Blobs.Models.PageRange&gt; pageRange = null, System.Collections.Generic.IEnumerable&lt;Azure.Storage.Blobs.Models.ClearRange&gt; clearRange = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Storage.Blobs.Models.PageList PageList(class System.Collections.Generic.IEnumerable`1&lt;class Azure.Storage.Blobs.Models.PageRange&gt; pageRange, class System.Collections.Generic.IEnumerable`1&lt;class Azure.Storage.Blobs.Models.ClearRange&gt; clearRange) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Models.BlobsModelFactory.PageList(System.Collections.Generic.IEnumerable{Azure.Storage.Blobs.Models.PageRange},System.Collections.Generic.IEnumerable{Azure.Storage.Blobs.Models.ClearRange})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PageList (Optional pageRange As IEnumerable(Of PageRange) = null, Optional clearRange As IEnumerable(Of ClearRange) = null) As PageList" />
      <MemberSignature Language="F#" Value="static member PageList : seq&lt;Azure.Storage.Blobs.Models.PageRange&gt; * seq&lt;Azure.Storage.Blobs.Models.ClearRange&gt; -&gt; Azure.Storage.Blobs.Models.PageList" Usage="Azure.Storage.Blobs.Models.BlobsModelFactory.PageList (pageRange, clearRange)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Storage.Blobs.Models.PageList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pageRange" Type="System.Collections.Generic.IEnumerable&lt;Azure.Storage.Blobs.Models.PageRange&gt;" />
        <Parameter Name="clearRange" Type="System.Collections.Generic.IEnumerable&lt;Azure.Storage.Blobs.Models.ClearRange&gt;" />
      </Parameters>
      <Docs>
        <param name="pageRange">To be added.</param>
        <param name="clearRange">To be added.</param>
        <summary>
            Creates a new PageList instance for mocking.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PageRange">
      <MemberSignature Language="C#" Value="public static Azure.Storage.Blobs.Models.PageRange PageRange (long start, long end);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Storage.Blobs.Models.PageRange PageRange(int64 start, int64 end) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Models.BlobsModelFactory.PageRange(System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PageRange (start As Long, end As Long) As PageRange" />
      <MemberSignature Language="F#" Value="static member PageRange : int64 * int64 -&gt; Azure.Storage.Blobs.Models.PageRange" Usage="Azure.Storage.Blobs.Models.BlobsModelFactory.PageRange (start, end)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Storage.Blobs.Models.PageRange</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Int64" />
        <Parameter Name="end" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="start">To be added.</param>
        <param name="end">To be added.</param>
        <summary>
            Creates a new PageRange instance for mocking.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PageRangesInfo">
      <MemberSignature Language="C#" Value="public static Azure.Storage.Blobs.Models.PageRangesInfo PageRangesInfo (DateTimeOffset lastModified, Azure.Core.Http.ETag eTag, long blobContentLength, Azure.Storage.Blobs.Models.PageList body);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Storage.Blobs.Models.PageRangesInfo PageRangesInfo(valuetype System.DateTimeOffset lastModified, valuetype Azure.Core.Http.ETag eTag, int64 blobContentLength, class Azure.Storage.Blobs.Models.PageList body) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Models.BlobsModelFactory.PageRangesInfo(System.DateTimeOffset,Azure.Core.Http.ETag,System.Int64,Azure.Storage.Blobs.Models.PageList)" />
      <MemberSignature Language="F#" Value="static member PageRangesInfo : DateTimeOffset * Azure.Core.Http.ETag * int64 * Azure.Storage.Blobs.Models.PageList -&gt; Azure.Storage.Blobs.Models.PageRangesInfo" Usage="Azure.Storage.Blobs.Models.BlobsModelFactory.PageRangesInfo (lastModified, eTag, blobContentLength, body)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Storage.Blobs.Models.PageRangesInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lastModified" Type="System.DateTimeOffset" />
        <Parameter Name="eTag" Type="Azure.Core.Http.ETag" />
        <Parameter Name="blobContentLength" Type="System.Int64" />
        <Parameter Name="body" Type="Azure.Storage.Blobs.Models.PageList" />
      </Parameters>
      <Docs>
        <param name="lastModified">To be added.</param>
        <param name="eTag">To be added.</param>
        <param name="blobContentLength">To be added.</param>
        <param name="body">To be added.</param>
        <summary>
            Creates a new PageRangesInfo instance for mocking.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceSubmitBatchResult">
      <MemberSignature Language="C#" Value="public static Azure.Storage.Blobs.Models.ServiceSubmitBatchResult ServiceSubmitBatchResult (string contentType, System.IO.Stream body);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Storage.Blobs.Models.ServiceSubmitBatchResult ServiceSubmitBatchResult(string contentType, class System.IO.Stream body) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Models.BlobsModelFactory.ServiceSubmitBatchResult(System.String,System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ServiceSubmitBatchResult (contentType As String, body As Stream) As ServiceSubmitBatchResult" />
      <MemberSignature Language="F#" Value="static member ServiceSubmitBatchResult : string * System.IO.Stream -&gt; Azure.Storage.Blobs.Models.ServiceSubmitBatchResult" Usage="Azure.Storage.Blobs.Models.BlobsModelFactory.ServiceSubmitBatchResult (contentType, body)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Storage.Blobs.Models.ServiceSubmitBatchResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contentType" Type="System.String" />
        <Parameter Name="body" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="contentType">To be added.</param>
        <param name="body">To be added.</param>
        <summary>
            Creates a new ServiceSubmitBatchResult instance for mocking.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserDelegationKey">
      <MemberSignature Language="C#" Value="public static Azure.Storage.Blobs.Models.UserDelegationKey UserDelegationKey (string signedOid, string signedTid, DateTimeOffset signedStart, DateTimeOffset signedExpiry, string signedService, string signedVersion, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Storage.Blobs.Models.UserDelegationKey UserDelegationKey(string signedOid, string signedTid, valuetype System.DateTimeOffset signedStart, valuetype System.DateTimeOffset signedExpiry, string signedService, string signedVersion, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Blobs.Models.BlobsModelFactory.UserDelegationKey(System.String,System.String,System.DateTimeOffset,System.DateTimeOffset,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UserDelegationKey (signedOid As String, signedTid As String, signedStart As DateTimeOffset, signedExpiry As DateTimeOffset, signedService As String, signedVersion As String, value As String) As UserDelegationKey" />
      <MemberSignature Language="F#" Value="static member UserDelegationKey : string * string * DateTimeOffset * DateTimeOffset * string * string * string -&gt; Azure.Storage.Blobs.Models.UserDelegationKey" Usage="Azure.Storage.Blobs.Models.BlobsModelFactory.UserDelegationKey (signedOid, signedTid, signedStart, signedExpiry, signedService, signedVersion, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Blobs</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Storage.Blobs.Models.UserDelegationKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signedOid" Type="System.String" />
        <Parameter Name="signedTid" Type="System.String" />
        <Parameter Name="signedStart" Type="System.DateTimeOffset" />
        <Parameter Name="signedExpiry" Type="System.DateTimeOffset" />
        <Parameter Name="signedService" Type="System.String" />
        <Parameter Name="signedVersion" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="signedOid">To be added.</param>
        <param name="signedTid">To be added.</param>
        <param name="signedStart">To be added.</param>
        <param name="signedExpiry">To be added.</param>
        <param name="signedService">To be added.</param>
        <param name="signedVersion">To be added.</param>
        <param name="value">To be added.</param>
        <summary>
            Creates a new UserDelegationKey instance for mocking.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

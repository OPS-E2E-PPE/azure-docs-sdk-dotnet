<Type Name="TwinsClient" FullName="Microsoft.Azure.Devices.TwinsClient">
  <TypeSignature Language="C#" Value="public class TwinsClient" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TwinsClient extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Devices.TwinsClient" />
  <TypeSignature Language="VB.NET" Value="Public Class TwinsClient" />
  <TypeSignature Language="F#" Value="type TwinsClient = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Devices</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Subclient of <see cref="T:Microsoft.Azure.Devices.IotHubServiceClient" /> that handles getting, updating, and replacing device and module twins.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TwinsClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Devices.TwinsClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Devices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Creates an instance of this class. Provided for unit testing purposes only.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.ClientTwin&gt; GetAsync (string deviceId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Devices.ClientTwin&gt; GetAsync(string deviceId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Devices.TwinsClient.GetAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAsync (deviceId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ClientTwin)" />
      <MemberSignature Language="F#" Value="abstract member GetAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.ClientTwin&gt;&#xA;override this.GetAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.ClientTwin&gt;" Usage="twinsClient.GetAsync (deviceId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Devices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.ClientTwin&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deviceId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="deviceId">The device Id.</param>
        <param name="cancellationToken">Task cancellation token.</param>
        <summary>
            Gets a device's twin from IoT hub.
            </summary>
        <returns>The device twin.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">When the provided <paramref name="deviceId" /> is null.</exception>
        <exception cref="T:System.ArgumentException">If the <paramref name="deviceId" /> is empty or white space.</exception>
        <exception cref="T:Microsoft.Azure.Devices.IotHubServiceException">
            If IoT hub responded to the request with a non-successful status code. For example, if the provided
            request was throttled, <see cref="T:Microsoft.Azure.Devices.IotHubServiceException" /> with <see cref="F:Microsoft.Azure.Devices.IotHubServiceErrorCode.ThrottlingException" /> is thrown.
            For a complete list of possible error cases, see <see cref="T:Microsoft.Azure.Devices.IotHubServiceErrorCode" />.
            </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
            If the HTTP request fails due to an underlying issue such as network connectivity, DNS failure, or server
            certificate validation.
            </exception>
        <exception cref="T:System.OperationCanceledException">If the provided <paramref name="cancellationToken" /> has requested cancellation.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.ClientTwin&gt; GetAsync (string deviceId, string moduleId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Devices.ClientTwin&gt; GetAsync(string deviceId, string moduleId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Devices.TwinsClient.GetAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAsync (deviceId As String, moduleId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ClientTwin)" />
      <MemberSignature Language="F#" Value="abstract member GetAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.ClientTwin&gt;&#xA;override this.GetAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.ClientTwin&gt;" Usage="twinsClient.GetAsync (deviceId, moduleId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Devices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.ClientTwin&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deviceId" Type="System.String" />
        <Parameter Name="moduleId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="deviceId">The device Id.</param>
        <param name="moduleId">The module Id.</param>
        <param name="cancellationToken">Task cancellation token.</param>
        <summary>
            Gets a module's twin from IoT hub.
            </summary>
        <returns>The module twin.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">When the provided <paramref name="deviceId" /> or <paramref name="moduleId" /> is null.</exception>
        <exception cref="T:System.ArgumentException">If the <paramref name="deviceId" /> or <paramref name="moduleId" /> is empty or white space.</exception>
        <exception cref="T:Microsoft.Azure.Devices.IotHubServiceException">
            If IoT hub responded to the request with a non-successful status code. For example, if the provided
            request was throttled, <see cref="T:Microsoft.Azure.Devices.IotHubServiceException" /> with <see cref="F:Microsoft.Azure.Devices.IotHubServiceErrorCode.ThrottlingException" /> is thrown.
            For a complete list of possible error cases, see <see cref="T:Microsoft.Azure.Devices.IotHubServiceErrorCode" />.
            </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
            If the HTTP request fails due to an underlying issue such as network connectivity, DNS failure, or server
            certificate validation.
            </exception>
        <exception cref="T:System.OperationCanceledException">If the provided <paramref name="cancellationToken" /> has requested cancellation.</exception>
      </Docs>
    </Member>
    <Member MemberName="ReplaceAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.ClientTwin&gt; ReplaceAsync (string deviceId, Microsoft.Azure.Devices.ClientTwin newTwin, bool onlyIfUnchanged = false, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Devices.ClientTwin&gt; ReplaceAsync(string deviceId, class Microsoft.Azure.Devices.ClientTwin newTwin, bool onlyIfUnchanged, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Devices.TwinsClient.ReplaceAsync(System.String,Microsoft.Azure.Devices.ClientTwin,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReplaceAsync (deviceId As String, newTwin As ClientTwin, Optional onlyIfUnchanged As Boolean = false, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ClientTwin)" />
      <MemberSignature Language="F#" Value="abstract member ReplaceAsync : string * Microsoft.Azure.Devices.ClientTwin * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.ClientTwin&gt;&#xA;override this.ReplaceAsync : string * Microsoft.Azure.Devices.ClientTwin * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.ClientTwin&gt;" Usage="twinsClient.ReplaceAsync (deviceId, newTwin, onlyIfUnchanged, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Devices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.ClientTwin&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deviceId" Type="System.String" />
        <Parameter Name="newTwin" Type="Microsoft.Azure.Devices.ClientTwin" />
        <Parameter Name="onlyIfUnchanged" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="deviceId">The device Id.</param>
        <param name="newTwin">New twin object to replace with.</param>
        <param name="onlyIfUnchanged">
            If false, this operation will be performed even if the provided device identity has
            an out of date ETag. If true, the operation will throw a <see cref="T:Microsoft.Azure.Devices.IotHubServiceException" /> with <see cref="F:Microsoft.Azure.Devices.IotHubServiceErrorCode.PreconditionFailed" />
            if the provided device identity has an out of date ETag. An up-to-date ETag can be
            retrieved using <see cref="M:Microsoft.Azure.Devices.TwinsClient.GetAsync(System.String,System.String,System.Threading.CancellationToken)" />.
            </param>
        <param name="cancellationToken">Task cancellation token.</param>
        <summary>
            Updates the mutable fields of a device's twin.
            </summary>
        <returns>updated twins.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">When the provided <paramref name="deviceId" /> or <paramref name="newTwin" /> is null.</exception>
        <exception cref="T:System.ArgumentException">When the provided <paramref name="deviceId" /> is empty or white space.</exception>
        <exception cref="T:Microsoft.Azure.Devices.IotHubServiceException">
            If IoT hub responded to the request with a non-successful status code. For example, if the provided
            request was throttled, <see cref="T:Microsoft.Azure.Devices.IotHubServiceException" /> with <see cref="F:Microsoft.Azure.Devices.IotHubServiceErrorCode.ThrottlingException" /> is thrown.
            For a complete list of possible error cases, see <see cref="T:Microsoft.Azure.Devices.IotHubServiceErrorCode" />.
            </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
            If the HTTP request fails due to an underlying issue such as network connectivity, DNS failure, or server
            certificate validation.
            </exception>
        <exception cref="T:System.OperationCanceledException">If the provided <paramref name="cancellationToken" /> has requested cancellation.</exception>
      </Docs>
    </Member>
    <Member MemberName="ReplaceAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.ClientTwin&gt; ReplaceAsync (string deviceId, string moduleId, Microsoft.Azure.Devices.ClientTwin newTwin, bool onlyIfUnchanged = false, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Devices.ClientTwin&gt; ReplaceAsync(string deviceId, string moduleId, class Microsoft.Azure.Devices.ClientTwin newTwin, bool onlyIfUnchanged, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Devices.TwinsClient.ReplaceAsync(System.String,System.String,Microsoft.Azure.Devices.ClientTwin,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReplaceAsync (deviceId As String, moduleId As String, newTwin As ClientTwin, Optional onlyIfUnchanged As Boolean = false, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ClientTwin)" />
      <MemberSignature Language="F#" Value="abstract member ReplaceAsync : string * string * Microsoft.Azure.Devices.ClientTwin * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.ClientTwin&gt;&#xA;override this.ReplaceAsync : string * string * Microsoft.Azure.Devices.ClientTwin * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.ClientTwin&gt;" Usage="twinsClient.ReplaceAsync (deviceId, moduleId, newTwin, onlyIfUnchanged, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Devices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.ClientTwin&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deviceId" Type="System.String" />
        <Parameter Name="moduleId" Type="System.String" />
        <Parameter Name="newTwin" Type="Microsoft.Azure.Devices.ClientTwin" />
        <Parameter Name="onlyIfUnchanged" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="deviceId">The device Id.</param>
        <param name="moduleId">The module Id.</param>
        <param name="newTwin">New Twin object to replace with.</param>
        <param name="onlyIfUnchanged">
            If false, this operation will be performed even if the provided device identity has
            an out of date ETag. If true, the operation will throw a <see cref="T:Microsoft.Azure.Devices.IotHubServiceException" /> with <see cref="F:Microsoft.Azure.Devices.IotHubServiceErrorCode.PreconditionFailed" />
            if the provided device/module identity has an out of date ETag. An up-to-date ETag can be
            retrieved using <see cref="M:Microsoft.Azure.Devices.TwinsClient.GetAsync(System.String,System.String,System.Threading.CancellationToken)" />.
            </param>
        <param name="cancellationToken">Task cancellation token.</param>
        <summary>
            Updates the mutable fields of a module's twin.
            </summary>
        <returns>Updated device twin.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">When the provided <paramref name="deviceId" />, <paramref name="moduleId" />,
            or <paramref name="newTwin" /> is null.</exception>
        <exception cref="T:System.ArgumentException">When the provided <paramref name="deviceId" /> or <paramref name="moduleId" /> is empty or white space.</exception>
        <exception cref="T:Microsoft.Azure.Devices.IotHubServiceException">
            If IoT hub responded to the request with a non-successful status code. For example, if the provided
            request was throttled, <see cref="T:Microsoft.Azure.Devices.IotHubServiceException" /> with <see cref="F:Microsoft.Azure.Devices.IotHubServiceErrorCode.ThrottlingException" /> is thrown.
            For a complete list of possible error cases, see <see cref="T:Microsoft.Azure.Devices.IotHubServiceErrorCode" />.
            </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
            If the HTTP request fails due to an underlying issue such as network connectivity, DNS failure, or server
            certificate validation.
            </exception>
        <exception cref="T:System.OperationCanceledException">If the provided <paramref name="cancellationToken" /> has requested cancellation.</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.BulkRegistryOperationResult&gt; UpdateAsync (System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Devices.ClientTwin&gt; twins, bool onlyIfUnchanged = false, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Devices.BulkRegistryOperationResult&gt; UpdateAsync(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Azure.Devices.ClientTwin&gt; twins, bool onlyIfUnchanged, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Devices.TwinsClient.UpdateAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Devices.ClientTwin},System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateAsync (twins As IEnumerable(Of ClientTwin), Optional onlyIfUnchanged As Boolean = false, Optional cancellationToken As CancellationToken = Nothing) As Task(Of BulkRegistryOperationResult)" />
      <MemberSignature Language="F#" Value="abstract member UpdateAsync : seq&lt;Microsoft.Azure.Devices.ClientTwin&gt; * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.BulkRegistryOperationResult&gt;&#xA;override this.UpdateAsync : seq&lt;Microsoft.Azure.Devices.ClientTwin&gt; * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.BulkRegistryOperationResult&gt;" Usage="twinsClient.UpdateAsync (twins, onlyIfUnchanged, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Devices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.BulkRegistryOperationResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="twins" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Devices.ClientTwin&gt;" />
        <Parameter Name="onlyIfUnchanged" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="twins">List of <see cref="T:Microsoft.Azure.Devices.ClientTwin" />s with updated fields.</param>
        <param name="onlyIfUnchanged">
            If false, this operation will be performed even if the provided device identity has
            an out of date ETag. If true, the operation will throw a <see cref="T:Microsoft.Azure.Devices.IotHubServiceException" /> with <see cref="F:Microsoft.Azure.Devices.IotHubServiceErrorCode.PreconditionFailed" />
            if the provided device identity has an out of date ETag. An up-to-date ETag can be
            retrieved using <see cref="M:Microsoft.Azure.Devices.TwinsClient.GetAsync(System.String,System.String,System.Threading.CancellationToken)" />.
            </param>
        <param name="cancellationToken">Task cancellation token.</param>
        <summary>
            Update the mutable fields for a list of module twins previously created within the system.
            </summary>
        <returns>updated module twin.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">When the provided <paramref name="twins" /> is null.</exception>
        <exception cref="T:System.ArgumentException">When the provided <paramref name="twins" /> enumeration is empty.</exception>
        <exception cref="T:System.InvalidOperationException">When a twin is missing an expected ETag.</exception>
        <exception cref="T:Microsoft.Azure.Devices.IotHubServiceException">
            If IoT hub responded to the request with a non-successful status code. For example, if the provided
            request was throttled, <see cref="T:Microsoft.Azure.Devices.IotHubServiceException" /> with <see cref="F:Microsoft.Azure.Devices.IotHubServiceErrorCode.ThrottlingException" /> is thrown.
            For a complete list of possible error cases, see <see cref="T:Microsoft.Azure.Devices.IotHubServiceErrorCode" />.
            </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
            If the HTTP request fails due to an underlying issue such as network connectivity, DNS failure, or server
            certificate validation.
            </exception>
        <exception cref="T:System.OperationCanceledException">If the provided <paramref name="cancellationToken" /> has requested cancellation.</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.ClientTwin&gt; UpdateAsync (string deviceId, Microsoft.Azure.Devices.ClientTwin twinPatch, bool onlyIfUnchanged = false, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Devices.ClientTwin&gt; UpdateAsync(string deviceId, class Microsoft.Azure.Devices.ClientTwin twinPatch, bool onlyIfUnchanged, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Devices.TwinsClient.UpdateAsync(System.String,Microsoft.Azure.Devices.ClientTwin,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateAsync (deviceId As String, twinPatch As ClientTwin, Optional onlyIfUnchanged As Boolean = false, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ClientTwin)" />
      <MemberSignature Language="F#" Value="abstract member UpdateAsync : string * Microsoft.Azure.Devices.ClientTwin * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.ClientTwin&gt;&#xA;override this.UpdateAsync : string * Microsoft.Azure.Devices.ClientTwin * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.ClientTwin&gt;" Usage="twinsClient.UpdateAsync (deviceId, twinPatch, onlyIfUnchanged, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Devices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.ClientTwin&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deviceId" Type="System.String" />
        <Parameter Name="twinPatch" Type="Microsoft.Azure.Devices.ClientTwin" />
        <Parameter Name="onlyIfUnchanged" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="deviceId">The device Id.</param>
        <param name="twinPatch">Twin with updated fields.</param>
        <param name="onlyIfUnchanged">
            If false, this operation will be performed even if the provided device identity has
            an out of date ETag. If true, the operation will throw a <see cref="T:Microsoft.Azure.Devices.IotHubServiceException" /> with <see cref="F:Microsoft.Azure.Devices.IotHubServiceErrorCode.PreconditionFailed" />
            if the provided device identity has an out of date ETag. An up-to-date ETag can be
            retrieved using <see cref="M:Microsoft.Azure.Devices.TwinsClient.GetAsync(System.String,System.String,System.Threading.CancellationToken)" />.
            </param>
        <param name="cancellationToken">Task cancellation token.</param>
        <summary>
            Updates the mutable fields of a module's twin.
            </summary>
        <returns>Updated device twin.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">When the provided <paramref name="deviceId" /> or <paramref name="twinPatch" /> is null.</exception>
        <exception cref="T:System.ArgumentException">If the <paramref name="deviceId" /> is empty or white space.</exception>
        <exception cref="T:Microsoft.Azure.Devices.IotHubServiceException">
            If IoT hub responded to the request with a non-successful status code. For example, if the provided
            request was throttled, <see cref="T:Microsoft.Azure.Devices.IotHubServiceException" /> with <see cref="F:Microsoft.Azure.Devices.IotHubServiceErrorCode.ThrottlingException" /> is thrown.
            For a complete list of possible error cases, see <see cref="T:Microsoft.Azure.Devices.IotHubServiceErrorCode" />.
            </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
            If the HTTP request fails due to an underlying issue such as network connectivity, DNS failure, or server
            certificate validation.
            </exception>
        <exception cref="T:System.OperationCanceledException">If the provided <paramref name="cancellationToken" /> has requested cancellation.</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.ClientTwin&gt; UpdateAsync (string deviceId, string moduleId, Microsoft.Azure.Devices.ClientTwin twinPatch, bool onlyIfUnchanged = false, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Devices.ClientTwin&gt; UpdateAsync(string deviceId, string moduleId, class Microsoft.Azure.Devices.ClientTwin twinPatch, bool onlyIfUnchanged, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Devices.TwinsClient.UpdateAsync(System.String,System.String,Microsoft.Azure.Devices.ClientTwin,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateAsync (deviceId As String, moduleId As String, twinPatch As ClientTwin, Optional onlyIfUnchanged As Boolean = false, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ClientTwin)" />
      <MemberSignature Language="F#" Value="abstract member UpdateAsync : string * string * Microsoft.Azure.Devices.ClientTwin * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.ClientTwin&gt;&#xA;override this.UpdateAsync : string * string * Microsoft.Azure.Devices.ClientTwin * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.ClientTwin&gt;" Usage="twinsClient.UpdateAsync (deviceId, moduleId, twinPatch, onlyIfUnchanged, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Devices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.ClientTwin&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deviceId" Type="System.String" />
        <Parameter Name="moduleId" Type="System.String" />
        <Parameter Name="twinPatch" Type="Microsoft.Azure.Devices.ClientTwin" />
        <Parameter Name="onlyIfUnchanged" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="deviceId">The device Id.</param>
        <param name="moduleId">The module Id.</param>
        <param name="twinPatch">Twin with updated fields.</param>
        <param name="onlyIfUnchanged">
            If false, this operation will be performed even if the provided device identity has
            an out of date ETag. If true, the operation will throw a <see cref="T:Microsoft.Azure.Devices.IotHubServiceException" /> with <see cref="F:Microsoft.Azure.Devices.IotHubServiceErrorCode.PreconditionFailed" />
            if the provided device/module identity has an out of date ETag. An up-to-date ETag can be
            retrieved using <see cref="M:Microsoft.Azure.Devices.TwinsClient.GetAsync(System.String,System.String,System.Threading.CancellationToken)" />.
            </param>
        <param name="cancellationToken">Task cancellation token.</param>
        <summary>
            Updates the mutable fields of a module's twin.
            </summary>
        <returns>Updated device twin.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">When the provided <paramref name="deviceId" />, <paramref name="moduleId" />,
            or <paramref name="twinPatch" /> is null.</exception>
        <exception cref="T:System.ArgumentException">If the <paramref name="deviceId" /> or <paramref name="moduleId" /> is empty or white space.</exception>
        <exception cref="T:Microsoft.Azure.Devices.IotHubServiceException">
            If IoT hub responded to the request with a non-successful status code. For example, if the provided
            request was throttled, <see cref="T:Microsoft.Azure.Devices.IotHubServiceException" /> with <see cref="F:Microsoft.Azure.Devices.IotHubServiceErrorCode.ThrottlingException" /> is thrown.
            For a complete list of possible error cases, see <see cref="T:Microsoft.Azure.Devices.IotHubServiceErrorCode" />.
            </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
            If the HTTP request fails due to an underlying issue such as network connectivity, DNS failure, or server
            certificate validation.
            </exception>
        <exception cref="T:System.OperationCanceledException">If the provided <paramref name="cancellationToken" /> has requested cancellation.</exception>
      </Docs>
    </Member>
  </Members>
</Type>

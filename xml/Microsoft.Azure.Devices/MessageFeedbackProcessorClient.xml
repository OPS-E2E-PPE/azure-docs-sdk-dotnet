<Type Name="MessageFeedbackProcessorClient" FullName="Microsoft.Azure.Devices.MessageFeedbackProcessorClient">
  <TypeSignature Language="C#" Value="public class MessageFeedbackProcessorClient : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MessageFeedbackProcessorClient extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Devices.MessageFeedbackProcessorClient" />
  <TypeSignature Language="VB.NET" Value="Public Class MessageFeedbackProcessorClient&#xA;Implements IDisposable" />
  <TypeSignature Language="F#" Value="type MessageFeedbackProcessorClient = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Devices</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Subclient of <see cref="T:Microsoft.Azure.Devices.IotHubServiceClient" /> for receiving cloud-to-device message feedback.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MessageFeedbackProcessorClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Devices.MessageFeedbackProcessorClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Devices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Creates an instance of this class. Provided for unit testing purposes only.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task CloseAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task CloseAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Devices.MessageFeedbackProcessorClient.CloseAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CloseAsync (Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="abstract member CloseAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.CloseAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="messageFeedbackProcessorClient.CloseAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Devices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">To be added.</param>
        <summary>
            Close the connection and stop receiving acknowledgments for messages sent.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            The instance can be re-opened after closing.
            </remarks>
        <exception cref="T:Microsoft.Azure.Devices.IotHubServiceException">If an error occurs when communicating with IoT hub service.</exception>
        <exception cref="T:System.OperationCanceledException">If the provided cancellation token has requested cancellation.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">If a socket error occurs.</exception>
        <exception cref="T:System.Net.WebSockets.WebSocketException">If an error occurs when performing an operation on a WebSocket connection.</exception>
        <exception cref="T:System.IO.IOException">If an I/O error occurs.</exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Devices.MessageFeedbackProcessorClient.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="messageFeedbackProcessorClient.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Devices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="ErrorProcessor">
      <MemberSignature Language="C#" Value="public Action&lt;Microsoft.Azure.Devices.ErrorContext&gt; ErrorProcessor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Action`1&lt;class Microsoft.Azure.Devices.ErrorContext&gt; ErrorProcessor" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Devices.MessageFeedbackProcessorClient.ErrorProcessor" />
      <MemberSignature Language="VB.NET" Value="Public Property ErrorProcessor As Action(Of ErrorContext)" />
      <MemberSignature Language="F#" Value="member this.ErrorProcessor : Action&lt;Microsoft.Azure.Devices.ErrorContext&gt; with get, set" Usage="Microsoft.Azure.Devices.MessageFeedbackProcessorClient.ErrorProcessor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Devices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Action&lt;Microsoft.Azure.Devices.ErrorContext&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             The callback to be executed when the connection is lost.
             </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <example>
             serviceClient.MessageFeedbackProcessor.ErrorProcessor = OnConnectionLost;
             serviceClient.MessageFeedbackProcessor.OpenAsync();
            
             //...
            
             public void OnConnectionLost(ErrorContext errorContext)
             {
                // Add reconnection logic as needed
                Console.WriteLine("Feedback message processor connection lost")
             }
             </example>
      </Docs>
    </Member>
    <Member MemberName="MessageFeedbackProcessor">
      <MemberSignature Language="C#" Value="public Func&lt;Microsoft.Azure.Devices.FeedbackBatch,Microsoft.Azure.Devices.AcknowledgementType&gt; MessageFeedbackProcessor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`2&lt;class Microsoft.Azure.Devices.FeedbackBatch, valuetype Microsoft.Azure.Devices.AcknowledgementType&gt; MessageFeedbackProcessor" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Devices.MessageFeedbackProcessorClient.MessageFeedbackProcessor" />
      <MemberSignature Language="VB.NET" Value="Public Property MessageFeedbackProcessor As Func(Of FeedbackBatch, AcknowledgementType)" />
      <MemberSignature Language="F#" Value="member this.MessageFeedbackProcessor : Func&lt;Microsoft.Azure.Devices.FeedbackBatch, Microsoft.Azure.Devices.AcknowledgementType&gt; with get, set" Usage="Microsoft.Azure.Devices.MessageFeedbackProcessorClient.MessageFeedbackProcessor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Devices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;Microsoft.Azure.Devices.FeedbackBatch,Microsoft.Azure.Devices.AcknowledgementType&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             The callback to be executed each time message feedback is received from the service.
             </summary>
        <value>To be added.</value>
        <remarks>
             Must not be null.
             </remarks>
        <example>
             serviceClient.MessageFeedbackProcessor.MessageFeedbackProcessor = OnFeedbackReceived;
             serviceClient.MessageFeedbackProcessor.OpenAsync();
            
             //...
            
             public AcknowledgementType OnFeedbackReceived(FeedbackBatch feedbackBatch)
             {
                foreach (FeedbackRecord record in feedback.Records)
                {
                    Console.WriteLine($"Received feedback from device {record.DeviceId}")
                }
            
                return AcknowledgementType.Complete;
             }
             </example>
      </Docs>
    </Member>
    <Member MemberName="OpenAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task OpenAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task OpenAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Devices.MessageFeedbackProcessorClient.OpenAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OpenAsync (Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="abstract member OpenAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.OpenAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="messageFeedbackProcessorClient.OpenAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Devices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">To be added.</param>
        <summary>
            Open the connection and start receiving acknowledgements for messages sent.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            Callback for message feedback must be set before opening the connection.
            </remarks>
        <exception cref="T:Microsoft.Azure.Devices.IotHubServiceException">If an error occurs when communicating with IoT hub service.</exception>
        <exception cref="T:System.OperationCanceledException">If the provided cancellation token has requested cancellation.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">If a socket error occurs.</exception>
        <exception cref="T:System.Net.WebSockets.WebSocketException">If an error occurs when performing an operation on a WebSocket connection.</exception>
        <exception cref="T:System.IO.IOException">If an I/O error occurs.</exception>
      </Docs>
    </Member>
  </Members>
</Type>

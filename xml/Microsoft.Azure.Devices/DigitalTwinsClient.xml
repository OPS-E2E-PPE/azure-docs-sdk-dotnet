<Type Name="DigitalTwinsClient" FullName="Microsoft.Azure.Devices.DigitalTwinsClient">
  <TypeSignature Language="C#" Value="public class DigitalTwinsClient" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DigitalTwinsClient extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Devices.DigitalTwinsClient" />
  <TypeSignature Language="VB.NET" Value="Public Class DigitalTwinsClient" />
  <TypeSignature Language="F#" Value="type DigitalTwinsClient = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Devices</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            This client contains methods to retrieve and update digital twin information, and invoke commands
            on a digital twin device.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DigitalTwinsClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Devices.DigitalTwinsClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Devices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Creates an instance of this class. Provided for unit testing purposes only.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAsync&lt;T&gt;">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.DigitalTwinGetResponse&lt;T&gt;&gt; GetAsync&lt;T&gt; (string digitalTwinId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Devices.DigitalTwinGetResponse`1&lt;!!T&gt;&gt; GetAsync&lt;T&gt;(string digitalTwinId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Devices.DigitalTwinsClient.GetAsync``1(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAsync(Of T) (digitalTwinId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of DigitalTwinGetResponse(Of T))" />
      <MemberSignature Language="F#" Value="abstract member GetAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.DigitalTwinGetResponse&lt;'T&gt;&gt;&#xA;override this.GetAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.DigitalTwinGetResponse&lt;'T&gt;&gt;" Usage="digitalTwinsClient.GetAsync (digitalTwinId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Devices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.DigitalTwinGetResponse&lt;T&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="digitalTwinId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="digitalTwinId">The Id of the digital twin.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Gets a strongly-typed digital twin.
            </summary>
        <returns>The deserialized application/json digital twin and the ETag for the digital twin.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">When the provided <paramref name="digitalTwinId" /> is null.</exception>
        <exception cref="T:System.ArgumentException">When the provided <paramref name="digitalTwinId" /> is empty or whitespace.</exception>
        <exception cref="T:Microsoft.Azure.Devices.IotHubServiceException">
            Thrown if IoT hub responded to the request with a non-successful status code. For example, if the provided
            request was throttled, <see cref="T:Microsoft.Azure.Devices.IotHubServiceException" /> with <see cref="F:Microsoft.Azure.Devices.IotHubServiceErrorCode.ThrottlingException" /> is thrown.
            For a complete list of possible error cases, see <see cref="T:Microsoft.Azure.Devices.IotHubServiceErrorCode" />.
            </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
            If the HTTP request fails due to an underlying issue such as network connectivity, DNS failure, or server
            certificate validation.
            </exception>
        <exception cref="T:System.OperationCanceledException">If the provided <paramref name="cancellationToken" /> has requested cancellation.</exception>
      </Docs>
    </Member>
    <Member MemberName="InvokeCommandAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.InvokeDigitalTwinCommandResponse&gt; InvokeCommandAsync (string digitalTwinId, string commandName, Microsoft.Azure.Devices.InvokeDigitalTwinCommandOptions requestOptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Devices.InvokeDigitalTwinCommandResponse&gt; InvokeCommandAsync(string digitalTwinId, string commandName, class Microsoft.Azure.Devices.InvokeDigitalTwinCommandOptions requestOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Devices.DigitalTwinsClient.InvokeCommandAsync(System.String,System.String,Microsoft.Azure.Devices.InvokeDigitalTwinCommandOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function InvokeCommandAsync (digitalTwinId As String, commandName As String, Optional requestOptions As InvokeDigitalTwinCommandOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of InvokeDigitalTwinCommandResponse)" />
      <MemberSignature Language="F#" Value="abstract member InvokeCommandAsync : string * string * Microsoft.Azure.Devices.InvokeDigitalTwinCommandOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.InvokeDigitalTwinCommandResponse&gt;&#xA;override this.InvokeCommandAsync : string * string * Microsoft.Azure.Devices.InvokeDigitalTwinCommandOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.InvokeDigitalTwinCommandResponse&gt;" Usage="digitalTwinsClient.InvokeCommandAsync (digitalTwinId, commandName, requestOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Devices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.InvokeDigitalTwinCommandResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="digitalTwinId" Type="System.String" />
        <Parameter Name="commandName" Type="System.String" />
        <Parameter Name="requestOptions" Type="Microsoft.Azure.Devices.InvokeDigitalTwinCommandOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="digitalTwinId">The Id of the digital twin.</param>
        <param name="commandName">The command to be invoked.</param>
        <param name="requestOptions">The optional settings for this request.</param>
        <param name="cancellationToken">The cancellationToken.</param>
        <summary>
            Invoke a command on a digital twin.
            </summary>
        <returns>The serialized application/json command invocation response, the command response status code, and the request id.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">When the provided <paramref name="digitalTwinId" /> or <paramref name="commandName" /> is null.</exception>
        <exception cref="T:System.ArgumentException">When the provided <paramref name="digitalTwinId" /> or <paramref name="commandName" /> is empty or whitespace.</exception>
        <exception cref="T:Microsoft.Azure.Devices.IotHubServiceException">
            Thrown if IoT hub responded to the request with a non-successful status code. For example, if the provided
            request was throttled, <see cref="T:Microsoft.Azure.Devices.IotHubServiceException" /> with <see cref="F:Microsoft.Azure.Devices.IotHubServiceErrorCode.ThrottlingException" /> is thrown.
            For a complete list of possible error cases, see <see cref="T:Microsoft.Azure.Devices.IotHubServiceErrorCode" />.
            </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
            If the HTTP request fails due to an underlying issue such as network connectivity, DNS failure, or server
            certificate validation.
            </exception>
        <exception cref="T:System.OperationCanceledException">If the provided <paramref name="cancellationToken" /> has requested cancellation.</exception>
      </Docs>
    </Member>
    <Member MemberName="InvokeComponentCommandAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.InvokeDigitalTwinCommandResponse&gt; InvokeComponentCommandAsync (string digitalTwinId, string componentName, string commandName, Microsoft.Azure.Devices.InvokeDigitalTwinCommandOptions requestOptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Devices.InvokeDigitalTwinCommandResponse&gt; InvokeComponentCommandAsync(string digitalTwinId, string componentName, string commandName, class Microsoft.Azure.Devices.InvokeDigitalTwinCommandOptions requestOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Devices.DigitalTwinsClient.InvokeComponentCommandAsync(System.String,System.String,System.String,Microsoft.Azure.Devices.InvokeDigitalTwinCommandOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function InvokeComponentCommandAsync (digitalTwinId As String, componentName As String, commandName As String, Optional requestOptions As InvokeDigitalTwinCommandOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of InvokeDigitalTwinCommandResponse)" />
      <MemberSignature Language="F#" Value="abstract member InvokeComponentCommandAsync : string * string * string * Microsoft.Azure.Devices.InvokeDigitalTwinCommandOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.InvokeDigitalTwinCommandResponse&gt;&#xA;override this.InvokeComponentCommandAsync : string * string * string * Microsoft.Azure.Devices.InvokeDigitalTwinCommandOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.InvokeDigitalTwinCommandResponse&gt;" Usage="digitalTwinsClient.InvokeComponentCommandAsync (digitalTwinId, componentName, commandName, requestOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Devices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.InvokeDigitalTwinCommandResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="digitalTwinId" Type="System.String" />
        <Parameter Name="componentName" Type="System.String" />
        <Parameter Name="commandName" Type="System.String" />
        <Parameter Name="requestOptions" Type="Microsoft.Azure.Devices.InvokeDigitalTwinCommandOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="digitalTwinId">The Id of the digital twin.</param>
        <param name="componentName">The component name under which the command is defined.</param>
        <param name="commandName">The command to be invoked.</param>
        <param name="requestOptions">The optional settings for this request.</param>
        <param name="cancellationToken">The cancellationToken.</param>
        <summary>
            Invoke a command on a component of a digital twin.
            </summary>
        <returns>The serialized application/json command invocation response, the command response status code, and the request id.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">When the provided <paramref name="digitalTwinId" /> or <paramref name="componentName" /> or <paramref name="commandName" /> is null.</exception>
        <exception cref="T:System.ArgumentException">When the provided <paramref name="digitalTwinId" /> or <paramref name="componentName" /> or <paramref name="commandName" /> is empty or whitespace.</exception>
        <exception cref="T:Microsoft.Azure.Devices.IotHubServiceException">
            Thrown if IoT hub responded to the request with a non-successful status code. For example, if the provided
            request was throttled, <see cref="T:Microsoft.Azure.Devices.IotHubServiceException" /> with <see cref="F:Microsoft.Azure.Devices.IotHubServiceErrorCode.ThrottlingException" /> is thrown.
            For a complete list of possible error cases, see <see cref="T:Microsoft.Azure.Devices.IotHubServiceErrorCode" />.
            </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
            If the HTTP request fails due to an underlying issue such as network connectivity, DNS failure, or server
            certificate validation.
            </exception>
        <exception cref="T:System.OperationCanceledException">If the provided <paramref name="cancellationToken" /> has requested cancellation.</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.DigitalTwinUpdateResponse&gt; UpdateAsync (string digitalTwinId, string jsonPatch, Microsoft.Azure.Devices.UpdateDigitalTwinOptions requestOptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Devices.DigitalTwinUpdateResponse&gt; UpdateAsync(string digitalTwinId, string jsonPatch, class Microsoft.Azure.Devices.UpdateDigitalTwinOptions requestOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Devices.DigitalTwinsClient.UpdateAsync(System.String,System.String,Microsoft.Azure.Devices.UpdateDigitalTwinOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateAsync (digitalTwinId As String, jsonPatch As String, Optional requestOptions As UpdateDigitalTwinOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of DigitalTwinUpdateResponse)" />
      <MemberSignature Language="F#" Value="abstract member UpdateAsync : string * string * Microsoft.Azure.Devices.UpdateDigitalTwinOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.DigitalTwinUpdateResponse&gt;&#xA;override this.UpdateAsync : string * string * Microsoft.Azure.Devices.UpdateDigitalTwinOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.DigitalTwinUpdateResponse&gt;" Usage="digitalTwinsClient.UpdateAsync (digitalTwinId, jsonPatch, requestOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Devices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.DigitalTwinUpdateResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="digitalTwinId" Type="System.String" />
        <Parameter Name="jsonPatch" Type="System.String" />
        <Parameter Name="requestOptions" Type="Microsoft.Azure.Devices.UpdateDigitalTwinOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="digitalTwinId">The Id of the digital twin.</param>
        <param name="jsonPatch">
            The application/json-patch+json operations to be performed on the specified digital twin.
            This patch can be constructed using <see cref="T:Azure.JsonPatchDocument" />. See the example code for more details.
            </param>
        <param name="requestOptions">The optional settings for this request.</param>
        <param name="cancellationToken">The cancellationToken.</param>
        <summary>
            Updates a digital twin.
            </summary>
        <returns>The new ETag for the digital twin and the URI location of the digital twin.</returns>
        <remarks>
            For further information on how to create the json-patch, see <see href="https://docs.microsoft.com/azure/iot-pnp/howto-manage-digital-twin" />.
            </remarks>
        <exception cref="T:System.ArgumentNullException">When the provided <paramref name="digitalTwinId" /> or <paramref name="jsonPatch" /> is null.</exception>
        <exception cref="T:System.ArgumentException">When the provided <paramref name="digitalTwinId" /> or <paramref name="jsonPatch" /> is empty or whitespace.</exception>
        <exception cref="T:Microsoft.Azure.Devices.IotHubServiceException">
            Thrown if IoT hub responded to the request with a non-successful status code. For example, if the provided
            request was throttled, <see cref="T:Microsoft.Azure.Devices.IotHubServiceException" /> with <see cref="F:Microsoft.Azure.Devices.IotHubServiceErrorCode.ThrottlingException" /> is thrown.
            For a complete list of possible error cases, see <see cref="T:Microsoft.Azure.Devices.IotHubServiceErrorCode" />.
            </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
            If the HTTP request fails due to an underlying issue such as network connectivity, DNS failure, or server
            certificate validation.
            </exception>
        <exception cref="T:System.OperationCanceledException">If the provided <paramref name="cancellationToken" /> has requested cancellation.</exception>
        <example>
            string propertyName = "targetTemperature";
            int propertyValue = 12;
            var propertyValues = new Dictionary&lt;string, object&gt; { { propertyName, propertyValue } };
            var patchDocument = new JsonPatchDocument();
            patchDocument.AppendAdd("/myComponentName", propertyValues);
            string jsonPatch = patchDocument.ToString();
            DigitalTwinUpdateResponse updateResponse = await serviceClient.DigitalTwins.UpdateAsync(deviceId, jsonPatch);
            </example>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="ModulesClient" FullName="Microsoft.Azure.Devices.ModulesClient">
  <TypeSignature Language="C#" Value="public class ModulesClient" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ModulesClient extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Devices.ModulesClient" />
  <TypeSignature Language="VB.NET" Value="Public Class ModulesClient" />
  <TypeSignature Language="F#" Value="type ModulesClient = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Devices</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Subclient of <see cref="T:Microsoft.Azure.Devices.IotHubServiceClient" /> that handles all module registry operations including
            getting/creating/setting/deleting module identities.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ModulesClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Devices.ModulesClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Devices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Creates an instance of this class. Provided for unit testing purposes only.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.Module&gt; CreateAsync (Microsoft.Azure.Devices.Module module, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Devices.Module&gt; CreateAsync(class Microsoft.Azure.Devices.Module module, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Devices.ModulesClient.CreateAsync(Microsoft.Azure.Devices.Module,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateAsync (module As Module, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Module)" />
      <MemberSignature Language="F#" Value="abstract member CreateAsync : Microsoft.Azure.Devices.Module * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.Module&gt;&#xA;override this.CreateAsync : Microsoft.Azure.Devices.Module * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.Module&gt;" Usage="modulesClient.CreateAsync (module, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Devices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.Module&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="module" Type="Microsoft.Azure.Devices.Module" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="module">The module identity to register.</param>
        <param name="cancellationToken">The token which allows the operation to be canceled.</param>
        <summary>
            Create a module identity in your IoT hub's registry.
            </summary>
        <returns>The registered module with the generated keys and ETags.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when the provided module is null.</exception>
        <exception cref="T:Microsoft.Azure.Devices.IotHubServiceException">
            Thrown if IoT hub responded to the request with a non-successful status code. For example, if the provided
            request was throttled, <see cref="T:Microsoft.Azure.Devices.IotHubServiceException" /> with <see cref="F:Microsoft.Azure.Devices.IotHubServiceErrorCode.ThrottlingException" /> is thrown.
            For a complete list of possible error cases, see <see cref="T:Microsoft.Azure.Devices.IotHubServiceErrorCode" />.
            </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
            If the HTTP request fails due to an underlying issue such as network connectivity, DNS failure, or server
            certificate validation.
            </exception>
        <exception cref="T:System.OperationCanceledException">If the provided cancellation token has requested cancellation.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task DeleteAsync (Microsoft.Azure.Devices.Module module, bool onlyIfUnchanged = false, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task DeleteAsync(class Microsoft.Azure.Devices.Module module, bool onlyIfUnchanged, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Devices.ModulesClient.DeleteAsync(Microsoft.Azure.Devices.Module,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteAsync (module As Module, Optional onlyIfUnchanged As Boolean = false, Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="abstract member DeleteAsync : Microsoft.Azure.Devices.Module * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.DeleteAsync : Microsoft.Azure.Devices.Module * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="modulesClient.DeleteAsync (module, onlyIfUnchanged, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Devices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="module" Type="Microsoft.Azure.Devices.Module" />
        <Parameter Name="onlyIfUnchanged" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="module">
            The module identity to delete from your IoT hub's registry. If the provided module's ETag
            is out of date, this operation will throw a <see cref="T:Microsoft.Azure.Devices.IotHubServiceException" /> with <see cref="F:Microsoft.Azure.Devices.IotHubServiceErrorCode.PreconditionFailed" />
            An up-to-date ETag can be retrieved using <see cref="M:Microsoft.Azure.Devices.ModulesClient.GetAsync(System.String,System.String,System.Threading.CancellationToken)" />.
            To force the operation to execute regardless of ETag, set the module identity's ETag to "*" or
            use <see cref="M:Microsoft.Azure.Devices.ModulesClient.DeleteAsync(System.String,System.String,System.Threading.CancellationToken)" />.
            </param>
        <param name="onlyIfUnchanged">
            If false, this delete operation will be performed even if the provided device identity has
            an out of date ETag. If true, the operation will throw a <see cref="T:Microsoft.Azure.Devices.IotHubServiceException" /> with <see cref="F:Microsoft.Azure.Devices.IotHubServiceErrorCode.PreconditionFailed" />
            if the provided module has an out of date ETag. An up-to-date ETag can be
            retrieved using <see cref="M:Microsoft.Azure.Devices.ModulesClient.GetAsync(System.String,System.String,System.Threading.CancellationToken)" />.
            </param>
        <param name="cancellationToken">The token which allows the operation to be canceled.</param>
        <summary>
            Delete the module identity from your IoT hub's registry.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when the provided module is null.</exception>
        <exception cref="T:Microsoft.Azure.Devices.IotHubServiceException">
            Thrown if IoT hub responded to the request with a non-successful status code. For example, if the provided
            request was throttled, <see cref="T:Microsoft.Azure.Devices.IotHubServiceException" /> with <see cref="F:Microsoft.Azure.Devices.IotHubServiceErrorCode.ThrottlingException" /> is thrown.
            For a complete list of possible error cases, see <see cref="T:Microsoft.Azure.Devices.IotHubServiceErrorCode" />.
            </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
            If the HTTP request fails due to an underlying issue such as network connectivity, DNS failure, or server
            certificate validation.
            </exception>
        <exception cref="T:System.OperationCanceledException">If the provided cancellation token has requested cancellation.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task DeleteAsync (string deviceId, string moduleId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task DeleteAsync(string deviceId, string moduleId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Devices.ModulesClient.DeleteAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteAsync (deviceId As String, moduleId As String, Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="abstract member DeleteAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.DeleteAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="modulesClient.DeleteAsync (deviceId, moduleId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Devices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deviceId" Type="System.String" />
        <Parameter Name="moduleId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="deviceId">The Id of the device identity that contains the module to be deleted.</param>
        <param name="moduleId">The Id of the module identity to be deleted.</param>
        <param name="cancellationToken">The token which allows the operation to be canceled.</param>
        <summary>
            Delete the module identity with the provided Id from the device with the provided Id from your IoT hub's registry.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when the provided device Id or module Id is null.</exception>
        <exception cref="T:System.ArgumentException">Thrown when the provided device Id or module Id is empty or whitespace.</exception>
        <exception cref="T:Microsoft.Azure.Devices.IotHubServiceException">
            Thrown if IoT hub responded to the request with a non-successful status code. For example, if the provided
            request was throttled, <see cref="T:Microsoft.Azure.Devices.IotHubServiceException" /> with <see cref="F:Microsoft.Azure.Devices.IotHubServiceErrorCode.ThrottlingException" /> is thrown.
            For a complete list of possible error cases, see <see cref="T:Microsoft.Azure.Devices.IotHubServiceErrorCode" />.
            </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
            If the HTTP request fails due to an underlying issue such as network connectivity, DNS failure, or server
            certificate validation.
            </exception>
        <exception cref="T:System.OperationCanceledException">If the provided cancellation token has requested cancellation.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.Module&gt; GetAsync (string deviceId, string moduleId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Devices.Module&gt; GetAsync(string deviceId, string moduleId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Devices.ModulesClient.GetAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAsync (deviceId As String, moduleId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Module)" />
      <MemberSignature Language="F#" Value="abstract member GetAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.Module&gt;&#xA;override this.GetAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.Module&gt;" Usage="modulesClient.GetAsync (deviceId, moduleId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Devices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.Module&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deviceId" Type="System.String" />
        <Parameter Name="moduleId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="moduleId">The unique identifier of the module identity to retrieve.</param>
        <param name="deviceId">The unique identifier of the device identity that the module is registered on.</param>
        <param name="cancellationToken">The token which allows the operation to be canceled.</param>
        <summary>
            Get a module identity by its Id and by the Id of the device it is registered on.
            </summary>
        <returns>The retrieved module identity.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when the provided device Id or module Id is null.</exception>
        <exception cref="T:System.ArgumentException">Thrown when the provided device Id or module Id is empty or whitespace.</exception>
        <exception cref="T:Microsoft.Azure.Devices.IotHubServiceException">
            Thrown if IoT hub responded to the request with a non-successful status code. For example, if the provided
            request was throttled, <see cref="T:Microsoft.Azure.Devices.IotHubServiceException" /> with <see cref="F:Microsoft.Azure.Devices.IotHubServiceErrorCode.ThrottlingException" /> is thrown.
            For a complete list of possible error cases, see <see cref="T:Microsoft.Azure.Devices.IotHubServiceErrorCode" />.
            </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
            If the HTTP request fails due to an underlying issue such as network connectivity, DNS failure, or server
            certificate validation.
            </exception>
        <exception cref="T:System.OperationCanceledException">If the provided cancellation token has requested cancellation.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.Module&gt; SetAsync (Microsoft.Azure.Devices.Module module, bool onlyIfUnchanged = false, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Devices.Module&gt; SetAsync(class Microsoft.Azure.Devices.Module module, bool onlyIfUnchanged, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Devices.ModulesClient.SetAsync(Microsoft.Azure.Devices.Module,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetAsync (module As Module, Optional onlyIfUnchanged As Boolean = false, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Module)" />
      <MemberSignature Language="F#" Value="abstract member SetAsync : Microsoft.Azure.Devices.Module * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.Module&gt;&#xA;override this.SetAsync : Microsoft.Azure.Devices.Module * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.Module&gt;" Usage="modulesClient.SetAsync (module, onlyIfUnchanged, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Devices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.Module&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="module" Type="Microsoft.Azure.Devices.Module" />
        <Parameter Name="onlyIfUnchanged" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="module">The module identity's new state.</param>
        <param name="onlyIfUnchanged">
            If false, this operation will be performed even if the provided device identity has
            an out of date ETag. If true, the operation will throw a <see cref="T:Microsoft.Azure.Devices.IotHubServiceException" /> with <see cref="F:Microsoft.Azure.Devices.IotHubServiceErrorCode.PreconditionFailed" />
            if the provided module has an out of date ETag. An up-to-date ETag can be
            retrieved using <see cref="M:Microsoft.Azure.Devices.ModulesClient.GetAsync(System.String,System.String,System.Threading.CancellationToken)" />.
            </param>
        <param name="cancellationToken">The token which allows the operation to be canceled.</param>
        <summary>
            Replace a module identity's state with the provided module identity's state.
            </summary>
        <returns>The newly updated module identity including its new ETag.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when the provided module is null.</exception>
        <exception cref="T:Microsoft.Azure.Devices.IotHubServiceException">
            Thrown if IoT hub responded to the request with a non-successful status code. For example, if the provided
            request was throttled, <see cref="T:Microsoft.Azure.Devices.IotHubServiceException" /> with <see cref="F:Microsoft.Azure.Devices.IotHubServiceErrorCode.ThrottlingException" /> is thrown.
            For a complete list of possible error cases, see <see cref="T:Microsoft.Azure.Devices.IotHubServiceErrorCode" />.
            </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
            If the HTTP request fails due to an underlying issue such as network connectivity, DNS failure, or server
            certificate validation.
            </exception>
        <exception cref="T:System.OperationCanceledException">If the provided cancellation token has requested cancellation.</exception>
      </Docs>
    </Member>
  </Members>
</Type>

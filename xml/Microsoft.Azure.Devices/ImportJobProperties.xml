<Type Name="ImportJobProperties" FullName="Microsoft.Azure.Devices.ImportJobProperties">
  <TypeSignature Language="C#" Value="public class ImportJobProperties : Microsoft.Azure.Devices.JobProperties" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ImportJobProperties extends Microsoft.Azure.Devices.JobProperties" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Devices.ImportJobProperties" />
  <TypeSignature Language="VB.NET" Value="Public Class ImportJobProperties&#xA;Inherits JobProperties" />
  <TypeSignature Language="F#" Value="type ImportJobProperties = class&#xA;    inherit JobProperties" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Devices</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Azure.Devices.JobProperties</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Contains properties of an import job.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImportJobProperties (Uri inputBlobContainerUri, Uri outputBlobContainerUri = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri inputBlobContainerUri, class System.Uri outputBlobContainerUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Devices.ImportJobProperties.#ctor(System.Uri,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (inputBlobContainerUri As Uri, Optional outputBlobContainerUri As Uri = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.Devices.ImportJobProperties : Uri * Uri -&gt; Microsoft.Azure.Devices.ImportJobProperties" Usage="new Microsoft.Azure.Devices.ImportJobProperties (inputBlobContainerUri, outputBlobContainerUri)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Devices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="inputBlobContainerUri" Type="System.Uri" />
        <Parameter Name="outputBlobContainerUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="inputBlobContainerUri">URI to a blob container that contains registry data to sync.</param>
        <param name="outputBlobContainerUri">URI to a blob container, used to output the status of the job and the results.
            If not specified, the input blob container will be used.</param>
        <summary>
            Creates an instance of this class for the import job.
            </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:Microsoft.Azure.Devices.DevicesClient.ImportAsync(Microsoft.Azure.Devices.ImportJobProperties,System.Threading.CancellationToken)" />
      </Docs>
    </Member>
    <Member MemberName="InputBlobContainerUri">
      <MemberSignature Language="C#" Value="public Uri InputBlobContainerUri { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri InputBlobContainerUri" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Devices.ImportJobProperties.InputBlobContainerUri" />
      <MemberSignature Language="VB.NET" Value="Public Property InputBlobContainerUri As Uri" />
      <MemberSignature Language="F#" Value="member this.InputBlobContainerUri : Uri with get, set" Usage="Microsoft.Azure.Devices.ImportJobProperties.InputBlobContainerUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Devices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore, PropertyName="inputBlobContainerUri")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore, PropertyName="inputBlobContainerUri")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            URI to a blob container that contains registry data to sync.
            </summary>
        <value>To be added.</value>
        <remarks>
            Including a SAS token is dependent on the <see cref="T:Microsoft.Azure.Devices.StorageAuthenticationType" /> property.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="InputBlobName">
      <MemberSignature Language="C#" Value="public string InputBlobName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InputBlobName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Devices.ImportJobProperties.InputBlobName" />
      <MemberSignature Language="VB.NET" Value="Public Property InputBlobName As String" />
      <MemberSignature Language="F#" Value="member this.InputBlobName : string with get, set" Usage="Microsoft.Azure.Devices.ImportJobProperties.InputBlobName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Devices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore, PropertyName="inputBlobName")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore, PropertyName="inputBlobName")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The blob name to be used when importing from the provided input blob container.
            </summary>
        <value>To be added.</value>
        <remarks>
            If not specified, the hub defaults to "devices.txt".
            The format should be newline-delimited json objects representing each device twin.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>

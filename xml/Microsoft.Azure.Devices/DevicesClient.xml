<Type Name="DevicesClient" FullName="Microsoft.Azure.Devices.DevicesClient">
  <TypeSignature Language="C#" Value="public class DevicesClient" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DevicesClient extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Devices.DevicesClient" />
  <TypeSignature Language="VB.NET" Value="Public Class DevicesClient" />
  <TypeSignature Language="F#" Value="type DevicesClient = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Devices</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Subclient of <see cref="T:Microsoft.Azure.Devices.IotHubServiceClient" /> that handles all device registry operations including
            getting/creating/setting/deleting device identities, getting modules on a device, and getting device
            registry statistics.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DevicesClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Devices.DevicesClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Devices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Creates an instance of this class. Provided for unit testing purposes only.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelJobAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task CancelJobAsync (string jobId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task CancelJobAsync(string jobId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Devices.DevicesClient.CancelJobAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CancelJobAsync (jobId As String, Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="abstract member CancelJobAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.CancelJobAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="devicesClient.CancelJobAsync (jobId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Devices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jobId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="jobId">Id of the job to cancel.</param>
        <param name="cancellationToken">The token which allows the operation to be canceled.</param>
        <summary>
            Cancels/deletes the job with the specified Id.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">When the provided job Id is null.</exception>
        <exception cref="T:System.ArgumentException">When the provided job Id is empty or whitespace.</exception>
        <exception cref="T:Microsoft.Azure.Devices.IotHubServiceException">
            If IoT hub responded to the request with a non-successful status code. For example, if the provided
            request was throttled, <see cref="T:Microsoft.Azure.Devices.IotHubServiceException" /> with <see cref="F:Microsoft.Azure.Devices.IotHubServiceErrorCode.ThrottlingException" /> is thrown.
            For a complete list of possible error cases, see <see cref="T:Microsoft.Azure.Devices.IotHubServiceErrorCode" />.
            </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
            If the HTTP request fails due to an underlying issue such as network connectivity, DNS failure, or server
            certificate validation.
            </exception>
        <exception cref="T:System.OperationCanceledException">If the provided cancellation token has requested cancellation.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.Device&gt; CreateAsync (Microsoft.Azure.Devices.Device device, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Devices.Device&gt; CreateAsync(class Microsoft.Azure.Devices.Device device, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Devices.DevicesClient.CreateAsync(Microsoft.Azure.Devices.Device,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateAsync (device As Device, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Device)" />
      <MemberSignature Language="F#" Value="abstract member CreateAsync : Microsoft.Azure.Devices.Device * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.Device&gt;&#xA;override this.CreateAsync : Microsoft.Azure.Devices.Device * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.Device&gt;" Usage="devicesClient.CreateAsync (device, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Devices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.Device&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="device" Type="Microsoft.Azure.Devices.Device" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="device">The device identity to register.</param>
        <param name="cancellationToken">The token which allows the operation to be canceled.</param>
        <summary>
            Create a device identity in your IoT hub's registry.
            </summary>
        <returns>The registered device with the generated keys and ETags.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">When the provided device is null.</exception>
        <exception cref="T:Microsoft.Azure.Devices.IotHubServiceException">
            If IoT hub responded to the request with a non-successful status code. For example, if the provided
            request was throttled, <see cref="T:Microsoft.Azure.Devices.IotHubServiceException" /> with <see cref="F:Microsoft.Azure.Devices.IotHubServiceErrorCode.ThrottlingException" /> is thrown.
            For a complete list of possible error cases, see <see cref="T:Microsoft.Azure.Devices.IotHubServiceErrorCode" />.
            </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
            If the HTTP request fails due to an underlying issue such as network connectivity, DNS failure, or server
            certificate validation.
            </exception>
        <exception cref="T:System.OperationCanceledException">If the provided cancellation token has requested cancellation.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.BulkRegistryOperationResult&gt; CreateAsync (System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Devices.Device&gt; devices, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Devices.BulkRegistryOperationResult&gt; CreateAsync(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Azure.Devices.Device&gt; devices, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Devices.DevicesClient.CreateAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Devices.Device},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateAsync (devices As IEnumerable(Of Device), Optional cancellationToken As CancellationToken = Nothing) As Task(Of BulkRegistryOperationResult)" />
      <MemberSignature Language="F#" Value="abstract member CreateAsync : seq&lt;Microsoft.Azure.Devices.Device&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.BulkRegistryOperationResult&gt;&#xA;override this.CreateAsync : seq&lt;Microsoft.Azure.Devices.Device&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.BulkRegistryOperationResult&gt;" Usage="devicesClient.CreateAsync (devices, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Devices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.BulkRegistryOperationResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="devices" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Devices.Device&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="devices">The device identities to create in your IoT hub's registry. May not exceed 100 devices.</param>
        <param name="cancellationToken">The token which allows the operation to be canceled.</param>
        <summary>
            Create up to 100 new device identities in your IoT hub's registry in bulk.
            </summary>
        <returns>The result of the bulk operation.</returns>
        <remarks>
            For larger scale operations, consider using <see cref="M:Microsoft.Azure.Devices.DevicesClient.ImportAsync(Microsoft.Azure.Devices.ImportJobProperties,System.Threading.CancellationToken)" />
            which allows you to import devices from an Azure Storage container.
            </remarks>
        <exception cref="T:System.ArgumentNullException">When the provided device collection is null.</exception>
        <exception cref="T:System.ArgumentException">When the provided device collection is empty.</exception>
        <exception cref="T:Microsoft.Azure.Devices.IotHubServiceException">
            If IoT hub responded to the request with a non-successful status code. For example, if the provided
            request was throttled, <see cref="T:Microsoft.Azure.Devices.IotHubServiceException" /> with <see cref="F:Microsoft.Azure.Devices.IotHubServiceErrorCode.ThrottlingException" /> is thrown.
            For a complete list of possible error cases, see <see cref="T:Microsoft.Azure.Devices.IotHubServiceErrorCode" />.
            </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
            If the HTTP request fails due to an underlying issue such as network connectivity, DNS failure, or server
            certificate validation.
            </exception>
        <exception cref="T:System.OperationCanceledException">If the provided cancellation token has requested cancellation.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateWithTwinAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.BulkRegistryOperationResult&gt; CreateWithTwinAsync (Microsoft.Azure.Devices.Device device, Microsoft.Azure.Devices.ClientTwin twin, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Devices.BulkRegistryOperationResult&gt; CreateWithTwinAsync(class Microsoft.Azure.Devices.Device device, class Microsoft.Azure.Devices.ClientTwin twin, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Devices.DevicesClient.CreateWithTwinAsync(Microsoft.Azure.Devices.Device,Microsoft.Azure.Devices.ClientTwin,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateWithTwinAsync (device As Device, twin As ClientTwin, Optional cancellationToken As CancellationToken = Nothing) As Task(Of BulkRegistryOperationResult)" />
      <MemberSignature Language="F#" Value="abstract member CreateWithTwinAsync : Microsoft.Azure.Devices.Device * Microsoft.Azure.Devices.ClientTwin * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.BulkRegistryOperationResult&gt;&#xA;override this.CreateWithTwinAsync : Microsoft.Azure.Devices.Device * Microsoft.Azure.Devices.ClientTwin * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.BulkRegistryOperationResult&gt;" Usage="devicesClient.CreateWithTwinAsync (device, twin, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Devices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.BulkRegistryOperationResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="device" Type="Microsoft.Azure.Devices.Device" />
        <Parameter Name="twin" Type="Microsoft.Azure.Devices.ClientTwin" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="device">The device identity to register.</param>
        <param name="twin">The initial twin state for the device.</param>
        <param name="cancellationToken">The token which allows the operation to be canceled.</param>
        <summary>
            Create a device identity in your IoT hub's registry with an initial twin state.
            </summary>
        <returns>The result of the bulk operation.</returns>
        <remarks>
            This API uses the same underlying service API as the bulk create/set/delete APIs defined in
            this client such as <see cref="M:Microsoft.Azure.Devices.DevicesClient.CreateAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Devices.Device},System.Threading.CancellationToken)" />.
            </remarks>
        <exception cref="T:System.ArgumentNullException">When the provided device or twin is null.</exception>
        <exception cref="T:Microsoft.Azure.Devices.IotHubServiceException">
            If IoT hub responded to the request with a non-successful status code. For example, if the provided
            request was throttled, <see cref="T:Microsoft.Azure.Devices.IotHubServiceException" /> with <see cref="F:Microsoft.Azure.Devices.IotHubServiceErrorCode.ThrottlingException" /> is thrown.
            For a complete list of possible error cases, see <see cref="T:Microsoft.Azure.Devices.IotHubServiceErrorCode" />.
            </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
            If the HTTP request fails due to an underlying issue such as network connectivity, DNS failure, or server
            certificate validation.
            </exception>
        <exception cref="T:System.OperationCanceledException">If the provided cancellation token has requested cancellation.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task DeleteAsync (string deviceId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task DeleteAsync(string deviceId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Devices.DevicesClient.DeleteAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteAsync (deviceId As String, Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="abstract member DeleteAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.DeleteAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="devicesClient.DeleteAsync (deviceId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Devices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deviceId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="deviceId">The Id of the device identity to be deleted.</param>
        <param name="cancellationToken">The token which allows the operation to be canceled.</param>
        <summary>
            Delete the device identity with the provided Id from your IoT hub's registry.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">When the provided device Id is null.</exception>
        <exception cref="T:System.ArgumentException">When the provided device Id is empty or whitespace.</exception>
        <exception cref="T:Microsoft.Azure.Devices.IotHubServiceException">
            If IoT hub responded to the request with a non-successful status code. For example, if the provided
            request was throttled, <see cref="T:Microsoft.Azure.Devices.IotHubServiceException" /> with <see cref="F:Microsoft.Azure.Devices.IotHubServiceErrorCode.ThrottlingException" /> is thrown.
            For a complete list of possible error cases, see <see cref="T:Microsoft.Azure.Devices.IotHubServiceErrorCode" />.
            </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
            If the HTTP request fails due to an underlying issue such as network connectivity, DNS failure, or server
            certificate validation.
            </exception>
        <exception cref="T:System.OperationCanceledException">If the provided cancellation token has requested cancellation.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task DeleteAsync (Microsoft.Azure.Devices.Device device, bool onlyIfUnchanged = false, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task DeleteAsync(class Microsoft.Azure.Devices.Device device, bool onlyIfUnchanged, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Devices.DevicesClient.DeleteAsync(Microsoft.Azure.Devices.Device,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteAsync (device As Device, Optional onlyIfUnchanged As Boolean = false, Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="abstract member DeleteAsync : Microsoft.Azure.Devices.Device * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.DeleteAsync : Microsoft.Azure.Devices.Device * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="devicesClient.DeleteAsync (device, onlyIfUnchanged, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Devices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="device" Type="Microsoft.Azure.Devices.Device" />
        <Parameter Name="onlyIfUnchanged" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="device">
            The device identity to delete from your IoT hub's registry. If the provided device's ETag
            is out of date, this operation will throw a <see cref="T:Microsoft.Azure.Devices.IotHubServiceException" /> with <see cref="F:Microsoft.Azure.Devices.IotHubServiceErrorCode.PreconditionFailed" />
            An up-to-date ETag can be retrieved using <see cref="M:Microsoft.Azure.Devices.DevicesClient.GetAsync(System.String,System.Threading.CancellationToken)" />.
            To force the operation to execute regardless of ETag, set the device identity's ETag to "*" or
            use <see cref="M:Microsoft.Azure.Devices.DevicesClient.DeleteAsync(System.String,System.Threading.CancellationToken)" />.
            </param>
        <param name="onlyIfUnchanged">
            If false, this delete operation will be performed even if the provided device identity has
            an out of date ETag. If true, the operation will throw a <see cref="T:Microsoft.Azure.Devices.IotHubServiceException" /> with <see cref="F:Microsoft.Azure.Devices.IotHubServiceErrorCode.PreconditionFailed" />
            if the provided device identity has an out of date ETag. An up-to-date ETag can be
            retrieved using <see cref="M:Microsoft.Azure.Devices.DevicesClient.GetAsync(System.String,System.Threading.CancellationToken)" />.
            </param>
        <param name="cancellationToken">The token which allows the operation to be canceled.</param>
        <summary>
            Delete the device identity with the provided Id from your IoT hub's registry.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">When the provided device is null.</exception>
        <exception cref="T:Microsoft.Azure.Devices.IotHubServiceException">
            If IoT hub responded to the request with a non-successful status code. For example, if the provided
            request was throttled, <see cref="T:Microsoft.Azure.Devices.IotHubServiceException" /> with <see cref="F:Microsoft.Azure.Devices.IotHubServiceErrorCode.ThrottlingException" /> is thrown.
            For a complete list of possible error cases, see <see cref="T:Microsoft.Azure.Devices.IotHubServiceErrorCode" />.
            </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
            If the HTTP request fails due to an underlying issue such as network connectivity, DNS failure, or server
            certificate validation.
            </exception>
        <exception cref="T:System.OperationCanceledException">If the provided cancellation token has requested cancellation.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.BulkRegistryOperationResult&gt; DeleteAsync (System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Devices.Device&gt; devices, bool onlyIfUnchanged = false, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Devices.BulkRegistryOperationResult&gt; DeleteAsync(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Azure.Devices.Device&gt; devices, bool onlyIfUnchanged, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Devices.DevicesClient.DeleteAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Devices.Device},System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteAsync (devices As IEnumerable(Of Device), Optional onlyIfUnchanged As Boolean = false, Optional cancellationToken As CancellationToken = Nothing) As Task(Of BulkRegistryOperationResult)" />
      <MemberSignature Language="F#" Value="abstract member DeleteAsync : seq&lt;Microsoft.Azure.Devices.Device&gt; * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.BulkRegistryOperationResult&gt;&#xA;override this.DeleteAsync : seq&lt;Microsoft.Azure.Devices.Device&gt; * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.BulkRegistryOperationResult&gt;" Usage="devicesClient.DeleteAsync (devices, onlyIfUnchanged, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Devices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.BulkRegistryOperationResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="devices" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Devices.Device&gt;" />
        <Parameter Name="onlyIfUnchanged" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="devices">The device identities to delete from your IoT hub's registry. May not exceed 100 devices.</param>
        <param name="onlyIfUnchanged">
            If false, this delete operation will be performed even if the provided device identity has
            an out of date ETag. If true, the operation will throw a <see cref="T:Microsoft.Azure.Devices.IotHubServiceException" /> with <see cref="F:Microsoft.Azure.Devices.IotHubServiceErrorCode.PreconditionFailed" />
            if the provided device identity has an out of date ETag. An up-to-date ETag can be
            retrieved using <see cref="M:Microsoft.Azure.Devices.DevicesClient.GetAsync(System.String,System.Threading.CancellationToken)" />.
            </param>
        <param name="cancellationToken">The token which allows the operation to be canceled.</param>
        <summary>
            Delete up to 100 device identities from your IoT hub's registry in bulk.
            </summary>
        <returns>The result of the bulk operation.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">When the provided device collection is null.</exception>
        <exception cref="T:System.ArgumentException">When the provided device collection is empty.</exception>
        <exception cref="T:Microsoft.Azure.Devices.IotHubServiceException">
            If IoT hub responded to the request with a non-successful status code. For example, if the provided
            request was throttled, <see cref="T:Microsoft.Azure.Devices.IotHubServiceException" /> with <see cref="F:Microsoft.Azure.Devices.IotHubServiceErrorCode.ThrottlingException" /> is thrown.
            For a complete list of possible error cases, see <see cref="T:Microsoft.Azure.Devices.IotHubServiceErrorCode" />.
            </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
            If the HTTP request fails due to an underlying issue such as network connectivity, DNS failure, or server
            certificate validation.
            </exception>
        <exception cref="T:System.OperationCanceledException">If the provided cancellation token has requested cancellation.</exception>
      </Docs>
    </Member>
    <Member MemberName="ExportAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.ExportJobProperties&gt; ExportAsync (Microsoft.Azure.Devices.ExportJobProperties jobParameters, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Devices.ExportJobProperties&gt; ExportAsync(class Microsoft.Azure.Devices.ExportJobProperties jobParameters, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Devices.DevicesClient.ExportAsync(Microsoft.Azure.Devices.ExportJobProperties,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ExportAsync (jobParameters As ExportJobProperties, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ExportJobProperties)" />
      <MemberSignature Language="F#" Value="abstract member ExportAsync : Microsoft.Azure.Devices.ExportJobProperties * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.ExportJobProperties&gt;&#xA;override this.ExportAsync : Microsoft.Azure.Devices.ExportJobProperties * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.ExportJobProperties&gt;" Usage="devicesClient.ExportAsync (jobParameters, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Devices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.ExportJobProperties&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jobParameters" Type="Microsoft.Azure.Devices.ExportJobProperties" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="jobParameters">Parameters for the job.</param>
        <param name="cancellationToken">The token which allows the operation to be canceled.</param>
        <summary>
            Creates a new bulk job to export device registrations to the container specified by the provided URI.
            </summary>
        <returns>JobProperties of the newly created job.</returns>
        <remarks>Conditionally includes configurations, if specified.</remarks>
        <exception cref="T:System.ArgumentNullException">When the provided job properties instance is null.</exception>
        <exception cref="T:Microsoft.Azure.Devices.IotHubServiceException">
            If IoT hub responded to the request with a non-successful status code. For example, if the provided
            request was throttled, <see cref="T:Microsoft.Azure.Devices.IotHubServiceException" /> with <see cref="F:Microsoft.Azure.Devices.IotHubServiceErrorCode.ThrottlingException" /> is thrown.
            For a complete list of possible error cases, see <see cref="T:Microsoft.Azure.Devices.IotHubServiceErrorCode" />.
            </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
            If the HTTP request fails due to an underlying issue such as network connectivity, DNS failure, or server
            certificate validation.
            </exception>
        <exception cref="T:System.OperationCanceledException">If the provided cancellation token has requested cancellation.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.Device&gt; GetAsync (string deviceId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Devices.Device&gt; GetAsync(string deviceId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Devices.DevicesClient.GetAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAsync (deviceId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Device)" />
      <MemberSignature Language="F#" Value="abstract member GetAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.Device&gt;&#xA;override this.GetAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.Device&gt;" Usage="devicesClient.GetAsync (deviceId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Devices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.Device&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deviceId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="deviceId">The unique identifier of the device identity to retrieve.</param>
        <param name="cancellationToken">The token which allows the operation to be canceled.</param>
        <summary>
            Get a device identity by its Id.
            </summary>
        <returns>The retrieved device identity.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">When the provided device Id is null.</exception>
        <exception cref="T:System.ArgumentException">When the provided device Id is empty or whitespace.</exception>
        <exception cref="T:Microsoft.Azure.Devices.IotHubServiceException">
            If IoT hub responded to the request with a non-successful status code. For example, if the provided
            request was throttled, <see cref="T:Microsoft.Azure.Devices.IotHubServiceException" /> with <see cref="F:Microsoft.Azure.Devices.IotHubServiceErrorCode.ThrottlingException" /> is thrown.
            For a complete list of possible error cases, see <see cref="T:Microsoft.Azure.Devices.IotHubServiceErrorCode" />.
            </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
            If the HTTP request fails due to an underlying issue such as network connectivity, DNS failure, or server
            certificate validation.
            </exception>
        <exception cref="T:System.OperationCanceledException">If the provided cancellation token has requested cancellation.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetJobAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.IotHubJobResponse&gt; GetJobAsync (string jobId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Devices.IotHubJobResponse&gt; GetJobAsync(string jobId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Devices.DevicesClient.GetJobAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetJobAsync (jobId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of IotHubJobResponse)" />
      <MemberSignature Language="F#" Value="abstract member GetJobAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.IotHubJobResponse&gt;&#xA;override this.GetJobAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.IotHubJobResponse&gt;" Usage="devicesClient.GetJobAsync (jobId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Devices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.IotHubJobResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jobId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="jobId">Id of the registry job to retrieve.</param>
        <param name="cancellationToken">The token which allows the operation to be canceled.</param>
        <summary>
            Gets the registry job with the specified Id.
            </summary>
        <returns>JobProperties of the job specified by the provided jobId.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">When the provided job Id is null.</exception>
        <exception cref="T:System.ArgumentException">When the provided job Id is empty or whitespace.</exception>
        <exception cref="T:Microsoft.Azure.Devices.IotHubServiceException">
            If IoT hub responded to the request with a non-successful status code. For example, if the provided
            request was throttled, <see cref="T:Microsoft.Azure.Devices.IotHubServiceException" /> with <see cref="F:Microsoft.Azure.Devices.IotHubServiceErrorCode.ThrottlingException" /> is thrown.
            For a complete list of possible error cases, see <see cref="T:Microsoft.Azure.Devices.IotHubServiceErrorCode" />.
            </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
            If the HTTP request fails due to an underlying issue such as network connectivity, DNS failure, or server
            certificate validation.
            </exception>
        <exception cref="T:System.OperationCanceledException">If the provided cancellation token has requested cancellation.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetJobsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Devices.IotHubJobResponse&gt;&gt; GetJobsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Azure.Devices.IotHubJobResponse&gt;&gt; GetJobsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Devices.DevicesClient.GetJobsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetJobsAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of IEnumerable(Of IotHubJobResponse))" />
      <MemberSignature Language="F#" Value="abstract member GetJobsAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;seq&lt;Microsoft.Azure.Devices.IotHubJobResponse&gt;&gt;&#xA;override this.GetJobsAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;seq&lt;Microsoft.Azure.Devices.IotHubJobResponse&gt;&gt;" Usage="devicesClient.GetJobsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Devices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Devices.IotHubJobResponse&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">The token which allows the operation to be canceled.</param>
        <summary>
            List all registry jobs for the IoT hub.
            </summary>
        <returns>IEnumerable of JobProperties of all jobs for this IoT hub.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Azure.Devices.IotHubServiceException">
            If IoT hub responded to the request with a non-successful status code. For example, if the provided
            request was throttled, <see cref="T:Microsoft.Azure.Devices.IotHubServiceException" /> with <see cref="F:Microsoft.Azure.Devices.IotHubServiceErrorCode.ThrottlingException" /> is thrown.
            For a complete list of possible error cases, see <see cref="T:Microsoft.Azure.Devices.IotHubServiceErrorCode" />.
            </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
            If the HTTP request fails due to an underlying issue such as network connectivity, DNS failure, or server
            certificate validation.
            </exception>
        <exception cref="T:System.OperationCanceledException">If the provided cancellation token has requested cancellation.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetModulesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Devices.Module&gt;&gt; GetModulesAsync (string deviceId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Azure.Devices.Module&gt;&gt; GetModulesAsync(string deviceId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Devices.DevicesClient.GetModulesAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetModulesAsync (deviceId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of IEnumerable(Of Module))" />
      <MemberSignature Language="F#" Value="abstract member GetModulesAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;seq&lt;Microsoft.Azure.Devices.Module&gt;&gt;&#xA;override this.GetModulesAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;seq&lt;Microsoft.Azure.Devices.Module&gt;&gt;" Usage="devicesClient.GetModulesAsync (deviceId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Devices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Devices.Module&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deviceId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="deviceId">The Id of the device to get the modules of.</param>
        <param name="cancellationToken">The token which allows the operation to be canceled.</param>
        <summary>
            Get all the modules that are registered on a particular device.
            </summary>
        <returns>The modules that are registered on the specified device.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">When the provided device Id is null.</exception>
        <exception cref="T:System.ArgumentException">When the provided device Id is empty or whitespace.</exception>
        <exception cref="T:Microsoft.Azure.Devices.IotHubServiceException">
            If IoT hub responded to the request with a non-successful status code. For example, if the provided
            request was throttled, <see cref="T:Microsoft.Azure.Devices.IotHubServiceException" /> with <see cref="F:Microsoft.Azure.Devices.IotHubServiceErrorCode.ThrottlingException" /> is thrown.
            For a complete list of possible error cases, see <see cref="T:Microsoft.Azure.Devices.IotHubServiceErrorCode" />.
            </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
            If the HTTP request fails due to an underlying issue such as network connectivity, DNS failure, or server
            certificate validation.
            </exception>
        <exception cref="T:System.OperationCanceledException">If the provided cancellation token has requested cancellation.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetRegistryStatisticsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.RegistryStatistics&gt; GetRegistryStatisticsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Devices.RegistryStatistics&gt; GetRegistryStatisticsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Devices.DevicesClient.GetRegistryStatisticsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRegistryStatisticsAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of RegistryStatistics)" />
      <MemberSignature Language="F#" Value="abstract member GetRegistryStatisticsAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.RegistryStatistics&gt;&#xA;override this.GetRegistryStatisticsAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.RegistryStatistics&gt;" Usage="devicesClient.GetRegistryStatisticsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Devices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.RegistryStatistics&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">The token which allows the operation to be canceled.</param>
        <summary>
            Gets the registry statistics for your IoT hub.
            </summary>
        <returns>The registry statistics for you Iot hub.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Azure.Devices.IotHubServiceException">
            If IoT hub responded to the request with a non-successful status code. For example, if the provided
            request was throttled, <see cref="T:Microsoft.Azure.Devices.IotHubServiceException" /> with <see cref="F:Microsoft.Azure.Devices.IotHubServiceErrorCode.ThrottlingException" /> is thrown.
            For a complete list of possible error cases, see <see cref="T:Microsoft.Azure.Devices.IotHubServiceErrorCode" />.
            </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
            If the HTTP request fails due to an underlying issue such as network connectivity, DNS failure, or server
            certificate validation.
            </exception>
        <exception cref="T:System.OperationCanceledException">If the provided cancellation token has requested cancellation.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetServiceStatisticsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.ServiceStatistics&gt; GetServiceStatisticsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Devices.ServiceStatistics&gt; GetServiceStatisticsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Devices.DevicesClient.GetServiceStatisticsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetServiceStatisticsAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of ServiceStatistics)" />
      <MemberSignature Language="F#" Value="abstract member GetServiceStatisticsAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.ServiceStatistics&gt;&#xA;override this.GetServiceStatisticsAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.ServiceStatistics&gt;" Usage="devicesClient.GetServiceStatisticsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Devices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.ServiceStatistics&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">A cancellation token to cancel the operation.</param>
        <summary>
            Gets service statistics for the IoT hub. This call is made over HTTP.
            </summary>
        <returns>The service statistics that can be retrieved from IoT hub, eg. the number of devices connected to the hub.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Azure.Devices.IotHubServiceException">
            If IoT hub responded to the request with a non-successful status code. For example, if the provided
            request was throttled, <see cref="T:Microsoft.Azure.Devices.IotHubServiceException" /> with <see cref="F:Microsoft.Azure.Devices.IotHubServiceErrorCode.ThrottlingException" /> is thrown.
            For a complete list of possible error cases, see <see cref="T:Microsoft.Azure.Devices.IotHubServiceErrorCode" />.
            </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
            If the HTTP request fails due to an underlying issue such as network connectivity, DNS failure, or server
            certificate validation.
            </exception>
        <exception cref="T:System.OperationCanceledException">If the provided cancellation token has requested cancellation.</exception>
      </Docs>
    </Member>
    <Member MemberName="ImportAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.ImportJobProperties&gt; ImportAsync (Microsoft.Azure.Devices.ImportJobProperties jobParameters, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Devices.ImportJobProperties&gt; ImportAsync(class Microsoft.Azure.Devices.ImportJobProperties jobParameters, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Devices.DevicesClient.ImportAsync(Microsoft.Azure.Devices.ImportJobProperties,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ImportAsync (jobParameters As ImportJobProperties, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ImportJobProperties)" />
      <MemberSignature Language="F#" Value="abstract member ImportAsync : Microsoft.Azure.Devices.ImportJobProperties * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.ImportJobProperties&gt;&#xA;override this.ImportAsync : Microsoft.Azure.Devices.ImportJobProperties * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.ImportJobProperties&gt;" Usage="devicesClient.ImportAsync (jobParameters, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Devices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.ImportJobProperties&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jobParameters" Type="Microsoft.Azure.Devices.ImportJobProperties" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="jobParameters">Parameters for the job.</param>
        <param name="cancellationToken">The token which allows the operation to be canceled.</param>
        <summary>
            Creates a new bulk job to import device registrations into the IoT hub.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">When the provided connection string or container name is null.</exception>
        <exception cref="T:System.ArgumentException">When the provided connection string or container name is empty or whitespace.</exception>
        <exception cref="T:Microsoft.Azure.Devices.IotHubServiceException">
            If IoT hub responded to the request with a non-successful status code. For example, if the provided
            request was throttled, <see cref="T:Microsoft.Azure.Devices.IotHubServiceException" /> with <see cref="F:Microsoft.Azure.Devices.IotHubServiceErrorCode.ThrottlingException" /> is thrown.
            For a complete list of possible error cases, see <see cref="T:Microsoft.Azure.Devices.IotHubServiceErrorCode" />.
            </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
            If the HTTP request fails due to an underlying issue such as network connectivity, DNS failure, or server
            certificate validation.
            </exception>
        <exception cref="T:System.OperationCanceledException">If the provided cancellation token has requested cancellation.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.Device&gt; SetAsync (Microsoft.Azure.Devices.Device device, bool onlyIfUnchanged = false, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Devices.Device&gt; SetAsync(class Microsoft.Azure.Devices.Device device, bool onlyIfUnchanged, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Devices.DevicesClient.SetAsync(Microsoft.Azure.Devices.Device,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetAsync (device As Device, Optional onlyIfUnchanged As Boolean = false, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Device)" />
      <MemberSignature Language="F#" Value="abstract member SetAsync : Microsoft.Azure.Devices.Device * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.Device&gt;&#xA;override this.SetAsync : Microsoft.Azure.Devices.Device * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.Device&gt;" Usage="devicesClient.SetAsync (device, onlyIfUnchanged, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Devices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.Device&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="device" Type="Microsoft.Azure.Devices.Device" />
        <Parameter Name="onlyIfUnchanged" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="device">The device identity's new state.</param>
        <param name="onlyIfUnchanged">
            If false, this update operation will be performed even if the provided device identity has
            an out of date ETag. If true, the operation will throw a <see cref="T:Microsoft.Azure.Devices.IotHubServiceException" /> with <see cref="F:Microsoft.Azure.Devices.IotHubServiceErrorCode.PreconditionFailed" />
            if the provided device identity has an out of date ETag. An up-to-date ETag can be
            retrieved using <see cref="M:Microsoft.Azure.Devices.DevicesClient.GetAsync(System.String,System.Threading.CancellationToken)" />.
            </param>
        <param name="cancellationToken">The token which allows the operation to be canceled.</param>
        <summary>
            Replace a device identity's state with the provided device identity's state.
            </summary>
        <returns>The newly updated device identity including its new ETag.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">When the provided device is null.</exception>
        <exception cref="T:Microsoft.Azure.Devices.IotHubServiceException">
            If IoT hub responded to the request with a non-successful status code. For example, if the provided
            request was throttled, <see cref="T:Microsoft.Azure.Devices.IotHubServiceException" /> with <see cref="F:Microsoft.Azure.Devices.IotHubServiceErrorCode.ThrottlingException" /> is thrown.
            For a complete list of possible error cases, see <see cref="T:Microsoft.Azure.Devices.IotHubServiceErrorCode" />.
            </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
            If the HTTP request fails due to an underlying issue such as network connectivity, DNS failure, or server
            certificate validation.
            </exception>
        <exception cref="T:System.OperationCanceledException">If the provided cancellation token has requested cancellation.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.BulkRegistryOperationResult&gt; SetAsync (System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Devices.Device&gt; devices, bool onlyIfUnchanged = false, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Devices.BulkRegistryOperationResult&gt; SetAsync(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Azure.Devices.Device&gt; devices, bool onlyIfUnchanged, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Devices.DevicesClient.SetAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Devices.Device},System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetAsync (devices As IEnumerable(Of Device), Optional onlyIfUnchanged As Boolean = false, Optional cancellationToken As CancellationToken = Nothing) As Task(Of BulkRegistryOperationResult)" />
      <MemberSignature Language="F#" Value="abstract member SetAsync : seq&lt;Microsoft.Azure.Devices.Device&gt; * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.BulkRegistryOperationResult&gt;&#xA;override this.SetAsync : seq&lt;Microsoft.Azure.Devices.Device&gt; * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.BulkRegistryOperationResult&gt;" Usage="devicesClient.SetAsync (devices, onlyIfUnchanged, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Devices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.BulkRegistryOperationResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="devices" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Devices.Device&gt;" />
        <Parameter Name="onlyIfUnchanged" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="devices">The device identities to update to your IoT hub's registry. May not exceed 100 devices.</param>
        <param name="onlyIfUnchanged">
            If false, this update operation will be performed even if the provided device identity has
            an out of date ETag. If true, the operation will throw a <see cref="T:Microsoft.Azure.Devices.IotHubServiceException" /> with <see cref="F:Microsoft.Azure.Devices.IotHubServiceErrorCode.PreconditionFailed" />
            if the provided device identity has an out of date ETag. An up-to-date ETag can be
            retrieved using <see cref="M:Microsoft.Azure.Devices.DevicesClient.GetAsync(System.String,System.Threading.CancellationToken)" />.
            </param>
        <param name="cancellationToken">The token which allows the operation to be canceled.</param>
        <summary>
            Update up to 100 device identities in your IoT hub's registry in bulk.
            </summary>
        <returns>The result of the bulk operation.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">When the provided device collection is null.</exception>
        <exception cref="T:System.ArgumentException">When the provided device collection is empty.</exception>
        <exception cref="T:Microsoft.Azure.Devices.IotHubServiceException">
            If IoT hub responded to the request with a non-successful status code. For example, if the provided
            request was throttled, <see cref="T:Microsoft.Azure.Devices.IotHubServiceException" /> with <see cref="F:Microsoft.Azure.Devices.IotHubServiceErrorCode.ThrottlingException" /> is thrown.
            For a complete list of possible error cases, see <see cref="T:Microsoft.Azure.Devices.IotHubServiceErrorCode" />.
            </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
            If the HTTP request fails due to an underlying issue such as network connectivity, DNS failure, or server
            certificate validation.
            </exception>
        <exception cref="T:System.OperationCanceledException">If the provided cancellation token has requested cancellation.</exception>
      </Docs>
    </Member>
  </Members>
</Type>

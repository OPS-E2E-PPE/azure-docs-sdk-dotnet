<Type Name="OutOfProcOrchestrationShim" FullName="Microsoft.Azure.WebJobs.Extensions.DurableTask.OutOfProcOrchestrationShim">
  <TypeSignature Language="C#" Value="public class OutOfProcOrchestrationShim" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit OutOfProcOrchestrationShim extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.OutOfProcOrchestrationShim" />
  <TypeSignature Language="VB.NET" Value="Public Class OutOfProcOrchestrationShim" />
  <TypeSignature Language="F#" Value="type OutOfProcOrchestrationShim = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.WebJobs.Extensions.DurableTask</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Not intended for public consumption.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OutOfProcOrchestrationShim (Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.OutOfProcOrchestrationShim.#ctor(Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (context As IDurableOrchestrationContext)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.WebJobs.Extensions.DurableTask.OutOfProcOrchestrationShim : Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationContext -&gt; Microsoft.Azure.WebJobs.Extensions.DurableTask.OutOfProcOrchestrationShim" Usage="new Microsoft.Azure.WebJobs.Extensions.DurableTask.OutOfProcOrchestrationShim context" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.WebJobs.Extensions.DurableTask</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationContext" />
      </Parameters>
      <Docs>
        <param name="context">The orchestration execution context.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.OutOfProcOrchestrationShim" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;bool&gt; ExecuteAsync (Newtonsoft.Json.Linq.JObject executionJson);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;bool&gt; ExecuteAsync(class Newtonsoft.Json.Linq.JObject executionJson) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.OutOfProcOrchestrationShim.ExecuteAsync(Newtonsoft.Json.Linq.JObject)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteAsync (executionJson As JObject) As Task(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.ExecuteAsync : Newtonsoft.Json.Linq.JObject -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="outOfProcOrchestrationShim.ExecuteAsync executionJson" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.WebJobs.Extensions.DurableTask</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executionJson" Type="Newtonsoft.Json.Linq.JObject" />
      </Parameters>
      <Docs>
        <param name="executionJson">The result of the out-of-proc execution.</param>
        <summary>
            Not intended for public consumption.
            </summary>
        <returns>
          <c>true</c> if there are more executions to process; <c>false</c> otherwise.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

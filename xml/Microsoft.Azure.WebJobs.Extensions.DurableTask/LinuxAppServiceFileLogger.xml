<Type Name="LinuxAppServiceFileLogger" FullName="Microsoft.Azure.WebJobs.Extensions.DurableTask.LinuxAppServiceFileLogger">
  <TypeSignature Language="C#" Value="public class LinuxAppServiceFileLogger" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LinuxAppServiceFileLogger extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.LinuxAppServiceFileLogger" />
  <TypeSignature Language="VB.NET" Value="Public Class LinuxAppServiceFileLogger" />
  <TypeSignature Language="F#" Value="type LinuxAppServiceFileLogger = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.WebJobs.Extensions.DurableTask</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            The File logger for linux dedicated. Manages file rolling and is concurrency-safe.
            This is copied over from the azure-funtions-host codebase here:
            https://github.com/Azure/azure-functions-host/blob/35cf323fa3464a08b410a518bcab006e801301fe/src/WebJobs.Script.WebHost/Diagnostics/LinuxAppServiceFileLogger.cs
            We have modified their implementation to utilize syscall.rename instead of File.Move during file rolling.
            This change is necessary for older versions of fluent-bit, our logging infrastructure in linux dedicated, to properly deal with logfile archiving.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinuxAppServiceFileLogger (string logFileName, string logFileDirectory, bool startOnCreate = true);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string logFileName, string logFileDirectory, bool startOnCreate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.LinuxAppServiceFileLogger.#ctor(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (logFileName As String, logFileDirectory As String, Optional startOnCreate As Boolean = true)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.WebJobs.Extensions.DurableTask.LinuxAppServiceFileLogger : string * string * bool -&gt; Microsoft.Azure.WebJobs.Extensions.DurableTask.LinuxAppServiceFileLogger" Usage="new Microsoft.Azure.WebJobs.Extensions.DurableTask.LinuxAppServiceFileLogger (logFileName, logFileDirectory, startOnCreate)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.WebJobs.Extensions.DurableTask</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="logFileName" Type="System.String" />
        <Parameter Name="logFileDirectory" Type="System.String" />
        <Parameter Name="startOnCreate" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="logFileName">Name of target logfile.</param>
        <param name="logFileDirectory">Directory of target logfile.</param>
        <param name="startOnCreate">Whether or not to start monitoring the write buffer at initialization time.</param>
        <summary>
            The File logger for linux dedicated. Manages file rolling and is concurrency-safe.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public virtual void Log (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Log(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.LinuxAppServiceFileLogger.Log(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Log (message As String)" />
      <MemberSignature Language="F#" Value="abstract member Log : string -&gt; unit&#xA;override this.Log : string -&gt; unit" Usage="linuxAppServiceFileLogger.Log message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.WebJobs.Extensions.DurableTask</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">Message to log.</param>
        <summary>
            Log a string.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop (TimeSpan timeSpan);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop(valuetype System.TimeSpan timeSpan) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.LinuxAppServiceFileLogger.Stop(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop (timeSpan As TimeSpan)" />
      <MemberSignature Language="F#" Value="member this.Stop : TimeSpan -&gt; unit" Usage="linuxAppServiceFileLogger.Stop timeSpan" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.WebJobs.Extensions.DurableTask</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeSpan" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeSpan">Timeout in milliseconds for flushing task.</param>
        <summary>
            Flushes the write buffer, stops writing to logfile afterwards.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

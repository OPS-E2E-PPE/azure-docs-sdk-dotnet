<Type Name="DurableContextExtensions" FullName="Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableContextExtensions">
  <TypeSignature Language="C#" Value="public static class DurableContextExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit DurableContextExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableContextExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module DurableContextExtensions" />
  <TypeSignature Language="F#" Value="type DurableContextExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.WebJobs.Extensions.DurableTask</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Defines convenient overloads for calling the context methods, for all the contexts.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateReplaySafeLogger">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Logging.ILogger CreateReplaySafeLogger (this Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationContext context, Microsoft.Extensions.Logging.ILogger logger);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Logging.ILogger CreateReplaySafeLogger(class Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationContext context, class Microsoft.Extensions.Logging.ILogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableContextExtensions.CreateReplaySafeLogger(Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationContext,Microsoft.Extensions.Logging.ILogger)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CreateReplaySafeLogger (context As IDurableOrchestrationContext, logger As ILogger) As ILogger" />
      <MemberSignature Language="F#" Value="static member CreateReplaySafeLogger : Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationContext * Microsoft.Extensions.Logging.ILogger -&gt; Microsoft.Extensions.Logging.ILogger" Usage="Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableContextExtensions.CreateReplaySafeLogger (context, logger)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.WebJobs.Extensions.DurableTask</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Logging.ILogger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationContext" RefType="this" />
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" />
      </Parameters>
      <Docs>
        <param name="context">The context object.</param>
        <param name="logger">An instance of ILogger.</param>
        <summary>
            Returns an instance of ILogger that is replay safe, ensuring the logger logs only when the orchestrator
            is not replaying that line of code.
            </summary>
        <returns>An instance of a replay safe ILogger.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

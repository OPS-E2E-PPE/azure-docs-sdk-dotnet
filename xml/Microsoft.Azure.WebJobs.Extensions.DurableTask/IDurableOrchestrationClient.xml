<Type Name="IDurableOrchestrationClient" FullName="Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationClient">
  <TypeSignature Language="C#" Value="public interface IDurableOrchestrationClient" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDurableOrchestrationClient" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationClient" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDurableOrchestrationClient" />
  <TypeSignature Language="F#" Value="type IDurableOrchestrationClient = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.WebJobs.Extensions.DurableTask</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateCheckStatusResponse">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Mvc.IActionResult CreateCheckStatusResponse (Microsoft.AspNetCore.Http.HttpRequest request, string instanceId, bool returnInternalServerErrorOnFailure = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Mvc.IActionResult CreateCheckStatusResponse(class Microsoft.AspNetCore.Http.HttpRequest request, string instanceId, bool returnInternalServerErrorOnFailure) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationClient.CreateCheckStatusResponse(Microsoft.AspNetCore.Http.HttpRequest,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateCheckStatusResponse (request As HttpRequest, instanceId As String, Optional returnInternalServerErrorOnFailure As Boolean = false) As IActionResult" />
      <MemberSignature Language="F#" Value="abstract member CreateCheckStatusResponse : Microsoft.AspNetCore.Http.HttpRequest * string * bool -&gt; Microsoft.AspNetCore.Mvc.IActionResult" Usage="iDurableOrchestrationClient.CreateCheckStatusResponse (request, instanceId, returnInternalServerErrorOnFailure)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.WebJobs.Extensions.DurableTask</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.IActionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="Microsoft.AspNetCore.Http.HttpRequest" />
        <Parameter Name="instanceId" Type="System.String" />
        <Parameter Name="returnInternalServerErrorOnFailure" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="request">To be added.</param>
        <param name="instanceId">To be added.</param>
        <param name="returnInternalServerErrorOnFailure">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateCheckStatusResponse">
      <MemberSignature Language="C#" Value="public System.Net.Http.HttpResponseMessage CreateCheckStatusResponse (System.Net.Http.HttpRequestMessage request, string instanceId, bool returnInternalServerErrorOnFailure = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.Http.HttpResponseMessage CreateCheckStatusResponse(class System.Net.Http.HttpRequestMessage request, string instanceId, bool returnInternalServerErrorOnFailure) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationClient.CreateCheckStatusResponse(System.Net.Http.HttpRequestMessage,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateCheckStatusResponse (request As HttpRequestMessage, instanceId As String, Optional returnInternalServerErrorOnFailure As Boolean = false) As HttpResponseMessage" />
      <MemberSignature Language="F#" Value="abstract member CreateCheckStatusResponse : System.Net.Http.HttpRequestMessage * string * bool -&gt; System.Net.Http.HttpResponseMessage" Usage="iDurableOrchestrationClient.CreateCheckStatusResponse (request, instanceId, returnInternalServerErrorOnFailure)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.WebJobs.Extensions.DurableTask</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Http.HttpResponseMessage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.Http.HttpRequestMessage" />
        <Parameter Name="instanceId" Type="System.String" />
        <Parameter Name="returnInternalServerErrorOnFailure" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="request">To be added.</param>
        <param name="instanceId">To be added.</param>
        <param name="returnInternalServerErrorOnFailure">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateHttpManagementPayload">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.WebJobs.Extensions.DurableTask.HttpManagementPayload CreateHttpManagementPayload (string instanceId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Azure.WebJobs.Extensions.DurableTask.HttpManagementPayload CreateHttpManagementPayload(string instanceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationClient.CreateHttpManagementPayload(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateHttpManagementPayload (instanceId As String) As HttpManagementPayload" />
      <MemberSignature Language="F#" Value="abstract member CreateHttpManagementPayload : string -&gt; Microsoft.Azure.WebJobs.Extensions.DurableTask.HttpManagementPayload" Usage="iDurableOrchestrationClient.CreateHttpManagementPayload instanceId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.WebJobs.Extensions.DurableTask</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.WebJobs.Extensions.DurableTask.HttpManagementPayload</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="instanceId">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStatusAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableOrchestrationStatus&gt;&gt; GetStatusAsync (System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableOrchestrationStatus&gt;&gt; GetStatusAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationClient.GetStatusAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetStatusAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableOrchestrationStatus&gt;&gt;" Usage="iDurableOrchestrationClient.GetStatusAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.WebJobs.Extensions.DurableTask</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableOrchestrationStatus&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStatusAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.WebJobs.Extensions.DurableTask.OrchestrationStatusQueryResult&gt; GetStatusAsync (Microsoft.Azure.WebJobs.Extensions.DurableTask.OrchestrationStatusQueryCondition condition, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.WebJobs.Extensions.DurableTask.OrchestrationStatusQueryResult&gt; GetStatusAsync(class Microsoft.Azure.WebJobs.Extensions.DurableTask.OrchestrationStatusQueryCondition condition, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationClient.GetStatusAsync(Microsoft.Azure.WebJobs.Extensions.DurableTask.OrchestrationStatusQueryCondition,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetStatusAsync : Microsoft.Azure.WebJobs.Extensions.DurableTask.OrchestrationStatusQueryCondition * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.WebJobs.Extensions.DurableTask.OrchestrationStatusQueryResult&gt;" Usage="iDurableOrchestrationClient.GetStatusAsync (condition, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.WebJobs.Extensions.DurableTask</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.WebJobs.Extensions.DurableTask.OrchestrationStatusQueryResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="Microsoft.Azure.WebJobs.Extensions.DurableTask.OrchestrationStatusQueryCondition" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="condition">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStatusAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableOrchestrationStatus&gt;&gt; GetStatusAsync (DateTime createdTimeFrom, Nullable&lt;DateTime&gt; createdTimeTo, System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.WebJobs.Extensions.DurableTask.OrchestrationRuntimeStatus&gt; runtimeStatus, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableOrchestrationStatus&gt;&gt; GetStatusAsync(valuetype System.DateTime createdTimeFrom, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; createdTimeTo, class System.Collections.Generic.IEnumerable`1&lt;valuetype Microsoft.Azure.WebJobs.Extensions.DurableTask.OrchestrationRuntimeStatus&gt; runtimeStatus, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationClient.GetStatusAsync(System.DateTime,System.Nullable{System.DateTime},System.Collections.Generic.IEnumerable{Microsoft.Azure.WebJobs.Extensions.DurableTask.OrchestrationRuntimeStatus},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetStatusAsync : DateTime * Nullable&lt;DateTime&gt; * seq&lt;Microsoft.Azure.WebJobs.Extensions.DurableTask.OrchestrationRuntimeStatus&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableOrchestrationStatus&gt;&gt;" Usage="iDurableOrchestrationClient.GetStatusAsync (createdTimeFrom, createdTimeTo, runtimeStatus, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.WebJobs.Extensions.DurableTask</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableOrchestrationStatus&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="createdTimeFrom" Type="System.DateTime" />
        <Parameter Name="createdTimeTo" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="runtimeStatus" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.WebJobs.Extensions.DurableTask.OrchestrationRuntimeStatus&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="createdTimeFrom">To be added.</param>
        <param name="createdTimeTo">To be added.</param>
        <param name="runtimeStatus">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStatusAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableOrchestrationStatus&gt; GetStatusAsync (string instanceId, bool showHistory, bool showHistoryOutput, bool showInput);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableOrchestrationStatus&gt; GetStatusAsync(string instanceId, bool showHistory, bool showHistoryOutput, bool showInput) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationClient.GetStatusAsync(System.String,System.Boolean,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStatusAsync (instanceId As String, showHistory As Boolean, showHistoryOutput As Boolean, showInput As Boolean) As Task(Of DurableOrchestrationStatus)" />
      <MemberSignature Language="F#" Value="abstract member GetStatusAsync : string * bool * bool * bool -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableOrchestrationStatus&gt;" Usage="iDurableOrchestrationClient.GetStatusAsync (instanceId, showHistory, showHistoryOutput, showInput)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.WebJobs.Extensions.DurableTask</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableOrchestrationStatus&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.String" />
        <Parameter Name="showHistory" Type="System.Boolean" />
        <Parameter Name="showHistoryOutput" Type="System.Boolean" />
        <Parameter Name="showInput" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="instanceId">To be added.</param>
        <param name="showHistory">To be added.</param>
        <param name="showHistoryOutput">To be added.</param>
        <param name="showInput">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PurgeInstanceHistoryAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.WebJobs.Extensions.DurableTask.PurgeHistoryResult&gt; PurgeInstanceHistoryAsync (string instanceId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.WebJobs.Extensions.DurableTask.PurgeHistoryResult&gt; PurgeInstanceHistoryAsync(string instanceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationClient.PurgeInstanceHistoryAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function PurgeInstanceHistoryAsync (instanceId As String) As Task(Of PurgeHistoryResult)" />
      <MemberSignature Language="F#" Value="abstract member PurgeInstanceHistoryAsync : string -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.WebJobs.Extensions.DurableTask.PurgeHistoryResult&gt;" Usage="iDurableOrchestrationClient.PurgeInstanceHistoryAsync instanceId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.WebJobs.Extensions.DurableTask</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.WebJobs.Extensions.DurableTask.PurgeHistoryResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="instanceId">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PurgeInstanceHistoryAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.WebJobs.Extensions.DurableTask.PurgeHistoryResult&gt; PurgeInstanceHistoryAsync (DateTime createdTimeFrom, Nullable&lt;DateTime&gt; createdTimeTo, System.Collections.Generic.IEnumerable&lt;DurableTask.Core.OrchestrationStatus&gt; runtimeStatus);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.WebJobs.Extensions.DurableTask.PurgeHistoryResult&gt; PurgeInstanceHistoryAsync(valuetype System.DateTime createdTimeFrom, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; createdTimeTo, class System.Collections.Generic.IEnumerable`1&lt;valuetype DurableTask.Core.OrchestrationStatus&gt; runtimeStatus) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationClient.PurgeInstanceHistoryAsync(System.DateTime,System.Nullable{System.DateTime},System.Collections.Generic.IEnumerable{DurableTask.Core.OrchestrationStatus})" />
      <MemberSignature Language="VB.NET" Value="Public Function PurgeInstanceHistoryAsync (createdTimeFrom As DateTime, createdTimeTo As Nullable(Of DateTime), runtimeStatus As IEnumerable(Of OrchestrationStatus)) As Task(Of PurgeHistoryResult)" />
      <MemberSignature Language="F#" Value="abstract member PurgeInstanceHistoryAsync : DateTime * Nullable&lt;DateTime&gt; * seq&lt;DurableTask.Core.OrchestrationStatus&gt; -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.WebJobs.Extensions.DurableTask.PurgeHistoryResult&gt;" Usage="iDurableOrchestrationClient.PurgeInstanceHistoryAsync (createdTimeFrom, createdTimeTo, runtimeStatus)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.WebJobs.Extensions.DurableTask</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.WebJobs.Extensions.DurableTask.PurgeHistoryResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="createdTimeFrom" Type="System.DateTime" />
        <Parameter Name="createdTimeTo" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="runtimeStatus" Type="System.Collections.Generic.IEnumerable&lt;DurableTask.Core.OrchestrationStatus&gt;" />
      </Parameters>
      <Docs>
        <param name="createdTimeFrom">To be added.</param>
        <param name="createdTimeTo">To be added.</param>
        <param name="runtimeStatus">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RaiseEventAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task RaiseEventAsync (string instanceId, string eventName, object eventData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task RaiseEventAsync(string instanceId, string eventName, object eventData) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationClient.RaiseEventAsync(System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function RaiseEventAsync (instanceId As String, eventName As String, eventData As Object) As Task" />
      <MemberSignature Language="F#" Value="abstract member RaiseEventAsync : string * string * obj -&gt; System.Threading.Tasks.Task" Usage="iDurableOrchestrationClient.RaiseEventAsync (instanceId, eventName, eventData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.WebJobs.Extensions.DurableTask</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.String" />
        <Parameter Name="eventName" Type="System.String" />
        <Parameter Name="eventData" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instanceId">To be added.</param>
        <param name="eventName">To be added.</param>
        <param name="eventData">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RaiseEventAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task RaiseEventAsync (string taskHubName, string instanceId, string eventName, object eventData, string connectionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task RaiseEventAsync(string taskHubName, string instanceId, string eventName, object eventData, string connectionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationClient.RaiseEventAsync(System.String,System.String,System.String,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function RaiseEventAsync (taskHubName As String, instanceId As String, eventName As String, eventData As Object, Optional connectionName As String = null) As Task" />
      <MemberSignature Language="F#" Value="abstract member RaiseEventAsync : string * string * string * obj * string -&gt; System.Threading.Tasks.Task" Usage="iDurableOrchestrationClient.RaiseEventAsync (taskHubName, instanceId, eventName, eventData, connectionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.WebJobs.Extensions.DurableTask</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="taskHubName" Type="System.String" />
        <Parameter Name="instanceId" Type="System.String" />
        <Parameter Name="eventName" Type="System.String" />
        <Parameter Name="eventData" Type="System.Object" />
        <Parameter Name="connectionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="taskHubName">To be added.</param>
        <param name="instanceId">To be added.</param>
        <param name="eventName">To be added.</param>
        <param name="eventData">To be added.</param>
        <param name="connectionName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RewindAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task RewindAsync (string instanceId, string reason);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task RewindAsync(string instanceId, string reason) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationClient.RewindAsync(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function RewindAsync (instanceId As String, reason As String) As Task" />
      <MemberSignature Language="F#" Value="abstract member RewindAsync : string * string -&gt; System.Threading.Tasks.Task" Usage="iDurableOrchestrationClient.RewindAsync (instanceId, reason)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.WebJobs.Extensions.DurableTask</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This feature is in preview.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.String" />
        <Parameter Name="reason" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="instanceId">To be added.</param>
        <param name="reason">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartNewAsync&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;string&gt; StartNewAsync&lt;T&gt; (string orchestratorFunctionName, string instanceId, T input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; StartNewAsync&lt;T&gt;(string orchestratorFunctionName, string instanceId, !!T input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationClient.StartNewAsync``1(System.String,System.String,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Function StartNewAsync(Of T) (orchestratorFunctionName As String, instanceId As String, input As T) As Task(Of String)" />
      <MemberSignature Language="F#" Value="abstract member StartNewAsync : string * string * 'T -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="iDurableOrchestrationClient.StartNewAsync (orchestratorFunctionName, instanceId, input)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.WebJobs.Extensions.DurableTask</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="orchestratorFunctionName" Type="System.String" />
        <Parameter Name="instanceId" Type="System.String" />
        <Parameter Name="input" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="orchestratorFunctionName">To be added.</param>
        <param name="instanceId">To be added.</param>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TaskHubName">
      <MemberSignature Language="C#" Value="public string TaskHubName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TaskHubName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationClient.TaskHubName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TaskHubName As String" />
      <MemberSignature Language="F#" Value="member this.TaskHubName : string" Usage="Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationClient.TaskHubName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.WebJobs.Extensions.DurableTask</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TerminateAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task TerminateAsync (string instanceId, string reason);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task TerminateAsync(string instanceId, string reason) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationClient.TerminateAsync(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function TerminateAsync (instanceId As String, reason As String) As Task" />
      <MemberSignature Language="F#" Value="abstract member TerminateAsync : string * string -&gt; System.Threading.Tasks.Task" Usage="iDurableOrchestrationClient.TerminateAsync (instanceId, reason)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.WebJobs.Extensions.DurableTask</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.String" />
        <Parameter Name="reason" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="instanceId">To be added.</param>
        <param name="reason">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WaitForCompletionOrCreateCheckStatusResponseAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Mvc.IActionResult&gt; WaitForCompletionOrCreateCheckStatusResponseAsync (Microsoft.AspNetCore.Http.HttpRequest request, string instanceId, TimeSpan timeout, TimeSpan retryInterval);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.AspNetCore.Mvc.IActionResult&gt; WaitForCompletionOrCreateCheckStatusResponseAsync(class Microsoft.AspNetCore.Http.HttpRequest request, string instanceId, valuetype System.TimeSpan timeout, valuetype System.TimeSpan retryInterval) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationClient.WaitForCompletionOrCreateCheckStatusResponseAsync(Microsoft.AspNetCore.Http.HttpRequest,System.String,System.TimeSpan,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function WaitForCompletionOrCreateCheckStatusResponseAsync (request As HttpRequest, instanceId As String, timeout As TimeSpan, retryInterval As TimeSpan) As Task(Of IActionResult)" />
      <MemberSignature Language="F#" Value="abstract member WaitForCompletionOrCreateCheckStatusResponseAsync : Microsoft.AspNetCore.Http.HttpRequest * string * TimeSpan * TimeSpan -&gt; System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Mvc.IActionResult&gt;" Usage="iDurableOrchestrationClient.WaitForCompletionOrCreateCheckStatusResponseAsync (request, instanceId, timeout, retryInterval)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.WebJobs.Extensions.DurableTask</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Mvc.IActionResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="Microsoft.AspNetCore.Http.HttpRequest" />
        <Parameter Name="instanceId" Type="System.String" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="retryInterval" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="request">To be added.</param>
        <param name="instanceId">To be added.</param>
        <param name="timeout">To be added.</param>
        <param name="retryInterval">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WaitForCompletionOrCreateCheckStatusResponseAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; WaitForCompletionOrCreateCheckStatusResponseAsync (System.Net.Http.HttpRequestMessage request, string instanceId, TimeSpan timeout, TimeSpan retryInterval);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; WaitForCompletionOrCreateCheckStatusResponseAsync(class System.Net.Http.HttpRequestMessage request, string instanceId, valuetype System.TimeSpan timeout, valuetype System.TimeSpan retryInterval) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationClient.WaitForCompletionOrCreateCheckStatusResponseAsync(System.Net.Http.HttpRequestMessage,System.String,System.TimeSpan,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function WaitForCompletionOrCreateCheckStatusResponseAsync (request As HttpRequestMessage, instanceId As String, timeout As TimeSpan, retryInterval As TimeSpan) As Task(Of HttpResponseMessage)" />
      <MemberSignature Language="F#" Value="abstract member WaitForCompletionOrCreateCheckStatusResponseAsync : System.Net.Http.HttpRequestMessage * string * TimeSpan * TimeSpan -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;" Usage="iDurableOrchestrationClient.WaitForCompletionOrCreateCheckStatusResponseAsync (request, instanceId, timeout, retryInterval)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.WebJobs.Extensions.DurableTask</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.Http.HttpRequestMessage" />
        <Parameter Name="instanceId" Type="System.String" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="retryInterval" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="request">To be added.</param>
        <param name="instanceId">To be added.</param>
        <param name="timeout">To be added.</param>
        <param name="retryInterval">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

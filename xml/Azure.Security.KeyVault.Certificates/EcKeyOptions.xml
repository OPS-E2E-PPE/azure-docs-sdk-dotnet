<Type Name="EcKeyOptions" FullName="Azure.Security.KeyVault.Certificates.EcKeyOptions">
  <TypeSignature Language="C#" Value="public class EcKeyOptions : Azure.Security.KeyVault.Certificates.KeyOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EcKeyOptions extends Azure.Security.KeyVault.Certificates.KeyOptions" />
  <TypeSignature Language="DocId" Value="T:Azure.Security.KeyVault.Certificates.EcKeyOptions" />
  <TypeSignature Language="VB.NET" Value="Public Class EcKeyOptions&#xA;Inherits KeyOptions" />
  <TypeSignature Language="F#" Value="type EcKeyOptions = class&#xA;    inherit KeyOptions" />
  <AssemblyInfo>
    <AssemblyName>Azure.Security.KeyVault.Certificates</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.Security.KeyVault.Certificates.KeyOptions</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Propeties of an EC (EllipticCurve) key backing a certificate
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EcKeyOptions (bool hsmProtected);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool hsmProtected) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.KeyVault.Certificates.EcKeyOptions.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (hsmProtected As Boolean)" />
      <MemberSignature Language="F#" Value="new Azure.Security.KeyVault.Certificates.EcKeyOptions : bool -&gt; Azure.Security.KeyVault.Certificates.EcKeyOptions" Usage="new Azure.Security.KeyVault.Certificates.EcKeyOptions hsmProtected" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="hsmProtected" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="hsmProtected">Specifies whether the key should be protected in the HSM</param>
        <summary>
            Creates EcKeyOptions for use with a <see cref="T:Azure.Security.KeyVault.Certificates.CertificatePolicy" /></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Curve">
      <MemberSignature Language="C#" Value="public Nullable&lt;Azure.Security.KeyVault.Certificates.KeyCurveName&gt; Curve { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype Azure.Security.KeyVault.Certificates.KeyCurveName&gt; Curve" />
      <MemberSignature Language="DocId" Value="P:Azure.Security.KeyVault.Certificates.EcKeyOptions.Curve" />
      <MemberSignature Language="VB.NET" Value="Public Property Curve As Nullable(Of KeyCurveName)" />
      <MemberSignature Language="F#" Value="member this.Curve : Nullable&lt;Azure.Security.KeyVault.Certificates.KeyCurveName&gt; with get, set" Usage="Azure.Security.KeyVault.Certificates.EcKeyOptions.Curve" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.KeyVault.Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Azure.Security.KeyVault.Certificates.KeyCurveName&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The curve which back the EC key
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="QuantumJobClient" FullName="Azure.Quantum.Jobs.QuantumJobClient">
  <TypeSignature Language="C#" Value="public class QuantumJobClient" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit QuantumJobClient extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Quantum.Jobs.QuantumJobClient" />
  <TypeSignature Language="VB.NET" Value="Public Class QuantumJobClient" />
  <TypeSignature Language="F#" Value="type QuantumJobClient = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Quantum.Jobs</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            The sample jobs client.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected QuantumJobClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Quantum.Jobs.QuantumJobClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Quantum.Jobs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of QuantumJobClient for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public QuantumJobClient (string subscriptionId, string resourceGroupName, string workspaceName, string location, Azure.Core.TokenCredential credential = default, Azure.Quantum.QuantumJobClientOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string subscriptionId, string resourceGroupName, string workspaceName, string location, class Azure.Core.TokenCredential credential, class Azure.Quantum.QuantumJobClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Quantum.Jobs.QuantumJobClient.#ctor(System.String,System.String,System.String,System.String,Azure.Core.TokenCredential,Azure.Quantum.QuantumJobClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (subscriptionId As String, resourceGroupName As String, workspaceName As String, location As String, Optional credential As TokenCredential = Nothing, Optional options As QuantumJobClientOptions = Nothing)" />
      <MemberSignature Language="F#" Value="new Azure.Quantum.Jobs.QuantumJobClient : string * string * string * string * Azure.Core.TokenCredential * Azure.Quantum.QuantumJobClientOptions -&gt; Azure.Quantum.Jobs.QuantumJobClient" Usage="new Azure.Quantum.Jobs.QuantumJobClient (subscriptionId, resourceGroupName, workspaceName, location, credential, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Quantum.Jobs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="subscriptionId" Type="System.String" />
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="workspaceName" Type="System.String" />
        <Parameter Name="location" Type="System.String" />
        <Parameter Name="credential" Type="Azure.Core.TokenCredential" />
        <Parameter Name="options" Type="Azure.Quantum.QuantumJobClientOptions" />
      </Parameters>
      <Docs>
        <param name="subscriptionId">The subscription identifier.</param>
        <param name="resourceGroupName">Name of the resource group.</param>
        <param name="workspaceName">Name of the workspace.</param>
        <param name="location">The location.</param>
        <param name="credential">The token credential.</param>
        <param name="options">The options.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.Quantum.Jobs.QuantumJobClient" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelJob">
      <MemberSignature Language="C#" Value="public virtual Azure.Response CancelJob (string jobId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response CancelJob(string jobId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Quantum.Jobs.QuantumJobClient.CancelJob(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CancelJob (jobId As String, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member CancelJob : string * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.CancelJob : string * System.Threading.CancellationToken -&gt; Azure.Response" Usage="quantumJobClient.CancelJob (jobId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Quantum.Jobs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jobId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="jobId"> Id of the job. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Cancel a job. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="jobId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CancelJobAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; CancelJobAsync (string jobId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; CancelJobAsync(string jobId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Quantum.Jobs.QuantumJobClient.CancelJobAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CancelJobAsync (jobId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member CancelJobAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.CancelJobAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="quantumJobClient.CancelJobAsync (jobId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Quantum.Jobs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jobId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="jobId"> Id of the job. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Cancel a job. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="jobId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateJob">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Quantum.Jobs.Models.JobDetails&gt; CreateJob (string jobId, Azure.Quantum.Jobs.Models.JobDetails job, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Quantum.Jobs.Models.JobDetails&gt; CreateJob(string jobId, class Azure.Quantum.Jobs.Models.JobDetails job, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Quantum.Jobs.QuantumJobClient.CreateJob(System.String,Azure.Quantum.Jobs.Models.JobDetails,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateJob (jobId As String, job As JobDetails, Optional cancellationToken As CancellationToken = Nothing) As Response(Of JobDetails)" />
      <MemberSignature Language="F#" Value="abstract member CreateJob : string * Azure.Quantum.Jobs.Models.JobDetails * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Quantum.Jobs.Models.JobDetails&gt;&#xA;override this.CreateJob : string * Azure.Quantum.Jobs.Models.JobDetails * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Quantum.Jobs.Models.JobDetails&gt;" Usage="quantumJobClient.CreateJob (jobId, job, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Quantum.Jobs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Quantum.Jobs.Models.JobDetails&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jobId" Type="System.String" />
        <Parameter Name="job" Type="Azure.Quantum.Jobs.Models.JobDetails" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="jobId"> Id of the job. </param>
        <param name="job"> The complete metadata of the job to submit. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Create a job. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="jobId" /> or <paramref name="job" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateJobAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Quantum.Jobs.Models.JobDetails&gt;&gt; CreateJobAsync (string jobId, Azure.Quantum.Jobs.Models.JobDetails job, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Quantum.Jobs.Models.JobDetails&gt;&gt; CreateJobAsync(string jobId, class Azure.Quantum.Jobs.Models.JobDetails job, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Quantum.Jobs.QuantumJobClient.CreateJobAsync(System.String,Azure.Quantum.Jobs.Models.JobDetails,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateJobAsync (jobId As String, job As JobDetails, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of JobDetails))" />
      <MemberSignature Language="F#" Value="abstract member CreateJobAsync : string * Azure.Quantum.Jobs.Models.JobDetails * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Quantum.Jobs.Models.JobDetails&gt;&gt;&#xA;override this.CreateJobAsync : string * Azure.Quantum.Jobs.Models.JobDetails * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Quantum.Jobs.Models.JobDetails&gt;&gt;" Usage="quantumJobClient.CreateJobAsync (jobId, job, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Quantum.Jobs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Quantum.Jobs.Models.JobDetails&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jobId" Type="System.String" />
        <Parameter Name="job" Type="Azure.Quantum.Jobs.Models.JobDetails" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="jobId"> Id of the job. </param>
        <param name="job"> The complete metadata of the job to submit. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Create a job. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="jobId" /> or <paramref name="job" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetJob">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Quantum.Jobs.Models.JobDetails&gt; GetJob (string jobId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Quantum.Jobs.Models.JobDetails&gt; GetJob(string jobId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Quantum.Jobs.QuantumJobClient.GetJob(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetJob (jobId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of JobDetails)" />
      <MemberSignature Language="F#" Value="abstract member GetJob : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Quantum.Jobs.Models.JobDetails&gt;&#xA;override this.GetJob : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Quantum.Jobs.Models.JobDetails&gt;" Usage="quantumJobClient.GetJob (jobId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Quantum.Jobs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Quantum.Jobs.Models.JobDetails&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jobId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="jobId"> Id of the job. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Get job by id. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="jobId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetJobAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Quantum.Jobs.Models.JobDetails&gt;&gt; GetJobAsync (string jobId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Quantum.Jobs.Models.JobDetails&gt;&gt; GetJobAsync(string jobId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Quantum.Jobs.QuantumJobClient.GetJobAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetJobAsync (jobId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of JobDetails))" />
      <MemberSignature Language="F#" Value="abstract member GetJobAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Quantum.Jobs.Models.JobDetails&gt;&gt;&#xA;override this.GetJobAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Quantum.Jobs.Models.JobDetails&gt;&gt;" Usage="quantumJobClient.GetJobAsync (jobId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Quantum.Jobs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Quantum.Jobs.Models.JobDetails&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jobId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="jobId"> Id of the job. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Get job by id. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="jobId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetJobs">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.Quantum.Jobs.Models.JobDetails&gt; GetJobs (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.Quantum.Jobs.Models.JobDetails&gt; GetJobs(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Quantum.Jobs.QuantumJobClient.GetJobs(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetJobs (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of JobDetails)" />
      <MemberSignature Language="F#" Value="abstract member GetJobs : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.Quantum.Jobs.Models.JobDetails&gt;&#xA;override this.GetJobs : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.Quantum.Jobs.Models.JobDetails&gt;" Usage="quantumJobClient.GetJobs cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Quantum.Jobs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.Quantum.Jobs.Models.JobDetails&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">To be added.</param>
        <summary> Return list of jobs. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetJobsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.Quantum.Jobs.Models.JobDetails&gt; GetJobsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.Quantum.Jobs.Models.JobDetails&gt; GetJobsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Quantum.Jobs.QuantumJobClient.GetJobsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetJobsAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of JobDetails)" />
      <MemberSignature Language="F#" Value="abstract member GetJobsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.Quantum.Jobs.Models.JobDetails&gt;&#xA;override this.GetJobsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.Quantum.Jobs.Models.JobDetails&gt;" Usage="quantumJobClient.GetJobsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Quantum.Jobs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.Quantum.Jobs.Models.JobDetails&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">To be added.</param>
        <summary> Return list of jobs. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProviderStatus">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.Quantum.Jobs.Models.ProviderStatus&gt; GetProviderStatus (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.Quantum.Jobs.Models.ProviderStatus&gt; GetProviderStatus(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Quantum.Jobs.QuantumJobClient.GetProviderStatus(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetProviderStatus (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ProviderStatus)" />
      <MemberSignature Language="F#" Value="abstract member GetProviderStatus : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.Quantum.Jobs.Models.ProviderStatus&gt;&#xA;override this.GetProviderStatus : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.Quantum.Jobs.Models.ProviderStatus&gt;" Usage="quantumJobClient.GetProviderStatus cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Quantum.Jobs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.Quantum.Jobs.Models.ProviderStatus&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Get provider status. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProviderStatusAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.Quantum.Jobs.Models.ProviderStatus&gt; GetProviderStatusAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.Quantum.Jobs.Models.ProviderStatus&gt; GetProviderStatusAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Quantum.Jobs.QuantumJobClient.GetProviderStatusAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetProviderStatusAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ProviderStatus)" />
      <MemberSignature Language="F#" Value="abstract member GetProviderStatusAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.Quantum.Jobs.Models.ProviderStatus&gt;&#xA;override this.GetProviderStatusAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.Quantum.Jobs.Models.ProviderStatus&gt;" Usage="quantumJobClient.GetProviderStatusAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Quantum.Jobs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.Quantum.Jobs.Models.ProviderStatus&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Get provider status. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetQuotas">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.Quantum.Jobs.Models.QuantumJobQuota&gt; GetQuotas (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.Quantum.Jobs.Models.QuantumJobQuota&gt; GetQuotas(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Quantum.Jobs.QuantumJobClient.GetQuotas(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetQuotas (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of QuantumJobQuota)" />
      <MemberSignature Language="F#" Value="abstract member GetQuotas : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.Quantum.Jobs.Models.QuantumJobQuota&gt;&#xA;override this.GetQuotas : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.Quantum.Jobs.Models.QuantumJobQuota&gt;" Usage="quantumJobClient.GetQuotas cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Quantum.Jobs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.Quantum.Jobs.Models.QuantumJobQuota&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Get quota status. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetQuotasAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.Quantum.Jobs.Models.QuantumJobQuota&gt; GetQuotasAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.Quantum.Jobs.Models.QuantumJobQuota&gt; GetQuotasAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Quantum.Jobs.QuantumJobClient.GetQuotasAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetQuotasAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of QuantumJobQuota)" />
      <MemberSignature Language="F#" Value="abstract member GetQuotasAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.Quantum.Jobs.Models.QuantumJobQuota&gt;&#xA;override this.GetQuotasAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.Quantum.Jobs.Models.QuantumJobQuota&gt;" Usage="quantumJobClient.GetQuotasAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Quantum.Jobs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.Quantum.Jobs.Models.QuantumJobQuota&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Get quota status. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStorageSasUri">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Quantum.Jobs.Models.SasUriResponse&gt; GetStorageSasUri (Azure.Quantum.Jobs.Models.BlobDetails blobDetails, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Quantum.Jobs.Models.SasUriResponse&gt; GetStorageSasUri(class Azure.Quantum.Jobs.Models.BlobDetails blobDetails, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Quantum.Jobs.QuantumJobClient.GetStorageSasUri(Azure.Quantum.Jobs.Models.BlobDetails,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStorageSasUri (blobDetails As BlobDetails, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SasUriResponse)" />
      <MemberSignature Language="F#" Value="abstract member GetStorageSasUri : Azure.Quantum.Jobs.Models.BlobDetails * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Quantum.Jobs.Models.SasUriResponse&gt;&#xA;override this.GetStorageSasUri : Azure.Quantum.Jobs.Models.BlobDetails * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Quantum.Jobs.Models.SasUriResponse&gt;" Usage="quantumJobClient.GetStorageSasUri (blobDetails, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Quantum.Jobs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Quantum.Jobs.Models.SasUriResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="blobDetails" Type="Azure.Quantum.Jobs.Models.BlobDetails" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="blobDetails"> The details (name and container) of the blob to store or download data. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets a URL with SAS token for a container/blob in the storage account associated with the workspace. The SAS URL can be used to upload job input and/or download job output. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="blobDetails" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetStorageSasUriAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Quantum.Jobs.Models.SasUriResponse&gt;&gt; GetStorageSasUriAsync (Azure.Quantum.Jobs.Models.BlobDetails blobDetails, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Quantum.Jobs.Models.SasUriResponse&gt;&gt; GetStorageSasUriAsync(class Azure.Quantum.Jobs.Models.BlobDetails blobDetails, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Quantum.Jobs.QuantumJobClient.GetStorageSasUriAsync(Azure.Quantum.Jobs.Models.BlobDetails,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStorageSasUriAsync (blobDetails As BlobDetails, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SasUriResponse))" />
      <MemberSignature Language="F#" Value="abstract member GetStorageSasUriAsync : Azure.Quantum.Jobs.Models.BlobDetails * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Quantum.Jobs.Models.SasUriResponse&gt;&gt;&#xA;override this.GetStorageSasUriAsync : Azure.Quantum.Jobs.Models.BlobDetails * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Quantum.Jobs.Models.SasUriResponse&gt;&gt;" Usage="quantumJobClient.GetStorageSasUriAsync (blobDetails, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Quantum.Jobs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Quantum.Jobs.Models.SasUriResponse&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="blobDetails" Type="Azure.Quantum.Jobs.Models.BlobDetails" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="blobDetails"> The details (name and container) of the blob to store or download data. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets a URL with SAS token for a container/blob in the storage account associated with the workspace. The SAS URL can be used to upload job input and/or download job output. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="blobDetails" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>

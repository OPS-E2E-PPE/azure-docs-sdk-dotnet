<Type Name="BlobContainersCreateOrUpdateImmutabilityPolicyHeadersInner" FullName="Microsoft.Azure.Management.Storage.Fluent.Models.BlobContainersCreateOrUpdateImmutabilityPolicyHeadersInner">
  <TypeSignature Language="C#" Value="public class BlobContainersCreateOrUpdateImmutabilityPolicyHeadersInner" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BlobContainersCreateOrUpdateImmutabilityPolicyHeadersInner extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Management.Storage.Fluent.Models.BlobContainersCreateOrUpdateImmutabilityPolicyHeadersInner" />
  <TypeSignature Language="VB.NET" Value="Public Class BlobContainersCreateOrUpdateImmutabilityPolicyHeadersInner" />
  <TypeSignature Language="F#" Value="type BlobContainersCreateOrUpdateImmutabilityPolicyHeadersInner = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Management.Storage.Fluent</AssemblyName>
    <AssemblyVersion>1.0.0.60</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Defines headers for CreateOrUpdateImmutabilityPolicy operation.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BlobContainersCreateOrUpdateImmutabilityPolicyHeadersInner ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Storage.Fluent.Models.BlobContainersCreateOrUpdateImmutabilityPolicyHeadersInner.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Storage.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the
            BlobContainersCreateOrUpdateImmutabilityPolicyHeadersInner class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BlobContainersCreateOrUpdateImmutabilityPolicyHeadersInner (string eTag = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string eTag) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Storage.Fluent.Models.BlobContainersCreateOrUpdateImmutabilityPolicyHeadersInner.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Optional eTag As String = null)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.Management.Storage.Fluent.Models.BlobContainersCreateOrUpdateImmutabilityPolicyHeadersInner : string -&gt; Microsoft.Azure.Management.Storage.Fluent.Models.BlobContainersCreateOrUpdateImmutabilityPolicyHeadersInner" Usage="new Microsoft.Azure.Management.Storage.Fluent.Models.BlobContainersCreateOrUpdateImmutabilityPolicyHeadersInner eTag" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Storage.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="eTag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eTag">The ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Match or If-None-Match headers.</param>
        <summary>
            Initializes a new instance of the
            BlobContainersCreateOrUpdateImmutabilityPolicyHeadersInner class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ETag">
      <MemberSignature Language="C#" Value="public string ETag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ETag" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Storage.Fluent.Models.BlobContainersCreateOrUpdateImmutabilityPolicyHeadersInner.ETag" />
      <MemberSignature Language="VB.NET" Value="Public Property ETag As String" />
      <MemberSignature Language="F#" Value="member this.ETag : string with get, set" Usage="Microsoft.Azure.Management.Storage.Fluent.Models.BlobContainersCreateOrUpdateImmutabilityPolicyHeadersInner.ETag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Storage.Fluent</AssemblyName>
        <AssemblyVersion>1.0.0.60</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="ETag")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Match or If-None-Match headers.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
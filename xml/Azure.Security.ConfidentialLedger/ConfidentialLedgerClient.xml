<Type Name="ConfidentialLedgerClient" FullName="Azure.Security.ConfidentialLedger.ConfidentialLedgerClient">
  <TypeSignature Language="C#" Value="public class ConfidentialLedgerClient" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ConfidentialLedgerClient extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Security.ConfidentialLedger.ConfidentialLedgerClient" />
  <TypeSignature Language="VB.NET" Value="Public Class ConfidentialLedgerClient" />
  <TypeSignature Language="F#" Value="type ConfidentialLedgerClient = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Security.ConfidentialLedger</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> The ConfidentialLedger service client. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ConfidentialLedgerClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.ConfidentialLedger</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of ConfidentialLedgerClient for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConfidentialLedgerClient (Uri ledgerUri, Azure.Core.TokenCredential credential, Azure.Security.ConfidentialLedger.ConfidentialLedgerClientOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri ledgerUri, class Azure.Core.TokenCredential credential, class Azure.Security.ConfidentialLedger.ConfidentialLedgerClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.#ctor(System.Uri,Azure.Core.TokenCredential,Azure.Security.ConfidentialLedger.ConfidentialLedgerClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ledgerUri As Uri, credential As TokenCredential, Optional options As ConfidentialLedgerClientOptions = Nothing)" />
      <MemberSignature Language="F#" Value="new Azure.Security.ConfidentialLedger.ConfidentialLedgerClient : Uri * Azure.Core.TokenCredential * Azure.Security.ConfidentialLedger.ConfidentialLedgerClientOptions -&gt; Azure.Security.ConfidentialLedger.ConfidentialLedgerClient" Usage="new Azure.Security.ConfidentialLedger.ConfidentialLedgerClient (ledgerUri, credential, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.ConfidentialLedger</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="ledgerUri" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.Core.TokenCredential" />
        <Parameter Name="options" Type="Azure.Security.ConfidentialLedger.ConfidentialLedgerClientOptions" />
      </Parameters>
      <Docs>
        <param name="ledgerUri"> The Confidential Ledger URL, for example https://contoso.confidentialledger.azure.com. </param>
        <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        <param name="options"> The options for configuring the client. </param>
        <summary> Initializes a new instance of ConfidentialLedgerClient. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdateUser">
      <MemberSignature Language="C#" Value="public virtual Azure.Response CreateOrUpdateUser (string userId, Azure.Core.RequestContent requestBody, Azure.RequestOptions requestOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response CreateOrUpdateUser(string userId, class Azure.Core.RequestContent requestBody, class Azure.RequestOptions requestOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.CreateOrUpdateUser(System.String,Azure.Core.RequestContent,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdateUser (userId As String, requestBody As RequestContent, Optional requestOptions As RequestOptions = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdateUser : string * Azure.Core.RequestContent * Azure.RequestOptions -&gt; Azure.Response&#xA;override this.CreateOrUpdateUser : string * Azure.Core.RequestContent * Azure.RequestOptions -&gt; Azure.Response" Usage="confidentialLedgerClient.CreateOrUpdateUser (userId, requestBody, requestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.ConfidentialLedger</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userId" Type="System.String" />
        <Parameter Name="requestBody" Type="Azure.Core.RequestContent" />
        <Parameter Name="requestOptions" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="userId"> The user id, either an AAD object ID or certificate fingerprint. </param>
        <param name="requestBody"> The request body. </param>
        <param name="requestOptions"> The request options. </param>
        <summary> A JSON merge patch is applied for existing users. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Request Body</c>:
            <list type="table"><listeader><term>Name</term><term>Type</term><term>Required</term><term>Description</term></listeader><item><term>assignedRole</term><term>"Administrator" | "Contributor" | "Reader"</term><term>Yes</term><term> Represents an assignable role. </term></item><item><term>userId</term><term>string</term><term /><term> Identifier for the user. This must either be an AAD object id or a certificate fingerprint. </term></item></list></remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdateUserAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; CreateOrUpdateUserAsync (string userId, Azure.Core.RequestContent requestBody, Azure.RequestOptions requestOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; CreateOrUpdateUserAsync(string userId, class Azure.Core.RequestContent requestBody, class Azure.RequestOptions requestOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.CreateOrUpdateUserAsync(System.String,Azure.Core.RequestContent,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdateUserAsync (userId As String, requestBody As RequestContent, Optional requestOptions As RequestOptions = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdateUserAsync : string * Azure.Core.RequestContent * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.CreateOrUpdateUserAsync : string * Azure.Core.RequestContent * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="confidentialLedgerClient.CreateOrUpdateUserAsync (userId, requestBody, requestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.ConfidentialLedger</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userId" Type="System.String" />
        <Parameter Name="requestBody" Type="Azure.Core.RequestContent" />
        <Parameter Name="requestOptions" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="userId"> The user id, either an AAD object ID or certificate fingerprint. </param>
        <param name="requestBody"> The request body. </param>
        <param name="requestOptions"> The request options. </param>
        <summary> A JSON merge patch is applied for existing users. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Request Body</c>:
            <list type="table"><listeader><term>Name</term><term>Type</term><term>Required</term><term>Description</term></listeader><item><term>assignedRole</term><term>"Administrator" | "Contributor" | "Reader"</term><term>Yes</term><term> Represents an assignable role. </term></item><item><term>userId</term><term>string</term><term /><term> Identifier for the user. This must either be an AAD object id or a certificate fingerprint. </term></item></list></remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteUser">
      <MemberSignature Language="C#" Value="public virtual Azure.Response DeleteUser (string userId, Azure.RequestOptions requestOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response DeleteUser(string userId, class Azure.RequestOptions requestOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.DeleteUser(System.String,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteUser (userId As String, Optional requestOptions As RequestOptions = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member DeleteUser : string * Azure.RequestOptions -&gt; Azure.Response&#xA;override this.DeleteUser : string * Azure.RequestOptions -&gt; Azure.Response" Usage="confidentialLedgerClient.DeleteUser (userId, requestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.ConfidentialLedger</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userId" Type="System.String" />
        <Parameter Name="requestOptions" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="userId"> The user id, either an AAD object ID or certificate fingerprint. </param>
        <param name="requestOptions"> The request options. </param>
        <summary> Deletes a user from the Confidential Ledger. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteUserAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DeleteUserAsync (string userId, Azure.RequestOptions requestOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeleteUserAsync(string userId, class Azure.RequestOptions requestOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.DeleteUserAsync(System.String,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteUserAsync (userId As String, Optional requestOptions As RequestOptions = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DeleteUserAsync : string * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DeleteUserAsync : string * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="confidentialLedgerClient.DeleteUserAsync (userId, requestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.ConfidentialLedger</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userId" Type="System.String" />
        <Parameter Name="requestOptions" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="userId"> The user id, either an AAD object ID or certificate fingerprint. </param>
        <param name="requestOptions"> The request options. </param>
        <summary> Deletes a user from the Confidential Ledger. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConsortiumMembers">
      <MemberSignature Language="C#" Value="public virtual Azure.Response GetConsortiumMembers (Azure.RequestOptions requestOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response GetConsortiumMembers(class Azure.RequestOptions requestOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetConsortiumMembers(Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetConsortiumMembers (Optional requestOptions As RequestOptions = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member GetConsortiumMembers : Azure.RequestOptions -&gt; Azure.Response&#xA;override this.GetConsortiumMembers : Azure.RequestOptions -&gt; Azure.Response" Usage="confidentialLedgerClient.GetConsortiumMembers requestOptions" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.ConfidentialLedger</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestOptions" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="requestOptions"> The request options. </param>
        <summary> Consortium members can manage the Confidential Ledger. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConsortiumMembersAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; GetConsortiumMembersAsync (Azure.RequestOptions requestOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; GetConsortiumMembersAsync(class Azure.RequestOptions requestOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetConsortiumMembersAsync(Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetConsortiumMembersAsync (Optional requestOptions As RequestOptions = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member GetConsortiumMembersAsync : Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.GetConsortiumMembersAsync : Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="confidentialLedgerClient.GetConsortiumMembersAsync requestOptions" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.ConfidentialLedger</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestOptions" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="requestOptions"> The request options. </param>
        <summary> Consortium members can manage the Confidential Ledger. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConstitution">
      <MemberSignature Language="C#" Value="public virtual Azure.Response GetConstitution (Azure.RequestOptions requestOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response GetConstitution(class Azure.RequestOptions requestOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetConstitution(Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetConstitution (Optional requestOptions As RequestOptions = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member GetConstitution : Azure.RequestOptions -&gt; Azure.Response&#xA;override this.GetConstitution : Azure.RequestOptions -&gt; Azure.Response" Usage="confidentialLedgerClient.GetConstitution requestOptions" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.ConfidentialLedger</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestOptions" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="requestOptions"> The request options. </param>
        <summary> The constitution is a script that assesses and applies proposals from consortium members. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConstitutionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; GetConstitutionAsync (Azure.RequestOptions requestOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; GetConstitutionAsync(class Azure.RequestOptions requestOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetConstitutionAsync(Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetConstitutionAsync (Optional requestOptions As RequestOptions = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member GetConstitutionAsync : Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.GetConstitutionAsync : Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="confidentialLedgerClient.GetConstitutionAsync requestOptions" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.ConfidentialLedger</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestOptions" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="requestOptions"> The request options. </param>
        <summary> The constitution is a script that assesses and applies proposals from consortium members. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentLedgerEntry">
      <MemberSignature Language="C#" Value="public virtual Azure.Response GetCurrentLedgerEntry (string subLedgerId = default, Azure.RequestOptions requestOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response GetCurrentLedgerEntry(string subLedgerId, class Azure.RequestOptions requestOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetCurrentLedgerEntry(System.String,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCurrentLedgerEntry (Optional subLedgerId As String = Nothing, Optional requestOptions As RequestOptions = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member GetCurrentLedgerEntry : string * Azure.RequestOptions -&gt; Azure.Response&#xA;override this.GetCurrentLedgerEntry : string * Azure.RequestOptions -&gt; Azure.Response" Usage="confidentialLedgerClient.GetCurrentLedgerEntry (subLedgerId, requestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.ConfidentialLedger</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subLedgerId" Type="System.String" />
        <Parameter Name="requestOptions" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="subLedgerId"> The sub-ledger id. </param>
        <param name="requestOptions"> The request options. </param>
        <summary> A sub-ledger id may optionally be specified. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentLedgerEntryAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; GetCurrentLedgerEntryAsync (string subLedgerId = default, Azure.RequestOptions requestOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; GetCurrentLedgerEntryAsync(string subLedgerId, class Azure.RequestOptions requestOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetCurrentLedgerEntryAsync(System.String,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCurrentLedgerEntryAsync (Optional subLedgerId As String = Nothing, Optional requestOptions As RequestOptions = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member GetCurrentLedgerEntryAsync : string * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.GetCurrentLedgerEntryAsync : string * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="confidentialLedgerClient.GetCurrentLedgerEntryAsync (subLedgerId, requestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.ConfidentialLedger</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subLedgerId" Type="System.String" />
        <Parameter Name="requestOptions" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="subLedgerId"> The sub-ledger id. </param>
        <param name="requestOptions"> The request options. </param>
        <summary> A sub-ledger id may optionally be specified. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnclaveQuotes">
      <MemberSignature Language="C#" Value="public virtual Azure.Response GetEnclaveQuotes (Azure.RequestOptions requestOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response GetEnclaveQuotes(class Azure.RequestOptions requestOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetEnclaveQuotes(Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEnclaveQuotes (Optional requestOptions As RequestOptions = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member GetEnclaveQuotes : Azure.RequestOptions -&gt; Azure.Response&#xA;override this.GetEnclaveQuotes : Azure.RequestOptions -&gt; Azure.Response" Usage="confidentialLedgerClient.GetEnclaveQuotes requestOptions" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.ConfidentialLedger</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestOptions" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="requestOptions"> The request options. </param>
        <summary> A quote is an SGX enclave measurement that can be used to verify the validity of a node and its enclave. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnclaveQuotesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; GetEnclaveQuotesAsync (Azure.RequestOptions requestOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; GetEnclaveQuotesAsync(class Azure.RequestOptions requestOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetEnclaveQuotesAsync(Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEnclaveQuotesAsync (Optional requestOptions As RequestOptions = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member GetEnclaveQuotesAsync : Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.GetEnclaveQuotesAsync : Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="confidentialLedgerClient.GetEnclaveQuotesAsync requestOptions" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.ConfidentialLedger</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestOptions" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="requestOptions"> The request options. </param>
        <summary> A quote is an SGX enclave measurement that can be used to verify the validity of a node and its enclave. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLedgerEntries">
      <MemberSignature Language="C#" Value="public virtual Azure.Response GetLedgerEntries (string subLedgerId = default, string fromTransactionId = default, string toTransactionId = default, Azure.RequestOptions requestOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response GetLedgerEntries(string subLedgerId, string fromTransactionId, string toTransactionId, class Azure.RequestOptions requestOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetLedgerEntries(System.String,System.String,System.String,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLedgerEntries (Optional subLedgerId As String = Nothing, Optional fromTransactionId As String = Nothing, Optional toTransactionId As String = Nothing, Optional requestOptions As RequestOptions = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member GetLedgerEntries : string * string * string * Azure.RequestOptions -&gt; Azure.Response&#xA;override this.GetLedgerEntries : string * string * string * Azure.RequestOptions -&gt; Azure.Response" Usage="confidentialLedgerClient.GetLedgerEntries (subLedgerId, fromTransactionId, toTransactionId, requestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.ConfidentialLedger</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subLedgerId" Type="System.String" />
        <Parameter Name="fromTransactionId" Type="System.String" />
        <Parameter Name="toTransactionId" Type="System.String" />
        <Parameter Name="requestOptions" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="subLedgerId"> The sub-ledger id. </param>
        <param name="fromTransactionId"> Specify the first transaction ID in a range. </param>
        <param name="toTransactionId"> Specify the last transaction ID in a range. </param>
        <param name="requestOptions"> The request options. </param>
        <summary> A sub-ledger id may optionally be specified. Only entries in the specified (or default) sub-ledger will be returned. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLedgerEntriesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; GetLedgerEntriesAsync (string subLedgerId = default, string fromTransactionId = default, string toTransactionId = default, Azure.RequestOptions requestOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; GetLedgerEntriesAsync(string subLedgerId, string fromTransactionId, string toTransactionId, class Azure.RequestOptions requestOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetLedgerEntriesAsync(System.String,System.String,System.String,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLedgerEntriesAsync (Optional subLedgerId As String = Nothing, Optional fromTransactionId As String = Nothing, Optional toTransactionId As String = Nothing, Optional requestOptions As RequestOptions = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member GetLedgerEntriesAsync : string * string * string * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.GetLedgerEntriesAsync : string * string * string * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="confidentialLedgerClient.GetLedgerEntriesAsync (subLedgerId, fromTransactionId, toTransactionId, requestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.ConfidentialLedger</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subLedgerId" Type="System.String" />
        <Parameter Name="fromTransactionId" Type="System.String" />
        <Parameter Name="toTransactionId" Type="System.String" />
        <Parameter Name="requestOptions" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="subLedgerId"> The sub-ledger id. </param>
        <param name="fromTransactionId"> Specify the first transaction ID in a range. </param>
        <param name="toTransactionId"> Specify the last transaction ID in a range. </param>
        <param name="requestOptions"> The request options. </param>
        <summary> A sub-ledger id may optionally be specified. Only entries in the specified (or default) sub-ledger will be returned. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLedgerEntry">
      <MemberSignature Language="C#" Value="public virtual Azure.Response GetLedgerEntry (string transactionId, string subLedgerId = default, Azure.RequestOptions requestOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response GetLedgerEntry(string transactionId, string subLedgerId, class Azure.RequestOptions requestOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetLedgerEntry(System.String,System.String,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLedgerEntry (transactionId As String, Optional subLedgerId As String = Nothing, Optional requestOptions As RequestOptions = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member GetLedgerEntry : string * string * Azure.RequestOptions -&gt; Azure.Response&#xA;override this.GetLedgerEntry : string * string * Azure.RequestOptions -&gt; Azure.Response" Usage="confidentialLedgerClient.GetLedgerEntry (transactionId, subLedgerId, requestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.ConfidentialLedger</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transactionId" Type="System.String" />
        <Parameter Name="subLedgerId" Type="System.String" />
        <Parameter Name="requestOptions" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="transactionId"> Identifies a write transaction. </param>
        <param name="subLedgerId"> The sub-ledger id. </param>
        <param name="requestOptions"> The request options. </param>
        <summary> To return older ledger entries, the relevant sections of the ledger must be read from disk and validated. To prevent blocking within the enclave, the response will indicate whether the entry is ready and part of the response, or if the loading is still ongoing. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLedgerEntryAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; GetLedgerEntryAsync (string transactionId, string subLedgerId = default, Azure.RequestOptions requestOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; GetLedgerEntryAsync(string transactionId, string subLedgerId, class Azure.RequestOptions requestOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetLedgerEntryAsync(System.String,System.String,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLedgerEntryAsync (transactionId As String, Optional subLedgerId As String = Nothing, Optional requestOptions As RequestOptions = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member GetLedgerEntryAsync : string * string * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.GetLedgerEntryAsync : string * string * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="confidentialLedgerClient.GetLedgerEntryAsync (transactionId, subLedgerId, requestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.ConfidentialLedger</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transactionId" Type="System.String" />
        <Parameter Name="subLedgerId" Type="System.String" />
        <Parameter Name="requestOptions" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="transactionId"> Identifies a write transaction. </param>
        <param name="subLedgerId"> The sub-ledger id. </param>
        <param name="requestOptions"> The request options. </param>
        <summary> To return older ledger entries, the relevant sections of the ledger must be read from disk and validated. To prevent blocking within the enclave, the response will indicate whether the entry is ready and part of the response, or if the loading is still ongoing. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetReceipt">
      <MemberSignature Language="C#" Value="public virtual Azure.Response GetReceipt (string transactionId, Azure.RequestOptions requestOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response GetReceipt(string transactionId, class Azure.RequestOptions requestOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetReceipt(System.String,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetReceipt (transactionId As String, Optional requestOptions As RequestOptions = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member GetReceipt : string * Azure.RequestOptions -&gt; Azure.Response&#xA;override this.GetReceipt : string * Azure.RequestOptions -&gt; Azure.Response" Usage="confidentialLedgerClient.GetReceipt (transactionId, requestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.ConfidentialLedger</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transactionId" Type="System.String" />
        <Parameter Name="requestOptions" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="transactionId"> Identifies a write transaction. </param>
        <param name="requestOptions"> The request options. </param>
        <summary> Gets a receipt certifying ledger contents at a particular transaction id. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetReceiptAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; GetReceiptAsync (string transactionId, Azure.RequestOptions requestOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; GetReceiptAsync(string transactionId, class Azure.RequestOptions requestOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetReceiptAsync(System.String,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetReceiptAsync (transactionId As String, Optional requestOptions As RequestOptions = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member GetReceiptAsync : string * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.GetReceiptAsync : string * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="confidentialLedgerClient.GetReceiptAsync (transactionId, requestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.ConfidentialLedger</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transactionId" Type="System.String" />
        <Parameter Name="requestOptions" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="transactionId"> Identifies a write transaction. </param>
        <param name="requestOptions"> The request options. </param>
        <summary> Gets a receipt certifying ledger contents at a particular transaction id. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTransactionStatus">
      <MemberSignature Language="C#" Value="public virtual Azure.Response GetTransactionStatus (string transactionId, Azure.RequestOptions requestOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response GetTransactionStatus(string transactionId, class Azure.RequestOptions requestOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetTransactionStatus(System.String,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTransactionStatus (transactionId As String, Optional requestOptions As RequestOptions = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member GetTransactionStatus : string * Azure.RequestOptions -&gt; Azure.Response&#xA;override this.GetTransactionStatus : string * Azure.RequestOptions -&gt; Azure.Response" Usage="confidentialLedgerClient.GetTransactionStatus (transactionId, requestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.ConfidentialLedger</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transactionId" Type="System.String" />
        <Parameter Name="requestOptions" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="transactionId"> Identifies a write transaction. </param>
        <param name="requestOptions"> The request options. </param>
        <summary> Gets the status of an entry identified by a transaction id. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTransactionStatusAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; GetTransactionStatusAsync (string transactionId, Azure.RequestOptions requestOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; GetTransactionStatusAsync(string transactionId, class Azure.RequestOptions requestOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetTransactionStatusAsync(System.String,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTransactionStatusAsync (transactionId As String, Optional requestOptions As RequestOptions = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member GetTransactionStatusAsync : string * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.GetTransactionStatusAsync : string * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="confidentialLedgerClient.GetTransactionStatusAsync (transactionId, requestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.ConfidentialLedger</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transactionId" Type="System.String" />
        <Parameter Name="requestOptions" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="transactionId"> Identifies a write transaction. </param>
        <param name="requestOptions"> The request options. </param>
        <summary> Gets the status of an entry identified by a transaction id. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUser">
      <MemberSignature Language="C#" Value="public virtual Azure.Response GetUser (string userId, Azure.RequestOptions requestOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response GetUser(string userId, class Azure.RequestOptions requestOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetUser(System.String,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetUser (userId As String, Optional requestOptions As RequestOptions = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member GetUser : string * Azure.RequestOptions -&gt; Azure.Response&#xA;override this.GetUser : string * Azure.RequestOptions -&gt; Azure.Response" Usage="confidentialLedgerClient.GetUser (userId, requestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.ConfidentialLedger</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userId" Type="System.String" />
        <Parameter Name="requestOptions" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="userId"> The user id, either an AAD object ID or certificate fingerprint. </param>
        <param name="requestOptions"> The request options. </param>
        <summary> Gets a user. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUserAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; GetUserAsync (string userId, Azure.RequestOptions requestOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; GetUserAsync(string userId, class Azure.RequestOptions requestOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.GetUserAsync(System.String,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetUserAsync (userId As String, Optional requestOptions As RequestOptions = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member GetUserAsync : string * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.GetUserAsync : string * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="confidentialLedgerClient.GetUserAsync (userId, requestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.ConfidentialLedger</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userId" Type="System.String" />
        <Parameter Name="requestOptions" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="userId"> The user id, either an AAD object ID or certificate fingerprint. </param>
        <param name="requestOptions"> The request options. </param>
        <summary> Gets a user. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Pipeline">
      <MemberSignature Language="C#" Value="public virtual Azure.Core.Pipeline.HttpPipeline Pipeline { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Core.Pipeline.HttpPipeline Pipeline" />
      <MemberSignature Language="DocId" Value="P:Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.Pipeline" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Pipeline As HttpPipeline" />
      <MemberSignature Language="F#" Value="member this.Pipeline : Azure.Core.Pipeline.HttpPipeline" Usage="Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.Pipeline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.ConfidentialLedger</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.Pipeline.HttpPipeline</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The HTTP pipeline for sending and receiving REST requests and responses. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PostLedgerEntry">
      <MemberSignature Language="C#" Value="public virtual Azure.Response PostLedgerEntry (Azure.Core.RequestContent requestBody, string subLedgerId = default, Azure.RequestOptions requestOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response PostLedgerEntry(class Azure.Core.RequestContent requestBody, string subLedgerId, class Azure.RequestOptions requestOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.PostLedgerEntry(Azure.Core.RequestContent,System.String,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PostLedgerEntry (requestBody As RequestContent, Optional subLedgerId As String = Nothing, Optional requestOptions As RequestOptions = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member PostLedgerEntry : Azure.Core.RequestContent * string * Azure.RequestOptions -&gt; Azure.Response&#xA;override this.PostLedgerEntry : Azure.Core.RequestContent * string * Azure.RequestOptions -&gt; Azure.Response" Usage="confidentialLedgerClient.PostLedgerEntry (requestBody, subLedgerId, requestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.ConfidentialLedger</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestBody" Type="Azure.Core.RequestContent" />
        <Parameter Name="subLedgerId" Type="System.String" />
        <Parameter Name="requestOptions" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="requestBody"> The request body. </param>
        <param name="subLedgerId"> The sub-ledger id. </param>
        <param name="requestOptions"> The request options. </param>
        <summary> A sub-ledger id may optionally be specified. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Request Body</c>:
            <list type="table"><listeader><term>Name</term><term>Type</term><term>Required</term><term>Description</term></listeader><item><term>contents</term><term>string</term><term>Yes</term><term> Contents of the ledger entry. </term></item><item><term>subLedgerId</term><term>string</term><term /><term> Identifier for sub-ledgers. </term></item><item><term>transactionId</term><term>string</term><term /><term> A unique identifier for the state of the ledger. If returned as part of a LedgerEntry, it indicates the state from which the entry was read. </term></item></list></remarks>
      </Docs>
    </Member>
    <Member MemberName="PostLedgerEntryAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; PostLedgerEntryAsync (Azure.Core.RequestContent requestBody, string subLedgerId = default, Azure.RequestOptions requestOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; PostLedgerEntryAsync(class Azure.Core.RequestContent requestBody, string subLedgerId, class Azure.RequestOptions requestOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.ConfidentialLedger.ConfidentialLedgerClient.PostLedgerEntryAsync(Azure.Core.RequestContent,System.String,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PostLedgerEntryAsync (requestBody As RequestContent, Optional subLedgerId As String = Nothing, Optional requestOptions As RequestOptions = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member PostLedgerEntryAsync : Azure.Core.RequestContent * string * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.PostLedgerEntryAsync : Azure.Core.RequestContent * string * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="confidentialLedgerClient.PostLedgerEntryAsync (requestBody, subLedgerId, requestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.ConfidentialLedger</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestBody" Type="Azure.Core.RequestContent" />
        <Parameter Name="subLedgerId" Type="System.String" />
        <Parameter Name="requestOptions" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="requestBody"> The request body. </param>
        <param name="subLedgerId"> The sub-ledger id. </param>
        <param name="requestOptions"> The request options. </param>
        <summary> A sub-ledger id may optionally be specified. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Request Body</c>:
            <list type="table"><listeader><term>Name</term><term>Type</term><term>Required</term><term>Description</term></listeader><item><term>contents</term><term>string</term><term>Yes</term><term> Contents of the ledger entry. </term></item><item><term>subLedgerId</term><term>string</term><term /><term> Identifier for sub-ledgers. </term></item><item><term>transactionId</term><term>string</term><term /><term> A unique identifier for the state of the ledger. If returned as part of a LedgerEntry, it indicates the state from which the entry was read. </term></item></list></remarks>
      </Docs>
    </Member>
  </Members>
</Type>

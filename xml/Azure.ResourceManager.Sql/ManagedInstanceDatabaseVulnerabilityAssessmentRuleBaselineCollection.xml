<Type Name="ManagedInstanceDatabaseVulnerabilityAssessmentRuleBaselineCollection" FullName="Azure.ResourceManager.Sql.ManagedInstanceDatabaseVulnerabilityAssessmentRuleBaselineCollection">
  <TypeSignature Language="C#" Value="public class ManagedInstanceDatabaseVulnerabilityAssessmentRuleBaselineCollection : Azure.ResourceManager.Core.ArmCollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ManagedInstanceDatabaseVulnerabilityAssessmentRuleBaselineCollection extends Azure.ResourceManager.Core.ArmCollection" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Sql.ManagedInstanceDatabaseVulnerabilityAssessmentRuleBaselineCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class ManagedInstanceDatabaseVulnerabilityAssessmentRuleBaselineCollection&#xA;Inherits ArmCollection" />
  <TypeSignature Language="F#" Value="type ManagedInstanceDatabaseVulnerabilityAssessmentRuleBaselineCollection = class&#xA;    inherit ArmCollection" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.Core.ArmCollection</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class representing collection of DatabaseVulnerabilityAssessmentRuleBaseline and their operations over its parent. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ManagedInstanceDatabaseVulnerabilityAssessmentRuleBaselineCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceDatabaseVulnerabilityAssessmentRuleBaselineCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Sql.ManagedInstanceDatabaseVulnerabilityAssessmentRuleBaselineCollection" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdate">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.Models.ManagedDatabaseVulnerabilityAssessmentRuleBaselineCreateOrUpdateOperation CreateOrUpdate (string ruleId, Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentPolicyBaselineName baselineName, Azure.ResourceManager.Sql.DatabaseVulnerabilityAssessmentRuleBaselineData parameters, bool waitForCompletion = true, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.Models.ManagedDatabaseVulnerabilityAssessmentRuleBaselineCreateOrUpdateOperation CreateOrUpdate(string ruleId, valuetype Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentPolicyBaselineName baselineName, class Azure.ResourceManager.Sql.DatabaseVulnerabilityAssessmentRuleBaselineData parameters, bool waitForCompletion, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceDatabaseVulnerabilityAssessmentRuleBaselineCollection.CreateOrUpdate(System.String,Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentPolicyBaselineName,Azure.ResourceManager.Sql.DatabaseVulnerabilityAssessmentRuleBaselineData,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdate (ruleId As String, baselineName As VulnerabilityAssessmentPolicyBaselineName, parameters As DatabaseVulnerabilityAssessmentRuleBaselineData, Optional waitForCompletion As Boolean = true, Optional cancellationToken As CancellationToken = Nothing) As ManagedDatabaseVulnerabilityAssessmentRuleBaselineCreateOrUpdateOperation" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdate : string * Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentPolicyBaselineName * Azure.ResourceManager.Sql.DatabaseVulnerabilityAssessmentRuleBaselineData * bool * System.Threading.CancellationToken -&gt; Azure.ResourceManager.Sql.Models.ManagedDatabaseVulnerabilityAssessmentRuleBaselineCreateOrUpdateOperation&#xA;override this.CreateOrUpdate : string * Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentPolicyBaselineName * Azure.ResourceManager.Sql.DatabaseVulnerabilityAssessmentRuleBaselineData * bool * System.Threading.CancellationToken -&gt; Azure.ResourceManager.Sql.Models.ManagedDatabaseVulnerabilityAssessmentRuleBaselineCreateOrUpdateOperation" Usage="managedInstanceDatabaseVulnerabilityAssessmentRuleBaselineCollection.CreateOrUpdate (ruleId, baselineName, parameters, waitForCompletion, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.Models.ManagedDatabaseVulnerabilityAssessmentRuleBaselineCreateOrUpdateOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ruleId" Type="System.String" />
        <Parameter Name="baselineName" Type="Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentPolicyBaselineName" />
        <Parameter Name="parameters" Type="Azure.ResourceManager.Sql.DatabaseVulnerabilityAssessmentRuleBaselineData" />
        <Parameter Name="waitForCompletion" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="ruleId"> The vulnerability assessment rule ID. </param>
        <param name="baselineName"> The name of the vulnerability assessment rule baseline (default implies a baseline on a database level rule and master for server level rule). </param>
        <param name="parameters"> The requested rule baseline resource. </param>
        <param name="waitForCompletion"> Waits for the completion of the long running operations. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Creates or updates a database's vulnerability assessment rule baseline. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="ruleId" /> or <paramref name="parameters" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.Sql.Models.ManagedDatabaseVulnerabilityAssessmentRuleBaselineCreateOrUpdateOperation&gt; CreateOrUpdateAsync (string ruleId, Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentPolicyBaselineName baselineName, Azure.ResourceManager.Sql.DatabaseVulnerabilityAssessmentRuleBaselineData parameters, bool waitForCompletion = true, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.Sql.Models.ManagedDatabaseVulnerabilityAssessmentRuleBaselineCreateOrUpdateOperation&gt; CreateOrUpdateAsync(string ruleId, valuetype Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentPolicyBaselineName baselineName, class Azure.ResourceManager.Sql.DatabaseVulnerabilityAssessmentRuleBaselineData parameters, bool waitForCompletion, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceDatabaseVulnerabilityAssessmentRuleBaselineCollection.CreateOrUpdateAsync(System.String,Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentPolicyBaselineName,Azure.ResourceManager.Sql.DatabaseVulnerabilityAssessmentRuleBaselineData,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdateAsync (ruleId As String, baselineName As VulnerabilityAssessmentPolicyBaselineName, parameters As DatabaseVulnerabilityAssessmentRuleBaselineData, Optional waitForCompletion As Boolean = true, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ManagedDatabaseVulnerabilityAssessmentRuleBaselineCreateOrUpdateOperation)" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdateAsync : string * Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentPolicyBaselineName * Azure.ResourceManager.Sql.DatabaseVulnerabilityAssessmentRuleBaselineData * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.Sql.Models.ManagedDatabaseVulnerabilityAssessmentRuleBaselineCreateOrUpdateOperation&gt;&#xA;override this.CreateOrUpdateAsync : string * Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentPolicyBaselineName * Azure.ResourceManager.Sql.DatabaseVulnerabilityAssessmentRuleBaselineData * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.Sql.Models.ManagedDatabaseVulnerabilityAssessmentRuleBaselineCreateOrUpdateOperation&gt;" Usage="managedInstanceDatabaseVulnerabilityAssessmentRuleBaselineCollection.CreateOrUpdateAsync (ruleId, baselineName, parameters, waitForCompletion, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.Sql.Models.ManagedDatabaseVulnerabilityAssessmentRuleBaselineCreateOrUpdateOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ruleId" Type="System.String" />
        <Parameter Name="baselineName" Type="Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentPolicyBaselineName" />
        <Parameter Name="parameters" Type="Azure.ResourceManager.Sql.DatabaseVulnerabilityAssessmentRuleBaselineData" />
        <Parameter Name="waitForCompletion" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="ruleId"> The vulnerability assessment rule ID. </param>
        <param name="baselineName"> The name of the vulnerability assessment rule baseline (default implies a baseline on a database level rule and master for server level rule). </param>
        <param name="parameters"> The requested rule baseline resource. </param>
        <param name="waitForCompletion"> Waits for the completion of the long running operations. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Creates or updates a database's vulnerability assessment rule baseline. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="ruleId" /> or <paramref name="parameters" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;bool&gt; Exists (string ruleId, Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentPolicyBaselineName baselineName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;bool&gt; Exists(string ruleId, valuetype Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentPolicyBaselineName baselineName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceDatabaseVulnerabilityAssessmentRuleBaselineCollection.Exists(System.String,Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentPolicyBaselineName,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Exists (ruleId As String, baselineName As VulnerabilityAssessmentPolicyBaselineName, Optional cancellationToken As CancellationToken = Nothing) As Response(Of Boolean)" />
      <MemberSignature Language="F#" Value="abstract member Exists : string * Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentPolicyBaselineName * System.Threading.CancellationToken -&gt; Azure.Response&lt;bool&gt;&#xA;override this.Exists : string * Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentPolicyBaselineName * System.Threading.CancellationToken -&gt; Azure.Response&lt;bool&gt;" Usage="managedInstanceDatabaseVulnerabilityAssessmentRuleBaselineCollection.Exists (ruleId, baselineName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ruleId" Type="System.String" />
        <Parameter Name="baselineName" Type="Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentPolicyBaselineName" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="ruleId"> The vulnerability assessment rule ID. </param>
        <param name="baselineName"> The name of the vulnerability assessment rule baseline (default implies a baseline on a database level rule and master for server level rule). </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Tries to get details for this resource from the service. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="ruleId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ExistsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt; ExistsAsync (string ruleId, Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentPolicyBaselineName baselineName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;bool&gt;&gt; ExistsAsync(string ruleId, valuetype Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentPolicyBaselineName baselineName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceDatabaseVulnerabilityAssessmentRuleBaselineCollection.ExistsAsync(System.String,Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentPolicyBaselineName,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ExistsAsync (ruleId As String, baselineName As VulnerabilityAssessmentPolicyBaselineName, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of Boolean))" />
      <MemberSignature Language="F#" Value="abstract member ExistsAsync : string * Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentPolicyBaselineName * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt;&#xA;override this.ExistsAsync : string * Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentPolicyBaselineName * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt;" Usage="managedInstanceDatabaseVulnerabilityAssessmentRuleBaselineCollection.ExistsAsync (ruleId, baselineName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Boolean&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ruleId" Type="System.String" />
        <Parameter Name="baselineName" Type="Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentPolicyBaselineName" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="ruleId"> The vulnerability assessment rule ID. </param>
        <param name="baselineName"> The name of the vulnerability assessment rule baseline (default implies a baseline on a database level rule and master for server level rule). </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Tries to get details for this resource from the service. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="ruleId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceDatabaseVulnerabilityAssessmentRuleBaseline&gt; Get (string ruleId, Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentPolicyBaselineName baselineName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ManagedInstanceDatabaseVulnerabilityAssessmentRuleBaseline&gt; Get(string ruleId, valuetype Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentPolicyBaselineName baselineName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceDatabaseVulnerabilityAssessmentRuleBaselineCollection.Get(System.String,Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentPolicyBaselineName,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Get (ruleId As String, baselineName As VulnerabilityAssessmentPolicyBaselineName, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ManagedInstanceDatabaseVulnerabilityAssessmentRuleBaseline)" />
      <MemberSignature Language="F#" Value="abstract member Get : string * Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentPolicyBaselineName * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceDatabaseVulnerabilityAssessmentRuleBaseline&gt;&#xA;override this.Get : string * Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentPolicyBaselineName * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceDatabaseVulnerabilityAssessmentRuleBaseline&gt;" Usage="managedInstanceDatabaseVulnerabilityAssessmentRuleBaselineCollection.Get (ruleId, baselineName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceDatabaseVulnerabilityAssessmentRuleBaseline&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ruleId" Type="System.String" />
        <Parameter Name="baselineName" Type="Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentPolicyBaselineName" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="ruleId"> The vulnerability assessment rule ID. </param>
        <param name="baselineName"> The name of the vulnerability assessment rule baseline (default implies a baseline on a database level rule and master for server level rule). </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets a database's vulnerability assessment rule baseline. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="ruleId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceDatabaseVulnerabilityAssessmentRuleBaseline&gt;&gt; GetAsync (string ruleId, Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentPolicyBaselineName baselineName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ManagedInstanceDatabaseVulnerabilityAssessmentRuleBaseline&gt;&gt; GetAsync(string ruleId, valuetype Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentPolicyBaselineName baselineName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceDatabaseVulnerabilityAssessmentRuleBaselineCollection.GetAsync(System.String,Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentPolicyBaselineName,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAsync (ruleId As String, baselineName As VulnerabilityAssessmentPolicyBaselineName, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ManagedInstanceDatabaseVulnerabilityAssessmentRuleBaseline))" />
      <MemberSignature Language="F#" Value="abstract member GetAsync : string * Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentPolicyBaselineName * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceDatabaseVulnerabilityAssessmentRuleBaseline&gt;&gt;&#xA;override this.GetAsync : string * Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentPolicyBaselineName * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceDatabaseVulnerabilityAssessmentRuleBaseline&gt;&gt;" Usage="managedInstanceDatabaseVulnerabilityAssessmentRuleBaselineCollection.GetAsync (ruleId, baselineName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceDatabaseVulnerabilityAssessmentRuleBaseline&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ruleId" Type="System.String" />
        <Parameter Name="baselineName" Type="Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentPolicyBaselineName" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="ruleId"> The vulnerability assessment rule ID. </param>
        <param name="baselineName"> The name of the vulnerability assessment rule baseline (default implies a baseline on a database level rule and master for server level rule). </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets a database's vulnerability assessment rule baseline. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="ruleId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetIfExists">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceDatabaseVulnerabilityAssessmentRuleBaseline&gt; GetIfExists (string ruleId, Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentPolicyBaselineName baselineName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ManagedInstanceDatabaseVulnerabilityAssessmentRuleBaseline&gt; GetIfExists(string ruleId, valuetype Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentPolicyBaselineName baselineName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceDatabaseVulnerabilityAssessmentRuleBaselineCollection.GetIfExists(System.String,Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentPolicyBaselineName,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIfExists (ruleId As String, baselineName As VulnerabilityAssessmentPolicyBaselineName, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ManagedInstanceDatabaseVulnerabilityAssessmentRuleBaseline)" />
      <MemberSignature Language="F#" Value="abstract member GetIfExists : string * Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentPolicyBaselineName * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceDatabaseVulnerabilityAssessmentRuleBaseline&gt;&#xA;override this.GetIfExists : string * Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentPolicyBaselineName * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceDatabaseVulnerabilityAssessmentRuleBaseline&gt;" Usage="managedInstanceDatabaseVulnerabilityAssessmentRuleBaselineCollection.GetIfExists (ruleId, baselineName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceDatabaseVulnerabilityAssessmentRuleBaseline&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ruleId" Type="System.String" />
        <Parameter Name="baselineName" Type="Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentPolicyBaselineName" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="ruleId"> The vulnerability assessment rule ID. </param>
        <param name="baselineName"> The name of the vulnerability assessment rule baseline (default implies a baseline on a database level rule and master for server level rule). </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Tries to get details for this resource from the service. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="ruleId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetIfExistsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceDatabaseVulnerabilityAssessmentRuleBaseline&gt;&gt; GetIfExistsAsync (string ruleId, Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentPolicyBaselineName baselineName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ManagedInstanceDatabaseVulnerabilityAssessmentRuleBaseline&gt;&gt; GetIfExistsAsync(string ruleId, valuetype Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentPolicyBaselineName baselineName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ManagedInstanceDatabaseVulnerabilityAssessmentRuleBaselineCollection.GetIfExistsAsync(System.String,Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentPolicyBaselineName,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIfExistsAsync (ruleId As String, baselineName As VulnerabilityAssessmentPolicyBaselineName, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ManagedInstanceDatabaseVulnerabilityAssessmentRuleBaseline))" />
      <MemberSignature Language="F#" Value="abstract member GetIfExistsAsync : string * Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentPolicyBaselineName * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceDatabaseVulnerabilityAssessmentRuleBaseline&gt;&gt;&#xA;override this.GetIfExistsAsync : string * Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentPolicyBaselineName * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceDatabaseVulnerabilityAssessmentRuleBaseline&gt;&gt;" Usage="managedInstanceDatabaseVulnerabilityAssessmentRuleBaselineCollection.GetIfExistsAsync (ruleId, baselineName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ManagedInstanceDatabaseVulnerabilityAssessmentRuleBaseline&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ruleId" Type="System.String" />
        <Parameter Name="baselineName" Type="Azure.ResourceManager.Sql.Models.VulnerabilityAssessmentPolicyBaselineName" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="ruleId"> The vulnerability assessment rule ID. </param>
        <param name="baselineName"> The name of the vulnerability assessment rule baseline (default implies a baseline on a database level rule and master for server level rule). </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Tries to get details for this resource from the service. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="ruleId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ValidResourceType">
      <MemberSignature Language="C#" Value="protected override Azure.ResourceManager.ResourceType ValidResourceType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.ResourceType ValidResourceType" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Sql.ManagedInstanceDatabaseVulnerabilityAssessmentRuleBaselineCollection.ValidResourceType" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ValidResourceType As ResourceType" />
      <MemberSignature Language="F#" Value="member this.ValidResourceType : Azure.ResourceManager.ResourceType" Usage="Azure.ResourceManager.Sql.ManagedInstanceDatabaseVulnerabilityAssessmentRuleBaselineCollection.ValidResourceType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ResourceType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets the valid resource type for this object. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

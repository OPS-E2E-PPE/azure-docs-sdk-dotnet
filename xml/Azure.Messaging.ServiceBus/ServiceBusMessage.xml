<Type Name="ServiceBusMessage" FullName="Azure.Messaging.ServiceBus.ServiceBusMessage">
  <TypeSignature Language="C#" Value="public class ServiceBusMessage" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServiceBusMessage extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Messaging.ServiceBus.ServiceBusMessage" />
  <TypeSignature Language="VB.NET" Value="Public Class ServiceBusMessage" />
  <TypeSignature Language="F#" Value="type ServiceBusMessage = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Messaging.ServiceBus</AssemblyName>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            The message object used to communicate and transfer data with Service Bus.
            </summary>
    <remarks>
            The message structure is discussed in detail in the <a href="https://docs.microsoft.com/azure/service-bus-messaging/service-bus-messages-payloads">product documentation.</a></remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceBusMessage ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.ServiceBus.ServiceBusMessage.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.ServiceBus</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Creates a new message.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceBusMessage (Azure.Core.BinaryData body);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype Azure.Core.BinaryData body) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.ServiceBus.ServiceBusMessage.#ctor(Azure.Core.BinaryData)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (body As BinaryData)" />
      <MemberSignature Language="F#" Value="new Azure.Messaging.ServiceBus.ServiceBusMessage : Azure.Core.BinaryData -&gt; Azure.Messaging.ServiceBus.ServiceBusMessage" Usage="new Azure.Messaging.ServiceBus.ServiceBusMessage body" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.ServiceBus</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="body" Type="Azure.Core.BinaryData" />
      </Parameters>
      <Docs>
        <param name="body">The payload of the message.</param>
        <summary>
            Creates a new message from the specified <see cref="T:Azure.Core.BinaryData" /> instance.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceBusMessage (Azure.Messaging.ServiceBus.ServiceBusReceivedMessage receivedMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Azure.Messaging.ServiceBus.ServiceBusReceivedMessage receivedMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.ServiceBus.ServiceBusMessage.#ctor(Azure.Messaging.ServiceBus.ServiceBusReceivedMessage)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (receivedMessage As ServiceBusReceivedMessage)" />
      <MemberSignature Language="F#" Value="new Azure.Messaging.ServiceBus.ServiceBusMessage : Azure.Messaging.ServiceBus.ServiceBusReceivedMessage -&gt; Azure.Messaging.ServiceBus.ServiceBusMessage" Usage="new Azure.Messaging.ServiceBus.ServiceBusMessage receivedMessage" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.ServiceBus</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="receivedMessage" Type="Azure.Messaging.ServiceBus.ServiceBusReceivedMessage" />
      </Parameters>
      <Docs>
        <param name="receivedMessage">The received message to copy the data from.</param>
        <summary>
            Creates a new message from the specified received message by copying the properties.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceBusMessage (ReadOnlyMemory&lt;byte&gt; body);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt; body) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.ServiceBus.ServiceBusMessage.#ctor(System.ReadOnlyMemory{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (body As ReadOnlyMemory(Of Byte))" />
      <MemberSignature Language="F#" Value="new Azure.Messaging.ServiceBus.ServiceBusMessage : ReadOnlyMemory&lt;byte&gt; -&gt; Azure.Messaging.ServiceBus.ServiceBusMessage" Usage="new Azure.Messaging.ServiceBus.ServiceBusMessage body" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.ServiceBus</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="body" Type="System.ReadOnlyMemory&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="body">The payload of the message in bytes.</param>
        <summary>
            Creates a new message from the specified payload.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceBusMessage (string body);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string body) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.ServiceBus.ServiceBusMessage.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (body As String)" />
      <MemberSignature Language="F#" Value="new Azure.Messaging.ServiceBus.ServiceBusMessage : string -&gt; Azure.Messaging.ServiceBus.ServiceBusMessage" Usage="new Azure.Messaging.ServiceBus.ServiceBusMessage body" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.ServiceBus</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="body" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="body">The payload of the message as a string.</param>
        <summary>
            Creates a new message from the specified string, using UTF-8 encoding.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceBusMessage (string body, System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string body, class System.Text.Encoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.ServiceBus.ServiceBusMessage.#ctor(System.String,System.Text.Encoding)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (body As String, encoding As Encoding)" />
      <MemberSignature Language="F#" Value="new Azure.Messaging.ServiceBus.ServiceBusMessage : string * System.Text.Encoding -&gt; Azure.Messaging.ServiceBus.ServiceBusMessage" Usage="new Azure.Messaging.ServiceBus.ServiceBusMessage (body, encoding)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.ServiceBus</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="body" Type="System.String" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="body">The payload of the message as a string.</param>
        <param name="encoding">The encoding to use for the body.</param>
        <summary>
            Creates a new message from the specified string, using the specified encoding.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Body">
      <MemberSignature Language="C#" Value="public Azure.Core.BinaryData Body { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Azure.Core.BinaryData Body" />
      <MemberSignature Language="DocId" Value="P:Azure.Messaging.ServiceBus.ServiceBusMessage.Body" />
      <MemberSignature Language="VB.NET" Value="Public Property Body As BinaryData" />
      <MemberSignature Language="F#" Value="member this.Body : Azure.Core.BinaryData with get, set" Usage="Azure.Messaging.ServiceBus.ServiceBusMessage.Body" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.ServiceBus</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.BinaryData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the body of the message.
            </summary>
        <value>To be added.</value>
        <remarks>
            The easiest way to create a new message from a string is the following:
            <code>
            message.Body = System.Text.Encoding.UTF8.GetBytes("Message1");
            </code></remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentType">
      <MemberSignature Language="C#" Value="public string ContentType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContentType" />
      <MemberSignature Language="DocId" Value="P:Azure.Messaging.ServiceBus.ServiceBusMessage.ContentType" />
      <MemberSignature Language="VB.NET" Value="Public Property ContentType As String" />
      <MemberSignature Language="F#" Value="member this.ContentType : string with get, set" Usage="Azure.Messaging.ServiceBus.ServiceBusMessage.ContentType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.ServiceBus</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the content type descriptor.</summary>
        <value>RFC2045 Content-Type descriptor.</value>
        <remarks>
              Optionally describes the payload of the message, with a descriptor following the format of
              RFC2045, Section 5, for example "application/json".
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="CorrelationId">
      <MemberSignature Language="C#" Value="public string CorrelationId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CorrelationId" />
      <MemberSignature Language="DocId" Value="P:Azure.Messaging.ServiceBus.ServiceBusMessage.CorrelationId" />
      <MemberSignature Language="VB.NET" Value="Public Property CorrelationId As String" />
      <MemberSignature Language="F#" Value="member this.CorrelationId : string with get, set" Usage="Azure.Messaging.ServiceBus.ServiceBusMessage.CorrelationId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.ServiceBus</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the a correlation identifier.</summary>
        <value>Correlation identifier.</value>
        <remarks>
               Allows an application to specify a context for the message for the purposes of correlation,
               for example reflecting the MessageId of a message that is being replied to.
               See <a href="https://docs.microsoft.com/azure/service-bus-messaging/service-bus-messages-payloads?#message-routing-and-correlation">Message Routing and Correlation</a>.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Label">
      <MemberSignature Language="C#" Value="public string Label { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Label" />
      <MemberSignature Language="DocId" Value="P:Azure.Messaging.ServiceBus.ServiceBusMessage.Label" />
      <MemberSignature Language="VB.NET" Value="Public Property Label As String" />
      <MemberSignature Language="F#" Value="member this.Label : string with get, set" Usage="Azure.Messaging.ServiceBus.ServiceBusMessage.Label" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.ServiceBus</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets an application specific label.</summary>
        <value>The application specific label</value>
        <remarks>
              This property enables the application to indicate the purpose of the message to the receiver in a standardized
              fashion, similar to an email subject line. The mapped AMQP property is "subject".
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="MessageId">
      <MemberSignature Language="C#" Value="public string MessageId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MessageId" />
      <MemberSignature Language="DocId" Value="P:Azure.Messaging.ServiceBus.ServiceBusMessage.MessageId" />
      <MemberSignature Language="VB.NET" Value="Public Property MessageId As String" />
      <MemberSignature Language="F#" Value="member this.MessageId : string with get, set" Usage="Azure.Messaging.ServiceBus.ServiceBusMessage.MessageId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.ServiceBus</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the MessageId to identify the message.
            </summary>
        <value>To be added.</value>
        <remarks>
               The message identifier is an application-defined value that uniquely identifies the
               message and its payload. The identifier is a free-form string and can reflect a GUID
               or an identifier derived from the application context. If enabled, the
               <a href="https://docs.microsoft.com/azure/service-bus-messaging/duplicate-detection">duplicate detection</a>
               feature identifies and removes second and further submissions of messages with the
               same MessageId.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="PartitionKey">
      <MemberSignature Language="C#" Value="public string PartitionKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PartitionKey" />
      <MemberSignature Language="DocId" Value="P:Azure.Messaging.ServiceBus.ServiceBusMessage.PartitionKey" />
      <MemberSignature Language="VB.NET" Value="Public Property PartitionKey As String" />
      <MemberSignature Language="F#" Value="member this.PartitionKey : string with get, set" Usage="Azure.Messaging.ServiceBus.ServiceBusMessage.PartitionKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.ServiceBus</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a partition key for sending a message to a partitioned entity.</summary>
        <value>The partition key. Maximum length is 128 characters.</value>
        <remarks>
               For <a href="https://docs.microsoft.com/azure/service-bus-messaging/service-bus-partitioning">partitioned entities</a>,
               setting this value enables assigning related messages to the same internal partition, so that submission sequence
               order is correctly recorded. The partition is chosen by a hash function over this value and cannot be chosen
               directly. For session-aware entities, the <see cref="P:Azure.Messaging.ServiceBus.ServiceBusMessage.SessionId" /> property overrides this value.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,object&gt; Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, object&gt; Properties" />
      <MemberSignature Language="DocId" Value="P:Azure.Messaging.ServiceBus.ServiceBusMessage.Properties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Properties As IDictionary(Of String, Object)" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Collections.Generic.IDictionary&lt;string, obj&gt;" Usage="Azure.Messaging.ServiceBus.ServiceBusMessage.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.ServiceBus</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the "user properties" bag, which can be used for custom message metadata.
            </summary>
        <value>To be added.</value>
        <remarks>
            Only following value types are supported:
            byte, sbyte, char, short, ushort, int, uint, long, ulong, float, double, decimal,
            bool, Guid, string, Uri, DateTime, DateTimeOffset, TimeSpan
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplyTo">
      <MemberSignature Language="C#" Value="public string ReplyTo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ReplyTo" />
      <MemberSignature Language="DocId" Value="P:Azure.Messaging.ServiceBus.ServiceBusMessage.ReplyTo" />
      <MemberSignature Language="VB.NET" Value="Public Property ReplyTo As String" />
      <MemberSignature Language="F#" Value="member this.ReplyTo : string with get, set" Usage="Azure.Messaging.ServiceBus.ServiceBusMessage.ReplyTo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.ServiceBus</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the address of an entity to send replies to.</summary>
        <value>The reply entity address.</value>
        <remarks>
               This optional and application-defined value is a standard way to express a reply path
               to the receiver of the message. When a sender expects a reply, it sets the value to the
               absolute or relative path of the queue or topic it expects the reply to be sent to.
               See <a href="https://docs.microsoft.com/azure/service-bus-messaging/service-bus-messages-payloads?#message-routing-and-correlation">Message Routing and Correlation</a>.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplyToSessionId">
      <MemberSignature Language="C#" Value="public string ReplyToSessionId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ReplyToSessionId" />
      <MemberSignature Language="DocId" Value="P:Azure.Messaging.ServiceBus.ServiceBusMessage.ReplyToSessionId" />
      <MemberSignature Language="VB.NET" Value="Public Property ReplyToSessionId As String" />
      <MemberSignature Language="F#" Value="member this.ReplyToSessionId : string with get, set" Usage="Azure.Messaging.ServiceBus.ServiceBusMessage.ReplyToSessionId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.ServiceBus</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a session identifier augmenting the <see cref="P:Azure.Messaging.ServiceBus.ServiceBusMessage.ReplyTo" /> address.</summary>
        <value>Session identifier. Maximum length is 128 characters.</value>
        <remarks>
               This value augments the ReplyTo information and specifies which SessionId should be set
               for the reply when sent to the reply entity. See <a href="https://docs.microsoft.com/azure/service-bus-messaging/service-bus-messages-payloads?#message-routing-and-correlation">Message Routing and Correlation</a></remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduledEnqueueTime">
      <MemberSignature Language="C#" Value="public DateTimeOffset ScheduledEnqueueTime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTimeOffset ScheduledEnqueueTime" />
      <MemberSignature Language="DocId" Value="P:Azure.Messaging.ServiceBus.ServiceBusMessage.ScheduledEnqueueTime" />
      <MemberSignature Language="VB.NET" Value="Public Property ScheduledEnqueueTime As DateTimeOffset" />
      <MemberSignature Language="F#" Value="member this.ScheduledEnqueueTime : DateTimeOffset with get, set" Usage="Azure.Messaging.ServiceBus.ServiceBusMessage.ScheduledEnqueueTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.ServiceBus</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the date and time in UTC at which the message will be enqueued. This
            property returns the time in UTC; when setting the property, the supplied DateTime value must also be in UTC.</summary>
        <value>The scheduled enqueue time in UTC. This value is for delayed message sending.
            It is utilized to delay messages sending to a specific time in the future.</value>
        <remarks> Message enqueuing time does not mean that the message will be sent at the same time. It will get enqueued, but the actual sending time
            depends on the queue's workload and its state.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SessionId">
      <MemberSignature Language="C#" Value="public string SessionId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SessionId" />
      <MemberSignature Language="DocId" Value="P:Azure.Messaging.ServiceBus.ServiceBusMessage.SessionId" />
      <MemberSignature Language="VB.NET" Value="Public Property SessionId As String" />
      <MemberSignature Language="F#" Value="member this.SessionId : string with get, set" Usage="Azure.Messaging.ServiceBus.ServiceBusMessage.SessionId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.ServiceBus</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the session identifier for a session-aware entity.</summary>
        <value>The session identifier. Maximum length is 128 characters.</value>
        <remarks>
               For session-aware entities, this application-defined value specifies the session
               affiliation of the message. Messages with the same session identifier are subject
               to summary locking and enable exact in-order processing and demultiplexing.
               For session-unaware entities, this value is ignored.
               See <a href="https://docs.microsoft.com/azure/service-bus-messaging/message-sessions">Message Sessions</a>.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="TimeToLive">
      <MemberSignature Language="C#" Value="public TimeSpan TimeToLive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan TimeToLive" />
      <MemberSignature Language="DocId" Value="P:Azure.Messaging.ServiceBus.ServiceBusMessage.TimeToLive" />
      <MemberSignature Language="VB.NET" Value="Public Property TimeToLive As TimeSpan" />
      <MemberSignature Language="F#" Value="member this.TimeToLive : TimeSpan with get, set" Usage="Azure.Messaging.ServiceBus.ServiceBusMessage.TimeToLive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.ServiceBus</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the message’s "time to live" value.
            </summary>
        <value>The message’s time to live value.</value>
        <remarks>
                This value is the relative duration after which the message expires, starting from the instant
                 the message has been accepted and stored by the broker, as captured in "SystemPropertiesCollection.EnqueuedTimeUtc"/&gt;.
                 When not set explicitly, the assumed value is the DefaultTimeToLive for the respective queue or topic.
                 A message-level <see cref="P:Azure.Messaging.ServiceBus.ServiceBusMessage.TimeToLive" /> value cannot be longer than the entity's DefaultTimeToLive
                 setting and it is silently adjusted if it does.
                 See <a href="https://docs.microsoft.com/azure/service-bus-messaging/message-expiration">Expiration</a></remarks>
      </Docs>
    </Member>
    <Member MemberName="To">
      <MemberSignature Language="C#" Value="public string To { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string To" />
      <MemberSignature Language="DocId" Value="P:Azure.Messaging.ServiceBus.ServiceBusMessage.To" />
      <MemberSignature Language="VB.NET" Value="Public Property To As String" />
      <MemberSignature Language="F#" Value="member this.To : string with get, set" Usage="Azure.Messaging.ServiceBus.ServiceBusMessage.To" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.ServiceBus</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the "to" address.</summary>
        <value>The "to" address.</value>
        <remarks>
               This property is reserved for future use in routing scenarios and presently ignored by the broker itself.
                Applications can use this value in rule-driven
                <a href="https://docs.microsoft.com/azure/service-bus-messaging/service-bus-auto-forwarding">auto-forward chaining</a> scenarios to indicate the
                intended logical destination of the message.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.ServiceBus.ServiceBusMessage.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="serviceBusMessage.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.ServiceBus</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a string that represents the current message.</summary>
        <returns>The string representation of the current message.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ViaPartitionKey">
      <MemberSignature Language="C#" Value="public string ViaPartitionKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ViaPartitionKey" />
      <MemberSignature Language="DocId" Value="P:Azure.Messaging.ServiceBus.ServiceBusMessage.ViaPartitionKey" />
      <MemberSignature Language="VB.NET" Value="Public Property ViaPartitionKey As String" />
      <MemberSignature Language="F#" Value="member this.ViaPartitionKey : string with get, set" Usage="Azure.Messaging.ServiceBus.ServiceBusMessage.ViaPartitionKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.ServiceBus</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a partition key for sending a message into an entity via a partitioned transfer queue.</summary>
        <value>The partition key. Maximum length is 128 characters. </value>
        <remarks>
               If a message is sent via a transfer queue in the scope of a transaction, this value selects the
               transfer queue partition: This is functionally equivalent to <see cref="P:Azure.Messaging.ServiceBus.ServiceBusMessage.PartitionKey" /> and ensures that
               messages are kept together and in order as they are transferred.
               See <a href="https://docs.microsoft.com/azure/service-bus-messaging/service-bus-transactions#transfers-and-send-via">Transfers and Send Via</a>.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>

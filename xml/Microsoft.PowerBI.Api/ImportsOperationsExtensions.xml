<Type Name="ImportsOperationsExtensions" FullName="Microsoft.PowerBI.Api.ImportsOperationsExtensions">
  <TypeSignature Language="C#" Value="public static class ImportsOperationsExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ImportsOperationsExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.PowerBI.Api.ImportsOperationsExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module ImportsOperationsExtensions" />
  <TypeSignature Language="F#" Value="type ImportsOperationsExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.PowerBI.Api</AssemblyName>
    <AssemblyVersion>3.20.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateTemporaryUploadLocation">
      <MemberSignature Language="C#" Value="public static Microsoft.PowerBI.Api.Models.TemporaryUploadLocation CreateTemporaryUploadLocation (this Microsoft.PowerBI.Api.IImportsOperations operations);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.PowerBI.Api.Models.TemporaryUploadLocation CreateTemporaryUploadLocation(class Microsoft.PowerBI.Api.IImportsOperations operations) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerBI.Api.ImportsOperationsExtensions.CreateTemporaryUploadLocation(Microsoft.PowerBI.Api.IImportsOperations)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CreateTemporaryUploadLocation (operations As IImportsOperations) As TemporaryUploadLocation" />
      <MemberSignature Language="F#" Value="static member CreateTemporaryUploadLocation : Microsoft.PowerBI.Api.IImportsOperations -&gt; Microsoft.PowerBI.Api.Models.TemporaryUploadLocation" Usage="Microsoft.PowerBI.Api.ImportsOperationsExtensions.CreateTemporaryUploadLocation operations" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerBI.Api</AssemblyName>
        <AssemblyVersion>3.20.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.PowerBI.Api.Models.TemporaryUploadLocation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.PowerBI.Api.IImportsOperations" RefType="this" />
      </Parameters>
      <Docs>
        <param name="operations">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateTemporaryUploadLocation">
      <MemberSignature Language="C#" Value="public static Microsoft.PowerBI.Api.Models.TemporaryUploadLocation CreateTemporaryUploadLocation (this Microsoft.PowerBI.Api.IImportsOperations operations, Guid groupId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.PowerBI.Api.Models.TemporaryUploadLocation CreateTemporaryUploadLocation(class Microsoft.PowerBI.Api.IImportsOperations operations, valuetype System.Guid groupId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerBI.Api.ImportsOperationsExtensions.CreateTemporaryUploadLocation(Microsoft.PowerBI.Api.IImportsOperations,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CreateTemporaryUploadLocation (operations As IImportsOperations, groupId As Guid) As TemporaryUploadLocation" />
      <MemberSignature Language="F#" Value="static member CreateTemporaryUploadLocation : Microsoft.PowerBI.Api.IImportsOperations * Guid -&gt; Microsoft.PowerBI.Api.Models.TemporaryUploadLocation" Usage="Microsoft.PowerBI.Api.ImportsOperationsExtensions.CreateTemporaryUploadLocation (operations, groupId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerBI.Api</AssemblyName>
        <AssemblyVersion>3.20.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.PowerBI.Api.Models.TemporaryUploadLocation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.PowerBI.Api.IImportsOperations" RefType="this" />
        <Parameter Name="groupId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="operations">To be added.</param>
        <param name="groupId">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateTemporaryUploadLocationAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.PowerBI.Api.Models.TemporaryUploadLocation&gt; CreateTemporaryUploadLocationAsync (this Microsoft.PowerBI.Api.IImportsOperations operations, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.PowerBI.Api.Models.TemporaryUploadLocation&gt; CreateTemporaryUploadLocationAsync(class Microsoft.PowerBI.Api.IImportsOperations operations, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerBI.Api.ImportsOperationsExtensions.CreateTemporaryUploadLocationAsync(Microsoft.PowerBI.Api.IImportsOperations,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CreateTemporaryUploadLocationAsync (operations As IImportsOperations, Optional cancellationToken As CancellationToken = Nothing) As Task(Of TemporaryUploadLocation)" />
      <MemberSignature Language="F#" Value="static member CreateTemporaryUploadLocationAsync : Microsoft.PowerBI.Api.IImportsOperations * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.PowerBI.Api.Models.TemporaryUploadLocation&gt;" Usage="Microsoft.PowerBI.Api.ImportsOperationsExtensions.CreateTemporaryUploadLocationAsync (operations, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerBI.Api</AssemblyName>
        <AssemblyVersion>3.20.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.PowerBI.Api.Models.TemporaryUploadLocation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.PowerBI.Api.IImportsOperations" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateTemporaryUploadLocationAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.PowerBI.Api.Models.TemporaryUploadLocation&gt; CreateTemporaryUploadLocationAsync (this Microsoft.PowerBI.Api.IImportsOperations operations, Guid groupId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.PowerBI.Api.Models.TemporaryUploadLocation&gt; CreateTemporaryUploadLocationAsync(class Microsoft.PowerBI.Api.IImportsOperations operations, valuetype System.Guid groupId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerBI.Api.ImportsOperationsExtensions.CreateTemporaryUploadLocationAsync(Microsoft.PowerBI.Api.IImportsOperations,System.Guid,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CreateTemporaryUploadLocationAsync (operations As IImportsOperations, groupId As Guid, Optional cancellationToken As CancellationToken = Nothing) As Task(Of TemporaryUploadLocation)" />
      <MemberSignature Language="F#" Value="static member CreateTemporaryUploadLocationAsync : Microsoft.PowerBI.Api.IImportsOperations * Guid * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.PowerBI.Api.Models.TemporaryUploadLocation&gt;" Usage="Microsoft.PowerBI.Api.ImportsOperationsExtensions.CreateTemporaryUploadLocationAsync (operations, groupId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerBI.Api</AssemblyName>
        <AssemblyVersion>3.20.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.PowerBI.Api.Models.TemporaryUploadLocation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.PowerBI.Api.IImportsOperations" RefType="this" />
        <Parameter Name="groupId" Type="System.Guid" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">To be added.</param>
        <param name="groupId">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateTemporaryUploadLocationInGroup">
      <MemberSignature Language="C#" Value="public static Microsoft.PowerBI.Api.Models.TemporaryUploadLocation CreateTemporaryUploadLocationInGroup (this Microsoft.PowerBI.Api.IImportsOperations operations, Guid groupId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.PowerBI.Api.Models.TemporaryUploadLocation CreateTemporaryUploadLocationInGroup(class Microsoft.PowerBI.Api.IImportsOperations operations, valuetype System.Guid groupId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerBI.Api.ImportsOperationsExtensions.CreateTemporaryUploadLocationInGroup(Microsoft.PowerBI.Api.IImportsOperations,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CreateTemporaryUploadLocationInGroup (operations As IImportsOperations, groupId As Guid) As TemporaryUploadLocation" />
      <MemberSignature Language="F#" Value="static member CreateTemporaryUploadLocationInGroup : Microsoft.PowerBI.Api.IImportsOperations * Guid -&gt; Microsoft.PowerBI.Api.Models.TemporaryUploadLocation" Usage="Microsoft.PowerBI.Api.ImportsOperationsExtensions.CreateTemporaryUploadLocationInGroup (operations, groupId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerBI.Api</AssemblyName>
        <AssemblyVersion>3.20.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.PowerBI.Api.Models.TemporaryUploadLocation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.PowerBI.Api.IImportsOperations" RefType="this" />
        <Parameter Name="groupId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="operations">To be added.</param>
        <param name="groupId">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateTemporaryUploadLocationInGroupAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.PowerBI.Api.Models.TemporaryUploadLocation&gt; CreateTemporaryUploadLocationInGroupAsync (this Microsoft.PowerBI.Api.IImportsOperations operations, Guid groupId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.PowerBI.Api.Models.TemporaryUploadLocation&gt; CreateTemporaryUploadLocationInGroupAsync(class Microsoft.PowerBI.Api.IImportsOperations operations, valuetype System.Guid groupId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerBI.Api.ImportsOperationsExtensions.CreateTemporaryUploadLocationInGroupAsync(Microsoft.PowerBI.Api.IImportsOperations,System.Guid,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CreateTemporaryUploadLocationInGroupAsync (operations As IImportsOperations, groupId As Guid, Optional cancellationToken As CancellationToken = Nothing) As Task(Of TemporaryUploadLocation)" />
      <MemberSignature Language="F#" Value="static member CreateTemporaryUploadLocationInGroupAsync : Microsoft.PowerBI.Api.IImportsOperations * Guid * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.PowerBI.Api.Models.TemporaryUploadLocation&gt;" Usage="Microsoft.PowerBI.Api.ImportsOperationsExtensions.CreateTemporaryUploadLocationInGroupAsync (operations, groupId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerBI.Api</AssemblyName>
        <AssemblyVersion>3.20.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.PowerBI.Api.Models.TemporaryUploadLocation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.PowerBI.Api.IImportsOperations" RefType="this" />
        <Parameter Name="groupId" Type="System.Guid" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">To be added.</param>
        <param name="groupId">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetImport">
      <MemberSignature Language="C#" Value="public static Microsoft.PowerBI.Api.Models.Import GetImport (this Microsoft.PowerBI.Api.IImportsOperations operations, Guid importId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.PowerBI.Api.Models.Import GetImport(class Microsoft.PowerBI.Api.IImportsOperations operations, valuetype System.Guid importId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerBI.Api.ImportsOperationsExtensions.GetImport(Microsoft.PowerBI.Api.IImportsOperations,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetImport (operations As IImportsOperations, importId As Guid) As Import" />
      <MemberSignature Language="F#" Value="static member GetImport : Microsoft.PowerBI.Api.IImportsOperations * Guid -&gt; Microsoft.PowerBI.Api.Models.Import" Usage="Microsoft.PowerBI.Api.ImportsOperationsExtensions.GetImport (operations, importId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerBI.Api</AssemblyName>
        <AssemblyVersion>3.20.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.PowerBI.Api.Models.Import</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.PowerBI.Api.IImportsOperations" RefType="this" />
        <Parameter Name="importId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="operations">To be added.</param>
        <param name="importId">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetImport">
      <MemberSignature Language="C#" Value="public static Microsoft.PowerBI.Api.Models.Import GetImport (this Microsoft.PowerBI.Api.IImportsOperations operations, Guid groupId, Guid importId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.PowerBI.Api.Models.Import GetImport(class Microsoft.PowerBI.Api.IImportsOperations operations, valuetype System.Guid groupId, valuetype System.Guid importId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerBI.Api.ImportsOperationsExtensions.GetImport(Microsoft.PowerBI.Api.IImportsOperations,System.Guid,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetImport (operations As IImportsOperations, groupId As Guid, importId As Guid) As Import" />
      <MemberSignature Language="F#" Value="static member GetImport : Microsoft.PowerBI.Api.IImportsOperations * Guid * Guid -&gt; Microsoft.PowerBI.Api.Models.Import" Usage="Microsoft.PowerBI.Api.ImportsOperationsExtensions.GetImport (operations, groupId, importId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerBI.Api</AssemblyName>
        <AssemblyVersion>3.20.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.PowerBI.Api.Models.Import</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.PowerBI.Api.IImportsOperations" RefType="this" />
        <Parameter Name="groupId" Type="System.Guid" />
        <Parameter Name="importId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="operations">To be added.</param>
        <param name="groupId">To be added.</param>
        <param name="importId">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetImportAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.PowerBI.Api.Models.Import&gt; GetImportAsync (this Microsoft.PowerBI.Api.IImportsOperations operations, Guid importId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.PowerBI.Api.Models.Import&gt; GetImportAsync(class Microsoft.PowerBI.Api.IImportsOperations operations, valuetype System.Guid importId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerBI.Api.ImportsOperationsExtensions.GetImportAsync(Microsoft.PowerBI.Api.IImportsOperations,System.Guid,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetImportAsync (operations As IImportsOperations, importId As Guid, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Import)" />
      <MemberSignature Language="F#" Value="static member GetImportAsync : Microsoft.PowerBI.Api.IImportsOperations * Guid * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.PowerBI.Api.Models.Import&gt;" Usage="Microsoft.PowerBI.Api.ImportsOperationsExtensions.GetImportAsync (operations, importId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerBI.Api</AssemblyName>
        <AssemblyVersion>3.20.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.PowerBI.Api.Models.Import&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.PowerBI.Api.IImportsOperations" RefType="this" />
        <Parameter Name="importId" Type="System.Guid" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">To be added.</param>
        <param name="importId">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetImportAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.PowerBI.Api.Models.Import&gt; GetImportAsync (this Microsoft.PowerBI.Api.IImportsOperations operations, Guid groupId, Guid importId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.PowerBI.Api.Models.Import&gt; GetImportAsync(class Microsoft.PowerBI.Api.IImportsOperations operations, valuetype System.Guid groupId, valuetype System.Guid importId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerBI.Api.ImportsOperationsExtensions.GetImportAsync(Microsoft.PowerBI.Api.IImportsOperations,System.Guid,System.Guid,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetImportAsync (operations As IImportsOperations, groupId As Guid, importId As Guid, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Import)" />
      <MemberSignature Language="F#" Value="static member GetImportAsync : Microsoft.PowerBI.Api.IImportsOperations * Guid * Guid * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.PowerBI.Api.Models.Import&gt;" Usage="Microsoft.PowerBI.Api.ImportsOperationsExtensions.GetImportAsync (operations, groupId, importId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerBI.Api</AssemblyName>
        <AssemblyVersion>3.20.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.PowerBI.Api.Models.Import&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.PowerBI.Api.IImportsOperations" RefType="this" />
        <Parameter Name="groupId" Type="System.Guid" />
        <Parameter Name="importId" Type="System.Guid" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">To be added.</param>
        <param name="groupId">To be added.</param>
        <param name="importId">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetImportInGroup">
      <MemberSignature Language="C#" Value="public static Microsoft.PowerBI.Api.Models.Import GetImportInGroup (this Microsoft.PowerBI.Api.IImportsOperations operations, Guid groupId, Guid importId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.PowerBI.Api.Models.Import GetImportInGroup(class Microsoft.PowerBI.Api.IImportsOperations operations, valuetype System.Guid groupId, valuetype System.Guid importId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerBI.Api.ImportsOperationsExtensions.GetImportInGroup(Microsoft.PowerBI.Api.IImportsOperations,System.Guid,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetImportInGroup (operations As IImportsOperations, groupId As Guid, importId As Guid) As Import" />
      <MemberSignature Language="F#" Value="static member GetImportInGroup : Microsoft.PowerBI.Api.IImportsOperations * Guid * Guid -&gt; Microsoft.PowerBI.Api.Models.Import" Usage="Microsoft.PowerBI.Api.ImportsOperationsExtensions.GetImportInGroup (operations, groupId, importId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerBI.Api</AssemblyName>
        <AssemblyVersion>3.20.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.PowerBI.Api.Models.Import</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.PowerBI.Api.IImportsOperations" RefType="this" />
        <Parameter Name="groupId" Type="System.Guid" />
        <Parameter Name="importId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="operations">To be added.</param>
        <param name="groupId">To be added.</param>
        <param name="importId">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetImportInGroupAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.PowerBI.Api.Models.Import&gt; GetImportInGroupAsync (this Microsoft.PowerBI.Api.IImportsOperations operations, Guid groupId, Guid importId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.PowerBI.Api.Models.Import&gt; GetImportInGroupAsync(class Microsoft.PowerBI.Api.IImportsOperations operations, valuetype System.Guid groupId, valuetype System.Guid importId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerBI.Api.ImportsOperationsExtensions.GetImportInGroupAsync(Microsoft.PowerBI.Api.IImportsOperations,System.Guid,System.Guid,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetImportInGroupAsync (operations As IImportsOperations, groupId As Guid, importId As Guid, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Import)" />
      <MemberSignature Language="F#" Value="static member GetImportInGroupAsync : Microsoft.PowerBI.Api.IImportsOperations * Guid * Guid * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.PowerBI.Api.Models.Import&gt;" Usage="Microsoft.PowerBI.Api.ImportsOperationsExtensions.GetImportInGroupAsync (operations, groupId, importId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerBI.Api</AssemblyName>
        <AssemblyVersion>3.20.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.PowerBI.Api.Models.Import&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.PowerBI.Api.IImportsOperations" RefType="this" />
        <Parameter Name="groupId" Type="System.Guid" />
        <Parameter Name="importId" Type="System.Guid" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">To be added.</param>
        <param name="groupId">To be added.</param>
        <param name="importId">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetImports">
      <MemberSignature Language="C#" Value="public static Microsoft.PowerBI.Api.Models.Imports GetImports (this Microsoft.PowerBI.Api.IImportsOperations operations);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.PowerBI.Api.Models.Imports GetImports(class Microsoft.PowerBI.Api.IImportsOperations operations) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerBI.Api.ImportsOperationsExtensions.GetImports(Microsoft.PowerBI.Api.IImportsOperations)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetImports (operations As IImportsOperations) As Imports" />
      <MemberSignature Language="F#" Value="static member GetImports : Microsoft.PowerBI.Api.IImportsOperations -&gt; Microsoft.PowerBI.Api.Models.Imports" Usage="Microsoft.PowerBI.Api.ImportsOperationsExtensions.GetImports operations" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerBI.Api</AssemblyName>
        <AssemblyVersion>3.20.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.PowerBI.Api.Models.Imports</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.PowerBI.Api.IImportsOperations" RefType="this" />
      </Parameters>
      <Docs>
        <param name="operations">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetImports">
      <MemberSignature Language="C#" Value="public static Microsoft.PowerBI.Api.Models.Imports GetImports (this Microsoft.PowerBI.Api.IImportsOperations operations, Guid groupId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.PowerBI.Api.Models.Imports GetImports(class Microsoft.PowerBI.Api.IImportsOperations operations, valuetype System.Guid groupId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerBI.Api.ImportsOperationsExtensions.GetImports(Microsoft.PowerBI.Api.IImportsOperations,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetImports (operations As IImportsOperations, groupId As Guid) As Imports" />
      <MemberSignature Language="F#" Value="static member GetImports : Microsoft.PowerBI.Api.IImportsOperations * Guid -&gt; Microsoft.PowerBI.Api.Models.Imports" Usage="Microsoft.PowerBI.Api.ImportsOperationsExtensions.GetImports (operations, groupId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerBI.Api</AssemblyName>
        <AssemblyVersion>3.20.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.PowerBI.Api.Models.Imports</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.PowerBI.Api.IImportsOperations" RefType="this" />
        <Parameter Name="groupId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="operations">To be added.</param>
        <param name="groupId">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetImportsAsAdmin">
      <MemberSignature Language="C#" Value="public static Microsoft.PowerBI.Api.Models.Imports GetImportsAsAdmin (this Microsoft.PowerBI.Api.IImportsOperations operations, string expand = default, string filter = default, int? top = default, int? skip = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.PowerBI.Api.Models.Imports GetImportsAsAdmin(class Microsoft.PowerBI.Api.IImportsOperations operations, string expand, string filter, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Nullable`1&lt;int32&gt; skip) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerBI.Api.ImportsOperationsExtensions.GetImportsAsAdmin(Microsoft.PowerBI.Api.IImportsOperations,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetImportsAsAdmin (operations As IImportsOperations, Optional expand As String = Nothing, Optional filter As String = Nothing, Optional top As Nullable(Of Integer) = Nothing, Optional skip As Nullable(Of Integer) = Nothing) As Imports" />
      <MemberSignature Language="F#" Value="static member GetImportsAsAdmin : Microsoft.PowerBI.Api.IImportsOperations * string * string * Nullable&lt;int&gt; * Nullable&lt;int&gt; -&gt; Microsoft.PowerBI.Api.Models.Imports" Usage="Microsoft.PowerBI.Api.ImportsOperationsExtensions.GetImportsAsAdmin (operations, expand, filter, top, skip)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerBI.Api</AssemblyName>
        <AssemblyVersion>3.20.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.PowerBI.Api.Models.Imports</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.PowerBI.Api.IImportsOperations" RefType="this" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="skip" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="operations">To be added.</param>
        <param name="expand">To be added.</param>
        <param name="filter">To be added.</param>
        <param name="top">To be added.</param>
        <param name="skip">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetImportsAsAdminAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.PowerBI.Api.Models.Imports&gt; GetImportsAsAdminAsync (this Microsoft.PowerBI.Api.IImportsOperations operations, string expand = default, string filter = default, int? top = default, int? skip = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.PowerBI.Api.Models.Imports&gt; GetImportsAsAdminAsync(class Microsoft.PowerBI.Api.IImportsOperations operations, string expand, string filter, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Nullable`1&lt;int32&gt; skip, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerBI.Api.ImportsOperationsExtensions.GetImportsAsAdminAsync(Microsoft.PowerBI.Api.IImportsOperations,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetImportsAsAdminAsync (operations As IImportsOperations, Optional expand As String = Nothing, Optional filter As String = Nothing, Optional top As Nullable(Of Integer) = Nothing, Optional skip As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Imports)" />
      <MemberSignature Language="F#" Value="static member GetImportsAsAdminAsync : Microsoft.PowerBI.Api.IImportsOperations * string * string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.PowerBI.Api.Models.Imports&gt;" Usage="Microsoft.PowerBI.Api.ImportsOperationsExtensions.GetImportsAsAdminAsync (operations, expand, filter, top, skip, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerBI.Api</AssemblyName>
        <AssemblyVersion>3.20.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.PowerBI.Api.Models.Imports&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.PowerBI.Api.IImportsOperations" RefType="this" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="skip" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">To be added.</param>
        <param name="expand">To be added.</param>
        <param name="filter">To be added.</param>
        <param name="top">To be added.</param>
        <param name="skip">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetImportsAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.PowerBI.Api.Models.Imports&gt; GetImportsAsync (this Microsoft.PowerBI.Api.IImportsOperations operations, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.PowerBI.Api.Models.Imports&gt; GetImportsAsync(class Microsoft.PowerBI.Api.IImportsOperations operations, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerBI.Api.ImportsOperationsExtensions.GetImportsAsync(Microsoft.PowerBI.Api.IImportsOperations,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetImportsAsync (operations As IImportsOperations, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Imports)" />
      <MemberSignature Language="F#" Value="static member GetImportsAsync : Microsoft.PowerBI.Api.IImportsOperations * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.PowerBI.Api.Models.Imports&gt;" Usage="Microsoft.PowerBI.Api.ImportsOperationsExtensions.GetImportsAsync (operations, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerBI.Api</AssemblyName>
        <AssemblyVersion>3.20.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.PowerBI.Api.Models.Imports&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.PowerBI.Api.IImportsOperations" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetImportsAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.PowerBI.Api.Models.Imports&gt; GetImportsAsync (this Microsoft.PowerBI.Api.IImportsOperations operations, Guid groupId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.PowerBI.Api.Models.Imports&gt; GetImportsAsync(class Microsoft.PowerBI.Api.IImportsOperations operations, valuetype System.Guid groupId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerBI.Api.ImportsOperationsExtensions.GetImportsAsync(Microsoft.PowerBI.Api.IImportsOperations,System.Guid,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetImportsAsync (operations As IImportsOperations, groupId As Guid, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Imports)" />
      <MemberSignature Language="F#" Value="static member GetImportsAsync : Microsoft.PowerBI.Api.IImportsOperations * Guid * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.PowerBI.Api.Models.Imports&gt;" Usage="Microsoft.PowerBI.Api.ImportsOperationsExtensions.GetImportsAsync (operations, groupId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerBI.Api</AssemblyName>
        <AssemblyVersion>3.20.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.PowerBI.Api.Models.Imports&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.PowerBI.Api.IImportsOperations" RefType="this" />
        <Parameter Name="groupId" Type="System.Guid" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">To be added.</param>
        <param name="groupId">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetImportsInGroup">
      <MemberSignature Language="C#" Value="public static Microsoft.PowerBI.Api.Models.Imports GetImportsInGroup (this Microsoft.PowerBI.Api.IImportsOperations operations, Guid groupId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.PowerBI.Api.Models.Imports GetImportsInGroup(class Microsoft.PowerBI.Api.IImportsOperations operations, valuetype System.Guid groupId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerBI.Api.ImportsOperationsExtensions.GetImportsInGroup(Microsoft.PowerBI.Api.IImportsOperations,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetImportsInGroup (operations As IImportsOperations, groupId As Guid) As Imports" />
      <MemberSignature Language="F#" Value="static member GetImportsInGroup : Microsoft.PowerBI.Api.IImportsOperations * Guid -&gt; Microsoft.PowerBI.Api.Models.Imports" Usage="Microsoft.PowerBI.Api.ImportsOperationsExtensions.GetImportsInGroup (operations, groupId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerBI.Api</AssemblyName>
        <AssemblyVersion>3.20.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.PowerBI.Api.Models.Imports</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.PowerBI.Api.IImportsOperations" RefType="this" />
        <Parameter Name="groupId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="operations">To be added.</param>
        <param name="groupId">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetImportsInGroupAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.PowerBI.Api.Models.Imports&gt; GetImportsInGroupAsync (this Microsoft.PowerBI.Api.IImportsOperations operations, Guid groupId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.PowerBI.Api.Models.Imports&gt; GetImportsInGroupAsync(class Microsoft.PowerBI.Api.IImportsOperations operations, valuetype System.Guid groupId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerBI.Api.ImportsOperationsExtensions.GetImportsInGroupAsync(Microsoft.PowerBI.Api.IImportsOperations,System.Guid,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetImportsInGroupAsync (operations As IImportsOperations, groupId As Guid, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Imports)" />
      <MemberSignature Language="F#" Value="static member GetImportsInGroupAsync : Microsoft.PowerBI.Api.IImportsOperations * Guid * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.PowerBI.Api.Models.Imports&gt;" Usage="Microsoft.PowerBI.Api.ImportsOperationsExtensions.GetImportsInGroupAsync (operations, groupId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerBI.Api</AssemblyName>
        <AssemblyVersion>3.20.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.PowerBI.Api.Models.Imports&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.PowerBI.Api.IImportsOperations" RefType="this" />
        <Parameter Name="groupId" Type="System.Guid" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">To be added.</param>
        <param name="groupId">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PostImport">
      <MemberSignature Language="C#" Value="public static Microsoft.PowerBI.Api.Models.Import PostImport (this Microsoft.PowerBI.Api.IImportsOperations operations, string datasetDisplayName, Microsoft.PowerBI.Api.Models.ImportInfo importInfo, Microsoft.PowerBI.Api.Models.ImportConflictHandlerMode? nameConflict = default, bool? skipReport = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.PowerBI.Api.Models.Import PostImport(class Microsoft.PowerBI.Api.IImportsOperations operations, string datasetDisplayName, class Microsoft.PowerBI.Api.Models.ImportInfo importInfo, valuetype System.Nullable`1&lt;valuetype Microsoft.PowerBI.Api.Models.ImportConflictHandlerMode&gt; nameConflict, valuetype System.Nullable`1&lt;bool&gt; skipReport) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerBI.Api.ImportsOperationsExtensions.PostImport(Microsoft.PowerBI.Api.IImportsOperations,System.String,Microsoft.PowerBI.Api.Models.ImportInfo,System.Nullable{Microsoft.PowerBI.Api.Models.ImportConflictHandlerMode},System.Nullable{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function PostImport (operations As IImportsOperations, datasetDisplayName As String, importInfo As ImportInfo, Optional nameConflict As Nullable(Of ImportConflictHandlerMode) = Nothing, Optional skipReport As Nullable(Of Boolean) = Nothing) As Import" />
      <MemberSignature Language="F#" Value="static member PostImport : Microsoft.PowerBI.Api.IImportsOperations * string * Microsoft.PowerBI.Api.Models.ImportInfo * Nullable&lt;Microsoft.PowerBI.Api.Models.ImportConflictHandlerMode&gt; * Nullable&lt;bool&gt; -&gt; Microsoft.PowerBI.Api.Models.Import" Usage="Microsoft.PowerBI.Api.ImportsOperationsExtensions.PostImport (operations, datasetDisplayName, importInfo, nameConflict, skipReport)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerBI.Api</AssemblyName>
        <AssemblyVersion>3.20.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.PowerBI.Api.Models.Import</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.PowerBI.Api.IImportsOperations" RefType="this" />
        <Parameter Name="datasetDisplayName" Type="System.String" />
        <Parameter Name="importInfo" Type="Microsoft.PowerBI.Api.Models.ImportInfo" />
        <Parameter Name="nameConflict" Type="System.Nullable&lt;Microsoft.PowerBI.Api.Models.ImportConflictHandlerMode&gt;" />
        <Parameter Name="skipReport" Type="System.Nullable&lt;System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="operations">To be added.</param>
        <param name="datasetDisplayName">To be added.</param>
        <param name="importInfo">To be added.</param>
        <param name="nameConflict">To be added.</param>
        <param name="skipReport">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PostImport">
      <MemberSignature Language="C#" Value="public static Microsoft.PowerBI.Api.Models.Import PostImport (this Microsoft.PowerBI.Api.IImportsOperations operations, Guid groupId, string datasetDisplayName, Microsoft.PowerBI.Api.Models.ImportInfo importInfo, Microsoft.PowerBI.Api.Models.ImportConflictHandlerMode? nameConflict = default, bool? skipReport = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.PowerBI.Api.Models.Import PostImport(class Microsoft.PowerBI.Api.IImportsOperations operations, valuetype System.Guid groupId, string datasetDisplayName, class Microsoft.PowerBI.Api.Models.ImportInfo importInfo, valuetype System.Nullable`1&lt;valuetype Microsoft.PowerBI.Api.Models.ImportConflictHandlerMode&gt; nameConflict, valuetype System.Nullable`1&lt;bool&gt; skipReport) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerBI.Api.ImportsOperationsExtensions.PostImport(Microsoft.PowerBI.Api.IImportsOperations,System.Guid,System.String,Microsoft.PowerBI.Api.Models.ImportInfo,System.Nullable{Microsoft.PowerBI.Api.Models.ImportConflictHandlerMode},System.Nullable{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function PostImport (operations As IImportsOperations, groupId As Guid, datasetDisplayName As String, importInfo As ImportInfo, Optional nameConflict As Nullable(Of ImportConflictHandlerMode) = Nothing, Optional skipReport As Nullable(Of Boolean) = Nothing) As Import" />
      <MemberSignature Language="F#" Value="static member PostImport : Microsoft.PowerBI.Api.IImportsOperations * Guid * string * Microsoft.PowerBI.Api.Models.ImportInfo * Nullable&lt;Microsoft.PowerBI.Api.Models.ImportConflictHandlerMode&gt; * Nullable&lt;bool&gt; -&gt; Microsoft.PowerBI.Api.Models.Import" Usage="Microsoft.PowerBI.Api.ImportsOperationsExtensions.PostImport (operations, groupId, datasetDisplayName, importInfo, nameConflict, skipReport)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerBI.Api</AssemblyName>
        <AssemblyVersion>3.20.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.PowerBI.Api.Models.Import</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.PowerBI.Api.IImportsOperations" RefType="this" />
        <Parameter Name="groupId" Type="System.Guid" />
        <Parameter Name="datasetDisplayName" Type="System.String" />
        <Parameter Name="importInfo" Type="Microsoft.PowerBI.Api.Models.ImportInfo" />
        <Parameter Name="nameConflict" Type="System.Nullable&lt;Microsoft.PowerBI.Api.Models.ImportConflictHandlerMode&gt;" />
        <Parameter Name="skipReport" Type="System.Nullable&lt;System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="operations">To be added.</param>
        <param name="groupId">To be added.</param>
        <param name="datasetDisplayName">To be added.</param>
        <param name="importInfo">To be added.</param>
        <param name="nameConflict">To be added.</param>
        <param name="skipReport">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PostImportAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.PowerBI.Api.Models.Import&gt; PostImportAsync (this Microsoft.PowerBI.Api.IImportsOperations operations, string datasetDisplayName, Microsoft.PowerBI.Api.Models.ImportInfo importInfo, Microsoft.PowerBI.Api.Models.ImportConflictHandlerMode? nameConflict = default, bool? skipReport = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.PowerBI.Api.Models.Import&gt; PostImportAsync(class Microsoft.PowerBI.Api.IImportsOperations operations, string datasetDisplayName, class Microsoft.PowerBI.Api.Models.ImportInfo importInfo, valuetype System.Nullable`1&lt;valuetype Microsoft.PowerBI.Api.Models.ImportConflictHandlerMode&gt; nameConflict, valuetype System.Nullable`1&lt;bool&gt; skipReport, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerBI.Api.ImportsOperationsExtensions.PostImportAsync(Microsoft.PowerBI.Api.IImportsOperations,System.String,Microsoft.PowerBI.Api.Models.ImportInfo,System.Nullable{Microsoft.PowerBI.Api.Models.ImportConflictHandlerMode},System.Nullable{System.Boolean},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function PostImportAsync (operations As IImportsOperations, datasetDisplayName As String, importInfo As ImportInfo, Optional nameConflict As Nullable(Of ImportConflictHandlerMode) = Nothing, Optional skipReport As Nullable(Of Boolean) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Import)" />
      <MemberSignature Language="F#" Value="static member PostImportAsync : Microsoft.PowerBI.Api.IImportsOperations * string * Microsoft.PowerBI.Api.Models.ImportInfo * Nullable&lt;Microsoft.PowerBI.Api.Models.ImportConflictHandlerMode&gt; * Nullable&lt;bool&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.PowerBI.Api.Models.Import&gt;" Usage="Microsoft.PowerBI.Api.ImportsOperationsExtensions.PostImportAsync (operations, datasetDisplayName, importInfo, nameConflict, skipReport, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerBI.Api</AssemblyName>
        <AssemblyVersion>3.20.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.PowerBI.Api.Models.Import&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.PowerBI.Api.IImportsOperations" RefType="this" />
        <Parameter Name="datasetDisplayName" Type="System.String" />
        <Parameter Name="importInfo" Type="Microsoft.PowerBI.Api.Models.ImportInfo" />
        <Parameter Name="nameConflict" Type="System.Nullable&lt;Microsoft.PowerBI.Api.Models.ImportConflictHandlerMode&gt;" />
        <Parameter Name="skipReport" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">To be added.</param>
        <param name="datasetDisplayName">To be added.</param>
        <param name="importInfo">To be added.</param>
        <param name="nameConflict">To be added.</param>
        <param name="skipReport">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PostImportAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.PowerBI.Api.Models.Import&gt; PostImportAsync (this Microsoft.PowerBI.Api.IImportsOperations operations, Guid groupId, string datasetDisplayName, Microsoft.PowerBI.Api.Models.ImportInfo importInfo, Microsoft.PowerBI.Api.Models.ImportConflictHandlerMode? nameConflict = default, bool? skipReport = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.PowerBI.Api.Models.Import&gt; PostImportAsync(class Microsoft.PowerBI.Api.IImportsOperations operations, valuetype System.Guid groupId, string datasetDisplayName, class Microsoft.PowerBI.Api.Models.ImportInfo importInfo, valuetype System.Nullable`1&lt;valuetype Microsoft.PowerBI.Api.Models.ImportConflictHandlerMode&gt; nameConflict, valuetype System.Nullable`1&lt;bool&gt; skipReport, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerBI.Api.ImportsOperationsExtensions.PostImportAsync(Microsoft.PowerBI.Api.IImportsOperations,System.Guid,System.String,Microsoft.PowerBI.Api.Models.ImportInfo,System.Nullable{Microsoft.PowerBI.Api.Models.ImportConflictHandlerMode},System.Nullable{System.Boolean},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function PostImportAsync (operations As IImportsOperations, groupId As Guid, datasetDisplayName As String, importInfo As ImportInfo, Optional nameConflict As Nullable(Of ImportConflictHandlerMode) = Nothing, Optional skipReport As Nullable(Of Boolean) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Import)" />
      <MemberSignature Language="F#" Value="static member PostImportAsync : Microsoft.PowerBI.Api.IImportsOperations * Guid * string * Microsoft.PowerBI.Api.Models.ImportInfo * Nullable&lt;Microsoft.PowerBI.Api.Models.ImportConflictHandlerMode&gt; * Nullable&lt;bool&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.PowerBI.Api.Models.Import&gt;" Usage="Microsoft.PowerBI.Api.ImportsOperationsExtensions.PostImportAsync (operations, groupId, datasetDisplayName, importInfo, nameConflict, skipReport, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerBI.Api</AssemblyName>
        <AssemblyVersion>3.20.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.PowerBI.Api.Models.Import&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.PowerBI.Api.IImportsOperations" RefType="this" />
        <Parameter Name="groupId" Type="System.Guid" />
        <Parameter Name="datasetDisplayName" Type="System.String" />
        <Parameter Name="importInfo" Type="Microsoft.PowerBI.Api.Models.ImportInfo" />
        <Parameter Name="nameConflict" Type="System.Nullable&lt;Microsoft.PowerBI.Api.Models.ImportConflictHandlerMode&gt;" />
        <Parameter Name="skipReport" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">To be added.</param>
        <param name="groupId">To be added.</param>
        <param name="datasetDisplayName">To be added.</param>
        <param name="importInfo">To be added.</param>
        <param name="nameConflict">To be added.</param>
        <param name="skipReport">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PostImportInGroup">
      <MemberSignature Language="C#" Value="public static Microsoft.PowerBI.Api.Models.Import PostImportInGroup (this Microsoft.PowerBI.Api.IImportsOperations operations, Guid groupId, string datasetDisplayName, Microsoft.PowerBI.Api.Models.ImportInfo importInfo, Microsoft.PowerBI.Api.Models.ImportConflictHandlerMode? nameConflict = default, bool? skipReport = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.PowerBI.Api.Models.Import PostImportInGroup(class Microsoft.PowerBI.Api.IImportsOperations operations, valuetype System.Guid groupId, string datasetDisplayName, class Microsoft.PowerBI.Api.Models.ImportInfo importInfo, valuetype System.Nullable`1&lt;valuetype Microsoft.PowerBI.Api.Models.ImportConflictHandlerMode&gt; nameConflict, valuetype System.Nullable`1&lt;bool&gt; skipReport) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerBI.Api.ImportsOperationsExtensions.PostImportInGroup(Microsoft.PowerBI.Api.IImportsOperations,System.Guid,System.String,Microsoft.PowerBI.Api.Models.ImportInfo,System.Nullable{Microsoft.PowerBI.Api.Models.ImportConflictHandlerMode},System.Nullable{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function PostImportInGroup (operations As IImportsOperations, groupId As Guid, datasetDisplayName As String, importInfo As ImportInfo, Optional nameConflict As Nullable(Of ImportConflictHandlerMode) = Nothing, Optional skipReport As Nullable(Of Boolean) = Nothing) As Import" />
      <MemberSignature Language="F#" Value="static member PostImportInGroup : Microsoft.PowerBI.Api.IImportsOperations * Guid * string * Microsoft.PowerBI.Api.Models.ImportInfo * Nullable&lt;Microsoft.PowerBI.Api.Models.ImportConflictHandlerMode&gt; * Nullable&lt;bool&gt; -&gt; Microsoft.PowerBI.Api.Models.Import" Usage="Microsoft.PowerBI.Api.ImportsOperationsExtensions.PostImportInGroup (operations, groupId, datasetDisplayName, importInfo, nameConflict, skipReport)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerBI.Api</AssemblyName>
        <AssemblyVersion>3.20.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.PowerBI.Api.Models.Import</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.PowerBI.Api.IImportsOperations" RefType="this" />
        <Parameter Name="groupId" Type="System.Guid" />
        <Parameter Name="datasetDisplayName" Type="System.String" />
        <Parameter Name="importInfo" Type="Microsoft.PowerBI.Api.Models.ImportInfo" />
        <Parameter Name="nameConflict" Type="System.Nullable&lt;Microsoft.PowerBI.Api.Models.ImportConflictHandlerMode&gt;" />
        <Parameter Name="skipReport" Type="System.Nullable&lt;System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="operations">To be added.</param>
        <param name="groupId">To be added.</param>
        <param name="datasetDisplayName">To be added.</param>
        <param name="importInfo">To be added.</param>
        <param name="nameConflict">To be added.</param>
        <param name="skipReport">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PostImportInGroupAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.PowerBI.Api.Models.Import&gt; PostImportInGroupAsync (this Microsoft.PowerBI.Api.IImportsOperations operations, Guid groupId, string datasetDisplayName, Microsoft.PowerBI.Api.Models.ImportInfo importInfo, Microsoft.PowerBI.Api.Models.ImportConflictHandlerMode? nameConflict = default, bool? skipReport = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.PowerBI.Api.Models.Import&gt; PostImportInGroupAsync(class Microsoft.PowerBI.Api.IImportsOperations operations, valuetype System.Guid groupId, string datasetDisplayName, class Microsoft.PowerBI.Api.Models.ImportInfo importInfo, valuetype System.Nullable`1&lt;valuetype Microsoft.PowerBI.Api.Models.ImportConflictHandlerMode&gt; nameConflict, valuetype System.Nullable`1&lt;bool&gt; skipReport, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerBI.Api.ImportsOperationsExtensions.PostImportInGroupAsync(Microsoft.PowerBI.Api.IImportsOperations,System.Guid,System.String,Microsoft.PowerBI.Api.Models.ImportInfo,System.Nullable{Microsoft.PowerBI.Api.Models.ImportConflictHandlerMode},System.Nullable{System.Boolean},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function PostImportInGroupAsync (operations As IImportsOperations, groupId As Guid, datasetDisplayName As String, importInfo As ImportInfo, Optional nameConflict As Nullable(Of ImportConflictHandlerMode) = Nothing, Optional skipReport As Nullable(Of Boolean) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Import)" />
      <MemberSignature Language="F#" Value="static member PostImportInGroupAsync : Microsoft.PowerBI.Api.IImportsOperations * Guid * string * Microsoft.PowerBI.Api.Models.ImportInfo * Nullable&lt;Microsoft.PowerBI.Api.Models.ImportConflictHandlerMode&gt; * Nullable&lt;bool&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.PowerBI.Api.Models.Import&gt;" Usage="Microsoft.PowerBI.Api.ImportsOperationsExtensions.PostImportInGroupAsync (operations, groupId, datasetDisplayName, importInfo, nameConflict, skipReport, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerBI.Api</AssemblyName>
        <AssemblyVersion>3.20.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.PowerBI.Api.Models.Import&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.PowerBI.Api.IImportsOperations" RefType="this" />
        <Parameter Name="groupId" Type="System.Guid" />
        <Parameter Name="datasetDisplayName" Type="System.String" />
        <Parameter Name="importInfo" Type="Microsoft.PowerBI.Api.Models.ImportInfo" />
        <Parameter Name="nameConflict" Type="System.Nullable&lt;Microsoft.PowerBI.Api.Models.ImportConflictHandlerMode&gt;" />
        <Parameter Name="skipReport" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">To be added.</param>
        <param name="groupId">To be added.</param>
        <param name="datasetDisplayName">To be added.</param>
        <param name="importInfo">To be added.</param>
        <param name="nameConflict">To be added.</param>
        <param name="skipReport">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PostImportWithFile">
      <MemberSignature Language="C#" Value="public static Microsoft.PowerBI.Api.Models.Import PostImportWithFile (this Microsoft.PowerBI.Api.IImportsOperations operations, System.IO.Stream fileStream, string datasetDisplayName = default, Microsoft.PowerBI.Api.Models.ImportConflictHandlerMode? nameConflict = default, bool? skipReport = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.PowerBI.Api.Models.Import PostImportWithFile(class Microsoft.PowerBI.Api.IImportsOperations operations, class System.IO.Stream fileStream, string datasetDisplayName, valuetype System.Nullable`1&lt;valuetype Microsoft.PowerBI.Api.Models.ImportConflictHandlerMode&gt; nameConflict, valuetype System.Nullable`1&lt;bool&gt; skipReport) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerBI.Api.ImportsOperationsExtensions.PostImportWithFile(Microsoft.PowerBI.Api.IImportsOperations,System.IO.Stream,System.String,System.Nullable{Microsoft.PowerBI.Api.Models.ImportConflictHandlerMode},System.Nullable{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function PostImportWithFile (operations As IImportsOperations, fileStream As Stream, Optional datasetDisplayName As String = Nothing, Optional nameConflict As Nullable(Of ImportConflictHandlerMode) = Nothing, Optional skipReport As Nullable(Of Boolean) = Nothing) As Import" />
      <MemberSignature Language="F#" Value="static member PostImportWithFile : Microsoft.PowerBI.Api.IImportsOperations * System.IO.Stream * string * Nullable&lt;Microsoft.PowerBI.Api.Models.ImportConflictHandlerMode&gt; * Nullable&lt;bool&gt; -&gt; Microsoft.PowerBI.Api.Models.Import" Usage="Microsoft.PowerBI.Api.ImportsOperationsExtensions.PostImportWithFile (operations, fileStream, datasetDisplayName, nameConflict, skipReport)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerBI.Api</AssemblyName>
        <AssemblyVersion>3.20.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.PowerBI.Api.Models.Import</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.PowerBI.Api.IImportsOperations" RefType="this" />
        <Parameter Name="fileStream" Type="System.IO.Stream" />
        <Parameter Name="datasetDisplayName" Type="System.String" />
        <Parameter Name="nameConflict" Type="System.Nullable&lt;Microsoft.PowerBI.Api.Models.ImportConflictHandlerMode&gt;" />
        <Parameter Name="skipReport" Type="System.Nullable&lt;System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="operations">To be added.</param>
        <param name="fileStream">To be added.</param>
        <param name="datasetDisplayName">To be added.</param>
        <param name="nameConflict">To be added.</param>
        <param name="skipReport">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PostImportWithFile">
      <MemberSignature Language="C#" Value="public static Microsoft.PowerBI.Api.Models.Import PostImportWithFile (this Microsoft.PowerBI.Api.IImportsOperations operations, Guid groupId, System.IO.Stream fileStream, string datasetDisplayName = default, Microsoft.PowerBI.Api.Models.ImportConflictHandlerMode? nameConflict = default, bool? skipReport = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.PowerBI.Api.Models.Import PostImportWithFile(class Microsoft.PowerBI.Api.IImportsOperations operations, valuetype System.Guid groupId, class System.IO.Stream fileStream, string datasetDisplayName, valuetype System.Nullable`1&lt;valuetype Microsoft.PowerBI.Api.Models.ImportConflictHandlerMode&gt; nameConflict, valuetype System.Nullable`1&lt;bool&gt; skipReport) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerBI.Api.ImportsOperationsExtensions.PostImportWithFile(Microsoft.PowerBI.Api.IImportsOperations,System.Guid,System.IO.Stream,System.String,System.Nullable{Microsoft.PowerBI.Api.Models.ImportConflictHandlerMode},System.Nullable{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function PostImportWithFile (operations As IImportsOperations, groupId As Guid, fileStream As Stream, Optional datasetDisplayName As String = Nothing, Optional nameConflict As Nullable(Of ImportConflictHandlerMode) = Nothing, Optional skipReport As Nullable(Of Boolean) = Nothing) As Import" />
      <MemberSignature Language="F#" Value="static member PostImportWithFile : Microsoft.PowerBI.Api.IImportsOperations * Guid * System.IO.Stream * string * Nullable&lt;Microsoft.PowerBI.Api.Models.ImportConflictHandlerMode&gt; * Nullable&lt;bool&gt; -&gt; Microsoft.PowerBI.Api.Models.Import" Usage="Microsoft.PowerBI.Api.ImportsOperationsExtensions.PostImportWithFile (operations, groupId, fileStream, datasetDisplayName, nameConflict, skipReport)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerBI.Api</AssemblyName>
        <AssemblyVersion>3.20.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.PowerBI.Api.Models.Import</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.PowerBI.Api.IImportsOperations" RefType="this" />
        <Parameter Name="groupId" Type="System.Guid" />
        <Parameter Name="fileStream" Type="System.IO.Stream" />
        <Parameter Name="datasetDisplayName" Type="System.String" />
        <Parameter Name="nameConflict" Type="System.Nullable&lt;Microsoft.PowerBI.Api.Models.ImportConflictHandlerMode&gt;" />
        <Parameter Name="skipReport" Type="System.Nullable&lt;System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="operations">To be added.</param>
        <param name="groupId">To be added.</param>
        <param name="fileStream">To be added.</param>
        <param name="datasetDisplayName">To be added.</param>
        <param name="nameConflict">To be added.</param>
        <param name="skipReport">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PostImportWithFileAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.PowerBI.Api.Models.Import&gt; PostImportWithFileAsync (this Microsoft.PowerBI.Api.IImportsOperations operations, System.IO.Stream fileStream, string datasetDisplayName = default, Microsoft.PowerBI.Api.Models.ImportConflictHandlerMode? nameConflict = default, bool? skipReport = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.PowerBI.Api.Models.Import&gt; PostImportWithFileAsync(class Microsoft.PowerBI.Api.IImportsOperations operations, class System.IO.Stream fileStream, string datasetDisplayName, valuetype System.Nullable`1&lt;valuetype Microsoft.PowerBI.Api.Models.ImportConflictHandlerMode&gt; nameConflict, valuetype System.Nullable`1&lt;bool&gt; skipReport, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerBI.Api.ImportsOperationsExtensions.PostImportWithFileAsync(Microsoft.PowerBI.Api.IImportsOperations,System.IO.Stream,System.String,System.Nullable{Microsoft.PowerBI.Api.Models.ImportConflictHandlerMode},System.Nullable{System.Boolean},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function PostImportWithFileAsync (operations As IImportsOperations, fileStream As Stream, Optional datasetDisplayName As String = Nothing, Optional nameConflict As Nullable(Of ImportConflictHandlerMode) = Nothing, Optional skipReport As Nullable(Of Boolean) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Import)" />
      <MemberSignature Language="F#" Value="static member PostImportWithFileAsync : Microsoft.PowerBI.Api.IImportsOperations * System.IO.Stream * string * Nullable&lt;Microsoft.PowerBI.Api.Models.ImportConflictHandlerMode&gt; * Nullable&lt;bool&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.PowerBI.Api.Models.Import&gt;" Usage="Microsoft.PowerBI.Api.ImportsOperationsExtensions.PostImportWithFileAsync (operations, fileStream, datasetDisplayName, nameConflict, skipReport, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerBI.Api</AssemblyName>
        <AssemblyVersion>3.20.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.PowerBI.Api.Models.Import&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.PowerBI.Api.IImportsOperations" RefType="this" />
        <Parameter Name="fileStream" Type="System.IO.Stream" />
        <Parameter Name="datasetDisplayName" Type="System.String" />
        <Parameter Name="nameConflict" Type="System.Nullable&lt;Microsoft.PowerBI.Api.Models.ImportConflictHandlerMode&gt;" />
        <Parameter Name="skipReport" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">To be added.</param>
        <param name="fileStream">To be added.</param>
        <param name="datasetDisplayName">To be added.</param>
        <param name="nameConflict">To be added.</param>
        <param name="skipReport">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PostImportWithFileAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.PowerBI.Api.Models.Import&gt; PostImportWithFileAsync (this Microsoft.PowerBI.Api.IImportsOperations operations, Guid groupId, System.IO.Stream fileStream, string datasetDisplayName = default, Microsoft.PowerBI.Api.Models.ImportConflictHandlerMode? nameConflict = default, bool? skipReport = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.PowerBI.Api.Models.Import&gt; PostImportWithFileAsync(class Microsoft.PowerBI.Api.IImportsOperations operations, valuetype System.Guid groupId, class System.IO.Stream fileStream, string datasetDisplayName, valuetype System.Nullable`1&lt;valuetype Microsoft.PowerBI.Api.Models.ImportConflictHandlerMode&gt; nameConflict, valuetype System.Nullable`1&lt;bool&gt; skipReport, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerBI.Api.ImportsOperationsExtensions.PostImportWithFileAsync(Microsoft.PowerBI.Api.IImportsOperations,System.Guid,System.IO.Stream,System.String,System.Nullable{Microsoft.PowerBI.Api.Models.ImportConflictHandlerMode},System.Nullable{System.Boolean},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function PostImportWithFileAsync (operations As IImportsOperations, groupId As Guid, fileStream As Stream, Optional datasetDisplayName As String = Nothing, Optional nameConflict As Nullable(Of ImportConflictHandlerMode) = Nothing, Optional skipReport As Nullable(Of Boolean) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Import)" />
      <MemberSignature Language="F#" Value="static member PostImportWithFileAsync : Microsoft.PowerBI.Api.IImportsOperations * Guid * System.IO.Stream * string * Nullable&lt;Microsoft.PowerBI.Api.Models.ImportConflictHandlerMode&gt; * Nullable&lt;bool&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.PowerBI.Api.Models.Import&gt;" Usage="Microsoft.PowerBI.Api.ImportsOperationsExtensions.PostImportWithFileAsync (operations, groupId, fileStream, datasetDisplayName, nameConflict, skipReport, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerBI.Api</AssemblyName>
        <AssemblyVersion>3.20.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.PowerBI.Api.Models.Import&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.PowerBI.Api.IImportsOperations" RefType="this" />
        <Parameter Name="groupId" Type="System.Guid" />
        <Parameter Name="fileStream" Type="System.IO.Stream" />
        <Parameter Name="datasetDisplayName" Type="System.String" />
        <Parameter Name="nameConflict" Type="System.Nullable&lt;Microsoft.PowerBI.Api.Models.ImportConflictHandlerMode&gt;" />
        <Parameter Name="skipReport" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">To be added.</param>
        <param name="groupId">To be added.</param>
        <param name="fileStream">To be added.</param>
        <param name="datasetDisplayName">To be added.</param>
        <param name="nameConflict">To be added.</param>
        <param name="skipReport">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PostImportWithFileAsyncInGroup">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.PowerBI.Api.Models.Import&gt; PostImportWithFileAsyncInGroup (this Microsoft.PowerBI.Api.IImportsOperations operations, Guid groupId, System.IO.Stream fileStream, string datasetDisplayName = default, Microsoft.PowerBI.Api.Models.ImportConflictHandlerMode? nameConflict = default, bool? skipReport = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.PowerBI.Api.Models.Import&gt; PostImportWithFileAsyncInGroup(class Microsoft.PowerBI.Api.IImportsOperations operations, valuetype System.Guid groupId, class System.IO.Stream fileStream, string datasetDisplayName, valuetype System.Nullable`1&lt;valuetype Microsoft.PowerBI.Api.Models.ImportConflictHandlerMode&gt; nameConflict, valuetype System.Nullable`1&lt;bool&gt; skipReport, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerBI.Api.ImportsOperationsExtensions.PostImportWithFileAsyncInGroup(Microsoft.PowerBI.Api.IImportsOperations,System.Guid,System.IO.Stream,System.String,System.Nullable{Microsoft.PowerBI.Api.Models.ImportConflictHandlerMode},System.Nullable{System.Boolean},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function PostImportWithFileAsyncInGroup (operations As IImportsOperations, groupId As Guid, fileStream As Stream, Optional datasetDisplayName As String = Nothing, Optional nameConflict As Nullable(Of ImportConflictHandlerMode) = Nothing, Optional skipReport As Nullable(Of Boolean) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Import)" />
      <MemberSignature Language="F#" Value="static member PostImportWithFileAsyncInGroup : Microsoft.PowerBI.Api.IImportsOperations * Guid * System.IO.Stream * string * Nullable&lt;Microsoft.PowerBI.Api.Models.ImportConflictHandlerMode&gt; * Nullable&lt;bool&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.PowerBI.Api.Models.Import&gt;" Usage="Microsoft.PowerBI.Api.ImportsOperationsExtensions.PostImportWithFileAsyncInGroup (operations, groupId, fileStream, datasetDisplayName, nameConflict, skipReport, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerBI.Api</AssemblyName>
        <AssemblyVersion>3.20.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.PowerBI.Api.Models.Import&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.PowerBI.Api.IImportsOperations" RefType="this" />
        <Parameter Name="groupId" Type="System.Guid" />
        <Parameter Name="fileStream" Type="System.IO.Stream" />
        <Parameter Name="datasetDisplayName" Type="System.String" />
        <Parameter Name="nameConflict" Type="System.Nullable&lt;Microsoft.PowerBI.Api.Models.ImportConflictHandlerMode&gt;" />
        <Parameter Name="skipReport" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operations">To be added.</param>
        <param name="groupId">To be added.</param>
        <param name="fileStream">To be added.</param>
        <param name="datasetDisplayName">To be added.</param>
        <param name="nameConflict">To be added.</param>
        <param name="skipReport">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PostImportWithFileInGroup">
      <MemberSignature Language="C#" Value="public static Microsoft.PowerBI.Api.Models.Import PostImportWithFileInGroup (this Microsoft.PowerBI.Api.IImportsOperations operations, Guid groupId, System.IO.Stream fileStream, string datasetDisplayName = default, Microsoft.PowerBI.Api.Models.ImportConflictHandlerMode? nameConflict = default, bool? skipReport = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.PowerBI.Api.Models.Import PostImportWithFileInGroup(class Microsoft.PowerBI.Api.IImportsOperations operations, valuetype System.Guid groupId, class System.IO.Stream fileStream, string datasetDisplayName, valuetype System.Nullable`1&lt;valuetype Microsoft.PowerBI.Api.Models.ImportConflictHandlerMode&gt; nameConflict, valuetype System.Nullable`1&lt;bool&gt; skipReport) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.PowerBI.Api.ImportsOperationsExtensions.PostImportWithFileInGroup(Microsoft.PowerBI.Api.IImportsOperations,System.Guid,System.IO.Stream,System.String,System.Nullable{Microsoft.PowerBI.Api.Models.ImportConflictHandlerMode},System.Nullable{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function PostImportWithFileInGroup (operations As IImportsOperations, groupId As Guid, fileStream As Stream, Optional datasetDisplayName As String = Nothing, Optional nameConflict As Nullable(Of ImportConflictHandlerMode) = Nothing, Optional skipReport As Nullable(Of Boolean) = Nothing) As Import" />
      <MemberSignature Language="F#" Value="static member PostImportWithFileInGroup : Microsoft.PowerBI.Api.IImportsOperations * Guid * System.IO.Stream * string * Nullable&lt;Microsoft.PowerBI.Api.Models.ImportConflictHandlerMode&gt; * Nullable&lt;bool&gt; -&gt; Microsoft.PowerBI.Api.Models.Import" Usage="Microsoft.PowerBI.Api.ImportsOperationsExtensions.PostImportWithFileInGroup (operations, groupId, fileStream, datasetDisplayName, nameConflict, skipReport)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.PowerBI.Api</AssemblyName>
        <AssemblyVersion>3.20.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.PowerBI.Api.Models.Import</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operations" Type="Microsoft.PowerBI.Api.IImportsOperations" RefType="this" />
        <Parameter Name="groupId" Type="System.Guid" />
        <Parameter Name="fileStream" Type="System.IO.Stream" />
        <Parameter Name="datasetDisplayName" Type="System.String" />
        <Parameter Name="nameConflict" Type="System.Nullable&lt;Microsoft.PowerBI.Api.Models.ImportConflictHandlerMode&gt;" />
        <Parameter Name="skipReport" Type="System.Nullable&lt;System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="operations">To be added.</param>
        <param name="groupId">To be added.</param>
        <param name="fileStream">To be added.</param>
        <param name="datasetDisplayName">To be added.</param>
        <param name="nameConflict">To be added.</param>
        <param name="skipReport">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

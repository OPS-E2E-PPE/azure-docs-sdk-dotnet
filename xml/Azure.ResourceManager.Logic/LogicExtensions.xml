<Type Name="LogicExtensions" FullName="Azure.ResourceManager.Logic.LogicExtensions">
  <TypeSignature Language="C#" Value="public static class LogicExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit LogicExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Logic.LogicExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module LogicExtensions" />
  <TypeSignature Language="F#" Value="type LogicExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to Azure.ResourceManager.Logic. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetAssemblyDefinitionResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Logic.AssemblyDefinitionResource GetAssemblyDefinitionResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Logic.AssemblyDefinitionResource GetAssemblyDefinitionResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Logic.LogicExtensions.GetAssemblyDefinitionResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAssemblyDefinitionResource (client As ArmClient, id As ResourceIdentifier) As AssemblyDefinitionResource" />
      <MemberSignature Language="F#" Value="static member GetAssemblyDefinitionResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Logic.AssemblyDefinitionResource" Usage="Azure.ResourceManager.Logic.LogicExtensions.GetAssemblyDefinitionResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Logic.AssemblyDefinitionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Logic.AssemblyDefinitionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Logic.AssemblyDefinitionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.Logic.AssemblyDefinitionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Logic.AssemblyDefinitionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBatchConfigurationResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Logic.BatchConfigurationResource GetBatchConfigurationResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Logic.BatchConfigurationResource GetBatchConfigurationResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Logic.LogicExtensions.GetBatchConfigurationResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetBatchConfigurationResource (client As ArmClient, id As ResourceIdentifier) As BatchConfigurationResource" />
      <MemberSignature Language="F#" Value="static member GetBatchConfigurationResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Logic.BatchConfigurationResource" Usage="Azure.ResourceManager.Logic.LogicExtensions.GetBatchConfigurationResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Logic.BatchConfigurationResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Logic.BatchConfigurationResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Logic.BatchConfigurationResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Logic.BatchConfigurationResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Logic.BatchConfigurationResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIntegrationAccount">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountResource&gt; GetIntegrationAccount (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string integrationAccountName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.Logic.IntegrationAccountResource&gt; GetIntegrationAccount(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string integrationAccountName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Logic.LogicExtensions.GetIntegrationAccount(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetIntegrationAccount (resourceGroupResource As ResourceGroupResource, integrationAccountName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of IntegrationAccountResource)" />
      <MemberSignature Language="F#" Value="static member GetIntegrationAccount : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountResource&gt;" Usage="Azure.ResourceManager.Logic.LogicExtensions.GetIntegrationAccount (resourceGroupResource, integrationAccountName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="integrationAccountName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="integrationAccountName"> The integration account name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets an integration account.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}
            Operation Id: IntegrationAccounts_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="integrationAccountName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="integrationAccountName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetIntegrationAccountAgreementResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Logic.IntegrationAccountAgreementResource GetIntegrationAccountAgreementResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Logic.IntegrationAccountAgreementResource GetIntegrationAccountAgreementResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Logic.LogicExtensions.GetIntegrationAccountAgreementResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetIntegrationAccountAgreementResource (client As ArmClient, id As ResourceIdentifier) As IntegrationAccountAgreementResource" />
      <MemberSignature Language="F#" Value="static member GetIntegrationAccountAgreementResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Logic.IntegrationAccountAgreementResource" Usage="Azure.ResourceManager.Logic.LogicExtensions.GetIntegrationAccountAgreementResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Logic.IntegrationAccountAgreementResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Logic.IntegrationAccountAgreementResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Logic.IntegrationAccountAgreementResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.Logic.IntegrationAccountAgreementResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Logic.IntegrationAccountAgreementResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIntegrationAccountAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountResource&gt;&gt; GetIntegrationAccountAsync (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string integrationAccountName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Logic.IntegrationAccountResource&gt;&gt; GetIntegrationAccountAsync(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string integrationAccountName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Logic.LogicExtensions.GetIntegrationAccountAsync(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetIntegrationAccountAsync (resourceGroupResource As ResourceGroupResource, integrationAccountName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of IntegrationAccountResource))" />
      <MemberSignature Language="F#" Value="static member GetIntegrationAccountAsync : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountResource&gt;&gt;" Usage="Azure.ResourceManager.Logic.LogicExtensions.GetIntegrationAccountAsync (resourceGroupResource, integrationAccountName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationAccountResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="integrationAccountName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="integrationAccountName"> The integration account name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets an integration account.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}
            Operation Id: IntegrationAccounts_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="integrationAccountName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="integrationAccountName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetIntegrationAccountCertificateResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Logic.IntegrationAccountCertificateResource GetIntegrationAccountCertificateResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Logic.IntegrationAccountCertificateResource GetIntegrationAccountCertificateResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Logic.LogicExtensions.GetIntegrationAccountCertificateResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetIntegrationAccountCertificateResource (client As ArmClient, id As ResourceIdentifier) As IntegrationAccountCertificateResource" />
      <MemberSignature Language="F#" Value="static member GetIntegrationAccountCertificateResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Logic.IntegrationAccountCertificateResource" Usage="Azure.ResourceManager.Logic.LogicExtensions.GetIntegrationAccountCertificateResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Logic.IntegrationAccountCertificateResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Logic.IntegrationAccountCertificateResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Logic.IntegrationAccountCertificateResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.Logic.IntegrationAccountCertificateResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Logic.IntegrationAccountCertificateResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIntegrationAccountMapResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Logic.IntegrationAccountMapResource GetIntegrationAccountMapResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Logic.IntegrationAccountMapResource GetIntegrationAccountMapResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Logic.LogicExtensions.GetIntegrationAccountMapResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetIntegrationAccountMapResource (client As ArmClient, id As ResourceIdentifier) As IntegrationAccountMapResource" />
      <MemberSignature Language="F#" Value="static member GetIntegrationAccountMapResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Logic.IntegrationAccountMapResource" Usage="Azure.ResourceManager.Logic.LogicExtensions.GetIntegrationAccountMapResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Logic.IntegrationAccountMapResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Logic.IntegrationAccountMapResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Logic.IntegrationAccountMapResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.Logic.IntegrationAccountMapResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Logic.IntegrationAccountMapResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIntegrationAccountPartnerResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Logic.IntegrationAccountPartnerResource GetIntegrationAccountPartnerResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Logic.IntegrationAccountPartnerResource GetIntegrationAccountPartnerResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Logic.LogicExtensions.GetIntegrationAccountPartnerResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetIntegrationAccountPartnerResource (client As ArmClient, id As ResourceIdentifier) As IntegrationAccountPartnerResource" />
      <MemberSignature Language="F#" Value="static member GetIntegrationAccountPartnerResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Logic.IntegrationAccountPartnerResource" Usage="Azure.ResourceManager.Logic.LogicExtensions.GetIntegrationAccountPartnerResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Logic.IntegrationAccountPartnerResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Logic.IntegrationAccountPartnerResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Logic.IntegrationAccountPartnerResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.Logic.IntegrationAccountPartnerResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Logic.IntegrationAccountPartnerResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIntegrationAccountResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Logic.IntegrationAccountResource GetIntegrationAccountResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Logic.IntegrationAccountResource GetIntegrationAccountResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Logic.LogicExtensions.GetIntegrationAccountResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetIntegrationAccountResource (client As ArmClient, id As ResourceIdentifier) As IntegrationAccountResource" />
      <MemberSignature Language="F#" Value="static member GetIntegrationAccountResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Logic.IntegrationAccountResource" Usage="Azure.ResourceManager.Logic.LogicExtensions.GetIntegrationAccountResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Logic.IntegrationAccountResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Logic.IntegrationAccountResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Logic.IntegrationAccountResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.Logic.IntegrationAccountResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Logic.IntegrationAccountResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIntegrationAccounts">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Logic.IntegrationAccountCollection GetIntegrationAccounts (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Logic.IntegrationAccountCollection GetIntegrationAccounts(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Logic.LogicExtensions.GetIntegrationAccounts(Azure.ResourceManager.Resources.ResourceGroupResource)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetIntegrationAccounts (resourceGroupResource As ResourceGroupResource) As IntegrationAccountCollection" />
      <MemberSignature Language="F#" Value="static member GetIntegrationAccounts : Azure.ResourceManager.Resources.ResourceGroupResource -&gt; Azure.ResourceManager.Logic.IntegrationAccountCollection" Usage="Azure.ResourceManager.Logic.LogicExtensions.GetIntegrationAccounts resourceGroupResource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Logic.IntegrationAccountCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <summary> Gets a collection of IntegrationAccountResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of IntegrationAccountResources and their operations over a IntegrationAccountResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIntegrationAccounts">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.Logic.IntegrationAccountResource&gt; GetIntegrationAccounts (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, int? top = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.Logic.IntegrationAccountResource&gt; GetIntegrationAccounts(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Logic.LogicExtensions.GetIntegrationAccounts(Azure.ResourceManager.Resources.SubscriptionResource,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetIntegrationAccounts (subscriptionResource As SubscriptionResource, Optional top As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of IntegrationAccountResource)" />
      <MemberSignature Language="F#" Value="static member GetIntegrationAccounts : Azure.ResourceManager.Resources.SubscriptionResource * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Logic.IntegrationAccountResource&gt;" Usage="Azure.ResourceManager.Logic.LogicExtensions.GetIntegrationAccounts (subscriptionResource, top, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Logic.IntegrationAccountResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="top"> The number of items to be included in the result. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a list of integration accounts by subscription.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Logic/integrationAccounts
            Operation Id: IntegrationAccounts_ListBySubscription
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Logic.IntegrationAccountResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIntegrationAccountsAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.Logic.IntegrationAccountResource&gt; GetIntegrationAccountsAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, int? top = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Logic.IntegrationAccountResource&gt; GetIntegrationAccountsAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Logic.LogicExtensions.GetIntegrationAccountsAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetIntegrationAccountsAsync (subscriptionResource As SubscriptionResource, Optional top As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of IntegrationAccountResource)" />
      <MemberSignature Language="F#" Value="static member GetIntegrationAccountsAsync : Azure.ResourceManager.Resources.SubscriptionResource * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Logic.IntegrationAccountResource&gt;" Usage="Azure.ResourceManager.Logic.LogicExtensions.GetIntegrationAccountsAsync (subscriptionResource, top, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Logic.IntegrationAccountResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="top"> The number of items to be included in the result. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a list of integration accounts by subscription.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Logic/integrationAccounts
            Operation Id: IntegrationAccounts_ListBySubscription
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Logic.IntegrationAccountResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIntegrationAccountSchemaResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Logic.IntegrationAccountSchemaResource GetIntegrationAccountSchemaResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Logic.IntegrationAccountSchemaResource GetIntegrationAccountSchemaResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Logic.LogicExtensions.GetIntegrationAccountSchemaResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetIntegrationAccountSchemaResource (client As ArmClient, id As ResourceIdentifier) As IntegrationAccountSchemaResource" />
      <MemberSignature Language="F#" Value="static member GetIntegrationAccountSchemaResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Logic.IntegrationAccountSchemaResource" Usage="Azure.ResourceManager.Logic.LogicExtensions.GetIntegrationAccountSchemaResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Logic.IntegrationAccountSchemaResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Logic.IntegrationAccountSchemaResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Logic.IntegrationAccountSchemaResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.Logic.IntegrationAccountSchemaResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Logic.IntegrationAccountSchemaResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIntegrationAccountSessionResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Logic.IntegrationAccountSessionResource GetIntegrationAccountSessionResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Logic.IntegrationAccountSessionResource GetIntegrationAccountSessionResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Logic.LogicExtensions.GetIntegrationAccountSessionResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetIntegrationAccountSessionResource (client As ArmClient, id As ResourceIdentifier) As IntegrationAccountSessionResource" />
      <MemberSignature Language="F#" Value="static member GetIntegrationAccountSessionResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Logic.IntegrationAccountSessionResource" Usage="Azure.ResourceManager.Logic.LogicExtensions.GetIntegrationAccountSessionResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Logic.IntegrationAccountSessionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Logic.IntegrationAccountSessionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Logic.IntegrationAccountSessionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.Logic.IntegrationAccountSessionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Logic.IntegrationAccountSessionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIntegrationServiceEnvironment">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationServiceEnvironmentResource&gt; GetIntegrationServiceEnvironment (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string integrationServiceEnvironmentName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.Logic.IntegrationServiceEnvironmentResource&gt; GetIntegrationServiceEnvironment(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string integrationServiceEnvironmentName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Logic.LogicExtensions.GetIntegrationServiceEnvironment(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetIntegrationServiceEnvironment (resourceGroupResource As ResourceGroupResource, integrationServiceEnvironmentName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of IntegrationServiceEnvironmentResource)" />
      <MemberSignature Language="F#" Value="static member GetIntegrationServiceEnvironment : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationServiceEnvironmentResource&gt;" Usage="Azure.ResourceManager.Logic.LogicExtensions.GetIntegrationServiceEnvironment (resourceGroupResource, integrationServiceEnvironmentName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationServiceEnvironmentResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="integrationServiceEnvironmentName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="integrationServiceEnvironmentName"> The integration service environment name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets an integration service environment.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Logic/integrationServiceEnvironments/{integrationServiceEnvironmentName}
            Operation Id: IntegrationServiceEnvironments_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="integrationServiceEnvironmentName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="integrationServiceEnvironmentName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetIntegrationServiceEnvironmentAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationServiceEnvironmentResource&gt;&gt; GetIntegrationServiceEnvironmentAsync (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string integrationServiceEnvironmentName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Logic.IntegrationServiceEnvironmentResource&gt;&gt; GetIntegrationServiceEnvironmentAsync(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string integrationServiceEnvironmentName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Logic.LogicExtensions.GetIntegrationServiceEnvironmentAsync(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetIntegrationServiceEnvironmentAsync (resourceGroupResource As ResourceGroupResource, integrationServiceEnvironmentName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of IntegrationServiceEnvironmentResource))" />
      <MemberSignature Language="F#" Value="static member GetIntegrationServiceEnvironmentAsync : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationServiceEnvironmentResource&gt;&gt;" Usage="Azure.ResourceManager.Logic.LogicExtensions.GetIntegrationServiceEnvironmentAsync (resourceGroupResource, integrationServiceEnvironmentName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Logic.IntegrationServiceEnvironmentResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="integrationServiceEnvironmentName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="integrationServiceEnvironmentName"> The integration service environment name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets an integration service environment.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Logic/integrationServiceEnvironments/{integrationServiceEnvironmentName}
            Operation Id: IntegrationServiceEnvironments_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="integrationServiceEnvironmentName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="integrationServiceEnvironmentName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetIntegrationServiceEnvironmentManagedApiResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Logic.IntegrationServiceEnvironmentManagedApiResource GetIntegrationServiceEnvironmentManagedApiResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Logic.IntegrationServiceEnvironmentManagedApiResource GetIntegrationServiceEnvironmentManagedApiResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Logic.LogicExtensions.GetIntegrationServiceEnvironmentManagedApiResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetIntegrationServiceEnvironmentManagedApiResource (client As ArmClient, id As ResourceIdentifier) As IntegrationServiceEnvironmentManagedApiResource" />
      <MemberSignature Language="F#" Value="static member GetIntegrationServiceEnvironmentManagedApiResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Logic.IntegrationServiceEnvironmentManagedApiResource" Usage="Azure.ResourceManager.Logic.LogicExtensions.GetIntegrationServiceEnvironmentManagedApiResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Logic.IntegrationServiceEnvironmentManagedApiResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Logic.IntegrationServiceEnvironmentManagedApiResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Logic.IntegrationServiceEnvironmentManagedApiResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.Logic.IntegrationServiceEnvironmentManagedApiResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Logic.IntegrationServiceEnvironmentManagedApiResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIntegrationServiceEnvironmentResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Logic.IntegrationServiceEnvironmentResource GetIntegrationServiceEnvironmentResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Logic.IntegrationServiceEnvironmentResource GetIntegrationServiceEnvironmentResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Logic.LogicExtensions.GetIntegrationServiceEnvironmentResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetIntegrationServiceEnvironmentResource (client As ArmClient, id As ResourceIdentifier) As IntegrationServiceEnvironmentResource" />
      <MemberSignature Language="F#" Value="static member GetIntegrationServiceEnvironmentResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Logic.IntegrationServiceEnvironmentResource" Usage="Azure.ResourceManager.Logic.LogicExtensions.GetIntegrationServiceEnvironmentResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Logic.IntegrationServiceEnvironmentResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Logic.IntegrationServiceEnvironmentResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Logic.IntegrationServiceEnvironmentResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.Logic.IntegrationServiceEnvironmentResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Logic.IntegrationServiceEnvironmentResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIntegrationServiceEnvironments">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Logic.IntegrationServiceEnvironmentCollection GetIntegrationServiceEnvironments (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Logic.IntegrationServiceEnvironmentCollection GetIntegrationServiceEnvironments(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Logic.LogicExtensions.GetIntegrationServiceEnvironments(Azure.ResourceManager.Resources.ResourceGroupResource)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetIntegrationServiceEnvironments (resourceGroupResource As ResourceGroupResource) As IntegrationServiceEnvironmentCollection" />
      <MemberSignature Language="F#" Value="static member GetIntegrationServiceEnvironments : Azure.ResourceManager.Resources.ResourceGroupResource -&gt; Azure.ResourceManager.Logic.IntegrationServiceEnvironmentCollection" Usage="Azure.ResourceManager.Logic.LogicExtensions.GetIntegrationServiceEnvironments resourceGroupResource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Logic.IntegrationServiceEnvironmentCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <summary> Gets a collection of IntegrationServiceEnvironmentResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of IntegrationServiceEnvironmentResources and their operations over a IntegrationServiceEnvironmentResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIntegrationServiceEnvironments">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.Logic.IntegrationServiceEnvironmentResource&gt; GetIntegrationServiceEnvironments (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, int? top = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.Logic.IntegrationServiceEnvironmentResource&gt; GetIntegrationServiceEnvironments(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Logic.LogicExtensions.GetIntegrationServiceEnvironments(Azure.ResourceManager.Resources.SubscriptionResource,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetIntegrationServiceEnvironments (subscriptionResource As SubscriptionResource, Optional top As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of IntegrationServiceEnvironmentResource)" />
      <MemberSignature Language="F#" Value="static member GetIntegrationServiceEnvironments : Azure.ResourceManager.Resources.SubscriptionResource * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Logic.IntegrationServiceEnvironmentResource&gt;" Usage="Azure.ResourceManager.Logic.LogicExtensions.GetIntegrationServiceEnvironments (subscriptionResource, top, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Logic.IntegrationServiceEnvironmentResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="top"> The number of items to be included in the result. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a list of integration service environments by subscription.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Logic/integrationServiceEnvironments
            Operation Id: IntegrationServiceEnvironments_ListBySubscription
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Logic.IntegrationServiceEnvironmentResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIntegrationServiceEnvironmentsAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.Logic.IntegrationServiceEnvironmentResource&gt; GetIntegrationServiceEnvironmentsAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, int? top = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Logic.IntegrationServiceEnvironmentResource&gt; GetIntegrationServiceEnvironmentsAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Logic.LogicExtensions.GetIntegrationServiceEnvironmentsAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetIntegrationServiceEnvironmentsAsync (subscriptionResource As SubscriptionResource, Optional top As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of IntegrationServiceEnvironmentResource)" />
      <MemberSignature Language="F#" Value="static member GetIntegrationServiceEnvironmentsAsync : Azure.ResourceManager.Resources.SubscriptionResource * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Logic.IntegrationServiceEnvironmentResource&gt;" Usage="Azure.ResourceManager.Logic.LogicExtensions.GetIntegrationServiceEnvironmentsAsync (subscriptionResource, top, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Logic.IntegrationServiceEnvironmentResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="top"> The number of items to be included in the result. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a list of integration service environments by subscription.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Logic/integrationServiceEnvironments
            Operation Id: IntegrationServiceEnvironments_ListBySubscription
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Logic.IntegrationServiceEnvironmentResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWorkflow">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.Logic.WorkflowResource&gt; GetWorkflow (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string workflowName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.Logic.WorkflowResource&gt; GetWorkflow(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string workflowName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Logic.LogicExtensions.GetWorkflow(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetWorkflow (resourceGroupResource As ResourceGroupResource, workflowName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of WorkflowResource)" />
      <MemberSignature Language="F#" Value="static member GetWorkflow : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Logic.WorkflowResource&gt;" Usage="Azure.ResourceManager.Logic.LogicExtensions.GetWorkflow (resourceGroupResource, workflowName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Logic.WorkflowResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="workflowName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="workflowName"> The workflow name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a workflow.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}
            Operation Id: Workflows_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="workflowName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="workflowName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetWorkflowAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Logic.WorkflowResource&gt;&gt; GetWorkflowAsync (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string workflowName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Logic.WorkflowResource&gt;&gt; GetWorkflowAsync(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string workflowName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Logic.LogicExtensions.GetWorkflowAsync(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetWorkflowAsync (resourceGroupResource As ResourceGroupResource, workflowName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of WorkflowResource))" />
      <MemberSignature Language="F#" Value="static member GetWorkflowAsync : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Logic.WorkflowResource&gt;&gt;" Usage="Azure.ResourceManager.Logic.LogicExtensions.GetWorkflowAsync (resourceGroupResource, workflowName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Logic.WorkflowResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="workflowName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="workflowName"> The workflow name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a workflow.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}
            Operation Id: Workflows_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="workflowName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="workflowName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetWorkflowResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Logic.WorkflowResource GetWorkflowResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Logic.WorkflowResource GetWorkflowResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Logic.LogicExtensions.GetWorkflowResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetWorkflowResource (client As ArmClient, id As ResourceIdentifier) As WorkflowResource" />
      <MemberSignature Language="F#" Value="static member GetWorkflowResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Logic.WorkflowResource" Usage="Azure.ResourceManager.Logic.LogicExtensions.GetWorkflowResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Logic.WorkflowResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Logic.WorkflowResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Logic.WorkflowResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Logic.WorkflowResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Logic.WorkflowResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWorkflowRunActionRepetitionRequestHistoryResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Logic.WorkflowRunActionRepetitionRequestHistoryResource GetWorkflowRunActionRepetitionRequestHistoryResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Logic.WorkflowRunActionRepetitionRequestHistoryResource GetWorkflowRunActionRepetitionRequestHistoryResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Logic.LogicExtensions.GetWorkflowRunActionRepetitionRequestHistoryResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetWorkflowRunActionRepetitionRequestHistoryResource (client As ArmClient, id As ResourceIdentifier) As WorkflowRunActionRepetitionRequestHistoryResource" />
      <MemberSignature Language="F#" Value="static member GetWorkflowRunActionRepetitionRequestHistoryResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Logic.WorkflowRunActionRepetitionRequestHistoryResource" Usage="Azure.ResourceManager.Logic.LogicExtensions.GetWorkflowRunActionRepetitionRequestHistoryResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Logic.WorkflowRunActionRepetitionRequestHistoryResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Logic.WorkflowRunActionRepetitionRequestHistoryResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Logic.WorkflowRunActionRepetitionRequestHistoryResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Logic.WorkflowRunActionRepetitionRequestHistoryResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Logic.WorkflowRunActionRepetitionRequestHistoryResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWorkflowRunActionRepetitionResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Logic.WorkflowRunActionRepetitionResource GetWorkflowRunActionRepetitionResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Logic.WorkflowRunActionRepetitionResource GetWorkflowRunActionRepetitionResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Logic.LogicExtensions.GetWorkflowRunActionRepetitionResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetWorkflowRunActionRepetitionResource (client As ArmClient, id As ResourceIdentifier) As WorkflowRunActionRepetitionResource" />
      <MemberSignature Language="F#" Value="static member GetWorkflowRunActionRepetitionResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Logic.WorkflowRunActionRepetitionResource" Usage="Azure.ResourceManager.Logic.LogicExtensions.GetWorkflowRunActionRepetitionResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Logic.WorkflowRunActionRepetitionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Logic.WorkflowRunActionRepetitionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Logic.WorkflowRunActionRepetitionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Logic.WorkflowRunActionRepetitionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Logic.WorkflowRunActionRepetitionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWorkflowRunActionRequestHistoryResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Logic.WorkflowRunActionRequestHistoryResource GetWorkflowRunActionRequestHistoryResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Logic.WorkflowRunActionRequestHistoryResource GetWorkflowRunActionRequestHistoryResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Logic.LogicExtensions.GetWorkflowRunActionRequestHistoryResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetWorkflowRunActionRequestHistoryResource (client As ArmClient, id As ResourceIdentifier) As WorkflowRunActionRequestHistoryResource" />
      <MemberSignature Language="F#" Value="static member GetWorkflowRunActionRequestHistoryResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Logic.WorkflowRunActionRequestHistoryResource" Usage="Azure.ResourceManager.Logic.LogicExtensions.GetWorkflowRunActionRequestHistoryResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Logic.WorkflowRunActionRequestHistoryResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Logic.WorkflowRunActionRequestHistoryResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Logic.WorkflowRunActionRequestHistoryResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Logic.WorkflowRunActionRequestHistoryResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Logic.WorkflowRunActionRequestHistoryResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWorkflowRunActionResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Logic.WorkflowRunActionResource GetWorkflowRunActionResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Logic.WorkflowRunActionResource GetWorkflowRunActionResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Logic.LogicExtensions.GetWorkflowRunActionResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetWorkflowRunActionResource (client As ArmClient, id As ResourceIdentifier) As WorkflowRunActionResource" />
      <MemberSignature Language="F#" Value="static member GetWorkflowRunActionResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Logic.WorkflowRunActionResource" Usage="Azure.ResourceManager.Logic.LogicExtensions.GetWorkflowRunActionResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Logic.WorkflowRunActionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Logic.WorkflowRunActionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Logic.WorkflowRunActionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Logic.WorkflowRunActionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Logic.WorkflowRunActionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWorkflowRunActionScopeRepetitionResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Logic.WorkflowRunActionScopeRepetitionResource GetWorkflowRunActionScopeRepetitionResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Logic.WorkflowRunActionScopeRepetitionResource GetWorkflowRunActionScopeRepetitionResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Logic.LogicExtensions.GetWorkflowRunActionScopeRepetitionResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetWorkflowRunActionScopeRepetitionResource (client As ArmClient, id As ResourceIdentifier) As WorkflowRunActionScopeRepetitionResource" />
      <MemberSignature Language="F#" Value="static member GetWorkflowRunActionScopeRepetitionResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Logic.WorkflowRunActionScopeRepetitionResource" Usage="Azure.ResourceManager.Logic.LogicExtensions.GetWorkflowRunActionScopeRepetitionResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Logic.WorkflowRunActionScopeRepetitionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Logic.WorkflowRunActionScopeRepetitionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Logic.WorkflowRunActionScopeRepetitionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Logic.WorkflowRunActionScopeRepetitionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Logic.WorkflowRunActionScopeRepetitionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWorkflowRunOperationResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Logic.WorkflowRunOperationResource GetWorkflowRunOperationResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Logic.WorkflowRunOperationResource GetWorkflowRunOperationResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Logic.LogicExtensions.GetWorkflowRunOperationResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetWorkflowRunOperationResource (client As ArmClient, id As ResourceIdentifier) As WorkflowRunOperationResource" />
      <MemberSignature Language="F#" Value="static member GetWorkflowRunOperationResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Logic.WorkflowRunOperationResource" Usage="Azure.ResourceManager.Logic.LogicExtensions.GetWorkflowRunOperationResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Logic.WorkflowRunOperationResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Logic.WorkflowRunOperationResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Logic.WorkflowRunOperationResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Logic.WorkflowRunOperationResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Logic.WorkflowRunOperationResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWorkflowRunResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Logic.WorkflowRunResource GetWorkflowRunResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Logic.WorkflowRunResource GetWorkflowRunResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Logic.LogicExtensions.GetWorkflowRunResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetWorkflowRunResource (client As ArmClient, id As ResourceIdentifier) As WorkflowRunResource" />
      <MemberSignature Language="F#" Value="static member GetWorkflowRunResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Logic.WorkflowRunResource" Usage="Azure.ResourceManager.Logic.LogicExtensions.GetWorkflowRunResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Logic.WorkflowRunResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Logic.WorkflowRunResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Logic.WorkflowRunResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Logic.WorkflowRunResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Logic.WorkflowRunResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWorkflows">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Logic.WorkflowCollection GetWorkflows (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Logic.WorkflowCollection GetWorkflows(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Logic.LogicExtensions.GetWorkflows(Azure.ResourceManager.Resources.ResourceGroupResource)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetWorkflows (resourceGroupResource As ResourceGroupResource) As WorkflowCollection" />
      <MemberSignature Language="F#" Value="static member GetWorkflows : Azure.ResourceManager.Resources.ResourceGroupResource -&gt; Azure.ResourceManager.Logic.WorkflowCollection" Usage="Azure.ResourceManager.Logic.LogicExtensions.GetWorkflows resourceGroupResource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Logic.WorkflowCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <summary> Gets a collection of WorkflowResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of WorkflowResources and their operations over a WorkflowResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWorkflows">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.Logic.WorkflowResource&gt; GetWorkflows (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, int? top = default, string filter = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.Logic.WorkflowResource&gt; GetWorkflows(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Nullable`1&lt;int32&gt; top, string filter, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Logic.LogicExtensions.GetWorkflows(Azure.ResourceManager.Resources.SubscriptionResource,System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetWorkflows (subscriptionResource As SubscriptionResource, Optional top As Nullable(Of Integer) = Nothing, Optional filter As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of WorkflowResource)" />
      <MemberSignature Language="F#" Value="static member GetWorkflows : Azure.ResourceManager.Resources.SubscriptionResource * Nullable&lt;int&gt; * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Logic.WorkflowResource&gt;" Usage="Azure.ResourceManager.Logic.LogicExtensions.GetWorkflows (subscriptionResource, top, filter, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Logic.WorkflowResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="top"> The number of items to be included in the result. </param>
        <param name="filter"> The filter to apply on the operation. Options for filters include: State, Trigger, and ReferencedResourceId. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a list of workflows by subscription.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Logic/workflows
            Operation Id: Workflows_ListBySubscription
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Logic.WorkflowResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWorkflowsAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.Logic.WorkflowResource&gt; GetWorkflowsAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, int? top = default, string filter = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Logic.WorkflowResource&gt; GetWorkflowsAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Nullable`1&lt;int32&gt; top, string filter, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Logic.LogicExtensions.GetWorkflowsAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetWorkflowsAsync (subscriptionResource As SubscriptionResource, Optional top As Nullable(Of Integer) = Nothing, Optional filter As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of WorkflowResource)" />
      <MemberSignature Language="F#" Value="static member GetWorkflowsAsync : Azure.ResourceManager.Resources.SubscriptionResource * Nullable&lt;int&gt; * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Logic.WorkflowResource&gt;" Usage="Azure.ResourceManager.Logic.LogicExtensions.GetWorkflowsAsync (subscriptionResource, top, filter, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Logic.WorkflowResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="top"> The number of items to be included in the result. </param>
        <param name="filter"> The filter to apply on the operation. Options for filters include: State, Trigger, and ReferencedResourceId. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a list of workflows by subscription.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Logic/workflows
            Operation Id: Workflows_ListBySubscription
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Logic.WorkflowResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWorkflowTriggerHistoryResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Logic.WorkflowTriggerHistoryResource GetWorkflowTriggerHistoryResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Logic.WorkflowTriggerHistoryResource GetWorkflowTriggerHistoryResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Logic.LogicExtensions.GetWorkflowTriggerHistoryResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetWorkflowTriggerHistoryResource (client As ArmClient, id As ResourceIdentifier) As WorkflowTriggerHistoryResource" />
      <MemberSignature Language="F#" Value="static member GetWorkflowTriggerHistoryResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Logic.WorkflowTriggerHistoryResource" Usage="Azure.ResourceManager.Logic.LogicExtensions.GetWorkflowTriggerHistoryResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Logic.WorkflowTriggerHistoryResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Logic.WorkflowTriggerHistoryResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Logic.WorkflowTriggerHistoryResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Logic.WorkflowTriggerHistoryResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Logic.WorkflowTriggerHistoryResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWorkflowTriggerResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Logic.WorkflowTriggerResource GetWorkflowTriggerResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Logic.WorkflowTriggerResource GetWorkflowTriggerResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Logic.LogicExtensions.GetWorkflowTriggerResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetWorkflowTriggerResource (client As ArmClient, id As ResourceIdentifier) As WorkflowTriggerResource" />
      <MemberSignature Language="F#" Value="static member GetWorkflowTriggerResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Logic.WorkflowTriggerResource" Usage="Azure.ResourceManager.Logic.LogicExtensions.GetWorkflowTriggerResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Logic.WorkflowTriggerResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Logic.WorkflowTriggerResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Logic.WorkflowTriggerResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Logic.WorkflowTriggerResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Logic.WorkflowTriggerResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWorkflowVersionResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Logic.WorkflowVersionResource GetWorkflowVersionResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Logic.WorkflowVersionResource GetWorkflowVersionResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Logic.LogicExtensions.GetWorkflowVersionResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetWorkflowVersionResource (client As ArmClient, id As ResourceIdentifier) As WorkflowVersionResource" />
      <MemberSignature Language="F#" Value="static member GetWorkflowVersionResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Logic.WorkflowVersionResource" Usage="Azure.ResourceManager.Logic.LogicExtensions.GetWorkflowVersionResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Logic.WorkflowVersionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Logic.WorkflowVersionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Logic.WorkflowVersionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Logic.WorkflowVersionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Logic.WorkflowVersionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateByLocationWorkflow">
      <MemberSignature Language="C#" Value="public static Azure.Response ValidateByLocationWorkflow (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, Azure.Core.AzureLocation location, string workflowName, Azure.ResourceManager.Logic.WorkflowData data, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response ValidateByLocationWorkflow(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, valuetype Azure.Core.AzureLocation location, string workflowName, class Azure.ResourceManager.Logic.WorkflowData data, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Logic.LogicExtensions.ValidateByLocationWorkflow(Azure.ResourceManager.Resources.ResourceGroupResource,Azure.Core.AzureLocation,System.String,Azure.ResourceManager.Logic.WorkflowData,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ValidateByLocationWorkflow (resourceGroupResource As ResourceGroupResource, location As AzureLocation, workflowName As String, data As WorkflowData, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="static member ValidateByLocationWorkflow : Azure.ResourceManager.Resources.ResourceGroupResource * Azure.Core.AzureLocation * string * Azure.ResourceManager.Logic.WorkflowData * System.Threading.CancellationToken -&gt; Azure.Response" Usage="Azure.ResourceManager.Logic.LogicExtensions.ValidateByLocationWorkflow (resourceGroupResource, location, workflowName, data, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="workflowName" Type="System.String" />
        <Parameter Name="data" Type="Azure.ResourceManager.Logic.WorkflowData" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="location"> The workflow location. </param>
        <param name="workflowName"> The workflow name. </param>
        <param name="data"> The workflow. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Validates the workflow definition.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/locations/{location}/workflows/{workflowName}/validate
            Operation Id: Workflows_ValidateByLocation
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="workflowName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="workflowName" /> or <paramref name="data" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ValidateByLocationWorkflowAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&gt; ValidateByLocationWorkflowAsync (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, Azure.Core.AzureLocation location, string workflowName, Azure.ResourceManager.Logic.WorkflowData data, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; ValidateByLocationWorkflowAsync(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, valuetype Azure.Core.AzureLocation location, string workflowName, class Azure.ResourceManager.Logic.WorkflowData data, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Logic.LogicExtensions.ValidateByLocationWorkflowAsync(Azure.ResourceManager.Resources.ResourceGroupResource,Azure.Core.AzureLocation,System.String,Azure.ResourceManager.Logic.WorkflowData,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ValidateByLocationWorkflowAsync (resourceGroupResource As ResourceGroupResource, location As AzureLocation, workflowName As String, data As WorkflowData, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="static member ValidateByLocationWorkflowAsync : Azure.ResourceManager.Resources.ResourceGroupResource * Azure.Core.AzureLocation * string * Azure.ResourceManager.Logic.WorkflowData * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="Azure.ResourceManager.Logic.LogicExtensions.ValidateByLocationWorkflowAsync (resourceGroupResource, location, workflowName, data, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Logic</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="workflowName" Type="System.String" />
        <Parameter Name="data" Type="Azure.ResourceManager.Logic.WorkflowData" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="location"> The workflow location. </param>
        <param name="workflowName"> The workflow name. </param>
        <param name="data"> The workflow. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Validates the workflow definition.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/locations/{location}/workflows/{workflowName}/validate
            Operation Id: Workflows_ValidateByLocation
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="workflowName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="workflowName" /> or <paramref name="data" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>

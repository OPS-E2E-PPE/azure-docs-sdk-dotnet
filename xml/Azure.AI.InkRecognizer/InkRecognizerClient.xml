<Type Name="InkRecognizerClient" FullName="Azure.AI.InkRecognizer.InkRecognizerClient">
  <TypeSignature Language="C#" Value="public class InkRecognizerClient" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit InkRecognizerClient extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.AI.InkRecognizer.InkRecognizerClient" />
  <TypeSignature Language="VB.NET" Value="Public Class InkRecognizerClient" />
  <TypeSignature Language="F#" Value="type InkRecognizerClient = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.AI.InkRecognizer</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected InkRecognizerClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.InkRecognizer.InkRecognizerClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.InkRecognizer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InkRecognizerClient (Uri endpoint, Azure.AI.InkRecognizer.InkRecognizerCredential credential);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, class Azure.AI.InkRecognizer.InkRecognizerCredential credential) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.InkRecognizer.InkRecognizerClient.#ctor(System.Uri,Azure.AI.InkRecognizer.InkRecognizerCredential)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, credential As InkRecognizerCredential)" />
      <MemberSignature Language="F#" Value="new Azure.AI.InkRecognizer.InkRecognizerClient : Uri * Azure.AI.InkRecognizer.InkRecognizerCredential -&gt; Azure.AI.InkRecognizer.InkRecognizerClient" Usage="new Azure.AI.InkRecognizer.InkRecognizerClient (endpoint, credential)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.InkRecognizer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.AI.InkRecognizer.InkRecognizerCredential" />
      </Parameters>
      <Docs>
        <param name="endpoint">To be added.</param>
        <param name="credential">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InkRecognizerClient (Uri endpoint, Azure.AI.InkRecognizer.InkRecognizerCredential credential, Azure.AI.InkRecognizer.InkRecognizerClientOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, class Azure.AI.InkRecognizer.InkRecognizerCredential credential, class Azure.AI.InkRecognizer.InkRecognizerClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.InkRecognizer.InkRecognizerClient.#ctor(System.Uri,Azure.AI.InkRecognizer.InkRecognizerCredential,Azure.AI.InkRecognizer.InkRecognizerClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, credential As InkRecognizerCredential, options As InkRecognizerClientOptions)" />
      <MemberSignature Language="F#" Value="new Azure.AI.InkRecognizer.InkRecognizerClient : Uri * Azure.AI.InkRecognizer.InkRecognizerCredential * Azure.AI.InkRecognizer.InkRecognizerClientOptions -&gt; Azure.AI.InkRecognizer.InkRecognizerClient" Usage="new Azure.AI.InkRecognizer.InkRecognizerClient (endpoint, credential, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.InkRecognizer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.AI.InkRecognizer.InkRecognizerCredential" />
        <Parameter Name="options" Type="Azure.AI.InkRecognizer.InkRecognizerClientOptions" />
      </Parameters>
      <Docs>
        <param name="endpoint">To be added.</param>
        <param name="credential">To be added.</param>
        <param name="options">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RecognizeInk">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.AI.InkRecognizer.Models.RecognitionRoot&gt; RecognizeInk (System.Collections.Generic.IEnumerable&lt;Azure.AI.InkRecognizer.InkStroke&gt; strokes, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Azure.Response`1&lt;class Azure.AI.InkRecognizer.Models.RecognitionRoot&gt; RecognizeInk(class System.Collections.Generic.IEnumerable`1&lt;valuetype Azure.AI.InkRecognizer.InkStroke&gt; strokes, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.InkRecognizer.InkRecognizerClient.RecognizeInk(System.Collections.Generic.IEnumerable{Azure.AI.InkRecognizer.InkStroke},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member RecognizeInk : seq&lt;Azure.AI.InkRecognizer.InkStroke&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.InkRecognizer.Models.RecognitionRoot&gt;&#xA;override this.RecognizeInk : seq&lt;Azure.AI.InkRecognizer.InkStroke&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.InkRecognizer.Models.RecognitionRoot&gt;" Usage="inkRecognizerClient.RecognizeInk (strokes, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.InkRecognizer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.AI.InkRecognizer.Models.RecognitionRoot&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="strokes" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.InkRecognizer.InkStroke&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="strokes">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RecognizeInk">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.AI.InkRecognizer.Models.RecognitionRoot&gt; RecognizeInk (System.Collections.Generic.IEnumerable&lt;Azure.AI.InkRecognizer.InkStroke&gt; strokes, Azure.AI.InkRecognizer.InkPointUnit unit, float unitMultiple, string language, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Azure.Response`1&lt;class Azure.AI.InkRecognizer.Models.RecognitionRoot&gt; RecognizeInk(class System.Collections.Generic.IEnumerable`1&lt;valuetype Azure.AI.InkRecognizer.InkStroke&gt; strokes, valuetype Azure.AI.InkRecognizer.InkPointUnit unit, float32 unitMultiple, string language, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.InkRecognizer.InkRecognizerClient.RecognizeInk(System.Collections.Generic.IEnumerable{Azure.AI.InkRecognizer.InkStroke},Azure.AI.InkRecognizer.InkPointUnit,System.Single,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member RecognizeInk : seq&lt;Azure.AI.InkRecognizer.InkStroke&gt; * Azure.AI.InkRecognizer.InkPointUnit * single * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.InkRecognizer.Models.RecognitionRoot&gt;&#xA;override this.RecognizeInk : seq&lt;Azure.AI.InkRecognizer.InkStroke&gt; * Azure.AI.InkRecognizer.InkPointUnit * single * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.InkRecognizer.Models.RecognitionRoot&gt;" Usage="inkRecognizerClient.RecognizeInk (strokes, unit, unitMultiple, language, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.InkRecognizer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.AI.InkRecognizer.Models.RecognitionRoot&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="strokes" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.InkRecognizer.InkStroke&gt;" />
        <Parameter Name="unit" Type="Azure.AI.InkRecognizer.InkPointUnit" />
        <Parameter Name="unitMultiple" Type="System.Single" />
        <Parameter Name="language" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="strokes">To be added.</param>
        <param name="unit">To be added.</param>
        <param name="unitMultiple">To be added.</param>
        <param name="language">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RecognizeInkAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.InkRecognizer.Models.RecognitionRoot&gt;&gt; RecognizeInkAsync (System.Collections.Generic.IEnumerable&lt;Azure.AI.InkRecognizer.InkStroke&gt; strokes, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;valuetype Azure.Response`1&lt;class Azure.AI.InkRecognizer.Models.RecognitionRoot&gt;&gt; RecognizeInkAsync(class System.Collections.Generic.IEnumerable`1&lt;valuetype Azure.AI.InkRecognizer.InkStroke&gt; strokes, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.InkRecognizer.InkRecognizerClient.RecognizeInkAsync(System.Collections.Generic.IEnumerable{Azure.AI.InkRecognizer.InkStroke},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member RecognizeInkAsync : seq&lt;Azure.AI.InkRecognizer.InkStroke&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.InkRecognizer.Models.RecognitionRoot&gt;&gt;&#xA;override this.RecognizeInkAsync : seq&lt;Azure.AI.InkRecognizer.InkStroke&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.InkRecognizer.Models.RecognitionRoot&gt;&gt;" Usage="inkRecognizerClient.RecognizeInkAsync (strokes, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.InkRecognizer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.InkRecognizer.Models.RecognitionRoot&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="strokes" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.InkRecognizer.InkStroke&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="strokes">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RecognizeInkAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.InkRecognizer.Models.RecognitionRoot&gt;&gt; RecognizeInkAsync (System.Collections.Generic.IEnumerable&lt;Azure.AI.InkRecognizer.InkStroke&gt; strokes, Azure.AI.InkRecognizer.InkPointUnit unit, float unitMultiple, string language, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;valuetype Azure.Response`1&lt;class Azure.AI.InkRecognizer.Models.RecognitionRoot&gt;&gt; RecognizeInkAsync(class System.Collections.Generic.IEnumerable`1&lt;valuetype Azure.AI.InkRecognizer.InkStroke&gt; strokes, valuetype Azure.AI.InkRecognizer.InkPointUnit unit, float32 unitMultiple, string language, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.InkRecognizer.InkRecognizerClient.RecognizeInkAsync(System.Collections.Generic.IEnumerable{Azure.AI.InkRecognizer.InkStroke},Azure.AI.InkRecognizer.InkPointUnit,System.Single,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member RecognizeInkAsync : seq&lt;Azure.AI.InkRecognizer.InkStroke&gt; * Azure.AI.InkRecognizer.InkPointUnit * single * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.InkRecognizer.Models.RecognitionRoot&gt;&gt;&#xA;override this.RecognizeInkAsync : seq&lt;Azure.AI.InkRecognizer.InkStroke&gt; * Azure.AI.InkRecognizer.InkPointUnit * single * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.InkRecognizer.Models.RecognitionRoot&gt;&gt;" Usage="inkRecognizerClient.RecognizeInkAsync (strokes, unit, unitMultiple, language, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.InkRecognizer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.InkRecognizer.Models.RecognitionRoot&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="strokes" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.InkRecognizer.InkStroke&gt;" />
        <Parameter Name="unit" Type="Azure.AI.InkRecognizer.InkPointUnit" />
        <Parameter Name="unitMultiple" Type="System.Single" />
        <Parameter Name="language" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="strokes">To be added.</param>
        <param name="unit">To be added.</param>
        <param name="unitMultiple">To be added.</param>
        <param name="language">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="WhereStatement" FullName="Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement">
  <TypeSignature Language="C#" Value="public class WhereStatement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WhereStatement extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement" />
  <TypeSignature Language="VB.NET" Value="Public Class WhereStatement" />
  <TypeSignature Language="F#" Value="type WhereStatement = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.DigitalTwins.Core</AssemblyName>
    <AssemblyVersion>1.3.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Represents the WHERE condition logic. Used to express conditional statements in the DigitalTwins query.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="And">
      <MemberSignature Language="C#" Value="public Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement And ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement And() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement.And" />
      <MemberSignature Language="VB.NET" Value="Public Function And () As WhereStatement" />
      <MemberSignature Language="F#" Value="member this.And : unit -&gt; Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement" Usage="whereStatement.And " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.DigitalTwins.Core</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Adds the AND logical operator to a query.
            </summary>
        <returns>The <see cref="T:Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement" /> object itself.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="And">
      <MemberSignature Language="C#" Value="public Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement And (Func&lt;Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement,Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement&gt; nested);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement And(class System.Func`2&lt;class Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement, class Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement&gt; nested) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement.And(System.Func{Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement,Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement})" />
      <MemberSignature Language="VB.NET" Value="Public Function And (nested As Func(Of WhereStatement, WhereStatement)) As WhereStatement" />
      <MemberSignature Language="F#" Value="member this.And : Func&lt;Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement, Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement&gt; -&gt; Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement" Usage="whereStatement.And nested" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.DigitalTwins.Core</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nested" Type="System.Func&lt;Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement,Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement&gt;" />
      </Parameters>
      <Docs>
        <param name="nested">WhereQuery methods to perform within a set of parenthesis.</param>
        <summary>
            Used to add nested WHERE conditions within an AND logical operator to a query.
            </summary>
        <returns>The <see cref="T:Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement" /> object itself.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Compare&lt;T&gt;">
      <MemberSignature Language="C#" Value="public Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement Compare&lt;T&gt; (string field, Azure.DigitalTwins.Core.QueryBuilder.QueryComparisonOperator comparisonOperator, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement Compare&lt;T&gt;(string field, valuetype Azure.DigitalTwins.Core.QueryBuilder.QueryComparisonOperator comparisonOperator, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement.Compare``1(System.String,Azure.DigitalTwins.Core.QueryBuilder.QueryComparisonOperator,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Compare(Of T) (field As String, comparisonOperator As QueryComparisonOperator, value As T) As WhereStatement" />
      <MemberSignature Language="F#" Value="member this.Compare : string * Azure.DigitalTwins.Core.QueryBuilder.QueryComparisonOperator * 'T -&gt; Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement" Usage="whereStatement.Compare (field, comparisonOperator, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.DigitalTwins.Core</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="field" Type="System.String" />
        <Parameter Name="comparisonOperator" Type="Azure.DigitalTwins.Core.QueryBuilder.QueryComparisonOperator" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="field">The field being checked against a certain value.</param>
        <param name="comparisonOperator">The comparison operator being invoked.</param>
        <param name="value">The value being checked against a field.</param>
        <summary>
            Adds the conditional arguments for a comparison to the query object. Used to compare DigitalTwins properties
            using the query language's comparison operators.
            </summary>
        <returns>The <see cref="T:Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement" /> object itself.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement Contains (string value, string[] searched);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement Contains(string value, string[] searched) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement.Contains(System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (value As String, searched As String()) As WhereStatement" />
      <MemberSignature Language="F#" Value="member this.Contains : string * string[] -&gt; Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement" Usage="whereStatement.Contains (value, searched)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.DigitalTwins.Core</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="searched" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="value">User specified property to look for.</param>
        <param name="searched">Field of possible options to check for the <c>value</c> parameter.</param>
        <summary>
            Adds the conditional arguments for a contains conditional statement to the query object. Used to search
            a field for a user specified property.
            </summary>
        <returns>The <see cref="T:Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement" /> object itself.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Custom">
      <MemberSignature Language="C#" Value="public Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement Custom (string condition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement Custom(string condition) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement.Custom(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Custom (condition As String) As WhereStatement" />
      <MemberSignature Language="F#" Value="member this.Custom : string -&gt; Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement" Usage="whereStatement.Custom condition" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.DigitalTwins.Core</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition">The verbatim condition (SQL-like syntax) in string format.</param>
        <summary>
            An alternative way to add a WHERE clause to the query by directly providing a string that contains the condition.
            </summary>
        <returns>The <see cref="T:Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement" /> object itself.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndsWith">
      <MemberSignature Language="C#" Value="public Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement EndsWith (string stringToCheck, string endingString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement EndsWith(string stringToCheck, string endingString) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement.EndsWith(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndsWith (stringToCheck As String, endingString As String) As WhereStatement" />
      <MemberSignature Language="F#" Value="member this.EndsWith : string * string -&gt; Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement" Usage="whereStatement.EndsWith (stringToCheck, endingString)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.DigitalTwins.Core</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringToCheck" Type="System.String" />
        <Parameter Name="endingString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="stringToCheck">String to check the ending of.</param>
        <param name="endingString">String representing the ending to check for.</param>
        <summary>
            Adds the <see href="https://docs.microsoft.com/en-us/azure/digital-twins/reference-query-functions#endswith">ENDSWITH</see> function to the condition statement of the query.
            </summary>
        <returns>The <see cref="T:Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement" /> object itself.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetQueryText">
      <MemberSignature Language="C#" Value="public string GetQueryText ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetQueryText() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement.GetQueryText" />
      <MemberSignature Language="VB.NET" Value="Public Function GetQueryText () As String" />
      <MemberSignature Language="F#" Value="member this.GetQueryText : unit -&gt; string" Usage="whereStatement.GetQueryText " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.DigitalTwins.Core</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Gets the string representation of a WhereQuery.
            </summary>
        <returns>The <see cref="T:Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement" /> object itself.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement IsDefined (string property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement IsDefined(string property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement.IsDefined(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsDefined (property As String) As WhereStatement" />
      <MemberSignature Language="F#" Value="member this.IsDefined : string -&gt; Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement" Usage="whereStatement.IsDefined property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.DigitalTwins.Core</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="property">The property that the query is looking for as defined.</param>
        <summary>
            Adds the <see href="https://docs.microsoft.com/en-us/azure/digital-twins/reference-query-functions#is_defined">IS_DEFINED</see> function to the condition statement of the query.
            </summary>
        <returns>The <see cref="T:Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement" /> object itself.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNull">
      <MemberSignature Language="C#" Value="public Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement IsNull (string expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement IsNull(string expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement.IsNull(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsNull (expression As String) As WhereStatement" />
      <MemberSignature Language="F#" Value="member this.IsNull : string -&gt; Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement" Usage="whereStatement.IsNull expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.DigitalTwins.Core</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="expression">The expression being checked for null.</param>
        <summary>
            Adds the <see href="https://docs.microsoft.com/en-us/azure/digital-twins/reference-query-functions#is_null">IS_NULL</see> function to the condition statement of the query.
            </summary>
        <returns>The <see cref="T:Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement" /> object itself.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOfModel">
      <MemberSignature Language="C#" Value="public Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement IsOfModel (string model, bool exact = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement IsOfModel(string model, bool exact) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement.IsOfModel(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsOfModel (model As String, Optional exact As Boolean = false) As WhereStatement" />
      <MemberSignature Language="F#" Value="member this.IsOfModel : string * bool -&gt; Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement" Usage="whereStatement.IsOfModel (model, exact)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.DigitalTwins.Core</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="System.String" />
        <Parameter Name="exact" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="model">Model Id to check for.</param>
        <param name="exact">Whether or not an exact match is required.</param>
        <summary>
            Adds the <see href="https://docs.microsoft.com/en-us/azure/digital-twins/reference-query-functions#is_of_model">IS_OF_MODEL</see> function to the condition statement of the query.
            </summary>
        <returns>The <see cref="T:Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement" /> object itself.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOfType">
      <MemberSignature Language="C#" Value="public Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement IsOfType (string expression, Azure.DigitalTwins.Core.QueryBuilder.DigitalTwinsDataType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement IsOfType(string expression, valuetype Azure.DigitalTwins.Core.QueryBuilder.DigitalTwinsDataType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement.IsOfType(System.String,Azure.DigitalTwins.Core.QueryBuilder.DigitalTwinsDataType)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsOfType (expression As String, type As DigitalTwinsDataType) As WhereStatement" />
      <MemberSignature Language="F#" Value="member this.IsOfType : string * Azure.DigitalTwins.Core.QueryBuilder.DigitalTwinsDataType -&gt; Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement" Usage="whereStatement.IsOfType (expression, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.DigitalTwins.Core</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.String" />
        <Parameter Name="type" Type="Azure.DigitalTwins.Core.QueryBuilder.DigitalTwinsDataType" />
      </Parameters>
      <Docs>
        <param name="expression">The expression that the query is looking for as a specified type.</param>
        <param name="type">The type in the ADT query language being checked for.</param>
        <summary>
            Adds a user-specified ADT query language function to check an expression's type against a built type in the ADT query language.
            </summary>
        <returns>The <see cref="T:Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement" /> object itself.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NotContains">
      <MemberSignature Language="C#" Value="public Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement NotContains (string value, string[] searched);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement NotContains(string value, string[] searched) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement.NotContains(System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Function NotContains (value As String, searched As String()) As WhereStatement" />
      <MemberSignature Language="F#" Value="member this.NotContains : string * string[] -&gt; Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement" Usage="whereStatement.NotContains (value, searched)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.DigitalTwins.Core</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="searched" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="value">User specified property to look for.</param>
        <param name="searched">Field of possible options to check for the <c>value</c> parameter.</param>
        <summary>
            Adds the conditional arguments for a contains conditional statement to the query object. Used to search
            a field for a user specified property.
            </summary>
        <returns>The <see cref="T:Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement" /> object itself.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Or">
      <MemberSignature Language="C#" Value="public Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement Or ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement Or() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement.Or" />
      <MemberSignature Language="VB.NET" Value="Public Function Or () As WhereStatement" />
      <MemberSignature Language="F#" Value="member this.Or : unit -&gt; Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement" Usage="whereStatement.Or " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.DigitalTwins.Core</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Adds the OR logical operator to a query.
            </summary>
        <returns>The <see cref="T:Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement" /> object itself.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Or">
      <MemberSignature Language="C#" Value="public Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement Or (Func&lt;Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement,Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement&gt; nested);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement Or(class System.Func`2&lt;class Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement, class Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement&gt; nested) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement.Or(System.Func{Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement,Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement})" />
      <MemberSignature Language="VB.NET" Value="Public Function Or (nested As Func(Of WhereStatement, WhereStatement)) As WhereStatement" />
      <MemberSignature Language="F#" Value="member this.Or : Func&lt;Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement, Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement&gt; -&gt; Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement" Usage="whereStatement.Or nested" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.DigitalTwins.Core</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nested" Type="System.Func&lt;Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement,Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement&gt;" />
      </Parameters>
      <Docs>
        <param name="nested">WhereQuery methods to perform within a set of parenthesis.</param>
        <summary>
            Used to add nested WHERE conditions within an OR logical operator to a query.
            </summary>
        <returns>The <see cref="T:Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement" /> object itself.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Precedence">
      <MemberSignature Language="C#" Value="public Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement Precedence (Func&lt;Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement,Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement&gt; nested);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement Precedence(class System.Func`2&lt;class Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement, class Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement&gt; nested) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement.Precedence(System.Func{Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement,Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement})" />
      <MemberSignature Language="VB.NET" Value="Public Function Precedence (nested As Func(Of WhereStatement, WhereStatement)) As WhereStatement" />
      <MemberSignature Language="F#" Value="member this.Precedence : Func&lt;Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement, Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement&gt; -&gt; Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement" Usage="whereStatement.Precedence nested" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.DigitalTwins.Core</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nested" Type="System.Func&lt;Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement,Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement&gt;" />
      </Parameters>
      <Docs>
        <param name="nested">WhereQuery methods to perform within a set of parenthesis.</param>
        <summary>
            Used to add WHERE conditions wrapped in parenthesis to signify precedence to a query.
            </summary>
        <returns>The <see cref="T:Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement" /> object itself.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartsWith">
      <MemberSignature Language="C#" Value="public Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement StartsWith (string stringToCheck, string beginningString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement StartsWith(string stringToCheck, string beginningString) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement.StartsWith(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function StartsWith (stringToCheck As String, beginningString As String) As WhereStatement" />
      <MemberSignature Language="F#" Value="member this.StartsWith : string * string -&gt; Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement" Usage="whereStatement.StartsWith (stringToCheck, beginningString)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.DigitalTwins.Core</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringToCheck" Type="System.String" />
        <Parameter Name="beginningString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="stringToCheck">String to check the beginning of.</param>
        <param name="beginningString">String representing the beginning to check for.</param>
        <summary>
            Adds the <see href="https://docs.microsoft.com/en-us/azure/digital-twins/reference-query-functions#startswith">STARTSWITH</see> function to the condition statement of the query.
            </summary>
        <returns>The <see cref="T:Azure.DigitalTwins.Core.QueryBuilder.Fluent.WhereStatement" /> object itself.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="ClusterResource" FullName="Azure.ResourceManager.HDInsight.ClusterResource">
  <TypeSignature Language="C#" Value="public class ClusterResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ClusterResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.HDInsight.ClusterResource" />
  <TypeSignature Language="VB.NET" Value="Public Class ClusterResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type ClusterResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.HDInsight</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            A Class representing a Cluster along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct a <see cref="T:Azure.ResourceManager.HDInsight.ClusterResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetClusterResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> using the GetCluster method.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ClusterResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.ClusterResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.HDInsight.ClusterResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddTag">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.HDInsight.ClusterResource&gt; AddTag (string key, string value, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.HDInsight.ClusterResource&gt; AddTag(string key, string value, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.ClusterResource.AddTag(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddTag (key As String, value As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ClusterResource)" />
      <MemberSignature Language="F#" Value="abstract member AddTag : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.HDInsight.ClusterResource&gt;&#xA;override this.AddTag : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.HDInsight.ClusterResource&gt;" Usage="clusterResource.AddTag (key, value, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.HDInsight.ClusterResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="key"> The key for the tag. </param>
        <param name="value"> The value for the tag. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Add a tag to the current resource.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusters/{clusterName}
            Operation Id: Clusters_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> or <paramref name="value" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="AddTagAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HDInsight.ClusterResource&gt;&gt; AddTagAsync (string key, string value, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.HDInsight.ClusterResource&gt;&gt; AddTagAsync(string key, string value, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.ClusterResource.AddTagAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddTagAsync (key As String, value As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ClusterResource))" />
      <MemberSignature Language="F#" Value="abstract member AddTagAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HDInsight.ClusterResource&gt;&gt;&#xA;override this.AddTagAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HDInsight.ClusterResource&gt;&gt;" Usage="clusterResource.AddTagAsync (key, value, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HDInsight.ClusterResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="key"> The key for the tag. </param>
        <param name="value"> The value for the tag. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Add a tag to the current resource.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusters/{clusterName}
            Operation Id: Clusters_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> or <paramref name="value" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateExtension">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation CreateExtension (Azure.WaitUntil waitUntil, string extensionName, Azure.ResourceManager.HDInsight.Models.Extension extension, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation CreateExtension(valuetype Azure.WaitUntil waitUntil, string extensionName, class Azure.ResourceManager.HDInsight.Models.Extension extension, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.ClusterResource.CreateExtension(Azure.WaitUntil,System.String,Azure.ResourceManager.HDInsight.Models.Extension,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateExtension (waitUntil As WaitUntil, extensionName As String, extension As Extension, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation" />
      <MemberSignature Language="F#" Value="abstract member CreateExtension : Azure.WaitUntil * string * Azure.ResourceManager.HDInsight.Models.Extension * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&#xA;override this.CreateExtension : Azure.WaitUntil * string * Azure.ResourceManager.HDInsight.Models.Extension * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation" Usage="clusterResource.CreateExtension (waitUntil, extensionName, extension, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="extensionName" Type="System.String" />
        <Parameter Name="extension" Type="Azure.ResourceManager.HDInsight.Models.Extension" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="extensionName"> The name of the cluster extension. </param>
        <param name="extension"> The cluster extensions create request. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Creates an HDInsight cluster extension.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusters/{clusterName}/extensions/{extensionName}
            Operation Id: Extensions_Create
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="extensionName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="extensionName" /> or <paramref name="extension" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateExtensionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt; CreateExtensionAsync (Azure.WaitUntil waitUntil, string extensionName, Azure.ResourceManager.HDInsight.Models.Extension extension, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation&gt; CreateExtensionAsync(valuetype Azure.WaitUntil waitUntil, string extensionName, class Azure.ResourceManager.HDInsight.Models.Extension extension, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.ClusterResource.CreateExtensionAsync(Azure.WaitUntil,System.String,Azure.ResourceManager.HDInsight.Models.Extension,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateExtensionAsync (waitUntil As WaitUntil, extensionName As String, extension As Extension, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation)" />
      <MemberSignature Language="F#" Value="abstract member CreateExtensionAsync : Azure.WaitUntil * string * Azure.ResourceManager.HDInsight.Models.Extension * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;&#xA;override this.CreateExtensionAsync : Azure.WaitUntil * string * Azure.ResourceManager.HDInsight.Models.Extension * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;" Usage="clusterResource.CreateExtensionAsync (waitUntil, extensionName, extension, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="extensionName" Type="System.String" />
        <Parameter Name="extension" Type="Azure.ResourceManager.HDInsight.Models.Extension" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="extensionName"> The name of the cluster extension. </param>
        <param name="extension"> The cluster extensions create request. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Creates an HDInsight cluster extension.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusters/{clusterName}/extensions/{extensionName}
            Operation Id: Extensions_Create
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="extensionName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="extensionName" /> or <paramref name="extension" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateResourceIdentifier">
      <MemberSignature Language="C#" Value="public static Azure.Core.ResourceIdentifier CreateResourceIdentifier (string subscriptionId, string resourceGroupName, string clusterName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Core.ResourceIdentifier CreateResourceIdentifier(string subscriptionId, string resourceGroupName, string clusterName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.ClusterResource.CreateResourceIdentifier(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateResourceIdentifier (subscriptionId As String, resourceGroupName As String, clusterName As String) As ResourceIdentifier" />
      <MemberSignature Language="F#" Value="static member CreateResourceIdentifier : string * string * string -&gt; Azure.Core.ResourceIdentifier" Usage="Azure.ResourceManager.HDInsight.ClusterResource.CreateResourceIdentifier (subscriptionId, resourceGroupName, clusterName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.ResourceIdentifier</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionId" Type="System.String" />
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="clusterName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subscriptionId">To be added.</param>
        <param name="resourceGroupName">To be added.</param>
        <param name="clusterName">To be added.</param>
        <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.HDInsight.ClusterResource" /> instance. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.HDInsight.ClusterData Data { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.HDInsight.ClusterData Data" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.HDInsight.ClusterResource.Data" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Data As ClusterData" />
      <MemberSignature Language="F#" Value="member this.Data : Azure.ResourceManager.HDInsight.ClusterData" Usage="Azure.ResourceManager.HDInsight.ClusterResource.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HDInsight.ClusterData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets the data representing this Feature. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation Delete (Azure.WaitUntil waitUntil, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation Delete(valuetype Azure.WaitUntil waitUntil, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.ClusterResource.Delete(Azure.WaitUntil,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Delete (waitUntil As WaitUntil, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation" />
      <MemberSignature Language="F#" Value="abstract member Delete : Azure.WaitUntil * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&#xA;override this.Delete : Azure.WaitUntil * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation" Usage="clusterResource.Delete (waitUntil, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Deletes the specified HDInsight cluster.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusters/{clusterName}
            Operation Id: Clusters_Delete
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt; DeleteAsync (Azure.WaitUntil waitUntil, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation&gt; DeleteAsync(valuetype Azure.WaitUntil waitUntil, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.ClusterResource.DeleteAsync(Azure.WaitUntil,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteAsync (waitUntil As WaitUntil, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation)" />
      <MemberSignature Language="F#" Value="abstract member DeleteAsync : Azure.WaitUntil * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;&#xA;override this.DeleteAsync : Azure.WaitUntil * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;" Usage="clusterResource.DeleteAsync (waitUntil, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Deletes the specified HDInsight cluster.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusters/{clusterName}
            Operation Id: Clusters_Delete
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteExtension">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation DeleteExtension (Azure.WaitUntil waitUntil, string extensionName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation DeleteExtension(valuetype Azure.WaitUntil waitUntil, string extensionName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.ClusterResource.DeleteExtension(Azure.WaitUntil,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteExtension (waitUntil As WaitUntil, extensionName As String, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation" />
      <MemberSignature Language="F#" Value="abstract member DeleteExtension : Azure.WaitUntil * string * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&#xA;override this.DeleteExtension : Azure.WaitUntil * string * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation" Usage="clusterResource.DeleteExtension (waitUntil, extensionName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="extensionName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="extensionName"> The name of the cluster extension. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Deletes the specified extension for HDInsight cluster.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusters/{clusterName}/extensions/{extensionName}
            Operation Id: Extensions_Delete
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="extensionName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="extensionName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteExtensionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt; DeleteExtensionAsync (Azure.WaitUntil waitUntil, string extensionName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation&gt; DeleteExtensionAsync(valuetype Azure.WaitUntil waitUntil, string extensionName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.ClusterResource.DeleteExtensionAsync(Azure.WaitUntil,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteExtensionAsync (waitUntil As WaitUntil, extensionName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation)" />
      <MemberSignature Language="F#" Value="abstract member DeleteExtensionAsync : Azure.WaitUntil * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;&#xA;override this.DeleteExtensionAsync : Azure.WaitUntil * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;" Usage="clusterResource.DeleteExtensionAsync (waitUntil, extensionName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="extensionName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="extensionName"> The name of the cluster extension. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Deletes the specified extension for HDInsight cluster.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusters/{clusterName}/extensions/{extensionName}
            Operation Id: Extensions_Delete
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="extensionName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="extensionName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteScriptAction">
      <MemberSignature Language="C#" Value="public virtual Azure.Response DeleteScriptAction (string scriptName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response DeleteScriptAction(string scriptName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.ClusterResource.DeleteScriptAction(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteScriptAction (scriptName As String, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member DeleteScriptAction : string * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.DeleteScriptAction : string * System.Threading.CancellationToken -&gt; Azure.Response" Usage="clusterResource.DeleteScriptAction (scriptName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scriptName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scriptName"> The name of the script. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Deletes a specified persisted script action of the cluster.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusters/{clusterName}/scriptActions/{scriptName}
            Operation Id: ScriptActions_Delete
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="scriptName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="scriptName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteScriptActionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DeleteScriptActionAsync (string scriptName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeleteScriptActionAsync(string scriptName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.ClusterResource.DeleteScriptActionAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteScriptActionAsync (scriptName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DeleteScriptActionAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DeleteScriptActionAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="clusterResource.DeleteScriptActionAsync (scriptName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scriptName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scriptName"> The name of the script. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Deletes a specified persisted script action of the cluster.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusters/{clusterName}/scriptActions/{scriptName}
            Operation Id: ScriptActions_Delete
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="scriptName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="scriptName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="DisableAzureMonitorExtension">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation DisableAzureMonitorExtension (Azure.WaitUntil waitUntil, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation DisableAzureMonitorExtension(valuetype Azure.WaitUntil waitUntil, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.ClusterResource.DisableAzureMonitorExtension(Azure.WaitUntil,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DisableAzureMonitorExtension (waitUntil As WaitUntil, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation" />
      <MemberSignature Language="F#" Value="abstract member DisableAzureMonitorExtension : Azure.WaitUntil * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&#xA;override this.DisableAzureMonitorExtension : Azure.WaitUntil * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation" Usage="clusterResource.DisableAzureMonitorExtension (waitUntil, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Disables the Azure Monitor on the HDInsight cluster.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusters/{clusterName}/extensions/azureMonitor
            Operation Id: Extensions_DisableAzureMonitor
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisableAzureMonitorExtensionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt; DisableAzureMonitorExtensionAsync (Azure.WaitUntil waitUntil, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation&gt; DisableAzureMonitorExtensionAsync(valuetype Azure.WaitUntil waitUntil, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.ClusterResource.DisableAzureMonitorExtensionAsync(Azure.WaitUntil,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DisableAzureMonitorExtensionAsync (waitUntil As WaitUntil, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation)" />
      <MemberSignature Language="F#" Value="abstract member DisableAzureMonitorExtensionAsync : Azure.WaitUntil * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;&#xA;override this.DisableAzureMonitorExtensionAsync : Azure.WaitUntil * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;" Usage="clusterResource.DisableAzureMonitorExtensionAsync (waitUntil, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Disables the Azure Monitor on the HDInsight cluster.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusters/{clusterName}/extensions/azureMonitor
            Operation Id: Extensions_DisableAzureMonitor
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisableMonitoringExtension">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation DisableMonitoringExtension (Azure.WaitUntil waitUntil, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation DisableMonitoringExtension(valuetype Azure.WaitUntil waitUntil, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.ClusterResource.DisableMonitoringExtension(Azure.WaitUntil,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DisableMonitoringExtension (waitUntil As WaitUntil, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation" />
      <MemberSignature Language="F#" Value="abstract member DisableMonitoringExtension : Azure.WaitUntil * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&#xA;override this.DisableMonitoringExtension : Azure.WaitUntil * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation" Usage="clusterResource.DisableMonitoringExtension (waitUntil, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Disables the Operations Management Suite (OMS) on the HDInsight cluster.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusters/{clusterName}/extensions/clustermonitoring
            Operation Id: Extensions_DisableMonitoring
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisableMonitoringExtensionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt; DisableMonitoringExtensionAsync (Azure.WaitUntil waitUntil, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation&gt; DisableMonitoringExtensionAsync(valuetype Azure.WaitUntil waitUntil, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.ClusterResource.DisableMonitoringExtensionAsync(Azure.WaitUntil,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DisableMonitoringExtensionAsync (waitUntil As WaitUntil, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation)" />
      <MemberSignature Language="F#" Value="abstract member DisableMonitoringExtensionAsync : Azure.WaitUntil * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;&#xA;override this.DisableMonitoringExtensionAsync : Azure.WaitUntil * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;" Usage="clusterResource.DisableMonitoringExtensionAsync (waitUntil, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Disables the Operations Management Suite (OMS) on the HDInsight cluster.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusters/{clusterName}/extensions/clustermonitoring
            Operation Id: Extensions_DisableMonitoring
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableAzureMonitorExtension">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation EnableAzureMonitorExtension (Azure.WaitUntil waitUntil, Azure.ResourceManager.HDInsight.Models.AzureMonitorContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation EnableAzureMonitorExtension(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.HDInsight.Models.AzureMonitorContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.ClusterResource.EnableAzureMonitorExtension(Azure.WaitUntil,Azure.ResourceManager.HDInsight.Models.AzureMonitorContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EnableAzureMonitorExtension (waitUntil As WaitUntil, content As AzureMonitorContent, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation" />
      <MemberSignature Language="F#" Value="abstract member EnableAzureMonitorExtension : Azure.WaitUntil * Azure.ResourceManager.HDInsight.Models.AzureMonitorContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&#xA;override this.EnableAzureMonitorExtension : Azure.WaitUntil * Azure.ResourceManager.HDInsight.Models.AzureMonitorContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation" Usage="clusterResource.EnableAzureMonitorExtension (waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="content" Type="Azure.ResourceManager.HDInsight.Models.AzureMonitorContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> The Log Analytics workspace parameters. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Enables the Azure Monitor on the HDInsight cluster.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusters/{clusterName}/extensions/azureMonitor
            Operation Id: Extensions_EnableAzureMonitor
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="EnableAzureMonitorExtensionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt; EnableAzureMonitorExtensionAsync (Azure.WaitUntil waitUntil, Azure.ResourceManager.HDInsight.Models.AzureMonitorContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation&gt; EnableAzureMonitorExtensionAsync(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.HDInsight.Models.AzureMonitorContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.ClusterResource.EnableAzureMonitorExtensionAsync(Azure.WaitUntil,Azure.ResourceManager.HDInsight.Models.AzureMonitorContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EnableAzureMonitorExtensionAsync (waitUntil As WaitUntil, content As AzureMonitorContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation)" />
      <MemberSignature Language="F#" Value="abstract member EnableAzureMonitorExtensionAsync : Azure.WaitUntil * Azure.ResourceManager.HDInsight.Models.AzureMonitorContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;&#xA;override this.EnableAzureMonitorExtensionAsync : Azure.WaitUntil * Azure.ResourceManager.HDInsight.Models.AzureMonitorContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;" Usage="clusterResource.EnableAzureMonitorExtensionAsync (waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="content" Type="Azure.ResourceManager.HDInsight.Models.AzureMonitorContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> The Log Analytics workspace parameters. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Enables the Azure Monitor on the HDInsight cluster.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusters/{clusterName}/extensions/azureMonitor
            Operation Id: Extensions_EnableAzureMonitor
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="EnableMonitoringExtension">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation EnableMonitoringExtension (Azure.WaitUntil waitUntil, Azure.ResourceManager.HDInsight.Models.ClusterMonitoringContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation EnableMonitoringExtension(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.HDInsight.Models.ClusterMonitoringContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.ClusterResource.EnableMonitoringExtension(Azure.WaitUntil,Azure.ResourceManager.HDInsight.Models.ClusterMonitoringContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EnableMonitoringExtension (waitUntil As WaitUntil, content As ClusterMonitoringContent, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation" />
      <MemberSignature Language="F#" Value="abstract member EnableMonitoringExtension : Azure.WaitUntil * Azure.ResourceManager.HDInsight.Models.ClusterMonitoringContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&#xA;override this.EnableMonitoringExtension : Azure.WaitUntil * Azure.ResourceManager.HDInsight.Models.ClusterMonitoringContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation" Usage="clusterResource.EnableMonitoringExtension (waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="content" Type="Azure.ResourceManager.HDInsight.Models.ClusterMonitoringContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> The Operations Management Suite (OMS) workspace parameters. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Enables the Operations Management Suite (OMS) on the HDInsight cluster.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusters/{clusterName}/extensions/clustermonitoring
            Operation Id: Extensions_EnableMonitoring
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="EnableMonitoringExtensionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt; EnableMonitoringExtensionAsync (Azure.WaitUntil waitUntil, Azure.ResourceManager.HDInsight.Models.ClusterMonitoringContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation&gt; EnableMonitoringExtensionAsync(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.HDInsight.Models.ClusterMonitoringContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.ClusterResource.EnableMonitoringExtensionAsync(Azure.WaitUntil,Azure.ResourceManager.HDInsight.Models.ClusterMonitoringContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EnableMonitoringExtensionAsync (waitUntil As WaitUntil, content As ClusterMonitoringContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation)" />
      <MemberSignature Language="F#" Value="abstract member EnableMonitoringExtensionAsync : Azure.WaitUntil * Azure.ResourceManager.HDInsight.Models.ClusterMonitoringContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;&#xA;override this.EnableMonitoringExtensionAsync : Azure.WaitUntil * Azure.ResourceManager.HDInsight.Models.ClusterMonitoringContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;" Usage="clusterResource.EnableMonitoringExtensionAsync (waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="content" Type="Azure.ResourceManager.HDInsight.Models.ClusterMonitoringContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> The Operations Management Suite (OMS) workspace parameters. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Enables the Operations Management Suite (OMS) on the HDInsight cluster.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusters/{clusterName}/extensions/clustermonitoring
            Operation Id: Extensions_EnableMonitoring
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ExecuteScriptActions">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation ExecuteScriptActions (Azure.WaitUntil waitUntil, Azure.ResourceManager.HDInsight.Models.ExecuteScriptActionContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation ExecuteScriptActions(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.HDInsight.Models.ExecuteScriptActionContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.ClusterResource.ExecuteScriptActions(Azure.WaitUntil,Azure.ResourceManager.HDInsight.Models.ExecuteScriptActionContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ExecuteScriptActions (waitUntil As WaitUntil, content As ExecuteScriptActionContent, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation" />
      <MemberSignature Language="F#" Value="abstract member ExecuteScriptActions : Azure.WaitUntil * Azure.ResourceManager.HDInsight.Models.ExecuteScriptActionContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&#xA;override this.ExecuteScriptActions : Azure.WaitUntil * Azure.ResourceManager.HDInsight.Models.ExecuteScriptActionContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation" Usage="clusterResource.ExecuteScriptActions (waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="content" Type="Azure.ResourceManager.HDInsight.Models.ExecuteScriptActionContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> The parameters for executing script actions. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Executes script actions on the specified HDInsight cluster.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusters/{clusterName}/executeScriptActions
            Operation Id: Clusters_ExecuteScriptActions
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ExecuteScriptActionsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt; ExecuteScriptActionsAsync (Azure.WaitUntil waitUntil, Azure.ResourceManager.HDInsight.Models.ExecuteScriptActionContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation&gt; ExecuteScriptActionsAsync(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.HDInsight.Models.ExecuteScriptActionContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.ClusterResource.ExecuteScriptActionsAsync(Azure.WaitUntil,Azure.ResourceManager.HDInsight.Models.ExecuteScriptActionContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ExecuteScriptActionsAsync (waitUntil As WaitUntil, content As ExecuteScriptActionContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation)" />
      <MemberSignature Language="F#" Value="abstract member ExecuteScriptActionsAsync : Azure.WaitUntil * Azure.ResourceManager.HDInsight.Models.ExecuteScriptActionContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;&#xA;override this.ExecuteScriptActionsAsync : Azure.WaitUntil * Azure.ResourceManager.HDInsight.Models.ExecuteScriptActionContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;" Usage="clusterResource.ExecuteScriptActionsAsync (waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="content" Type="Azure.ResourceManager.HDInsight.Models.ExecuteScriptActionContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> The parameters for executing script actions. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Executes script actions on the specified HDInsight cluster.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusters/{clusterName}/executeScriptActions
            Operation Id: Clusters_ExecuteScriptActions
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.HDInsight.ClusterResource&gt; Get (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.HDInsight.ClusterResource&gt; Get(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.ClusterResource.Get(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Get (Optional cancellationToken As CancellationToken = Nothing) As Response(Of ClusterResource)" />
      <MemberSignature Language="F#" Value="abstract member Get : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.HDInsight.ClusterResource&gt;&#xA;override this.Get : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.HDInsight.ClusterResource&gt;" Usage="clusterResource.Get cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.HDInsight.ClusterResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the specified cluster.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusters/{clusterName}
            Operation Id: Clusters_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApplication">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.HDInsight.ApplicationResource&gt; GetApplication (string applicationName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.HDInsight.ApplicationResource&gt; GetApplication(string applicationName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.ClusterResource.GetApplication(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApplication (applicationName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ApplicationResource)" />
      <MemberSignature Language="F#" Value="abstract member GetApplication : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.HDInsight.ApplicationResource&gt;&#xA;override this.GetApplication : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.HDInsight.ApplicationResource&gt;" Usage="clusterResource.GetApplication (applicationName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.HDInsight.ApplicationResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="applicationName"> The constant value for the application name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets properties of the specified application.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusters/{clusterName}/applications/{applicationName}
            Operation Id: Applications_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="applicationName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="applicationName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetApplicationAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HDInsight.ApplicationResource&gt;&gt; GetApplicationAsync (string applicationName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.HDInsight.ApplicationResource&gt;&gt; GetApplicationAsync(string applicationName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.ClusterResource.GetApplicationAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApplicationAsync (applicationName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ApplicationResource))" />
      <MemberSignature Language="F#" Value="abstract member GetApplicationAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HDInsight.ApplicationResource&gt;&gt;&#xA;override this.GetApplicationAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HDInsight.ApplicationResource&gt;&gt;" Usage="clusterResource.GetApplicationAsync (applicationName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HDInsight.ApplicationResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="applicationName"> The constant value for the application name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets properties of the specified application.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusters/{clusterName}/applications/{applicationName}
            Operation Id: Applications_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="applicationName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="applicationName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetApplications">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.HDInsight.ApplicationCollection GetApplications ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.HDInsight.ApplicationCollection GetApplications() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.ClusterResource.GetApplications" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApplications () As ApplicationCollection" />
      <MemberSignature Language="F#" Value="abstract member GetApplications : unit -&gt; Azure.ResourceManager.HDInsight.ApplicationCollection&#xA;override this.GetApplications : unit -&gt; Azure.ResourceManager.HDInsight.ApplicationCollection" Usage="clusterResource.GetApplications " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HDInsight.ApplicationCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ApplicationResources in the Cluster. </summary>
        <returns> An object representing collection of ApplicationResources and their operations over a ApplicationResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HDInsight.ClusterResource&gt;&gt; GetAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.HDInsight.ClusterResource&gt;&gt; GetAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.ClusterResource.GetAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ClusterResource))" />
      <MemberSignature Language="F#" Value="abstract member GetAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HDInsight.ClusterResource&gt;&gt;&#xA;override this.GetAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HDInsight.ClusterResource&gt;&gt;" Usage="clusterResource.GetAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HDInsight.ClusterResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the specified cluster.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusters/{clusterName}
            Operation Id: Clusters_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAsyncOperationStatusVirtualMachine">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.HDInsight.Models.AsyncOperationResult&gt; GetAsyncOperationStatusVirtualMachine (string operationId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.HDInsight.Models.AsyncOperationResult&gt; GetAsyncOperationStatusVirtualMachine(string operationId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.ClusterResource.GetAsyncOperationStatusVirtualMachine(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAsyncOperationStatusVirtualMachine (operationId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of AsyncOperationResult)" />
      <MemberSignature Language="F#" Value="abstract member GetAsyncOperationStatusVirtualMachine : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.HDInsight.Models.AsyncOperationResult&gt;&#xA;override this.GetAsyncOperationStatusVirtualMachine : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.HDInsight.Models.AsyncOperationResult&gt;" Usage="clusterResource.GetAsyncOperationStatusVirtualMachine (operationId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.HDInsight.Models.AsyncOperationResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operationId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operationId"> The long running operation id. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the async operation status.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusters/{clusterName}/restartHosts/azureasyncoperations/{operationId}
            Operation Id: VirtualMachines_GetAsyncOperationStatus
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="operationId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="operationId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAsyncOperationStatusVirtualMachineAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HDInsight.Models.AsyncOperationResult&gt;&gt; GetAsyncOperationStatusVirtualMachineAsync (string operationId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.HDInsight.Models.AsyncOperationResult&gt;&gt; GetAsyncOperationStatusVirtualMachineAsync(string operationId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.ClusterResource.GetAsyncOperationStatusVirtualMachineAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAsyncOperationStatusVirtualMachineAsync (operationId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AsyncOperationResult))" />
      <MemberSignature Language="F#" Value="abstract member GetAsyncOperationStatusVirtualMachineAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HDInsight.Models.AsyncOperationResult&gt;&gt;&#xA;override this.GetAsyncOperationStatusVirtualMachineAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HDInsight.Models.AsyncOperationResult&gt;&gt;" Usage="clusterResource.GetAsyncOperationStatusVirtualMachineAsync (operationId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HDInsight.Models.AsyncOperationResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operationId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operationId"> The long running operation id. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the async operation status.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusters/{clusterName}/restartHosts/azureasyncoperations/{operationId}
            Operation Id: VirtualMachines_GetAsyncOperationStatus
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="operationId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="operationId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAzureAsyncOperationStatus">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.HDInsight.Models.AsyncOperationResult&gt; GetAzureAsyncOperationStatus (string operationId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.HDInsight.Models.AsyncOperationResult&gt; GetAzureAsyncOperationStatus(string operationId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.ClusterResource.GetAzureAsyncOperationStatus(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAzureAsyncOperationStatus (operationId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of AsyncOperationResult)" />
      <MemberSignature Language="F#" Value="abstract member GetAzureAsyncOperationStatus : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.HDInsight.Models.AsyncOperationResult&gt;&#xA;override this.GetAzureAsyncOperationStatus : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.HDInsight.Models.AsyncOperationResult&gt;" Usage="clusterResource.GetAzureAsyncOperationStatus (operationId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.HDInsight.Models.AsyncOperationResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operationId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operationId"> The long running operation id. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            The the async operation status.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusters/{clusterName}/azureasyncoperations/{operationId}
            Operation Id: Clusters_GetAzureAsyncOperationStatus
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="operationId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="operationId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAzureAsyncOperationStatusAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HDInsight.Models.AsyncOperationResult&gt;&gt; GetAzureAsyncOperationStatusAsync (string operationId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.HDInsight.Models.AsyncOperationResult&gt;&gt; GetAzureAsyncOperationStatusAsync(string operationId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.ClusterResource.GetAzureAsyncOperationStatusAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAzureAsyncOperationStatusAsync (operationId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AsyncOperationResult))" />
      <MemberSignature Language="F#" Value="abstract member GetAzureAsyncOperationStatusAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HDInsight.Models.AsyncOperationResult&gt;&gt;&#xA;override this.GetAzureAsyncOperationStatusAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HDInsight.Models.AsyncOperationResult&gt;&gt;" Usage="clusterResource.GetAzureAsyncOperationStatusAsync (operationId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HDInsight.Models.AsyncOperationResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operationId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operationId"> The long running operation id. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            The the async operation status.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusters/{clusterName}/azureasyncoperations/{operationId}
            Operation Id: Clusters_GetAzureAsyncOperationStatus
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="operationId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="operationId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAzureAsyncOperationStatusExtension">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.HDInsight.Models.AsyncOperationResult&gt; GetAzureAsyncOperationStatusExtension (string extensionName, string operationId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.HDInsight.Models.AsyncOperationResult&gt; GetAzureAsyncOperationStatusExtension(string extensionName, string operationId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.ClusterResource.GetAzureAsyncOperationStatusExtension(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAzureAsyncOperationStatusExtension (extensionName As String, operationId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of AsyncOperationResult)" />
      <MemberSignature Language="F#" Value="abstract member GetAzureAsyncOperationStatusExtension : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.HDInsight.Models.AsyncOperationResult&gt;&#xA;override this.GetAzureAsyncOperationStatusExtension : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.HDInsight.Models.AsyncOperationResult&gt;" Usage="clusterResource.GetAzureAsyncOperationStatusExtension (extensionName, operationId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.HDInsight.Models.AsyncOperationResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="extensionName" Type="System.String" />
        <Parameter Name="operationId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="extensionName"> The name of the cluster extension. </param>
        <param name="operationId"> The long running operation id. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the async operation status.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusters/{clusterName}/extensions/{extensionName}/azureAsyncOperations/{operationId}
            Operation Id: Extensions_GetAzureAsyncOperationStatus
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="extensionName" /> or <paramref name="operationId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="extensionName" /> or <paramref name="operationId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAzureAsyncOperationStatusExtensionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HDInsight.Models.AsyncOperationResult&gt;&gt; GetAzureAsyncOperationStatusExtensionAsync (string extensionName, string operationId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.HDInsight.Models.AsyncOperationResult&gt;&gt; GetAzureAsyncOperationStatusExtensionAsync(string extensionName, string operationId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.ClusterResource.GetAzureAsyncOperationStatusExtensionAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAzureAsyncOperationStatusExtensionAsync (extensionName As String, operationId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AsyncOperationResult))" />
      <MemberSignature Language="F#" Value="abstract member GetAzureAsyncOperationStatusExtensionAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HDInsight.Models.AsyncOperationResult&gt;&gt;&#xA;override this.GetAzureAsyncOperationStatusExtensionAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HDInsight.Models.AsyncOperationResult&gt;&gt;" Usage="clusterResource.GetAzureAsyncOperationStatusExtensionAsync (extensionName, operationId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HDInsight.Models.AsyncOperationResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="extensionName" Type="System.String" />
        <Parameter Name="operationId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="extensionName"> The name of the cluster extension. </param>
        <param name="operationId"> The long running operation id. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the async operation status.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusters/{clusterName}/extensions/{extensionName}/azureAsyncOperations/{operationId}
            Operation Id: Extensions_GetAzureAsyncOperationStatus
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="extensionName" /> or <paramref name="operationId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="extensionName" /> or <paramref name="operationId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAzureMonitorStatusExtension">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.HDInsight.Models.AzureMonitorResponse&gt; GetAzureMonitorStatusExtension (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.HDInsight.Models.AzureMonitorResponse&gt; GetAzureMonitorStatusExtension(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.ClusterResource.GetAzureMonitorStatusExtension(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAzureMonitorStatusExtension (Optional cancellationToken As CancellationToken = Nothing) As Response(Of AzureMonitorResponse)" />
      <MemberSignature Language="F#" Value="abstract member GetAzureMonitorStatusExtension : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.HDInsight.Models.AzureMonitorResponse&gt;&#xA;override this.GetAzureMonitorStatusExtension : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.HDInsight.Models.AzureMonitorResponse&gt;" Usage="clusterResource.GetAzureMonitorStatusExtension cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.HDInsight.Models.AzureMonitorResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the status of Azure Monitor on the HDInsight cluster.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusters/{clusterName}/extensions/azureMonitor
            Operation Id: Extensions_GetAzureMonitorStatus
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAzureMonitorStatusExtensionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HDInsight.Models.AzureMonitorResponse&gt;&gt; GetAzureMonitorStatusExtensionAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.HDInsight.Models.AzureMonitorResponse&gt;&gt; GetAzureMonitorStatusExtensionAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.ClusterResource.GetAzureMonitorStatusExtensionAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAzureMonitorStatusExtensionAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AzureMonitorResponse))" />
      <MemberSignature Language="F#" Value="abstract member GetAzureMonitorStatusExtensionAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HDInsight.Models.AzureMonitorResponse&gt;&gt;&#xA;override this.GetAzureMonitorStatusExtensionAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HDInsight.Models.AzureMonitorResponse&gt;&gt;" Usage="clusterResource.GetAzureMonitorStatusExtensionAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HDInsight.Models.AzureMonitorResponse&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the status of Azure Monitor on the HDInsight cluster.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusters/{clusterName}/extensions/azureMonitor
            Operation Id: Extensions_GetAzureMonitorStatus
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConfiguration">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.HDInsight.Models.ClusterConfigurations&gt; GetConfiguration (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.HDInsight.Models.ClusterConfigurations&gt; GetConfiguration(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.ClusterResource.GetConfiguration(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetConfiguration (Optional cancellationToken As CancellationToken = Nothing) As Response(Of ClusterConfigurations)" />
      <MemberSignature Language="F#" Value="abstract member GetConfiguration : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.HDInsight.Models.ClusterConfigurations&gt;&#xA;override this.GetConfiguration : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.HDInsight.Models.ClusterConfigurations&gt;" Usage="clusterResource.GetConfiguration cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.HDInsight.Models.ClusterConfigurations&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all configuration information for an HDI cluster.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusters/{clusterName}/configurations
            Operation Id: Configurations_List
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConfiguration">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;System.Collections.Generic.IReadOnlyDictionary&lt;string,string&gt;&gt; GetConfiguration (string configurationName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class System.Collections.Generic.IReadOnlyDictionary`2&lt;string, string&gt;&gt; GetConfiguration(string configurationName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.ClusterResource.GetConfiguration(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetConfiguration (configurationName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of IReadOnlyDictionary(Of String, String))" />
      <MemberSignature Language="F#" Value="abstract member GetConfiguration : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;System.Collections.Generic.IReadOnlyDictionary&lt;string, string&gt;&gt;&#xA;override this.GetConfiguration : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;System.Collections.Generic.IReadOnlyDictionary&lt;string, string&gt;&gt;" Usage="clusterResource.GetConfiguration (configurationName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configurationName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="configurationName"> The name of the cluster configuration. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            The configuration object for the specified cluster. This API is not recommended and might be removed in the future. Please consider using List configurations API instead.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusters/{clusterName}/configurations/{configurationName}
            Operation Id: Configurations_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="configurationName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="configurationName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetConfigurationAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HDInsight.Models.ClusterConfigurations&gt;&gt; GetConfigurationAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.HDInsight.Models.ClusterConfigurations&gt;&gt; GetConfigurationAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.ClusterResource.GetConfigurationAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetConfigurationAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ClusterConfigurations))" />
      <MemberSignature Language="F#" Value="abstract member GetConfigurationAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HDInsight.Models.ClusterConfigurations&gt;&gt;&#xA;override this.GetConfigurationAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HDInsight.Models.ClusterConfigurations&gt;&gt;" Usage="clusterResource.GetConfigurationAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HDInsight.Models.ClusterConfigurations&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all configuration information for an HDI cluster.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusters/{clusterName}/configurations
            Operation Id: Configurations_List
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConfigurationAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Collections.Generic.IReadOnlyDictionary&lt;string,string&gt;&gt;&gt; GetConfigurationAsync (string configurationName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class System.Collections.Generic.IReadOnlyDictionary`2&lt;string, string&gt;&gt;&gt; GetConfigurationAsync(string configurationName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.ClusterResource.GetConfigurationAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetConfigurationAsync (configurationName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of IReadOnlyDictionary(Of String, String)))" />
      <MemberSignature Language="F#" Value="abstract member GetConfigurationAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Collections.Generic.IReadOnlyDictionary&lt;string, string&gt;&gt;&gt;&#xA;override this.GetConfigurationAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Collections.Generic.IReadOnlyDictionary&lt;string, string&gt;&gt;&gt;" Usage="clusterResource.GetConfigurationAsync (configurationName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.String&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configurationName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="configurationName"> The name of the cluster configuration. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            The configuration object for the specified cluster. This API is not recommended and might be removed in the future. Please consider using List configurations API instead.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusters/{clusterName}/configurations/{configurationName}
            Operation Id: Configurations_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="configurationName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="configurationName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetExecutionAsyncOperationStatusScriptAction">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.HDInsight.Models.AsyncOperationResult&gt; GetExecutionAsyncOperationStatusScriptAction (string operationId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.HDInsight.Models.AsyncOperationResult&gt; GetExecutionAsyncOperationStatusScriptAction(string operationId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.ClusterResource.GetExecutionAsyncOperationStatusScriptAction(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetExecutionAsyncOperationStatusScriptAction (operationId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of AsyncOperationResult)" />
      <MemberSignature Language="F#" Value="abstract member GetExecutionAsyncOperationStatusScriptAction : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.HDInsight.Models.AsyncOperationResult&gt;&#xA;override this.GetExecutionAsyncOperationStatusScriptAction : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.HDInsight.Models.AsyncOperationResult&gt;" Usage="clusterResource.GetExecutionAsyncOperationStatusScriptAction (operationId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.HDInsight.Models.AsyncOperationResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operationId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operationId"> The long running operation id. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the async operation status of execution operation.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusters/{clusterName}/executeScriptActions/azureasyncoperations/{operationId}
            Operation Id: ScriptActions_GetExecutionAsyncOperationStatus
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="operationId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="operationId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetExecutionAsyncOperationStatusScriptActionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HDInsight.Models.AsyncOperationResult&gt;&gt; GetExecutionAsyncOperationStatusScriptActionAsync (string operationId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.HDInsight.Models.AsyncOperationResult&gt;&gt; GetExecutionAsyncOperationStatusScriptActionAsync(string operationId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.ClusterResource.GetExecutionAsyncOperationStatusScriptActionAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetExecutionAsyncOperationStatusScriptActionAsync (operationId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AsyncOperationResult))" />
      <MemberSignature Language="F#" Value="abstract member GetExecutionAsyncOperationStatusScriptActionAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HDInsight.Models.AsyncOperationResult&gt;&gt;&#xA;override this.GetExecutionAsyncOperationStatusScriptActionAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HDInsight.Models.AsyncOperationResult&gt;&gt;" Usage="clusterResource.GetExecutionAsyncOperationStatusScriptActionAsync (operationId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HDInsight.Models.AsyncOperationResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operationId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="operationId"> The long running operation id. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the async operation status of execution operation.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusters/{clusterName}/executeScriptActions/azureasyncoperations/{operationId}
            Operation Id: ScriptActions_GetExecutionAsyncOperationStatus
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="operationId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="operationId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetExecutionDetailScriptAction">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.HDInsight.Models.RuntimeScriptActionDetail&gt; GetExecutionDetailScriptAction (string scriptExecutionId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.HDInsight.Models.RuntimeScriptActionDetail&gt; GetExecutionDetailScriptAction(string scriptExecutionId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.ClusterResource.GetExecutionDetailScriptAction(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetExecutionDetailScriptAction (scriptExecutionId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of RuntimeScriptActionDetail)" />
      <MemberSignature Language="F#" Value="abstract member GetExecutionDetailScriptAction : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.HDInsight.Models.RuntimeScriptActionDetail&gt;&#xA;override this.GetExecutionDetailScriptAction : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.HDInsight.Models.RuntimeScriptActionDetail&gt;" Usage="clusterResource.GetExecutionDetailScriptAction (scriptExecutionId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.HDInsight.Models.RuntimeScriptActionDetail&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scriptExecutionId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scriptExecutionId"> The script execution Id. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the script execution detail for the given script execution ID.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusters/{clusterName}/scriptExecutionHistory/{scriptExecutionId}
            Operation Id: ScriptActions_GetExecutionDetail
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="scriptExecutionId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="scriptExecutionId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetExecutionDetailScriptActionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HDInsight.Models.RuntimeScriptActionDetail&gt;&gt; GetExecutionDetailScriptActionAsync (string scriptExecutionId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.HDInsight.Models.RuntimeScriptActionDetail&gt;&gt; GetExecutionDetailScriptActionAsync(string scriptExecutionId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.ClusterResource.GetExecutionDetailScriptActionAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetExecutionDetailScriptActionAsync (scriptExecutionId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of RuntimeScriptActionDetail))" />
      <MemberSignature Language="F#" Value="abstract member GetExecutionDetailScriptActionAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HDInsight.Models.RuntimeScriptActionDetail&gt;&gt;&#xA;override this.GetExecutionDetailScriptActionAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HDInsight.Models.RuntimeScriptActionDetail&gt;&gt;" Usage="clusterResource.GetExecutionDetailScriptActionAsync (scriptExecutionId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HDInsight.Models.RuntimeScriptActionDetail&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scriptExecutionId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scriptExecutionId"> The script execution Id. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the script execution detail for the given script execution ID.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusters/{clusterName}/scriptExecutionHistory/{scriptExecutionId}
            Operation Id: ScriptActions_GetExecutionDetail
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="scriptExecutionId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="scriptExecutionId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetExtension">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.HDInsight.Models.ClusterMonitoringResponse&gt; GetExtension (string extensionName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.HDInsight.Models.ClusterMonitoringResponse&gt; GetExtension(string extensionName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.ClusterResource.GetExtension(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetExtension (extensionName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ClusterMonitoringResponse)" />
      <MemberSignature Language="F#" Value="abstract member GetExtension : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.HDInsight.Models.ClusterMonitoringResponse&gt;&#xA;override this.GetExtension : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.HDInsight.Models.ClusterMonitoringResponse&gt;" Usage="clusterResource.GetExtension (extensionName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.HDInsight.Models.ClusterMonitoringResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="extensionName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="extensionName"> The name of the cluster extension. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the extension properties for the specified HDInsight cluster extension.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusters/{clusterName}/extensions/{extensionName}
            Operation Id: Extensions_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="extensionName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="extensionName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetExtensionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HDInsight.Models.ClusterMonitoringResponse&gt;&gt; GetExtensionAsync (string extensionName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.HDInsight.Models.ClusterMonitoringResponse&gt;&gt; GetExtensionAsync(string extensionName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.ClusterResource.GetExtensionAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetExtensionAsync (extensionName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ClusterMonitoringResponse))" />
      <MemberSignature Language="F#" Value="abstract member GetExtensionAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HDInsight.Models.ClusterMonitoringResponse&gt;&gt;&#xA;override this.GetExtensionAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HDInsight.Models.ClusterMonitoringResponse&gt;&gt;" Usage="clusterResource.GetExtensionAsync (extensionName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HDInsight.Models.ClusterMonitoringResponse&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="extensionName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="extensionName"> The name of the cluster extension. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the extension properties for the specified HDInsight cluster extension.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusters/{clusterName}/extensions/{extensionName}
            Operation Id: Extensions_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="extensionName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="extensionName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetGatewaySettings">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.HDInsight.Models.GatewaySettings&gt; GetGatewaySettings (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.HDInsight.Models.GatewaySettings&gt; GetGatewaySettings(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.ClusterResource.GetGatewaySettings(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGatewaySettings (Optional cancellationToken As CancellationToken = Nothing) As Response(Of GatewaySettings)" />
      <MemberSignature Language="F#" Value="abstract member GetGatewaySettings : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.HDInsight.Models.GatewaySettings&gt;&#xA;override this.GetGatewaySettings : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.HDInsight.Models.GatewaySettings&gt;" Usage="clusterResource.GetGatewaySettings cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.HDInsight.Models.GatewaySettings&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the gateway settings for the specified cluster.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusters/{clusterName}/getGatewaySettings
            Operation Id: Clusters_GetGatewaySettings
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGatewaySettingsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HDInsight.Models.GatewaySettings&gt;&gt; GetGatewaySettingsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.HDInsight.Models.GatewaySettings&gt;&gt; GetGatewaySettingsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.ClusterResource.GetGatewaySettingsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGatewaySettingsAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of GatewaySettings))" />
      <MemberSignature Language="F#" Value="abstract member GetGatewaySettingsAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HDInsight.Models.GatewaySettings&gt;&gt;&#xA;override this.GetGatewaySettingsAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HDInsight.Models.GatewaySettings&gt;&gt;" Usage="clusterResource.GetGatewaySettingsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HDInsight.Models.GatewaySettings&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the gateway settings for the specified cluster.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusters/{clusterName}/getGatewaySettings
            Operation Id: Clusters_GetGatewaySettings
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHDInsightPrivateEndpointConnection">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.HDInsight.HDInsightPrivateEndpointConnectionResource&gt; GetHDInsightPrivateEndpointConnection (string privateEndpointConnectionName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.HDInsight.HDInsightPrivateEndpointConnectionResource&gt; GetHDInsightPrivateEndpointConnection(string privateEndpointConnectionName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.ClusterResource.GetHDInsightPrivateEndpointConnection(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetHDInsightPrivateEndpointConnection (privateEndpointConnectionName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of HDInsightPrivateEndpointConnectionResource)" />
      <MemberSignature Language="F#" Value="abstract member GetHDInsightPrivateEndpointConnection : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.HDInsight.HDInsightPrivateEndpointConnectionResource&gt;&#xA;override this.GetHDInsightPrivateEndpointConnection : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.HDInsight.HDInsightPrivateEndpointConnectionResource&gt;" Usage="clusterResource.GetHDInsightPrivateEndpointConnection (privateEndpointConnectionName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.HDInsight.HDInsightPrivateEndpointConnectionResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="privateEndpointConnectionName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="privateEndpointConnectionName"> The name of the private endpoint connection. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the specific private endpoint connection.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusters/{clusterName}/privateEndpointConnections/{privateEndpointConnectionName}
            Operation Id: PrivateEndpointConnections_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="privateEndpointConnectionName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="privateEndpointConnectionName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetHDInsightPrivateEndpointConnectionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HDInsight.HDInsightPrivateEndpointConnectionResource&gt;&gt; GetHDInsightPrivateEndpointConnectionAsync (string privateEndpointConnectionName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.HDInsight.HDInsightPrivateEndpointConnectionResource&gt;&gt; GetHDInsightPrivateEndpointConnectionAsync(string privateEndpointConnectionName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.ClusterResource.GetHDInsightPrivateEndpointConnectionAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetHDInsightPrivateEndpointConnectionAsync (privateEndpointConnectionName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of HDInsightPrivateEndpointConnectionResource))" />
      <MemberSignature Language="F#" Value="abstract member GetHDInsightPrivateEndpointConnectionAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HDInsight.HDInsightPrivateEndpointConnectionResource&gt;&gt;&#xA;override this.GetHDInsightPrivateEndpointConnectionAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HDInsight.HDInsightPrivateEndpointConnectionResource&gt;&gt;" Usage="clusterResource.GetHDInsightPrivateEndpointConnectionAsync (privateEndpointConnectionName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HDInsight.HDInsightPrivateEndpointConnectionResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="privateEndpointConnectionName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="privateEndpointConnectionName"> The name of the private endpoint connection. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the specific private endpoint connection.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusters/{clusterName}/privateEndpointConnections/{privateEndpointConnectionName}
            Operation Id: PrivateEndpointConnections_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="privateEndpointConnectionName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="privateEndpointConnectionName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetHDInsightPrivateEndpointConnections">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.HDInsight.HDInsightPrivateEndpointConnectionCollection GetHDInsightPrivateEndpointConnections ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.HDInsight.HDInsightPrivateEndpointConnectionCollection GetHDInsightPrivateEndpointConnections() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.ClusterResource.GetHDInsightPrivateEndpointConnections" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetHDInsightPrivateEndpointConnections () As HDInsightPrivateEndpointConnectionCollection" />
      <MemberSignature Language="F#" Value="abstract member GetHDInsightPrivateEndpointConnections : unit -&gt; Azure.ResourceManager.HDInsight.HDInsightPrivateEndpointConnectionCollection&#xA;override this.GetHDInsightPrivateEndpointConnections : unit -&gt; Azure.ResourceManager.HDInsight.HDInsightPrivateEndpointConnectionCollection" Usage="clusterResource.GetHDInsightPrivateEndpointConnections " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HDInsight.HDInsightPrivateEndpointConnectionCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of HDInsightPrivateEndpointConnectionResources in the Cluster. </summary>
        <returns> An object representing collection of HDInsightPrivateEndpointConnectionResources and their operations over a HDInsightPrivateEndpointConnectionResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHDInsightPrivateLinkResource">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.HDInsight.HDInsightPrivateLinkResource&gt; GetHDInsightPrivateLinkResource (string privateLinkResourceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.HDInsight.HDInsightPrivateLinkResource&gt; GetHDInsightPrivateLinkResource(string privateLinkResourceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.ClusterResource.GetHDInsightPrivateLinkResource(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetHDInsightPrivateLinkResource (privateLinkResourceName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of HDInsightPrivateLinkResource)" />
      <MemberSignature Language="F#" Value="abstract member GetHDInsightPrivateLinkResource : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.HDInsight.HDInsightPrivateLinkResource&gt;&#xA;override this.GetHDInsightPrivateLinkResource : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.HDInsight.HDInsightPrivateLinkResource&gt;" Usage="clusterResource.GetHDInsightPrivateLinkResource (privateLinkResourceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.HDInsight.HDInsightPrivateLinkResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="privateLinkResourceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="privateLinkResourceName"> The name of the private link resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the specific private link resource.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusters/{clusterName}/privateLinkResources/{privateLinkResourceName}
            Operation Id: PrivateLinkResources_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="privateLinkResourceName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="privateLinkResourceName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetHDInsightPrivateLinkResourceAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HDInsight.HDInsightPrivateLinkResource&gt;&gt; GetHDInsightPrivateLinkResourceAsync (string privateLinkResourceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.HDInsight.HDInsightPrivateLinkResource&gt;&gt; GetHDInsightPrivateLinkResourceAsync(string privateLinkResourceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.ClusterResource.GetHDInsightPrivateLinkResourceAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetHDInsightPrivateLinkResourceAsync (privateLinkResourceName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of HDInsightPrivateLinkResource))" />
      <MemberSignature Language="F#" Value="abstract member GetHDInsightPrivateLinkResourceAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HDInsight.HDInsightPrivateLinkResource&gt;&gt;&#xA;override this.GetHDInsightPrivateLinkResourceAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HDInsight.HDInsightPrivateLinkResource&gt;&gt;" Usage="clusterResource.GetHDInsightPrivateLinkResourceAsync (privateLinkResourceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HDInsight.HDInsightPrivateLinkResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="privateLinkResourceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="privateLinkResourceName"> The name of the private link resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the specific private link resource.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusters/{clusterName}/privateLinkResources/{privateLinkResourceName}
            Operation Id: PrivateLinkResources_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="privateLinkResourceName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="privateLinkResourceName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetHDInsightPrivateLinkResources">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.HDInsight.HDInsightPrivateLinkResourceCollection GetHDInsightPrivateLinkResources ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.HDInsight.HDInsightPrivateLinkResourceCollection GetHDInsightPrivateLinkResources() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.ClusterResource.GetHDInsightPrivateLinkResources" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetHDInsightPrivateLinkResources () As HDInsightPrivateLinkResourceCollection" />
      <MemberSignature Language="F#" Value="abstract member GetHDInsightPrivateLinkResources : unit -&gt; Azure.ResourceManager.HDInsight.HDInsightPrivateLinkResourceCollection&#xA;override this.GetHDInsightPrivateLinkResources : unit -&gt; Azure.ResourceManager.HDInsight.HDInsightPrivateLinkResourceCollection" Usage="clusterResource.GetHDInsightPrivateLinkResources " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.HDInsight.HDInsightPrivateLinkResourceCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of HDInsightPrivateLinkResources in the Cluster. </summary>
        <returns> An object representing collection of HDInsightPrivateLinkResources and their operations over a HDInsightPrivateLinkResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHostsVirtualMachines">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.HDInsight.Models.HostInfo&gt; GetHostsVirtualMachines (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.HDInsight.Models.HostInfo&gt; GetHostsVirtualMachines(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.ClusterResource.GetHostsVirtualMachines(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetHostsVirtualMachines (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of HostInfo)" />
      <MemberSignature Language="F#" Value="abstract member GetHostsVirtualMachines : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.HDInsight.Models.HostInfo&gt;&#xA;override this.GetHostsVirtualMachines : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.HDInsight.Models.HostInfo&gt;" Usage="clusterResource.GetHostsVirtualMachines cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.HDInsight.Models.HostInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the HDInsight clusters hosts
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusters/{clusterName}/listHosts
            Operation Id: VirtualMachines_ListHosts
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.HDInsight.Models.HostInfo" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHostsVirtualMachinesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.HDInsight.Models.HostInfo&gt; GetHostsVirtualMachinesAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.HDInsight.Models.HostInfo&gt; GetHostsVirtualMachinesAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.ClusterResource.GetHostsVirtualMachinesAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetHostsVirtualMachinesAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of HostInfo)" />
      <MemberSignature Language="F#" Value="abstract member GetHostsVirtualMachinesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.HDInsight.Models.HostInfo&gt;&#xA;override this.GetHostsVirtualMachinesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.HDInsight.Models.HostInfo&gt;" Usage="clusterResource.GetHostsVirtualMachinesAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.HDInsight.Models.HostInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the HDInsight clusters hosts
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusters/{clusterName}/listHosts
            Operation Id: VirtualMachines_ListHosts
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.HDInsight.Models.HostInfo" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMonitoringStatusExtension">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.HDInsight.Models.ClusterMonitoringResponse&gt; GetMonitoringStatusExtension (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.HDInsight.Models.ClusterMonitoringResponse&gt; GetMonitoringStatusExtension(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.ClusterResource.GetMonitoringStatusExtension(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMonitoringStatusExtension (Optional cancellationToken As CancellationToken = Nothing) As Response(Of ClusterMonitoringResponse)" />
      <MemberSignature Language="F#" Value="abstract member GetMonitoringStatusExtension : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.HDInsight.Models.ClusterMonitoringResponse&gt;&#xA;override this.GetMonitoringStatusExtension : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.HDInsight.Models.ClusterMonitoringResponse&gt;" Usage="clusterResource.GetMonitoringStatusExtension cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.HDInsight.Models.ClusterMonitoringResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the status of Operations Management Suite (OMS) on the HDInsight cluster.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusters/{clusterName}/extensions/clustermonitoring
            Operation Id: Extensions_GetMonitoringStatus
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMonitoringStatusExtensionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HDInsight.Models.ClusterMonitoringResponse&gt;&gt; GetMonitoringStatusExtensionAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.HDInsight.Models.ClusterMonitoringResponse&gt;&gt; GetMonitoringStatusExtensionAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.ClusterResource.GetMonitoringStatusExtensionAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMonitoringStatusExtensionAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ClusterMonitoringResponse))" />
      <MemberSignature Language="F#" Value="abstract member GetMonitoringStatusExtensionAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HDInsight.Models.ClusterMonitoringResponse&gt;&gt;&#xA;override this.GetMonitoringStatusExtensionAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HDInsight.Models.ClusterMonitoringResponse&gt;&gt;" Usage="clusterResource.GetMonitoringStatusExtensionAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HDInsight.Models.ClusterMonitoringResponse&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the status of Operations Management Suite (OMS) on the HDInsight cluster.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusters/{clusterName}/extensions/clustermonitoring
            Operation Id: Extensions_GetMonitoringStatus
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetScriptActions">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.HDInsight.Models.RuntimeScriptActionDetail&gt; GetScriptActions (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.HDInsight.Models.RuntimeScriptActionDetail&gt; GetScriptActions(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.ClusterResource.GetScriptActions(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetScriptActions (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of RuntimeScriptActionDetail)" />
      <MemberSignature Language="F#" Value="abstract member GetScriptActions : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.HDInsight.Models.RuntimeScriptActionDetail&gt;&#xA;override this.GetScriptActions : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.HDInsight.Models.RuntimeScriptActionDetail&gt;" Usage="clusterResource.GetScriptActions cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.HDInsight.Models.RuntimeScriptActionDetail&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all the persisted script actions for the specified cluster.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusters/{clusterName}/scriptActions
            Operation Id: ScriptActions_ListByCluster
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.HDInsight.Models.RuntimeScriptActionDetail" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetScriptActionsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.HDInsight.Models.RuntimeScriptActionDetail&gt; GetScriptActionsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.HDInsight.Models.RuntimeScriptActionDetail&gt; GetScriptActionsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.ClusterResource.GetScriptActionsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetScriptActionsAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of RuntimeScriptActionDetail)" />
      <MemberSignature Language="F#" Value="abstract member GetScriptActionsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.HDInsight.Models.RuntimeScriptActionDetail&gt;&#xA;override this.GetScriptActionsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.HDInsight.Models.RuntimeScriptActionDetail&gt;" Usage="clusterResource.GetScriptActionsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.HDInsight.Models.RuntimeScriptActionDetail&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all the persisted script actions for the specified cluster.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusters/{clusterName}/scriptActions
            Operation Id: ScriptActions_ListByCluster
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.HDInsight.Models.RuntimeScriptActionDetail" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetScriptExecutionHistories">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.HDInsight.Models.RuntimeScriptActionDetail&gt; GetScriptExecutionHistories (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.HDInsight.Models.RuntimeScriptActionDetail&gt; GetScriptExecutionHistories(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.ClusterResource.GetScriptExecutionHistories(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetScriptExecutionHistories (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of RuntimeScriptActionDetail)" />
      <MemberSignature Language="F#" Value="abstract member GetScriptExecutionHistories : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.HDInsight.Models.RuntimeScriptActionDetail&gt;&#xA;override this.GetScriptExecutionHistories : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.HDInsight.Models.RuntimeScriptActionDetail&gt;" Usage="clusterResource.GetScriptExecutionHistories cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.HDInsight.Models.RuntimeScriptActionDetail&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all scripts' execution history for the specified cluster.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusters/{clusterName}/scriptExecutionHistory
            Operation Id: ScriptExecutionHistory_ListByCluster
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.HDInsight.Models.RuntimeScriptActionDetail" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetScriptExecutionHistoriesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.HDInsight.Models.RuntimeScriptActionDetail&gt; GetScriptExecutionHistoriesAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.HDInsight.Models.RuntimeScriptActionDetail&gt; GetScriptExecutionHistoriesAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.ClusterResource.GetScriptExecutionHistoriesAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetScriptExecutionHistoriesAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of RuntimeScriptActionDetail)" />
      <MemberSignature Language="F#" Value="abstract member GetScriptExecutionHistoriesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.HDInsight.Models.RuntimeScriptActionDetail&gt;&#xA;override this.GetScriptExecutionHistoriesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.HDInsight.Models.RuntimeScriptActionDetail&gt;" Usage="clusterResource.GetScriptExecutionHistoriesAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.HDInsight.Models.RuntimeScriptActionDetail&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all scripts' execution history for the specified cluster.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusters/{clusterName}/scriptExecutionHistory
            Operation Id: ScriptExecutionHistory_ListByCluster
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.HDInsight.Models.RuntimeScriptActionDetail" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasData">
      <MemberSignature Language="C#" Value="public virtual bool HasData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasData" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.HDInsight.ClusterResource.HasData" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HasData As Boolean" />
      <MemberSignature Language="F#" Value="member this.HasData : bool" Usage="Azure.ResourceManager.HDInsight.ClusterResource.HasData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets whether or not the current instance has data. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PromoteScriptExecutionHistory">
      <MemberSignature Language="C#" Value="public virtual Azure.Response PromoteScriptExecutionHistory (string scriptExecutionId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response PromoteScriptExecutionHistory(string scriptExecutionId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.ClusterResource.PromoteScriptExecutionHistory(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PromoteScriptExecutionHistory (scriptExecutionId As String, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member PromoteScriptExecutionHistory : string * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.PromoteScriptExecutionHistory : string * System.Threading.CancellationToken -&gt; Azure.Response" Usage="clusterResource.PromoteScriptExecutionHistory (scriptExecutionId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scriptExecutionId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scriptExecutionId"> The script execution Id. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Promotes the specified ad-hoc script execution to a persisted script.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusters/{clusterName}/scriptExecutionHistory/{scriptExecutionId}/promote
            Operation Id: ScriptExecutionHistory_Promote
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="scriptExecutionId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="scriptExecutionId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="PromoteScriptExecutionHistoryAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; PromoteScriptExecutionHistoryAsync (string scriptExecutionId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; PromoteScriptExecutionHistoryAsync(string scriptExecutionId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.ClusterResource.PromoteScriptExecutionHistoryAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PromoteScriptExecutionHistoryAsync (scriptExecutionId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member PromoteScriptExecutionHistoryAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.PromoteScriptExecutionHistoryAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="clusterResource.PromoteScriptExecutionHistoryAsync (scriptExecutionId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scriptExecutionId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scriptExecutionId"> The script execution Id. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Promotes the specified ad-hoc script execution to a persisted script.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusters/{clusterName}/scriptExecutionHistory/{scriptExecutionId}/promote
            Operation Id: ScriptExecutionHistory_Promote
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="scriptExecutionId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="scriptExecutionId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveTag">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.HDInsight.ClusterResource&gt; RemoveTag (string key, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.HDInsight.ClusterResource&gt; RemoveTag(string key, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.ClusterResource.RemoveTag(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoveTag (key As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ClusterResource)" />
      <MemberSignature Language="F#" Value="abstract member RemoveTag : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.HDInsight.ClusterResource&gt;&#xA;override this.RemoveTag : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.HDInsight.ClusterResource&gt;" Usage="clusterResource.RemoveTag (key, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.HDInsight.ClusterResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="key"> The key for the tag. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Removes a tag by key from the resource.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusters/{clusterName}
            Operation Id: Clusters_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveTagAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HDInsight.ClusterResource&gt;&gt; RemoveTagAsync (string key, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.HDInsight.ClusterResource&gt;&gt; RemoveTagAsync(string key, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.ClusterResource.RemoveTagAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoveTagAsync (key As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ClusterResource))" />
      <MemberSignature Language="F#" Value="abstract member RemoveTagAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HDInsight.ClusterResource&gt;&gt;&#xA;override this.RemoveTagAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HDInsight.ClusterResource&gt;&gt;" Usage="clusterResource.RemoveTagAsync (key, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HDInsight.ClusterResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="key"> The key for the tag. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Removes a tag by key from the resource.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusters/{clusterName}
            Operation Id: Clusters_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Resize">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation Resize (Azure.WaitUntil waitUntil, Azure.ResourceManager.HDInsight.Models.RoleName roleName, Azure.ResourceManager.HDInsight.Models.ClusterResizeContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation Resize(valuetype Azure.WaitUntil waitUntil, valuetype Azure.ResourceManager.HDInsight.Models.RoleName roleName, class Azure.ResourceManager.HDInsight.Models.ClusterResizeContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.ClusterResource.Resize(Azure.WaitUntil,Azure.ResourceManager.HDInsight.Models.RoleName,Azure.ResourceManager.HDInsight.Models.ClusterResizeContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Resize (waitUntil As WaitUntil, roleName As RoleName, content As ClusterResizeContent, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation" />
      <MemberSignature Language="F#" Value="abstract member Resize : Azure.WaitUntil * Azure.ResourceManager.HDInsight.Models.RoleName * Azure.ResourceManager.HDInsight.Models.ClusterResizeContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&#xA;override this.Resize : Azure.WaitUntil * Azure.ResourceManager.HDInsight.Models.RoleName * Azure.ResourceManager.HDInsight.Models.ClusterResizeContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation" Usage="clusterResource.Resize (waitUntil, roleName, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="roleName" Type="Azure.ResourceManager.HDInsight.Models.RoleName" />
        <Parameter Name="content" Type="Azure.ResourceManager.HDInsight.Models.ClusterResizeContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="roleName"> The constant value for the roleName. </param>
        <param name="content"> The parameters for the resize operation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Resizes the specified HDInsight cluster to the specified size.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusters/{clusterName}/roles/{roleName}/resize
            Operation Id: Clusters_Resize
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ResizeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt; ResizeAsync (Azure.WaitUntil waitUntil, Azure.ResourceManager.HDInsight.Models.RoleName roleName, Azure.ResourceManager.HDInsight.Models.ClusterResizeContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation&gt; ResizeAsync(valuetype Azure.WaitUntil waitUntil, valuetype Azure.ResourceManager.HDInsight.Models.RoleName roleName, class Azure.ResourceManager.HDInsight.Models.ClusterResizeContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.ClusterResource.ResizeAsync(Azure.WaitUntil,Azure.ResourceManager.HDInsight.Models.RoleName,Azure.ResourceManager.HDInsight.Models.ClusterResizeContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ResizeAsync (waitUntil As WaitUntil, roleName As RoleName, content As ClusterResizeContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation)" />
      <MemberSignature Language="F#" Value="abstract member ResizeAsync : Azure.WaitUntil * Azure.ResourceManager.HDInsight.Models.RoleName * Azure.ResourceManager.HDInsight.Models.ClusterResizeContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;&#xA;override this.ResizeAsync : Azure.WaitUntil * Azure.ResourceManager.HDInsight.Models.RoleName * Azure.ResourceManager.HDInsight.Models.ClusterResizeContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;" Usage="clusterResource.ResizeAsync (waitUntil, roleName, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="roleName" Type="Azure.ResourceManager.HDInsight.Models.RoleName" />
        <Parameter Name="content" Type="Azure.ResourceManager.HDInsight.Models.ClusterResizeContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="roleName"> The constant value for the roleName. </param>
        <param name="content"> The parameters for the resize operation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Resizes the specified HDInsight cluster to the specified size.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusters/{clusterName}/roles/{roleName}/resize
            Operation Id: Clusters_Resize
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ResourceType">
      <MemberSignature Language="C#" Value="public static readonly Azure.Core.ResourceType ResourceType;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype Azure.Core.ResourceType ResourceType" />
      <MemberSignature Language="DocId" Value="F:Azure.ResourceManager.HDInsight.ClusterResource.ResourceType" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ResourceType As ResourceType " />
      <MemberSignature Language="F#" Value=" staticval mutable ResourceType : Azure.Core.ResourceType" Usage="Azure.ResourceManager.HDInsight.ClusterResource.ResourceType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.ResourceType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets the resource type for the operations. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RestartHostsVirtualMachine">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation RestartHostsVirtualMachine (Azure.WaitUntil waitUntil, System.Collections.Generic.IEnumerable&lt;string&gt; content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation RestartHostsVirtualMachine(valuetype Azure.WaitUntil waitUntil, class System.Collections.Generic.IEnumerable`1&lt;string&gt; content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.ClusterResource.RestartHostsVirtualMachine(Azure.WaitUntil,System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RestartHostsVirtualMachine (waitUntil As WaitUntil, content As IEnumerable(Of String), Optional cancellationToken As CancellationToken = Nothing) As ArmOperation" />
      <MemberSignature Language="F#" Value="abstract member RestartHostsVirtualMachine : Azure.WaitUntil * seq&lt;string&gt; * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&#xA;override this.RestartHostsVirtualMachine : Azure.WaitUntil * seq&lt;string&gt; * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation" Usage="clusterResource.RestartHostsVirtualMachine (waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="content" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> The list of hosts to restart. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Restarts the specified HDInsight cluster hosts.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusters/{clusterName}/restartHosts
            Operation Id: VirtualMachines_RestartHosts
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="RestartHostsVirtualMachineAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt; RestartHostsVirtualMachineAsync (Azure.WaitUntil waitUntil, System.Collections.Generic.IEnumerable&lt;string&gt; content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation&gt; RestartHostsVirtualMachineAsync(valuetype Azure.WaitUntil waitUntil, class System.Collections.Generic.IEnumerable`1&lt;string&gt; content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.ClusterResource.RestartHostsVirtualMachineAsync(Azure.WaitUntil,System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RestartHostsVirtualMachineAsync (waitUntil As WaitUntil, content As IEnumerable(Of String), Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation)" />
      <MemberSignature Language="F#" Value="abstract member RestartHostsVirtualMachineAsync : Azure.WaitUntil * seq&lt;string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;&#xA;override this.RestartHostsVirtualMachineAsync : Azure.WaitUntil * seq&lt;string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;" Usage="clusterResource.RestartHostsVirtualMachineAsync (waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="content" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> The list of hosts to restart. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Restarts the specified HDInsight cluster hosts.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusters/{clusterName}/restartHosts
            Operation Id: VirtualMachines_RestartHosts
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="RotateDiskEncryptionKey">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation RotateDiskEncryptionKey (Azure.WaitUntil waitUntil, Azure.ResourceManager.HDInsight.Models.ClusterDiskEncryptionContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation RotateDiskEncryptionKey(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.HDInsight.Models.ClusterDiskEncryptionContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.ClusterResource.RotateDiskEncryptionKey(Azure.WaitUntil,Azure.ResourceManager.HDInsight.Models.ClusterDiskEncryptionContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RotateDiskEncryptionKey (waitUntil As WaitUntil, content As ClusterDiskEncryptionContent, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation" />
      <MemberSignature Language="F#" Value="abstract member RotateDiskEncryptionKey : Azure.WaitUntil * Azure.ResourceManager.HDInsight.Models.ClusterDiskEncryptionContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&#xA;override this.RotateDiskEncryptionKey : Azure.WaitUntil * Azure.ResourceManager.HDInsight.Models.ClusterDiskEncryptionContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation" Usage="clusterResource.RotateDiskEncryptionKey (waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="content" Type="Azure.ResourceManager.HDInsight.Models.ClusterDiskEncryptionContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> The parameters for the disk encryption operation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Rotate disk encryption key of the specified HDInsight cluster.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusters/{clusterName}/rotatediskencryptionkey
            Operation Id: Clusters_RotateDiskEncryptionKey
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="RotateDiskEncryptionKeyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt; RotateDiskEncryptionKeyAsync (Azure.WaitUntil waitUntil, Azure.ResourceManager.HDInsight.Models.ClusterDiskEncryptionContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation&gt; RotateDiskEncryptionKeyAsync(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.HDInsight.Models.ClusterDiskEncryptionContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.ClusterResource.RotateDiskEncryptionKeyAsync(Azure.WaitUntil,Azure.ResourceManager.HDInsight.Models.ClusterDiskEncryptionContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RotateDiskEncryptionKeyAsync (waitUntil As WaitUntil, content As ClusterDiskEncryptionContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation)" />
      <MemberSignature Language="F#" Value="abstract member RotateDiskEncryptionKeyAsync : Azure.WaitUntil * Azure.ResourceManager.HDInsight.Models.ClusterDiskEncryptionContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;&#xA;override this.RotateDiskEncryptionKeyAsync : Azure.WaitUntil * Azure.ResourceManager.HDInsight.Models.ClusterDiskEncryptionContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;" Usage="clusterResource.RotateDiskEncryptionKeyAsync (waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="content" Type="Azure.ResourceManager.HDInsight.Models.ClusterDiskEncryptionContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> The parameters for the disk encryption operation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Rotate disk encryption key of the specified HDInsight cluster.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusters/{clusterName}/rotatediskencryptionkey
            Operation Id: Clusters_RotateDiskEncryptionKey
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="SetTags">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.HDInsight.ClusterResource&gt; SetTags (System.Collections.Generic.IDictionary&lt;string,string&gt; tags, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.HDInsight.ClusterResource&gt; SetTags(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.ClusterResource.SetTags(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetTags (tags As IDictionary(Of String, String), Optional cancellationToken As CancellationToken = Nothing) As Response(Of ClusterResource)" />
      <MemberSignature Language="F#" Value="abstract member SetTags : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.HDInsight.ClusterResource&gt;&#xA;override this.SetTags : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.HDInsight.ClusterResource&gt;" Usage="clusterResource.SetTags (tags, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.HDInsight.ClusterResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tags"> The set of tags to use as replacement. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Replace the tags on the resource with the given set.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusters/{clusterName}
            Operation Id: Clusters_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tags" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="SetTagsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HDInsight.ClusterResource&gt;&gt; SetTagsAsync (System.Collections.Generic.IDictionary&lt;string,string&gt; tags, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.HDInsight.ClusterResource&gt;&gt; SetTagsAsync(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.ClusterResource.SetTagsAsync(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetTagsAsync (tags As IDictionary(Of String, String), Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ClusterResource))" />
      <MemberSignature Language="F#" Value="abstract member SetTagsAsync : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HDInsight.ClusterResource&gt;&gt;&#xA;override this.SetTagsAsync : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HDInsight.ClusterResource&gt;&gt;" Usage="clusterResource.SetTagsAsync (tags, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HDInsight.ClusterResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tags"> The set of tags to use as replacement. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Replace the tags on the resource with the given set.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusters/{clusterName}
            Operation Id: Clusters_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tags" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.HDInsight.ClusterResource&gt; Update (Azure.ResourceManager.HDInsight.Models.ClusterPatch patch, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.HDInsight.ClusterResource&gt; Update(class Azure.ResourceManager.HDInsight.Models.ClusterPatch patch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.ClusterResource.Update(Azure.ResourceManager.HDInsight.Models.ClusterPatch,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Update (patch As ClusterPatch, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ClusterResource)" />
      <MemberSignature Language="F#" Value="abstract member Update : Azure.ResourceManager.HDInsight.Models.ClusterPatch * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.HDInsight.ClusterResource&gt;&#xA;override this.Update : Azure.ResourceManager.HDInsight.Models.ClusterPatch * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.HDInsight.ClusterResource&gt;" Usage="clusterResource.Update (patch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.HDInsight.ClusterResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="patch" Type="Azure.ResourceManager.HDInsight.Models.ClusterPatch" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="patch"> The cluster patch request. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Patch HDInsight cluster with the specified parameters.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusters/{clusterName}
            Operation Id: Clusters_Update
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="patch" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HDInsight.ClusterResource&gt;&gt; UpdateAsync (Azure.ResourceManager.HDInsight.Models.ClusterPatch patch, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.HDInsight.ClusterResource&gt;&gt; UpdateAsync(class Azure.ResourceManager.HDInsight.Models.ClusterPatch patch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.ClusterResource.UpdateAsync(Azure.ResourceManager.HDInsight.Models.ClusterPatch,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateAsync (patch As ClusterPatch, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ClusterResource))" />
      <MemberSignature Language="F#" Value="abstract member UpdateAsync : Azure.ResourceManager.HDInsight.Models.ClusterPatch * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HDInsight.ClusterResource&gt;&gt;&#xA;override this.UpdateAsync : Azure.ResourceManager.HDInsight.Models.ClusterPatch * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HDInsight.ClusterResource&gt;&gt;" Usage="clusterResource.UpdateAsync (patch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.HDInsight.ClusterResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="patch" Type="Azure.ResourceManager.HDInsight.Models.ClusterPatch" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="patch"> The cluster patch request. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Patch HDInsight cluster with the specified parameters.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusters/{clusterName}
            Operation Id: Clusters_Update
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="patch" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateAutoScaleConfiguration">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation UpdateAutoScaleConfiguration (Azure.WaitUntil waitUntil, Azure.ResourceManager.HDInsight.Models.RoleName roleName, Azure.ResourceManager.HDInsight.Models.AutoscaleConfigurationUpdateParameter autoscaleConfigurationUpdateParameter, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation UpdateAutoScaleConfiguration(valuetype Azure.WaitUntil waitUntil, valuetype Azure.ResourceManager.HDInsight.Models.RoleName roleName, class Azure.ResourceManager.HDInsight.Models.AutoscaleConfigurationUpdateParameter autoscaleConfigurationUpdateParameter, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.ClusterResource.UpdateAutoScaleConfiguration(Azure.WaitUntil,Azure.ResourceManager.HDInsight.Models.RoleName,Azure.ResourceManager.HDInsight.Models.AutoscaleConfigurationUpdateParameter,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateAutoScaleConfiguration (waitUntil As WaitUntil, roleName As RoleName, autoscaleConfigurationUpdateParameter As AutoscaleConfigurationUpdateParameter, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation" />
      <MemberSignature Language="F#" Value="abstract member UpdateAutoScaleConfiguration : Azure.WaitUntil * Azure.ResourceManager.HDInsight.Models.RoleName * Azure.ResourceManager.HDInsight.Models.AutoscaleConfigurationUpdateParameter * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&#xA;override this.UpdateAutoScaleConfiguration : Azure.WaitUntil * Azure.ResourceManager.HDInsight.Models.RoleName * Azure.ResourceManager.HDInsight.Models.AutoscaleConfigurationUpdateParameter * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation" Usage="clusterResource.UpdateAutoScaleConfiguration (waitUntil, roleName, autoscaleConfigurationUpdateParameter, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="roleName" Type="Azure.ResourceManager.HDInsight.Models.RoleName" />
        <Parameter Name="autoscaleConfigurationUpdateParameter" Type="Azure.ResourceManager.HDInsight.Models.AutoscaleConfigurationUpdateParameter" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="roleName"> The constant value for the roleName. </param>
        <param name="autoscaleConfigurationUpdateParameter"> The parameters for the update autoscale configuration operation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Updates the Autoscale Configuration for HDInsight cluster.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusters/{clusterName}/roles/{roleName}/autoscale
            Operation Id: Clusters_UpdateAutoScaleConfiguration
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="autoscaleConfigurationUpdateParameter" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateAutoScaleConfigurationAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt; UpdateAutoScaleConfigurationAsync (Azure.WaitUntil waitUntil, Azure.ResourceManager.HDInsight.Models.RoleName roleName, Azure.ResourceManager.HDInsight.Models.AutoscaleConfigurationUpdateParameter autoscaleConfigurationUpdateParameter, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation&gt; UpdateAutoScaleConfigurationAsync(valuetype Azure.WaitUntil waitUntil, valuetype Azure.ResourceManager.HDInsight.Models.RoleName roleName, class Azure.ResourceManager.HDInsight.Models.AutoscaleConfigurationUpdateParameter autoscaleConfigurationUpdateParameter, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.ClusterResource.UpdateAutoScaleConfigurationAsync(Azure.WaitUntil,Azure.ResourceManager.HDInsight.Models.RoleName,Azure.ResourceManager.HDInsight.Models.AutoscaleConfigurationUpdateParameter,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateAutoScaleConfigurationAsync (waitUntil As WaitUntil, roleName As RoleName, autoscaleConfigurationUpdateParameter As AutoscaleConfigurationUpdateParameter, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation)" />
      <MemberSignature Language="F#" Value="abstract member UpdateAutoScaleConfigurationAsync : Azure.WaitUntil * Azure.ResourceManager.HDInsight.Models.RoleName * Azure.ResourceManager.HDInsight.Models.AutoscaleConfigurationUpdateParameter * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;&#xA;override this.UpdateAutoScaleConfigurationAsync : Azure.WaitUntil * Azure.ResourceManager.HDInsight.Models.RoleName * Azure.ResourceManager.HDInsight.Models.AutoscaleConfigurationUpdateParameter * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;" Usage="clusterResource.UpdateAutoScaleConfigurationAsync (waitUntil, roleName, autoscaleConfigurationUpdateParameter, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="roleName" Type="Azure.ResourceManager.HDInsight.Models.RoleName" />
        <Parameter Name="autoscaleConfigurationUpdateParameter" Type="Azure.ResourceManager.HDInsight.Models.AutoscaleConfigurationUpdateParameter" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="roleName"> The constant value for the roleName. </param>
        <param name="autoscaleConfigurationUpdateParameter"> The parameters for the update autoscale configuration operation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Updates the Autoscale Configuration for HDInsight cluster.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusters/{clusterName}/roles/{roleName}/autoscale
            Operation Id: Clusters_UpdateAutoScaleConfiguration
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="autoscaleConfigurationUpdateParameter" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateConfiguration">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation UpdateConfiguration (Azure.WaitUntil waitUntil, string configurationName, System.Collections.Generic.IDictionary&lt;string,string&gt; clusterConfiguration, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation UpdateConfiguration(valuetype Azure.WaitUntil waitUntil, string configurationName, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; clusterConfiguration, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.ClusterResource.UpdateConfiguration(Azure.WaitUntil,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateConfiguration (waitUntil As WaitUntil, configurationName As String, clusterConfiguration As IDictionary(Of String, String), Optional cancellationToken As CancellationToken = Nothing) As ArmOperation" />
      <MemberSignature Language="F#" Value="abstract member UpdateConfiguration : Azure.WaitUntil * string * System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&#xA;override this.UpdateConfiguration : Azure.WaitUntil * string * System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation" Usage="clusterResource.UpdateConfiguration (waitUntil, configurationName, clusterConfiguration, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="configurationName" Type="System.String" />
        <Parameter Name="clusterConfiguration" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="configurationName"> The name of the cluster configuration. </param>
        <param name="clusterConfiguration"> The cluster configurations. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Configures the HTTP settings on the specified cluster. This API is deprecated, please use UpdateGatewaySettings in cluster endpoint instead.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusters/{clusterName}/configurations/{configurationName}
            Operation Id: Configurations_Update
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="configurationName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="configurationName" /> or <paramref name="clusterConfiguration" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateConfigurationAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt; UpdateConfigurationAsync (Azure.WaitUntil waitUntil, string configurationName, System.Collections.Generic.IDictionary&lt;string,string&gt; clusterConfiguration, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation&gt; UpdateConfigurationAsync(valuetype Azure.WaitUntil waitUntil, string configurationName, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; clusterConfiguration, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.ClusterResource.UpdateConfigurationAsync(Azure.WaitUntil,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateConfigurationAsync (waitUntil As WaitUntil, configurationName As String, clusterConfiguration As IDictionary(Of String, String), Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation)" />
      <MemberSignature Language="F#" Value="abstract member UpdateConfigurationAsync : Azure.WaitUntil * string * System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;&#xA;override this.UpdateConfigurationAsync : Azure.WaitUntil * string * System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;" Usage="clusterResource.UpdateConfigurationAsync (waitUntil, configurationName, clusterConfiguration, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="configurationName" Type="System.String" />
        <Parameter Name="clusterConfiguration" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="configurationName"> The name of the cluster configuration. </param>
        <param name="clusterConfiguration"> The cluster configurations. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Configures the HTTP settings on the specified cluster. This API is deprecated, please use UpdateGatewaySettings in cluster endpoint instead.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusters/{clusterName}/configurations/{configurationName}
            Operation Id: Configurations_Update
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="configurationName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="configurationName" /> or <paramref name="clusterConfiguration" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateGatewaySettings">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation UpdateGatewaySettings (Azure.WaitUntil waitUntil, Azure.ResourceManager.HDInsight.Models.UpdateGatewaySettingsContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation UpdateGatewaySettings(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.HDInsight.Models.UpdateGatewaySettingsContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.ClusterResource.UpdateGatewaySettings(Azure.WaitUntil,Azure.ResourceManager.HDInsight.Models.UpdateGatewaySettingsContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateGatewaySettings (waitUntil As WaitUntil, content As UpdateGatewaySettingsContent, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation" />
      <MemberSignature Language="F#" Value="abstract member UpdateGatewaySettings : Azure.WaitUntil * Azure.ResourceManager.HDInsight.Models.UpdateGatewaySettingsContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&#xA;override this.UpdateGatewaySettings : Azure.WaitUntil * Azure.ResourceManager.HDInsight.Models.UpdateGatewaySettingsContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation" Usage="clusterResource.UpdateGatewaySettings (waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="content" Type="Azure.ResourceManager.HDInsight.Models.UpdateGatewaySettingsContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> The cluster configurations. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Configures the gateway settings on the specified cluster.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusters/{clusterName}/updateGatewaySettings
            Operation Id: Clusters_UpdateGatewaySettings
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateGatewaySettingsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt; UpdateGatewaySettingsAsync (Azure.WaitUntil waitUntil, Azure.ResourceManager.HDInsight.Models.UpdateGatewaySettingsContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation&gt; UpdateGatewaySettingsAsync(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.HDInsight.Models.UpdateGatewaySettingsContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.ClusterResource.UpdateGatewaySettingsAsync(Azure.WaitUntil,Azure.ResourceManager.HDInsight.Models.UpdateGatewaySettingsContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateGatewaySettingsAsync (waitUntil As WaitUntil, content As UpdateGatewaySettingsContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation)" />
      <MemberSignature Language="F#" Value="abstract member UpdateGatewaySettingsAsync : Azure.WaitUntil * Azure.ResourceManager.HDInsight.Models.UpdateGatewaySettingsContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;&#xA;override this.UpdateGatewaySettingsAsync : Azure.WaitUntil * Azure.ResourceManager.HDInsight.Models.UpdateGatewaySettingsContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;" Usage="clusterResource.UpdateGatewaySettingsAsync (waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="content" Type="Azure.ResourceManager.HDInsight.Models.UpdateGatewaySettingsContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> The cluster configurations. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Configures the gateway settings on the specified cluster.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusters/{clusterName}/updateGatewaySettings
            Operation Id: Clusters_UpdateGatewaySettings
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateIdentityCertificate">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation UpdateIdentityCertificate (Azure.WaitUntil waitUntil, Azure.ResourceManager.HDInsight.Models.UpdateClusterIdentityCertificateContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation UpdateIdentityCertificate(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.HDInsight.Models.UpdateClusterIdentityCertificateContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.ClusterResource.UpdateIdentityCertificate(Azure.WaitUntil,Azure.ResourceManager.HDInsight.Models.UpdateClusterIdentityCertificateContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateIdentityCertificate (waitUntil As WaitUntil, content As UpdateClusterIdentityCertificateContent, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation" />
      <MemberSignature Language="F#" Value="abstract member UpdateIdentityCertificate : Azure.WaitUntil * Azure.ResourceManager.HDInsight.Models.UpdateClusterIdentityCertificateContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&#xA;override this.UpdateIdentityCertificate : Azure.WaitUntil * Azure.ResourceManager.HDInsight.Models.UpdateClusterIdentityCertificateContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation" Usage="clusterResource.UpdateIdentityCertificate (waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="content" Type="Azure.ResourceManager.HDInsight.Models.UpdateClusterIdentityCertificateContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> The cluster configurations. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Updates the cluster identity certificate.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusters/{clusterName}/updateClusterIdentityCertificate
            Operation Id: Clusters_UpdateIdentityCertificate
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateIdentityCertificateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt; UpdateIdentityCertificateAsync (Azure.WaitUntil waitUntil, Azure.ResourceManager.HDInsight.Models.UpdateClusterIdentityCertificateContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation&gt; UpdateIdentityCertificateAsync(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.HDInsight.Models.UpdateClusterIdentityCertificateContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.HDInsight.ClusterResource.UpdateIdentityCertificateAsync(Azure.WaitUntil,Azure.ResourceManager.HDInsight.Models.UpdateClusterIdentityCertificateContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateIdentityCertificateAsync (waitUntil As WaitUntil, content As UpdateClusterIdentityCertificateContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation)" />
      <MemberSignature Language="F#" Value="abstract member UpdateIdentityCertificateAsync : Azure.WaitUntil * Azure.ResourceManager.HDInsight.Models.UpdateClusterIdentityCertificateContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;&#xA;override this.UpdateIdentityCertificateAsync : Azure.WaitUntil * Azure.ResourceManager.HDInsight.Models.UpdateClusterIdentityCertificateContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;" Usage="clusterResource.UpdateIdentityCertificateAsync (waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.HDInsight</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="content" Type="Azure.ResourceManager.HDInsight.Models.UpdateClusterIdentityCertificateContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> The cluster configurations. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Updates the cluster identity certificate.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusters/{clusterName}/updateClusterIdentityCertificate
            Operation Id: Clusters_UpdateIdentityCertificate
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>

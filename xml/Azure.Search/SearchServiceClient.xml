<Type Name="SearchServiceClient" FullName="Azure.Search.SearchServiceClient">
  <TypeSignature Language="C#" Value="public class SearchServiceClient" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SearchServiceClient extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Search.SearchServiceClient" />
  <TypeSignature Language="VB.NET" Value="Public Class SearchServiceClient" />
  <TypeSignature Language="F#" Value="type SearchServiceClient = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Search</AssemblyName>
    <AssemblyVersion>11.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Azure Cognitive Search client that can be used to manage and query
            indexes and documents, as well as manage other resources, on a Search
            Service.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SearchServiceClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.SearchServiceClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search</AssemblyName>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the SearchServiceClient class for
            mocking.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SearchServiceClient (Uri endpoint, Azure.Search.SearchApiKeyCredential credential);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, class Azure.Search.SearchApiKeyCredential credential) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.SearchServiceClient.#ctor(System.Uri,Azure.Search.SearchApiKeyCredential)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, credential As SearchApiKeyCredential)" />
      <MemberSignature Language="F#" Value="new Azure.Search.SearchServiceClient : Uri * Azure.Search.SearchApiKeyCredential -&gt; Azure.Search.SearchServiceClient" Usage="new Azure.Search.SearchServiceClient (endpoint, credential)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search</AssemblyName>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.Search.SearchApiKeyCredential" />
      </Parameters>
      <Docs>
        <param name="endpoint">
            Required.  The URI endpoint of the Search Service.  This is likely
            to be similar to "https://{search_service}.search.windows.net".
            The URI must use HTTPS.
            </param>
        <param name="credential">
            Required.  The API key credential used to authenticate requests
            against the search service.  You need to use an admin key to
            perform any operations on the SearchServiceClient.  See
            <see href="https://docs.microsoft.com/azure/search/search-security-api-keys" />
            for more information about API keys in Azure Cognitive Search.
            </param>
        <summary>
            Initializes a new instance of the SearchServiceClient class.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
            Thrown when the <paramref name="endpoint" /> or
            <paramref name="credential" /> is null.
            </exception>
        <exception cref="T:System.ArgumentException">
            Thrown when the <paramref name="endpoint" /> is not using HTTPS.
            </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SearchServiceClient (Uri endpoint, Azure.Search.SearchApiKeyCredential credential, Azure.Search.SearchClientOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, class Azure.Search.SearchApiKeyCredential credential, class Azure.Search.SearchClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.SearchServiceClient.#ctor(System.Uri,Azure.Search.SearchApiKeyCredential,Azure.Search.SearchClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, credential As SearchApiKeyCredential, options As SearchClientOptions)" />
      <MemberSignature Language="F#" Value="new Azure.Search.SearchServiceClient : Uri * Azure.Search.SearchApiKeyCredential * Azure.Search.SearchClientOptions -&gt; Azure.Search.SearchServiceClient" Usage="new Azure.Search.SearchServiceClient (endpoint, credential, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search</AssemblyName>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.Search.SearchApiKeyCredential" />
        <Parameter Name="options" Type="Azure.Search.SearchClientOptions" />
      </Parameters>
      <Docs>
        <param name="endpoint">
            Required.  The URI endpoint of the Search Service.  This is likely
            to be similar to "https://{search_service}.search.windows.net".
            The URI must use HTTPS.
            </param>
        <param name="credential">
            Required.  The API key credential used to authenticate requests
            against the search service.  You need to use an admin key to
            perform any operations on the SearchServiceClient.  See
            <see href="https://docs.microsoft.com/azure/search/search-security-api-keys" />
            for more information about API keys in Azure Cognitive Search.
            </param>
        <param name="options">
            Client configuration options for connecting to Azure Cognitive
            Search.
            </param>
        <summary>
            Initializes a new instance of the SearchServiceClient class.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
            Thrown when the <paramref name="endpoint" /> or
            <paramref name="credential" /> is null.
            </exception>
        <exception cref="T:System.ArgumentException">
            Thrown when the <paramref name="endpoint" /> is not using HTTPS.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Endpoint">
      <MemberSignature Language="C#" Value="public virtual Uri Endpoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Endpoint" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.SearchServiceClient.Endpoint" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Endpoint As Uri" />
      <MemberSignature Language="F#" Value="member this.Endpoint : Uri" Usage="Azure.Search.SearchServiceClient.Endpoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search</AssemblyName>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the URI endpoint of the Search Service.  This is likely
            to be similar to "https://{search_service}.search.windows.net".
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSearchIndexClient">
      <MemberSignature Language="C#" Value="public virtual Azure.Search.SearchIndexClient GetSearchIndexClient (string indexName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Search.SearchIndexClient GetSearchIndexClient(string indexName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.SearchServiceClient.GetSearchIndexClient(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSearchIndexClient (indexName As String) As SearchIndexClient" />
      <MemberSignature Language="F#" Value="abstract member GetSearchIndexClient : string -&gt; Azure.Search.SearchIndexClient&#xA;override this.GetSearchIndexClient : string -&gt; Azure.Search.SearchIndexClient" Usage="searchServiceClient.GetSearchIndexClient indexName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search</AssemblyName>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Search.SearchIndexClient</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="indexName">
            The name of the desired Search Index.
            </param>
        <summary>
            Get a <see cref="T:Azure.Search.SearchIndexClient" /> for the given
            <paramref name="indexName" /> to use for document operations like
            querying or adding documents to a Search Index.
            </summary>
        <returns>
            A SearchIndexClient for the desired Search Index.
            </returns>
        <remarks>
            The same request <see cref="T:Azure.Core.Pipeline.HttpPipeline" /> (including
            authentication and any other configuration) will be used for the
            SearchIndexClient.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
            Thrown when the <paramref name="indexName" /> is null.
            </exception>
        <exception cref="T:System.ArgumentException">
            Thrown when the <paramref name="indexName" /> is empty.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetStatistics">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Search.Models.SearchServiceStatistics&gt; GetStatistics (Azure.Search.SearchRequestOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Search.Models.SearchServiceStatistics&gt; GetStatistics(class Azure.Search.SearchRequestOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.SearchServiceClient.GetStatistics(Azure.Search.SearchRequestOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStatistics (Optional options As SearchRequestOptions = null, Optional cancellationToken As CancellationToken = null) As Response(Of SearchServiceStatistics)" />
      <MemberSignature Language="F#" Value="abstract member GetStatistics : Azure.Search.SearchRequestOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Search.Models.SearchServiceStatistics&gt;&#xA;override this.GetStatistics : Azure.Search.SearchRequestOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Search.Models.SearchServiceStatistics&gt;" Usage="searchServiceClient.GetStatistics (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search</AssemblyName>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Search.Models.SearchServiceStatistics&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.Search.SearchRequestOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options">
             Options to customize the operation's behavior.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications
             that the operation should be canceled.
             </param>
        <summary>
             Gets service level statistics for a Search Service.
            
             This operation returns the number and type of objects in your
             service, the maximum allowed for each object type given the service
             tier, actual and maximum storage, and other limits that vary by
             tier.  This request pulls information from the service so that you
             don't have to look up or calculate service limits.
            
             Statistics on document count and storage size are collected every
             few minutes, not in real time.  Therefore, the statistics returned
             by this API may not reflect changes caused by recent indexing
             operations.
             </summary>
        <returns>The service level statistics.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">
             Thrown when a failure is returned by the Search Service.
             </exception>
      </Docs>
    </Member>
    <Member MemberName="GetStatisticsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Models.SearchServiceStatistics&gt;&gt; GetStatisticsAsync (Azure.Search.SearchRequestOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Search.Models.SearchServiceStatistics&gt;&gt; GetStatisticsAsync(class Azure.Search.SearchRequestOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.SearchServiceClient.GetStatisticsAsync(Azure.Search.SearchRequestOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStatisticsAsync (Optional options As SearchRequestOptions = null, Optional cancellationToken As CancellationToken = null) As Task(Of Response(Of SearchServiceStatistics))" />
      <MemberSignature Language="F#" Value="abstract member GetStatisticsAsync : Azure.Search.SearchRequestOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Models.SearchServiceStatistics&gt;&gt;&#xA;override this.GetStatisticsAsync : Azure.Search.SearchRequestOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Models.SearchServiceStatistics&gt;&gt;" Usage="searchServiceClient.GetStatisticsAsync (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search</AssemblyName>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Search.Models.SearchServiceStatistics&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.Search.SearchRequestOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options">
             Options to customize the operation's behavior.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications
             that the operation should be canceled.
             </param>
        <summary>
             Gets service level statistics for a Search Service.
            
             This operation returns the number and type of objects in your
             service, the maximum allowed for each object type given the service
             tier, actual and maximum storage, and other limits that vary by
             tier.  This request pulls information from the service so that you
             don't have to look up or calculate service limits.
            
             Statistics on document count and storage size are collected every
             few minutes, not in real time.  Therefore, the statistics returned
             by this API may not reflect changes caused by recent indexing
             operations.
             </summary>
        <returns>The service level statistics.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">
             Thrown when a failure is returned by the Search Service.
             </exception>
      </Docs>
    </Member>
    <Member MemberName="ServiceName">
      <MemberSignature Language="C#" Value="public virtual string ServiceName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ServiceName" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.SearchServiceClient.ServiceName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ServiceName As String" />
      <MemberSignature Language="F#" Value="member this.ServiceName : string" Usage="Azure.Search.SearchServiceClient.ServiceName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search</AssemblyName>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the name of the Search Service.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

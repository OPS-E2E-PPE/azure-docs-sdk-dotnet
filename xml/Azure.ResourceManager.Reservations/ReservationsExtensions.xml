<Type Name="ReservationsExtensions" FullName="Azure.ResourceManager.Reservations.ReservationsExtensions">
  <TypeSignature Language="C#" Value="public static class ReservationsExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ReservationsExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Reservations.ReservationsExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module ReservationsExtensions" />
  <TypeSignature Language="F#" Value="type ReservationsExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to Azure.ResourceManager.Reservations. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CalculateReservationOrder">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.Reservations.Models.CalculatePriceResponse&gt; CalculateReservationOrder (this Azure.ResourceManager.Resources.TenantResource tenantResource, Azure.ResourceManager.Reservations.Models.PurchaseRequestContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.Reservations.Models.CalculatePriceResponse&gt; CalculateReservationOrder(class Azure.ResourceManager.Resources.TenantResource tenantResource, class Azure.ResourceManager.Reservations.Models.PurchaseRequestContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Reservations.ReservationsExtensions.CalculateReservationOrder(Azure.ResourceManager.Resources.TenantResource,Azure.ResourceManager.Reservations.Models.PurchaseRequestContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CalculateReservationOrder (tenantResource As TenantResource, content As PurchaseRequestContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of CalculatePriceResponse)" />
      <MemberSignature Language="F#" Value="static member CalculateReservationOrder : Azure.ResourceManager.Resources.TenantResource * Azure.ResourceManager.Reservations.Models.PurchaseRequestContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Reservations.Models.CalculatePriceResponse&gt;" Usage="Azure.ResourceManager.Reservations.ReservationsExtensions.CalculateReservationOrder (tenantResource, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Reservations.Models.CalculatePriceResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="content" Type="Azure.ResourceManager.Reservations.Models.PurchaseRequestContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="content"> Information needed for calculate or purchase reservation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Calculate price for placing a `ReservationOrder`.
            Request Path: /providers/Microsoft.Capacity/calculatePrice
            Operation Id: ReservationOrder_Calculate
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CalculateReservationOrderAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Reservations.Models.CalculatePriceResponse&gt;&gt; CalculateReservationOrderAsync (this Azure.ResourceManager.Resources.TenantResource tenantResource, Azure.ResourceManager.Reservations.Models.PurchaseRequestContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Reservations.Models.CalculatePriceResponse&gt;&gt; CalculateReservationOrderAsync(class Azure.ResourceManager.Resources.TenantResource tenantResource, class Azure.ResourceManager.Reservations.Models.PurchaseRequestContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Reservations.ReservationsExtensions.CalculateReservationOrderAsync(Azure.ResourceManager.Resources.TenantResource,Azure.ResourceManager.Reservations.Models.PurchaseRequestContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CalculateReservationOrderAsync (tenantResource As TenantResource, content As PurchaseRequestContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of CalculatePriceResponse))" />
      <MemberSignature Language="F#" Value="static member CalculateReservationOrderAsync : Azure.ResourceManager.Resources.TenantResource * Azure.ResourceManager.Reservations.Models.PurchaseRequestContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Reservations.Models.CalculatePriceResponse&gt;&gt;" Usage="Azure.ResourceManager.Reservations.ReservationsExtensions.CalculateReservationOrderAsync (tenantResource, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Reservations.Models.CalculatePriceResponse&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="content" Type="Azure.ResourceManager.Reservations.Models.PurchaseRequestContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="content"> Information needed for calculate or purchase reservation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Calculate price for placing a `ReservationOrder`.
            Request Path: /providers/Microsoft.Capacity/calculatePrice
            Operation Id: ReservationOrder_Calculate
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAppliedReservationList">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.Reservations.Models.AppliedReservations&gt; GetAppliedReservationList (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.Reservations.Models.AppliedReservations&gt; GetAppliedReservationList(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Reservations.ReservationsExtensions.GetAppliedReservationList(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAppliedReservationList (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As Response(Of AppliedReservations)" />
      <MemberSignature Language="F#" Value="static member GetAppliedReservationList : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Reservations.Models.AppliedReservations&gt;" Usage="Azure.ResourceManager.Reservations.ReservationsExtensions.GetAppliedReservationList (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Reservations.Models.AppliedReservations&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get applicable `Reservation`s that are applied to this subscription or a resource group under this subscription.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Capacity/appliedReservations
            Operation Id: GetAppliedReservationList
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAppliedReservationListAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Reservations.Models.AppliedReservations&gt;&gt; GetAppliedReservationListAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Reservations.Models.AppliedReservations&gt;&gt; GetAppliedReservationListAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Reservations.ReservationsExtensions.GetAppliedReservationListAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAppliedReservationListAsync (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AppliedReservations))" />
      <MemberSignature Language="F#" Value="static member GetAppliedReservationListAsync : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Reservations.Models.AppliedReservations&gt;&gt;" Usage="Azure.ResourceManager.Reservations.ReservationsExtensions.GetAppliedReservationListAsync (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Reservations.Models.AppliedReservations&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get applicable `Reservation`s that are applied to this subscription or a resource group under this subscription.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Capacity/appliedReservations
            Operation Id: GetAppliedReservationList
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCatalog">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.Reservations.Models.ReservationCatalog&gt; GetCatalog (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string reservedResourceType = default, Azure.Core.AzureLocation? location = default, string publisherId = default, string offerId = default, string planId = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.Reservations.Models.ReservationCatalog&gt; GetCatalog(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string reservedResourceType, valuetype System.Nullable`1&lt;valuetype Azure.Core.AzureLocation&gt; location, string publisherId, string offerId, string planId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Reservations.ReservationsExtensions.GetCatalog(Azure.ResourceManager.Resources.SubscriptionResource,System.String,System.Nullable{Azure.Core.AzureLocation},System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCatalog (subscriptionResource As SubscriptionResource, Optional reservedResourceType As String = Nothing, Optional location As Nullable(Of AzureLocation) = Nothing, Optional publisherId As String = Nothing, Optional offerId As String = Nothing, Optional planId As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ReservationCatalog)" />
      <MemberSignature Language="F#" Value="static member GetCatalog : Azure.ResourceManager.Resources.SubscriptionResource * string * Nullable&lt;Azure.Core.AzureLocation&gt; * string * string * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Reservations.Models.ReservationCatalog&gt;" Usage="Azure.ResourceManager.Reservations.ReservationsExtensions.GetCatalog (subscriptionResource, reservedResourceType, location, publisherId, offerId, planId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Reservations.Models.ReservationCatalog&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="reservedResourceType" Type="System.String" />
        <Parameter Name="location" Type="System.Nullable&lt;Azure.Core.AzureLocation&gt;" />
        <Parameter Name="publisherId" Type="System.String" />
        <Parameter Name="offerId" Type="System.String" />
        <Parameter Name="planId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="reservedResourceType"> The type of the resource for which the skus should be provided. </param>
        <param name="location"> Filters the skus based on the location specified in this parameter. This can be an azure region or global. </param>
        <param name="publisherId"> Publisher id used to get the third party products. </param>
        <param name="offerId"> Offer id used to get the third party products. </param>
        <param name="planId"> Plan id used to get the third party products. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the regions and skus that are available for RI purchase for the specified Azure subscription.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Capacity/catalogs
            Operation Id: GetCatalog
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Reservations.Models.ReservationCatalog" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCatalogAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.Reservations.Models.ReservationCatalog&gt; GetCatalogAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string reservedResourceType = default, Azure.Core.AzureLocation? location = default, string publisherId = default, string offerId = default, string planId = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Reservations.Models.ReservationCatalog&gt; GetCatalogAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string reservedResourceType, valuetype System.Nullable`1&lt;valuetype Azure.Core.AzureLocation&gt; location, string publisherId, string offerId, string planId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Reservations.ReservationsExtensions.GetCatalogAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.String,System.Nullable{Azure.Core.AzureLocation},System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCatalogAsync (subscriptionResource As SubscriptionResource, Optional reservedResourceType As String = Nothing, Optional location As Nullable(Of AzureLocation) = Nothing, Optional publisherId As String = Nothing, Optional offerId As String = Nothing, Optional planId As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ReservationCatalog)" />
      <MemberSignature Language="F#" Value="static member GetCatalogAsync : Azure.ResourceManager.Resources.SubscriptionResource * string * Nullable&lt;Azure.Core.AzureLocation&gt; * string * string * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Reservations.Models.ReservationCatalog&gt;" Usage="Azure.ResourceManager.Reservations.ReservationsExtensions.GetCatalogAsync (subscriptionResource, reservedResourceType, location, publisherId, offerId, planId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Reservations.Models.ReservationCatalog&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="reservedResourceType" Type="System.String" />
        <Parameter Name="location" Type="System.Nullable&lt;Azure.Core.AzureLocation&gt;" />
        <Parameter Name="publisherId" Type="System.String" />
        <Parameter Name="offerId" Type="System.String" />
        <Parameter Name="planId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="reservedResourceType"> The type of the resource for which the skus should be provided. </param>
        <param name="location"> Filters the skus based on the location specified in this parameter. This can be an azure region or global. </param>
        <param name="publisherId"> Publisher id used to get the third party products. </param>
        <param name="offerId"> Offer id used to get the third party products. </param>
        <param name="planId"> Plan id used to get the third party products. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the regions and skus that are available for RI purchase for the specified Azure subscription.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Capacity/catalogs
            Operation Id: GetCatalog
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Reservations.Models.ReservationCatalog" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentQuotaLimitBase">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.Reservations.CurrentQuotaLimitBaseResource&gt; GetCurrentQuotaLimitBase (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string providerId, Azure.Core.AzureLocation location, string resourceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.Reservations.CurrentQuotaLimitBaseResource&gt; GetCurrentQuotaLimitBase(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string providerId, valuetype Azure.Core.AzureLocation location, string resourceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Reservations.ReservationsExtensions.GetCurrentQuotaLimitBase(Azure.ResourceManager.Resources.SubscriptionResource,System.String,Azure.Core.AzureLocation,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCurrentQuotaLimitBase (subscriptionResource As SubscriptionResource, providerId As String, location As AzureLocation, resourceName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of CurrentQuotaLimitBaseResource)" />
      <MemberSignature Language="F#" Value="static member GetCurrentQuotaLimitBase : Azure.ResourceManager.Resources.SubscriptionResource * string * Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Reservations.CurrentQuotaLimitBaseResource&gt;" Usage="Azure.ResourceManager.Reservations.ReservationsExtensions.GetCurrentQuotaLimitBase (subscriptionResource, providerId, location, resourceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Reservations.CurrentQuotaLimitBaseResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="providerId" Type="System.String" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="resourceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="providerId"> Azure resource provider ID. </param>
        <param name="location"> Azure region. </param>
        <param name="resourceName"> The resource name for a resource provider, such as SKU name for Microsoft.Compute, Sku or TotalLowPriorityCores for Microsoft.MachineLearningServices. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the current quota (service limit) and usage of a resource. You can use the response from the GET operation to submit quota update request.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Capacity/resourceProviders/{providerId}/locations/{location}/serviceLimits/{resourceName}
            Operation Id: Quota_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="providerId" /> or <paramref name="resourceName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="providerId" /> or <paramref name="resourceName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentQuotaLimitBaseAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Reservations.CurrentQuotaLimitBaseResource&gt;&gt; GetCurrentQuotaLimitBaseAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string providerId, Azure.Core.AzureLocation location, string resourceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Reservations.CurrentQuotaLimitBaseResource&gt;&gt; GetCurrentQuotaLimitBaseAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string providerId, valuetype Azure.Core.AzureLocation location, string resourceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Reservations.ReservationsExtensions.GetCurrentQuotaLimitBaseAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.String,Azure.Core.AzureLocation,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCurrentQuotaLimitBaseAsync (subscriptionResource As SubscriptionResource, providerId As String, location As AzureLocation, resourceName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of CurrentQuotaLimitBaseResource))" />
      <MemberSignature Language="F#" Value="static member GetCurrentQuotaLimitBaseAsync : Azure.ResourceManager.Resources.SubscriptionResource * string * Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Reservations.CurrentQuotaLimitBaseResource&gt;&gt;" Usage="Azure.ResourceManager.Reservations.ReservationsExtensions.GetCurrentQuotaLimitBaseAsync (subscriptionResource, providerId, location, resourceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Reservations.CurrentQuotaLimitBaseResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="providerId" Type="System.String" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="resourceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="providerId"> Azure resource provider ID. </param>
        <param name="location"> Azure region. </param>
        <param name="resourceName"> The resource name for a resource provider, such as SKU name for Microsoft.Compute, Sku or TotalLowPriorityCores for Microsoft.MachineLearningServices. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the current quota (service limit) and usage of a resource. You can use the response from the GET operation to submit quota update request.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Capacity/resourceProviders/{providerId}/locations/{location}/serviceLimits/{resourceName}
            Operation Id: Quota_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="providerId" /> or <paramref name="resourceName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="providerId" /> or <paramref name="resourceName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentQuotaLimitBaseResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Reservations.CurrentQuotaLimitBaseResource GetCurrentQuotaLimitBaseResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Reservations.CurrentQuotaLimitBaseResource GetCurrentQuotaLimitBaseResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Reservations.ReservationsExtensions.GetCurrentQuotaLimitBaseResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCurrentQuotaLimitBaseResource (client As ArmClient, id As ResourceIdentifier) As CurrentQuotaLimitBaseResource" />
      <MemberSignature Language="F#" Value="static member GetCurrentQuotaLimitBaseResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Reservations.CurrentQuotaLimitBaseResource" Usage="Azure.ResourceManager.Reservations.ReservationsExtensions.GetCurrentQuotaLimitBaseResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Reservations.CurrentQuotaLimitBaseResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Reservations.CurrentQuotaLimitBaseResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Reservations.CurrentQuotaLimitBaseResource.CreateResourceIdentifier(System.String,System.String,Azure.Core.AzureLocation,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Reservations.CurrentQuotaLimitBaseResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Reservations.CurrentQuotaLimitBaseResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentQuotaLimitBases">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Reservations.CurrentQuotaLimitBaseCollection GetCurrentQuotaLimitBases (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string providerId, Azure.Core.AzureLocation location);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Reservations.CurrentQuotaLimitBaseCollection GetCurrentQuotaLimitBases(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string providerId, valuetype Azure.Core.AzureLocation location) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Reservations.ReservationsExtensions.GetCurrentQuotaLimitBases(Azure.ResourceManager.Resources.SubscriptionResource,System.String,Azure.Core.AzureLocation)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCurrentQuotaLimitBases (subscriptionResource As SubscriptionResource, providerId As String, location As AzureLocation) As CurrentQuotaLimitBaseCollection" />
      <MemberSignature Language="F#" Value="static member GetCurrentQuotaLimitBases : Azure.ResourceManager.Resources.SubscriptionResource * string * Azure.Core.AzureLocation -&gt; Azure.ResourceManager.Reservations.CurrentQuotaLimitBaseCollection" Usage="Azure.ResourceManager.Reservations.ReservationsExtensions.GetCurrentQuotaLimitBases (subscriptionResource, providerId, location)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Reservations.CurrentQuotaLimitBaseCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="providerId" Type="System.String" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="providerId"> Azure resource provider ID. </param>
        <param name="location"> Azure region. </param>
        <summary> Gets a collection of CurrentQuotaLimitBaseResources in the SubscriptionResource. </summary>
        <returns> An object representing collection of CurrentQuotaLimitBaseResources and their operations over a CurrentQuotaLimitBaseResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="providerId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="providerId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetOperations">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.Reservations.Models.OperationResponse&gt; GetOperations (this Azure.ResourceManager.Resources.TenantResource tenantResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.Reservations.Models.OperationResponse&gt; GetOperations(class Azure.ResourceManager.Resources.TenantResource tenantResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Reservations.ReservationsExtensions.GetOperations(Azure.ResourceManager.Resources.TenantResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetOperations (tenantResource As TenantResource, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of OperationResponse)" />
      <MemberSignature Language="F#" Value="static member GetOperations : Azure.ResourceManager.Resources.TenantResource * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Reservations.Models.OperationResponse&gt;" Usage="Azure.ResourceManager.Reservations.ReservationsExtensions.GetOperations (tenantResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Reservations.Models.OperationResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List all the operations.
            Request Path: /providers/Microsoft.Capacity/operations
            Operation Id: Operation_List
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Reservations.Models.OperationResponse" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOperationsAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.Reservations.Models.OperationResponse&gt; GetOperationsAsync (this Azure.ResourceManager.Resources.TenantResource tenantResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Reservations.Models.OperationResponse&gt; GetOperationsAsync(class Azure.ResourceManager.Resources.TenantResource tenantResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Reservations.ReservationsExtensions.GetOperationsAsync(Azure.ResourceManager.Resources.TenantResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetOperationsAsync (tenantResource As TenantResource, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of OperationResponse)" />
      <MemberSignature Language="F#" Value="static member GetOperationsAsync : Azure.ResourceManager.Resources.TenantResource * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Reservations.Models.OperationResponse&gt;" Usage="Azure.ResourceManager.Reservations.ReservationsExtensions.GetOperationsAsync (tenantResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Reservations.Models.OperationResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List all the operations.
            Request Path: /providers/Microsoft.Capacity/operations
            Operation Id: Operation_List
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Reservations.Models.OperationResponse" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetQuotaRequestDetails">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Reservations.QuotaRequestDetailsCollection GetQuotaRequestDetails (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string providerId, Azure.Core.AzureLocation location);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Reservations.QuotaRequestDetailsCollection GetQuotaRequestDetails(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string providerId, valuetype Azure.Core.AzureLocation location) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Reservations.ReservationsExtensions.GetQuotaRequestDetails(Azure.ResourceManager.Resources.SubscriptionResource,System.String,Azure.Core.AzureLocation)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetQuotaRequestDetails (subscriptionResource As SubscriptionResource, providerId As String, location As AzureLocation) As QuotaRequestDetailsCollection" />
      <MemberSignature Language="F#" Value="static member GetQuotaRequestDetails : Azure.ResourceManager.Resources.SubscriptionResource * string * Azure.Core.AzureLocation -&gt; Azure.ResourceManager.Reservations.QuotaRequestDetailsCollection" Usage="Azure.ResourceManager.Reservations.ReservationsExtensions.GetQuotaRequestDetails (subscriptionResource, providerId, location)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Reservations.QuotaRequestDetailsCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="providerId" Type="System.String" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="providerId"> Azure resource provider ID. </param>
        <param name="location"> Azure region. </param>
        <summary> Gets a collection of QuotaRequestDetailsResources in the SubscriptionResource. </summary>
        <returns> An object representing collection of QuotaRequestDetailsResources and their operations over a QuotaRequestDetailsResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="providerId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="providerId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetQuotaRequestDetails">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.Reservations.QuotaRequestDetailsResource&gt; GetQuotaRequestDetails (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string providerId, Azure.Core.AzureLocation location, string id, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.Reservations.QuotaRequestDetailsResource&gt; GetQuotaRequestDetails(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string providerId, valuetype Azure.Core.AzureLocation location, string id, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Reservations.ReservationsExtensions.GetQuotaRequestDetails(Azure.ResourceManager.Resources.SubscriptionResource,System.String,Azure.Core.AzureLocation,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetQuotaRequestDetails (subscriptionResource As SubscriptionResource, providerId As String, location As AzureLocation, id As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of QuotaRequestDetailsResource)" />
      <MemberSignature Language="F#" Value="static member GetQuotaRequestDetails : Azure.ResourceManager.Resources.SubscriptionResource * string * Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Reservations.QuotaRequestDetailsResource&gt;" Usage="Azure.ResourceManager.Reservations.ReservationsExtensions.GetQuotaRequestDetails (subscriptionResource, providerId, location, id, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Reservations.QuotaRequestDetailsResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="providerId" Type="System.String" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="providerId"> Azure resource provider ID. </param>
        <param name="location"> Azure region. </param>
        <param name="id"> Quota Request ID. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            For the specified Azure region (location), get the details and status of the quota request by the quota request ID for the resources of the resource provider. The PUT request for the quota (service limit) returns a response with the requestId parameter.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Capacity/resourceProviders/{providerId}/locations/{location}/serviceLimitsRequests/{id}
            Operation Id: QuotaRequestStatus_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="providerId" /> or <paramref name="id" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="providerId" /> or <paramref name="id" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetQuotaRequestDetailsAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Reservations.QuotaRequestDetailsResource&gt;&gt; GetQuotaRequestDetailsAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string providerId, Azure.Core.AzureLocation location, string id, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Reservations.QuotaRequestDetailsResource&gt;&gt; GetQuotaRequestDetailsAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string providerId, valuetype Azure.Core.AzureLocation location, string id, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Reservations.ReservationsExtensions.GetQuotaRequestDetailsAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.String,Azure.Core.AzureLocation,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetQuotaRequestDetailsAsync (subscriptionResource As SubscriptionResource, providerId As String, location As AzureLocation, id As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of QuotaRequestDetailsResource))" />
      <MemberSignature Language="F#" Value="static member GetQuotaRequestDetailsAsync : Azure.ResourceManager.Resources.SubscriptionResource * string * Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Reservations.QuotaRequestDetailsResource&gt;&gt;" Usage="Azure.ResourceManager.Reservations.ReservationsExtensions.GetQuotaRequestDetailsAsync (subscriptionResource, providerId, location, id, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Reservations.QuotaRequestDetailsResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="providerId" Type="System.String" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="providerId"> Azure resource provider ID. </param>
        <param name="location"> Azure region. </param>
        <param name="id"> Quota Request ID. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            For the specified Azure region (location), get the details and status of the quota request by the quota request ID for the resources of the resource provider. The PUT request for the quota (service limit) returns a response with the requestId parameter.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Capacity/resourceProviders/{providerId}/locations/{location}/serviceLimitsRequests/{id}
            Operation Id: QuotaRequestStatus_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="providerId" /> or <paramref name="id" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="providerId" /> or <paramref name="id" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetQuotaRequestDetailsResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Reservations.QuotaRequestDetailsResource GetQuotaRequestDetailsResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Reservations.QuotaRequestDetailsResource GetQuotaRequestDetailsResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Reservations.ReservationsExtensions.GetQuotaRequestDetailsResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetQuotaRequestDetailsResource (client As ArmClient, id As ResourceIdentifier) As QuotaRequestDetailsResource" />
      <MemberSignature Language="F#" Value="static member GetQuotaRequestDetailsResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Reservations.QuotaRequestDetailsResource" Usage="Azure.ResourceManager.Reservations.ReservationsExtensions.GetQuotaRequestDetailsResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Reservations.QuotaRequestDetailsResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Reservations.QuotaRequestDetailsResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Reservations.QuotaRequestDetailsResource.CreateResourceIdentifier(System.String,System.String,Azure.Core.AzureLocation,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Reservations.QuotaRequestDetailsResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Reservations.QuotaRequestDetailsResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetReservationOrderResponse">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.Reservations.ReservationOrderResponseResource&gt; GetReservationOrderResponse (this Azure.ResourceManager.Resources.TenantResource tenantResource, string reservationOrderId, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.Reservations.ReservationOrderResponseResource&gt; GetReservationOrderResponse(class Azure.ResourceManager.Resources.TenantResource tenantResource, string reservationOrderId, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Reservations.ReservationsExtensions.GetReservationOrderResponse(Azure.ResourceManager.Resources.TenantResource,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetReservationOrderResponse (tenantResource As TenantResource, reservationOrderId As String, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ReservationOrderResponseResource)" />
      <MemberSignature Language="F#" Value="static member GetReservationOrderResponse : Azure.ResourceManager.Resources.TenantResource * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Reservations.ReservationOrderResponseResource&gt;" Usage="Azure.ResourceManager.Reservations.ReservationsExtensions.GetReservationOrderResponse (tenantResource, reservationOrderId, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Reservations.ReservationOrderResponseResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="reservationOrderId" Type="System.String" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="reservationOrderId"> Order Id of the reservation. </param>
        <param name="expand"> May be used to expand the planInformation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the details of the `ReservationOrder`.
            Request Path: /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}
            Operation Id: ReservationOrder_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="reservationOrderId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="reservationOrderId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetReservationOrderResponseAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Reservations.ReservationOrderResponseResource&gt;&gt; GetReservationOrderResponseAsync (this Azure.ResourceManager.Resources.TenantResource tenantResource, string reservationOrderId, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Reservations.ReservationOrderResponseResource&gt;&gt; GetReservationOrderResponseAsync(class Azure.ResourceManager.Resources.TenantResource tenantResource, string reservationOrderId, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Reservations.ReservationsExtensions.GetReservationOrderResponseAsync(Azure.ResourceManager.Resources.TenantResource,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetReservationOrderResponseAsync (tenantResource As TenantResource, reservationOrderId As String, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ReservationOrderResponseResource))" />
      <MemberSignature Language="F#" Value="static member GetReservationOrderResponseAsync : Azure.ResourceManager.Resources.TenantResource * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Reservations.ReservationOrderResponseResource&gt;&gt;" Usage="Azure.ResourceManager.Reservations.ReservationsExtensions.GetReservationOrderResponseAsync (tenantResource, reservationOrderId, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Reservations.ReservationOrderResponseResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="reservationOrderId" Type="System.String" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="reservationOrderId"> Order Id of the reservation. </param>
        <param name="expand"> May be used to expand the planInformation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the details of the `ReservationOrder`.
            Request Path: /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}
            Operation Id: ReservationOrder_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="reservationOrderId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="reservationOrderId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetReservationOrderResponseResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Reservations.ReservationOrderResponseResource GetReservationOrderResponseResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Reservations.ReservationOrderResponseResource GetReservationOrderResponseResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Reservations.ReservationsExtensions.GetReservationOrderResponseResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetReservationOrderResponseResource (client As ArmClient, id As ResourceIdentifier) As ReservationOrderResponseResource" />
      <MemberSignature Language="F#" Value="static member GetReservationOrderResponseResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Reservations.ReservationOrderResponseResource" Usage="Azure.ResourceManager.Reservations.ReservationsExtensions.GetReservationOrderResponseResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Reservations.ReservationOrderResponseResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Reservations.ReservationOrderResponseResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Reservations.ReservationOrderResponseResource.CreateResourceIdentifier(System.String)" /> to create a <see cref="T:Azure.ResourceManager.Reservations.ReservationOrderResponseResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Reservations.ReservationOrderResponseResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetReservationOrderResponses">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Reservations.ReservationOrderResponseCollection GetReservationOrderResponses (this Azure.ResourceManager.Resources.TenantResource tenantResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Reservations.ReservationOrderResponseCollection GetReservationOrderResponses(class Azure.ResourceManager.Resources.TenantResource tenantResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Reservations.ReservationsExtensions.GetReservationOrderResponses(Azure.ResourceManager.Resources.TenantResource)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetReservationOrderResponses (tenantResource As TenantResource) As ReservationOrderResponseCollection" />
      <MemberSignature Language="F#" Value="static member GetReservationOrderResponses : Azure.ResourceManager.Resources.TenantResource -&gt; Azure.ResourceManager.Reservations.ReservationOrderResponseCollection" Usage="Azure.ResourceManager.Reservations.ReservationsExtensions.GetReservationOrderResponses tenantResource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Reservations.ReservationOrderResponseCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <summary> Gets a collection of ReservationOrderResponseResources in the TenantResource. </summary>
        <returns> An object representing collection of ReservationOrderResponseResources and their operations over a ReservationOrderResponseResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetReservationResponseResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Reservations.ReservationResponseResource GetReservationResponseResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Reservations.ReservationResponseResource GetReservationResponseResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Reservations.ReservationsExtensions.GetReservationResponseResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetReservationResponseResource (client As ArmClient, id As ResourceIdentifier) As ReservationResponseResource" />
      <MemberSignature Language="F#" Value="static member GetReservationResponseResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Reservations.ReservationResponseResource" Usage="Azure.ResourceManager.Reservations.ReservationsExtensions.GetReservationResponseResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Reservations.ReservationResponseResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Reservations.ReservationResponseResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Reservations.ReservationResponseResource.CreateResourceIdentifier(System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Reservations.ReservationResponseResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Reservations.ReservationResponseResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetReservationResponses">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.Reservations.ReservationResponseResource&gt; GetReservationResponses (this Azure.ResourceManager.Resources.TenantResource tenantResource, string filter = default, string orderby = default, string refreshSummary = default, float? skiptoken = default, string selectedState = default, float? take = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.Reservations.ReservationResponseResource&gt; GetReservationResponses(class Azure.ResourceManager.Resources.TenantResource tenantResource, string filter, string orderby, string refreshSummary, valuetype System.Nullable`1&lt;float32&gt; skiptoken, string selectedState, valuetype System.Nullable`1&lt;float32&gt; take, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Reservations.ReservationsExtensions.GetReservationResponses(Azure.ResourceManager.Resources.TenantResource,System.String,System.String,System.String,System.Nullable{System.Single},System.String,System.Nullable{System.Single},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetReservationResponses (tenantResource As TenantResource, Optional filter As String = Nothing, Optional orderby As String = Nothing, Optional refreshSummary As String = Nothing, Optional skiptoken As Nullable(Of Single) = Nothing, Optional selectedState As String = Nothing, Optional take As Nullable(Of Single) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ReservationResponseResource)" />
      <MemberSignature Language="F#" Value="static member GetReservationResponses : Azure.ResourceManager.Resources.TenantResource * string * string * string * Nullable&lt;single&gt; * string * Nullable&lt;single&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Reservations.ReservationResponseResource&gt;" Usage="Azure.ResourceManager.Reservations.ReservationsExtensions.GetReservationResponses (tenantResource, filter, orderby, refreshSummary, skiptoken, selectedState, take, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Reservations.ReservationResponseResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="orderby" Type="System.String" />
        <Parameter Name="refreshSummary" Type="System.String" />
        <Parameter Name="skiptoken" Type="System.Nullable&lt;System.Single&gt;" />
        <Parameter Name="selectedState" Type="System.String" />
        <Parameter Name="take" Type="System.Nullable&lt;System.Single&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="filter"> May be used to filter by reservation properties. The filter supports 'eq', 'or', and 'and'. It does not currently support 'ne', 'gt', 'le', 'ge', or 'not'. Reservation properties include sku/name, properties/{appliedScopeType, archived, displayName, displayProvisioningState, effectiveDateTime, expiryDate, provisioningState, quantity, renew, reservedResourceType, term, userFriendlyAppliedScopeType, userFriendlyRenewState}. </param>
        <param name="orderby"> May be used to sort order by reservation properties. </param>
        <param name="refreshSummary"> To indicate whether to refresh the roll up counts of the reservations group by provisioning states. </param>
        <param name="skiptoken"> The number of reservations to skip from the list before returning results. </param>
        <param name="selectedState"> The selected provisioning state. </param>
        <param name="take"> To number of reservations to return. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List the reservations and the roll up counts of reservations group by provisioning states that the user has access to in the current tenant.
            Request Path: /providers/Microsoft.Capacity/reservations
            Operation Id: Reservation_ListAll
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Reservations.ReservationResponseResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetReservationResponsesAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.Reservations.ReservationResponseResource&gt; GetReservationResponsesAsync (this Azure.ResourceManager.Resources.TenantResource tenantResource, string filter = default, string orderby = default, string refreshSummary = default, float? skiptoken = default, string selectedState = default, float? take = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Reservations.ReservationResponseResource&gt; GetReservationResponsesAsync(class Azure.ResourceManager.Resources.TenantResource tenantResource, string filter, string orderby, string refreshSummary, valuetype System.Nullable`1&lt;float32&gt; skiptoken, string selectedState, valuetype System.Nullable`1&lt;float32&gt; take, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Reservations.ReservationsExtensions.GetReservationResponsesAsync(Azure.ResourceManager.Resources.TenantResource,System.String,System.String,System.String,System.Nullable{System.Single},System.String,System.Nullable{System.Single},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetReservationResponsesAsync (tenantResource As TenantResource, Optional filter As String = Nothing, Optional orderby As String = Nothing, Optional refreshSummary As String = Nothing, Optional skiptoken As Nullable(Of Single) = Nothing, Optional selectedState As String = Nothing, Optional take As Nullable(Of Single) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ReservationResponseResource)" />
      <MemberSignature Language="F#" Value="static member GetReservationResponsesAsync : Azure.ResourceManager.Resources.TenantResource * string * string * string * Nullable&lt;single&gt; * string * Nullable&lt;single&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Reservations.ReservationResponseResource&gt;" Usage="Azure.ResourceManager.Reservations.ReservationsExtensions.GetReservationResponsesAsync (tenantResource, filter, orderby, refreshSummary, skiptoken, selectedState, take, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Reservations.ReservationResponseResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="orderby" Type="System.String" />
        <Parameter Name="refreshSummary" Type="System.String" />
        <Parameter Name="skiptoken" Type="System.Nullable&lt;System.Single&gt;" />
        <Parameter Name="selectedState" Type="System.String" />
        <Parameter Name="take" Type="System.Nullable&lt;System.Single&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="filter"> May be used to filter by reservation properties. The filter supports 'eq', 'or', and 'and'. It does not currently support 'ne', 'gt', 'le', 'ge', or 'not'. Reservation properties include sku/name, properties/{appliedScopeType, archived, displayName, displayProvisioningState, effectiveDateTime, expiryDate, provisioningState, quantity, renew, reservedResourceType, term, userFriendlyAppliedScopeType, userFriendlyRenewState}. </param>
        <param name="orderby"> May be used to sort order by reservation properties. </param>
        <param name="refreshSummary"> To indicate whether to refresh the roll up counts of the reservations group by provisioning states. </param>
        <param name="skiptoken"> The number of reservations to skip from the list before returning results. </param>
        <param name="selectedState"> The selected provisioning state. </param>
        <param name="take"> To number of reservations to return. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List the reservations and the roll up counts of reservations group by provisioning states that the user has access to in the current tenant.
            Request Path: /providers/Microsoft.Capacity/reservations
            Operation Id: Reservation_ListAll
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Reservations.ReservationResponseResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PostCalculateExchange">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Reservations.Models.CalculateExchangeOperationResultResponse&gt; PostCalculateExchange (this Azure.ResourceManager.Resources.TenantResource tenantResource, Azure.WaitUntil waitUntil, Azure.ResourceManager.Reservations.Models.CalculateExchangeContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.Reservations.Models.CalculateExchangeOperationResultResponse&gt; PostCalculateExchange(class Azure.ResourceManager.Resources.TenantResource tenantResource, valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.Reservations.Models.CalculateExchangeContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Reservations.ReservationsExtensions.PostCalculateExchange(Azure.ResourceManager.Resources.TenantResource,Azure.WaitUntil,Azure.ResourceManager.Reservations.Models.CalculateExchangeContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function PostCalculateExchange (tenantResource As TenantResource, waitUntil As WaitUntil, content As CalculateExchangeContent, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of CalculateExchangeOperationResultResponse)" />
      <MemberSignature Language="F#" Value="static member PostCalculateExchange : Azure.ResourceManager.Resources.TenantResource * Azure.WaitUntil * Azure.ResourceManager.Reservations.Models.CalculateExchangeContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Reservations.Models.CalculateExchangeOperationResultResponse&gt;" Usage="Azure.ResourceManager.Reservations.ReservationsExtensions.PostCalculateExchange (tenantResource, waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Reservations.Models.CalculateExchangeOperationResultResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="content" Type="Azure.ResourceManager.Reservations.Models.CalculateExchangeContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> Request containing purchases and refunds that need to be executed. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Calculates price for exchanging `Reservations` if there are no policy errors.
            
            Request Path: /providers/Microsoft.Capacity/calculateExchange
            Operation Id: CalculateExchange_Post
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="PostCalculateExchangeAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Reservations.Models.CalculateExchangeOperationResultResponse&gt;&gt; PostCalculateExchangeAsync (this Azure.ResourceManager.Resources.TenantResource tenantResource, Azure.WaitUntil waitUntil, Azure.ResourceManager.Reservations.Models.CalculateExchangeContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.Reservations.Models.CalculateExchangeOperationResultResponse&gt;&gt; PostCalculateExchangeAsync(class Azure.ResourceManager.Resources.TenantResource tenantResource, valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.Reservations.Models.CalculateExchangeContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Reservations.ReservationsExtensions.PostCalculateExchangeAsync(Azure.ResourceManager.Resources.TenantResource,Azure.WaitUntil,Azure.ResourceManager.Reservations.Models.CalculateExchangeContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function PostCalculateExchangeAsync (tenantResource As TenantResource, waitUntil As WaitUntil, content As CalculateExchangeContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of CalculateExchangeOperationResultResponse))" />
      <MemberSignature Language="F#" Value="static member PostCalculateExchangeAsync : Azure.ResourceManager.Resources.TenantResource * Azure.WaitUntil * Azure.ResourceManager.Reservations.Models.CalculateExchangeContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Reservations.Models.CalculateExchangeOperationResultResponse&gt;&gt;" Usage="Azure.ResourceManager.Reservations.ReservationsExtensions.PostCalculateExchangeAsync (tenantResource, waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Reservations.Models.CalculateExchangeOperationResultResponse&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="content" Type="Azure.ResourceManager.Reservations.Models.CalculateExchangeContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> Request containing purchases and refunds that need to be executed. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Calculates price for exchanging `Reservations` if there are no policy errors.
            
            Request Path: /providers/Microsoft.Capacity/calculateExchange
            Operation Id: CalculateExchange_Post
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="PostExchange">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Reservations.Models.ExchangeOperationResultResponse&gt; PostExchange (this Azure.ResourceManager.Resources.TenantResource tenantResource, Azure.WaitUntil waitUntil, Azure.ResourceManager.Reservations.Models.ExchangeContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.Reservations.Models.ExchangeOperationResultResponse&gt; PostExchange(class Azure.ResourceManager.Resources.TenantResource tenantResource, valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.Reservations.Models.ExchangeContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Reservations.ReservationsExtensions.PostExchange(Azure.ResourceManager.Resources.TenantResource,Azure.WaitUntil,Azure.ResourceManager.Reservations.Models.ExchangeContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function PostExchange (tenantResource As TenantResource, waitUntil As WaitUntil, content As ExchangeContent, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of ExchangeOperationResultResponse)" />
      <MemberSignature Language="F#" Value="static member PostExchange : Azure.ResourceManager.Resources.TenantResource * Azure.WaitUntil * Azure.ResourceManager.Reservations.Models.ExchangeContent * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Reservations.Models.ExchangeOperationResultResponse&gt;" Usage="Azure.ResourceManager.Reservations.ReservationsExtensions.PostExchange (tenantResource, waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Reservations.Models.ExchangeOperationResultResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="content" Type="Azure.ResourceManager.Reservations.Models.ExchangeContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> Request containing the refunds and purchases that need to be executed. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Returns one or more `Reservations` in exchange for one or more `Reservation` purchases.
            
            Request Path: /providers/Microsoft.Capacity/exchange
            Operation Id: Exchange_Post
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="PostExchangeAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Reservations.Models.ExchangeOperationResultResponse&gt;&gt; PostExchangeAsync (this Azure.ResourceManager.Resources.TenantResource tenantResource, Azure.WaitUntil waitUntil, Azure.ResourceManager.Reservations.Models.ExchangeContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.Reservations.Models.ExchangeOperationResultResponse&gt;&gt; PostExchangeAsync(class Azure.ResourceManager.Resources.TenantResource tenantResource, valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.Reservations.Models.ExchangeContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Reservations.ReservationsExtensions.PostExchangeAsync(Azure.ResourceManager.Resources.TenantResource,Azure.WaitUntil,Azure.ResourceManager.Reservations.Models.ExchangeContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function PostExchangeAsync (tenantResource As TenantResource, waitUntil As WaitUntil, content As ExchangeContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of ExchangeOperationResultResponse))" />
      <MemberSignature Language="F#" Value="static member PostExchangeAsync : Azure.ResourceManager.Resources.TenantResource * Azure.WaitUntil * Azure.ResourceManager.Reservations.Models.ExchangeContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Reservations.Models.ExchangeOperationResultResponse&gt;&gt;" Usage="Azure.ResourceManager.Reservations.ReservationsExtensions.PostExchangeAsync (tenantResource, waitUntil, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Reservations</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Reservations.Models.ExchangeOperationResultResponse&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="content" Type="Azure.ResourceManager.Reservations.Models.ExchangeContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="content"> Request containing the refunds and purchases that need to be executed. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Returns one or more `Reservations` in exchange for one or more `Reservation` purchases.
            
            Request Path: /providers/Microsoft.Capacity/exchange
            Operation Id: Exchange_Post
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>

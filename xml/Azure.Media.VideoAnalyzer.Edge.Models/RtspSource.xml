<Type Name="RtspSource" FullName="Azure.Media.VideoAnalyzer.Edge.Models.RtspSource">
  <TypeSignature Language="C#" Value="public class RtspSource : Azure.Media.VideoAnalyzer.Edge.Models.SourceNodeBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RtspSource extends Azure.Media.VideoAnalyzer.Edge.Models.SourceNodeBase" />
  <TypeSignature Language="DocId" Value="T:Azure.Media.VideoAnalyzer.Edge.Models.RtspSource" />
  <TypeSignature Language="VB.NET" Value="Public Class RtspSource&#xA;Inherits SourceNodeBase" />
  <TypeSignature Language="F#" Value="type RtspSource = class&#xA;    inherit SourceNodeBase" />
  <AssemblyInfo>
    <AssemblyName>Azure.Media.VideoAnalyzer.Edge</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.Media.VideoAnalyzer.Edge.Models.SourceNodeBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> RTSP source allows for media from an RTSP camera or generic RTSP server to be ingested into a live pipeline. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RtspSource (string name, Azure.Media.VideoAnalyzer.Edge.Models.EndpointBase endpoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, class Azure.Media.VideoAnalyzer.Edge.Models.EndpointBase endpoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Media.VideoAnalyzer.Edge.Models.RtspSource.#ctor(System.String,Azure.Media.VideoAnalyzer.Edge.Models.EndpointBase)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, endpoint As EndpointBase)" />
      <MemberSignature Language="F#" Value="new Azure.Media.VideoAnalyzer.Edge.Models.RtspSource : string * Azure.Media.VideoAnalyzer.Edge.Models.EndpointBase -&gt; Azure.Media.VideoAnalyzer.Edge.Models.RtspSource" Usage="new Azure.Media.VideoAnalyzer.Edge.Models.RtspSource (name, endpoint)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Media.VideoAnalyzer.Edge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="endpoint" Type="Azure.Media.VideoAnalyzer.Edge.Models.EndpointBase" />
      </Parameters>
      <Docs>
        <param name="name"> Node name. Must be unique within the topology. </param>
        <param name="endpoint"> RTSP endpoint information for Video Analyzer to connect to. This contains the required information for Video Analyzer to connect to RTSP cameras and/or generic RTSP servers. </param>
        <summary> Initializes a new instance of RtspSource. </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> or <paramref name="endpoint" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Endpoint">
      <MemberSignature Language="C#" Value="public Azure.Media.VideoAnalyzer.Edge.Models.EndpointBase Endpoint { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Media.VideoAnalyzer.Edge.Models.EndpointBase Endpoint" />
      <MemberSignature Language="DocId" Value="P:Azure.Media.VideoAnalyzer.Edge.Models.RtspSource.Endpoint" />
      <MemberSignature Language="VB.NET" Value="Public Property Endpoint As EndpointBase" />
      <MemberSignature Language="F#" Value="member this.Endpoint : Azure.Media.VideoAnalyzer.Edge.Models.EndpointBase with get, set" Usage="Azure.Media.VideoAnalyzer.Edge.Models.RtspSource.Endpoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Media.VideoAnalyzer.Edge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Media.VideoAnalyzer.Edge.Models.EndpointBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> RTSP endpoint information for Video Analyzer to connect to. This contains the required information for Video Analyzer to connect to RTSP cameras and/or generic RTSP servers. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Transport">
      <MemberSignature Language="C#" Value="public Azure.Media.VideoAnalyzer.Edge.Models.RtspTransport? Transport { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype Azure.Media.VideoAnalyzer.Edge.Models.RtspTransport&gt; Transport" />
      <MemberSignature Language="DocId" Value="P:Azure.Media.VideoAnalyzer.Edge.Models.RtspSource.Transport" />
      <MemberSignature Language="VB.NET" Value="Public Property Transport As Nullable(Of RtspTransport)" />
      <MemberSignature Language="F#" Value="member this.Transport : Nullable&lt;Azure.Media.VideoAnalyzer.Edge.Models.RtspTransport&gt; with get, set" Usage="Azure.Media.VideoAnalyzer.Edge.Models.RtspSource.Transport" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Media.VideoAnalyzer.Edge</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Azure.Media.VideoAnalyzer.Edge.Models.RtspTransport&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Network transport utilized by the RTSP and RTP exchange: TCP or HTTP. When using TCP, the RTP packets are interleaved on the TCP RTSP connection. When using HTTP, the RTSP messages are exchanged through long lived HTTP connections, and the RTP packages are interleaved in the HTTP connections alongside the RTSP messages. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="MiniSecretClient" FullName="Azure.Template.MiniSecretClient">
  <TypeSignature Language="C#" Value="public class MiniSecretClient" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MiniSecretClient extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Template.MiniSecretClient" />
  <TypeSignature Language="VB.NET" Value="Public Class MiniSecretClient" />
  <TypeSignature Language="F#" Value="type MiniSecretClient = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Template</AssemblyName>
    <AssemblyVersion>1.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            The sample secrets client.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MiniSecretClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Template.MiniSecretClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Template</AssemblyName>
        <AssemblyVersion>1.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of MiniSecretClient for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MiniSecretClient (Uri endpoint, Azure.Core.TokenCredential credential);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, class Azure.Core.TokenCredential credential) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Template.MiniSecretClient.#ctor(System.Uri,Azure.Core.TokenCredential)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, credential As TokenCredential)" />
      <MemberSignature Language="F#" Value="new Azure.Template.MiniSecretClient : Uri * Azure.Core.TokenCredential -&gt; Azure.Template.MiniSecretClient" Usage="new Azure.Template.MiniSecretClient (endpoint, credential)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Template</AssemblyName>
        <AssemblyVersion>1.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.Core.TokenCredential" />
      </Parameters>
      <Docs>
        <param name="endpoint">To be added.</param>
        <param name="credential">To be added.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.Template.MiniSecretClient" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MiniSecretClient (Uri endpoint, Azure.Core.TokenCredential credential, Azure.Template.MiniSecretClientOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, class Azure.Core.TokenCredential credential, class Azure.Template.MiniSecretClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Template.MiniSecretClient.#ctor(System.Uri,Azure.Core.TokenCredential,Azure.Template.MiniSecretClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, credential As TokenCredential, options As MiniSecretClientOptions)" />
      <MemberSignature Language="F#" Value="new Azure.Template.MiniSecretClient : Uri * Azure.Core.TokenCredential * Azure.Template.MiniSecretClientOptions -&gt; Azure.Template.MiniSecretClient" Usage="new Azure.Template.MiniSecretClient (endpoint, credential, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Template</AssemblyName>
        <AssemblyVersion>1.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.Core.TokenCredential" />
        <Parameter Name="options" Type="Azure.Template.MiniSecretClientOptions" />
      </Parameters>
      <Docs>
        <param name="endpoint">To be added.</param>
        <param name="credential">To be added.</param>
        <param name="options">To be added.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.Template.MiniSecretClient" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSecret">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Template.Models.SecretBundle&gt; GetSecret (string secretName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Template.Models.SecretBundle&gt; GetSecret(string secretName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Template.MiniSecretClient.GetSecret(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecret (secretName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SecretBundle)" />
      <MemberSignature Language="F#" Value="abstract member GetSecret : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Template.Models.SecretBundle&gt;&#xA;override this.GetSecret : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Template.Models.SecretBundle&gt;" Usage="miniSecretClient.GetSecret (secretName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Template</AssemblyName>
        <AssemblyVersion>1.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Template.Models.SecretBundle&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="secretName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="secretName"> The name of the secret. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> The GET operation is applicable to any secret stored in Azure Key Vault. This operation requires the secrets/get permission. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSecretAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Template.Models.SecretBundle&gt;&gt; GetSecretAsync (string secretName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Template.Models.SecretBundle&gt;&gt; GetSecretAsync(string secretName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Template.MiniSecretClient.GetSecretAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecretAsync (secretName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SecretBundle))" />
      <MemberSignature Language="F#" Value="abstract member GetSecretAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Template.Models.SecretBundle&gt;&gt;&#xA;override this.GetSecretAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Template.Models.SecretBundle&gt;&gt;" Usage="miniSecretClient.GetSecretAsync (secretName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Template</AssemblyName>
        <AssemblyVersion>1.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Template.Models.SecretBundle&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="secretName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="secretName"> The name of the secret. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> The GET operation is applicable to any secret stored in Azure Key Vault. This operation requires the secrets/get permission. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

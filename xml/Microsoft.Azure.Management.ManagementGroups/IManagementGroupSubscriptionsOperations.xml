<Type Name="IManagementGroupSubscriptionsOperations" FullName="Microsoft.Azure.Management.ManagementGroups.IManagementGroupSubscriptionsOperations">
  <TypeSignature Language="C#" Value="public interface IManagementGroupSubscriptionsOperations" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IManagementGroupSubscriptionsOperations" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Management.ManagementGroups.IManagementGroupSubscriptionsOperations" />
  <TypeSignature Language="VB.NET" Value="Public Interface IManagementGroupSubscriptionsOperations" />
  <TypeSignature Language="F#" Value="type IManagementGroupSubscriptionsOperations = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Management.ManagementGroups</AssemblyName>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            ManagementGroupSubscriptionsOperations operations.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.AzureOperationResponse&lt;Microsoft.Azure.Management.ManagementGroups.Models.SubscriptionUnderManagementGroup&gt;&gt; CreateWithHttpMessagesAsync (string groupId, string subscriptionId, string cacheControl = &quot;no-cache&quot;, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.Azure.AzureOperationResponse`1&lt;class Microsoft.Azure.Management.ManagementGroups.Models.SubscriptionUnderManagementGroup&gt;&gt; CreateWithHttpMessagesAsync(string groupId, string subscriptionId, string cacheControl, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ManagementGroups.IManagementGroupSubscriptionsOperations.CreateWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateWithHttpMessagesAsync (groupId As String, subscriptionId As String, Optional cacheControl As String = &quot;no-cache&quot;, Optional customHeaders As Dictionary(Of String, List(Of String)) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of AzureOperationResponse(Of SubscriptionUnderManagementGroup))" />
      <MemberSignature Language="F#" Value="abstract member CreateWithHttpMessagesAsync : string * string * string * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.AzureOperationResponse&lt;Microsoft.Azure.Management.ManagementGroups.Models.SubscriptionUnderManagementGroup&gt;&gt;" Usage="iManagementGroupSubscriptionsOperations.CreateWithHttpMessagesAsync (groupId, subscriptionId, cacheControl, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ManagementGroups</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.AzureOperationResponse&lt;Microsoft.Azure.Management.ManagementGroups.Models.SubscriptionUnderManagementGroup&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupId" Type="System.String" />
        <Parameter Name="subscriptionId" Type="System.String" />
        <Parameter Name="cacheControl" Type="System.String" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="groupId">
             Management Group ID.
             </param>
        <param name="subscriptionId">
             Subscription ID.
             </param>
        <param name="cacheControl">
             Indicates whether the request should utilize any caches. Populate
             the header with 'no-cache' value to bypass existing caches.
             </param>
        <param name="customHeaders">
             The headers that will be added to request.
             </param>
        <param name="cancellationToken">
             The cancellation token.
             </param>
        <summary>
             Associates existing subscription with the management group.
            
             </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Azure.Management.ManagementGroups.Models.ErrorResponseException">
             Thrown when the operation returned an invalid status code
             </exception>
        <exception cref="T:Microsoft.Rest.SerializationException">
             Thrown when unable to deserialize the response
             </exception>
        <exception cref="T:Microsoft.Rest.ValidationException">
             Thrown when a required parameter is null
             </exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.AzureOperationResponse&gt; DeleteWithHttpMessagesAsync (string groupId, string subscriptionId, string cacheControl = &quot;no-cache&quot;, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.Azure.AzureOperationResponse&gt; DeleteWithHttpMessagesAsync(string groupId, string subscriptionId, string cacheControl, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ManagementGroups.IManagementGroupSubscriptionsOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function DeleteWithHttpMessagesAsync (groupId As String, subscriptionId As String, Optional cacheControl As String = &quot;no-cache&quot;, Optional customHeaders As Dictionary(Of String, List(Of String)) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of AzureOperationResponse)" />
      <MemberSignature Language="F#" Value="abstract member DeleteWithHttpMessagesAsync : string * string * string * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.AzureOperationResponse&gt;" Usage="iManagementGroupSubscriptionsOperations.DeleteWithHttpMessagesAsync (groupId, subscriptionId, cacheControl, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ManagementGroups</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.AzureOperationResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupId" Type="System.String" />
        <Parameter Name="subscriptionId" Type="System.String" />
        <Parameter Name="cacheControl" Type="System.String" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="groupId">
             Management Group ID.
             </param>
        <param name="subscriptionId">
             Subscription ID.
             </param>
        <param name="cacheControl">
             Indicates whether the request should utilize any caches. Populate
             the header with 'no-cache' value to bypass existing caches.
             </param>
        <param name="customHeaders">
             The headers that will be added to request.
             </param>
        <param name="cancellationToken">
             The cancellation token.
             </param>
        <summary>
             De-associates subscription from the management group.
            
             </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Azure.Management.ManagementGroups.Models.ErrorResponseException">
             Thrown when the operation returned an invalid status code
             </exception>
        <exception cref="T:Microsoft.Rest.ValidationException">
             Thrown when a required parameter is null
             </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSubscriptionsUnderManagementGroupNextWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.AzureOperationResponse&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Management.ManagementGroups.Models.SubscriptionUnderManagementGroup&gt;&gt;&gt; GetSubscriptionsUnderManagementGroupNextWithHttpMessagesAsync (string nextPageLink, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.Azure.AzureOperationResponse`1&lt;class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.Management.ManagementGroups.Models.SubscriptionUnderManagementGroup&gt;&gt;&gt; GetSubscriptionsUnderManagementGroupNextWithHttpMessagesAsync(string nextPageLink, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ManagementGroups.IManagementGroupSubscriptionsOperations.GetSubscriptionsUnderManagementGroupNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSubscriptionsUnderManagementGroupNextWithHttpMessagesAsync (nextPageLink As String, Optional customHeaders As Dictionary(Of String, List(Of String)) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of AzureOperationResponse(Of IPage(Of SubscriptionUnderManagementGroup)))" />
      <MemberSignature Language="F#" Value="abstract member GetSubscriptionsUnderManagementGroupNextWithHttpMessagesAsync : string * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.AzureOperationResponse&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Management.ManagementGroups.Models.SubscriptionUnderManagementGroup&gt;&gt;&gt;" Usage="iManagementGroupSubscriptionsOperations.GetSubscriptionsUnderManagementGroupNextWithHttpMessagesAsync (nextPageLink, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ManagementGroups</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.AzureOperationResponse&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Management.ManagementGroups.Models.SubscriptionUnderManagementGroup&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nextPageLink" Type="System.String" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="nextPageLink">
             The NextLink from the previous successful call to List operation.
             </param>
        <param name="customHeaders">
             The headers that will be added to request.
             </param>
        <param name="cancellationToken">
             The cancellation token.
             </param>
        <summary>
             Retrieves details about all subscriptions which are associated with
             the management group.
            
             </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Azure.Management.ManagementGroups.Models.ErrorResponseException">
             Thrown when the operation returned an invalid status code
             </exception>
        <exception cref="T:Microsoft.Rest.SerializationException">
             Thrown when unable to deserialize the response
             </exception>
        <exception cref="T:Microsoft.Rest.ValidationException">
             Thrown when a required parameter is null
             </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSubscriptionsUnderManagementGroupWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.AzureOperationResponse&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Management.ManagementGroups.Models.SubscriptionUnderManagementGroup&gt;&gt;&gt; GetSubscriptionsUnderManagementGroupWithHttpMessagesAsync (string groupId, string skiptoken = default, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.Azure.AzureOperationResponse`1&lt;class Microsoft.Rest.Azure.IPage`1&lt;class Microsoft.Azure.Management.ManagementGroups.Models.SubscriptionUnderManagementGroup&gt;&gt;&gt; GetSubscriptionsUnderManagementGroupWithHttpMessagesAsync(string groupId, string skiptoken, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ManagementGroups.IManagementGroupSubscriptionsOperations.GetSubscriptionsUnderManagementGroupWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSubscriptionsUnderManagementGroupWithHttpMessagesAsync (groupId As String, Optional skiptoken As String = Nothing, Optional customHeaders As Dictionary(Of String, List(Of String)) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of AzureOperationResponse(Of IPage(Of SubscriptionUnderManagementGroup)))" />
      <MemberSignature Language="F#" Value="abstract member GetSubscriptionsUnderManagementGroupWithHttpMessagesAsync : string * string * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.AzureOperationResponse&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Management.ManagementGroups.Models.SubscriptionUnderManagementGroup&gt;&gt;&gt;" Usage="iManagementGroupSubscriptionsOperations.GetSubscriptionsUnderManagementGroupWithHttpMessagesAsync (groupId, skiptoken, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ManagementGroups</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.AzureOperationResponse&lt;Microsoft.Rest.Azure.IPage&lt;Microsoft.Azure.Management.ManagementGroups.Models.SubscriptionUnderManagementGroup&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupId" Type="System.String" />
        <Parameter Name="skiptoken" Type="System.String" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="groupId">
             Management Group ID.
             </param>
        <param name="skiptoken">
             Page continuation token is only used if a previous operation
             returned a partial result.
             If a previous response contains a nextLink element, the value of
             the nextLink element will include a token parameter that specifies
             a starting point to use for subsequent calls.
             </param>
        <param name="customHeaders">
             The headers that will be added to request.
             </param>
        <param name="cancellationToken">
             The cancellation token.
             </param>
        <summary>
             Retrieves details about all subscriptions which are associated with
             the management group.
            
             </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Azure.Management.ManagementGroups.Models.ErrorResponseException">
             Thrown when the operation returned an invalid status code
             </exception>
        <exception cref="T:Microsoft.Rest.SerializationException">
             Thrown when unable to deserialize the response
             </exception>
        <exception cref="T:Microsoft.Rest.ValidationException">
             Thrown when a required parameter is null
             </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSubscriptionWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.AzureOperationResponse&lt;Microsoft.Azure.Management.ManagementGroups.Models.SubscriptionUnderManagementGroup&gt;&gt; GetSubscriptionWithHttpMessagesAsync (string groupId, string subscriptionId, string cacheControl = &quot;no-cache&quot;, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.Azure.AzureOperationResponse`1&lt;class Microsoft.Azure.Management.ManagementGroups.Models.SubscriptionUnderManagementGroup&gt;&gt; GetSubscriptionWithHttpMessagesAsync(string groupId, string subscriptionId, string cacheControl, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.ManagementGroups.IManagementGroupSubscriptionsOperations.GetSubscriptionWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSubscriptionWithHttpMessagesAsync (groupId As String, subscriptionId As String, Optional cacheControl As String = &quot;no-cache&quot;, Optional customHeaders As Dictionary(Of String, List(Of String)) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of AzureOperationResponse(Of SubscriptionUnderManagementGroup))" />
      <MemberSignature Language="F#" Value="abstract member GetSubscriptionWithHttpMessagesAsync : string * string * string * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.AzureOperationResponse&lt;Microsoft.Azure.Management.ManagementGroups.Models.SubscriptionUnderManagementGroup&gt;&gt;" Usage="iManagementGroupSubscriptionsOperations.GetSubscriptionWithHttpMessagesAsync (groupId, subscriptionId, cacheControl, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.ManagementGroups</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.Azure.AzureOperationResponse&lt;Microsoft.Azure.Management.ManagementGroups.Models.SubscriptionUnderManagementGroup&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupId" Type="System.String" />
        <Parameter Name="subscriptionId" Type="System.String" />
        <Parameter Name="cacheControl" Type="System.String" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="groupId">
             Management Group ID.
             </param>
        <param name="subscriptionId">
             Subscription ID.
             </param>
        <param name="cacheControl">
             Indicates whether the request should utilize any caches. Populate
             the header with 'no-cache' value to bypass existing caches.
             </param>
        <param name="customHeaders">
             The headers that will be added to request.
             </param>
        <param name="cancellationToken">
             The cancellation token.
             </param>
        <summary>
             Retrieves details about given subscription which is associated with
             the management group.
            
             </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Azure.Management.ManagementGroups.Models.ErrorResponseException">
             Thrown when the operation returned an invalid status code
             </exception>
        <exception cref="T:Microsoft.Rest.SerializationException">
             Thrown when unable to deserialize the response
             </exception>
        <exception cref="T:Microsoft.Rest.ValidationException">
             Thrown when a required parameter is null
             </exception>
      </Docs>
    </Member>
  </Members>
</Type>

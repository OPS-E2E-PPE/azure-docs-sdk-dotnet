<Type Name="ManagementGroup" FullName="Azure.ResourceManager.Management.ManagementGroup">
  <TypeSignature Language="C#" Value="public class ManagementGroup : Azure.ResourceManager.Core.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ManagementGroup extends Azure.ResourceManager.Core.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Management.ManagementGroup" />
  <TypeSignature Language="VB.NET" Value="Public Class ManagementGroup&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type ManagementGroup = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.Core.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            A class representing the operations that can be performed over a specific ManagementGroup.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ManagementGroup ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Management.ManagementGroup.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.ResourceManager.Resources.ResourceGroup" /> class for mocking.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal ManagementGroup (Azure.ResourceManager.Core.ArmResource options, Azure.ResourceManager.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(class Azure.ResourceManager.Core.ArmResource options, class Azure.ResourceManager.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Management.ManagementGroup.#ctor(Azure.ResourceManager.Core.ArmResource,Azure.ResourceManager.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (options As ArmResource, id As ResourceIdentifier)" />
      <MemberSignature Language="F#" Value="new Azure.ResourceManager.Management.ManagementGroup : Azure.ResourceManager.Core.ArmResource * Azure.ResourceManager.ResourceIdentifier -&gt; Azure.ResourceManager.Management.ManagementGroup" Usage="new Azure.ResourceManager.Management.ManagementGroup (options, id)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="options" Type="Azure.ResourceManager.Core.ArmResource" />
        <Parameter Name="id" Type="Azure.ResourceManager.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="options"> The client parameters to use in these operations. </param>
        <param name="id"> The identifier of the resource that is the target of operations. </param>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.ResourceManager.Resources.ResourceGroup" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Management.ManagementGroupData Data { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.Management.ManagementGroupData Data" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Management.ManagementGroup.Data" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Data As ManagementGroupData" />
      <MemberSignature Language="F#" Value="member this.Data : Azure.ResourceManager.Management.ManagementGroupData" Usage="Azure.ResourceManager.Management.ManagementGroup.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Management.ManagementGroupData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the data representing this ManagementGroup.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public virtual Azure.Response Delete (string cacheControl = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response Delete(string cacheControl, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Management.ManagementGroup.Delete(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Delete (Optional cacheControl As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member Delete : string * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.Delete : string * System.Threading.CancellationToken -&gt; Azure.Response" Usage="managementGroup.Delete (cacheControl, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cacheControl" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cacheControl"> Indicates whether the request should utilize any caches. Populate the header with 'no-cache' value to bypass existing caches. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Delete management group.
            If a management group contains child resources, the request will fail.
            .
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DeleteAsync (string cacheControl = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeleteAsync(string cacheControl, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Management.ManagementGroup.DeleteAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteAsync (Optional cacheControl As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DeleteAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DeleteAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="managementGroup.DeleteAsync (cacheControl, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cacheControl" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cacheControl"> Indicates whether the request should utilize any caches. Populate the header with 'no-cache' value to bypass existing caches. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Delete management group.
            If a management group contains child resources, the request will fail.
            .
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Management.ManagementGroup&gt; Get (Azure.ResourceManager.Management.Models.ManagementGroupExpandType? expand = default, bool? recurse = default, string filter = default, string cacheControl = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Management.ManagementGroup&gt; Get(valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Management.Models.ManagementGroupExpandType&gt; expand, valuetype System.Nullable`1&lt;bool&gt; recurse, string filter, string cacheControl, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Management.ManagementGroup.Get(System.Nullable{Azure.ResourceManager.Management.Models.ManagementGroupExpandType},System.Nullable{System.Boolean},System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Get (Optional expand As Nullable(Of ManagementGroupExpandType) = Nothing, Optional recurse As Nullable(Of Boolean) = Nothing, Optional filter As String = Nothing, Optional cacheControl As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ManagementGroup)" />
      <MemberSignature Language="F#" Value="abstract member Get : Nullable&lt;Azure.ResourceManager.Management.Models.ManagementGroupExpandType&gt; * Nullable&lt;bool&gt; * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Management.ManagementGroup&gt;&#xA;override this.Get : Nullable&lt;Azure.ResourceManager.Management.Models.ManagementGroupExpandType&gt; * Nullable&lt;bool&gt; * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Management.ManagementGroup&gt;" Usage="managementGroup.Get (expand, recurse, filter, cacheControl, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Management.ManagementGroup&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expand" Type="System.Nullable&lt;Azure.ResourceManager.Management.Models.ManagementGroupExpandType&gt;" />
        <Parameter Name="recurse" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="cacheControl" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="expand"> The $expand=children query string parameter allows clients to request inclusion of children in the response payload.  $expand=path includes the path from the root group to the current group.  $expand=ancestors includes the ancestor Ids of the current group. </param>
        <param name="recurse"> The $recurse=true query string parameter allows clients to request inclusion of entire hierarchy in the response payload. Note that  $expand=children must be passed up if $recurse is set to true. </param>
        <param name="filter"> A filter which allows the exclusion of subscriptions from results (i.e. '$filter=children.childType ne Subscription'). </param>
        <param name="cacheControl"> Indicates whether the request should utilize any caches. Populate the header with 'no-cache' value to bypass existing caches. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the details of the management group.
            .
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Management.ManagementGroup&gt;&gt; GetAsync (Azure.ResourceManager.Management.Models.ManagementGroupExpandType? expand = default, bool? recurse = default, string filter = default, string cacheControl = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Management.ManagementGroup&gt;&gt; GetAsync(valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Management.Models.ManagementGroupExpandType&gt; expand, valuetype System.Nullable`1&lt;bool&gt; recurse, string filter, string cacheControl, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Management.ManagementGroup.GetAsync(System.Nullable{Azure.ResourceManager.Management.Models.ManagementGroupExpandType},System.Nullable{System.Boolean},System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAsync (Optional expand As Nullable(Of ManagementGroupExpandType) = Nothing, Optional recurse As Nullable(Of Boolean) = Nothing, Optional filter As String = Nothing, Optional cacheControl As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ManagementGroup))" />
      <MemberSignature Language="F#" Value="abstract member GetAsync : Nullable&lt;Azure.ResourceManager.Management.Models.ManagementGroupExpandType&gt; * Nullable&lt;bool&gt; * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Management.ManagementGroup&gt;&gt;&#xA;override this.GetAsync : Nullable&lt;Azure.ResourceManager.Management.Models.ManagementGroupExpandType&gt; * Nullable&lt;bool&gt; * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Management.ManagementGroup&gt;&gt;" Usage="managementGroup.GetAsync (expand, recurse, filter, cacheControl, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Management.ManagementGroup&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expand" Type="System.Nullable&lt;Azure.ResourceManager.Management.Models.ManagementGroupExpandType&gt;" />
        <Parameter Name="recurse" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="cacheControl" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="expand"> The $expand=children query string parameter allows clients to request inclusion of children in the response payload.  $expand=path includes the path from the root group to the current group.  $expand=ancestors includes the ancestor Ids of the current group. </param>
        <param name="recurse"> The $recurse=true query string parameter allows clients to request inclusion of entire hierarchy in the response payload. Note that  $expand=children must be passed up if $recurse is set to true. </param>
        <param name="filter"> A filter which allows the exclusion of subscriptions from results (i.e. '$filter=children.childType ne Subscription'). </param>
        <param name="cacheControl"> Indicates whether the request should utilize any caches. Populate the header with 'no-cache' value to bypass existing caches. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the details of the management group.
            .
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDescendants">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Management.Models.DescendantInfo&gt; GetDescendants (string skiptoken = default, int? top = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Management.Models.DescendantInfo&gt; GetDescendants(string skiptoken, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Management.ManagementGroup.GetDescendants(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDescendants (Optional skiptoken As String = Nothing, Optional top As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of DescendantInfo)" />
      <MemberSignature Language="F#" Value="abstract member GetDescendants : string * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Management.Models.DescendantInfo&gt;&#xA;override this.GetDescendants : string * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Management.Models.DescendantInfo&gt;" Usage="managementGroup.GetDescendants (skiptoken, top, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Management.Models.DescendantInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="skiptoken" Type="System.String" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="skiptoken">
            Page continuation token is only used if a previous operation returned a partial result.
            If a previous response contains a nextLink element, the value of the nextLink element will include a token parameter that specifies a starting point to use for subsequent calls.
            .
            </param>
        <param name="top"> Number of elements to return when retrieving results. Passing this in will override $skipToken. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List all entities that descend from a management group.
            .
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDescendantsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Management.Models.DescendantInfo&gt; GetDescendantsAsync (string skiptoken = default, int? top = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Management.Models.DescendantInfo&gt; GetDescendantsAsync(string skiptoken, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Management.ManagementGroup.GetDescendantsAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDescendantsAsync (Optional skiptoken As String = Nothing, Optional top As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of DescendantInfo)" />
      <MemberSignature Language="F#" Value="abstract member GetDescendantsAsync : string * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Management.Models.DescendantInfo&gt;&#xA;override this.GetDescendantsAsync : string * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Management.Models.DescendantInfo&gt;" Usage="managementGroup.GetDescendantsAsync (skiptoken, top, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Management.Models.DescendantInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="skiptoken" Type="System.String" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="skiptoken">
            Page continuation token is only used if a previous operation returned a partial result.
            If a previous response contains a nextLink element, the value of the nextLink element will include a token parameter that specifies a starting point to use for subsequent calls.
            .
            </param>
        <param name="top"> Number of elements to return when retrieving results. Passing this in will override $skipToken. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List all entities that descend from a management group.
            .
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasData">
      <MemberSignature Language="C#" Value="public bool HasData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasData" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Management.ManagementGroup.HasData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasData As Boolean" />
      <MemberSignature Language="F#" Value="member this.HasData : bool" Usage="Azure.ResourceManager.Management.ManagementGroup.HasData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets whether or not the current instance has data.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResourceType">
      <MemberSignature Language="C#" Value="public static readonly Azure.ResourceManager.ResourceType ResourceType;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Azure.ResourceManager.ResourceType ResourceType" />
      <MemberSignature Language="DocId" Value="F:Azure.ResourceManager.Management.ManagementGroup.ResourceType" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ResourceType As ResourceType " />
      <MemberSignature Language="F#" Value=" staticval mutable ResourceType : Azure.ResourceManager.ResourceType" Usage="Azure.ResourceManager.Management.ManagementGroup.ResourceType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ResourceType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the resource type definition for a ResourceType.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartDelete">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Management.Models.ManagementGroupDeleteOperation StartDelete (string cacheControl = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Management.Models.ManagementGroupDeleteOperation StartDelete(string cacheControl, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Management.ManagementGroup.StartDelete(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartDelete (Optional cacheControl As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As ManagementGroupDeleteOperation" />
      <MemberSignature Language="F#" Value="abstract member StartDelete : string * System.Threading.CancellationToken -&gt; Azure.ResourceManager.Management.Models.ManagementGroupDeleteOperation&#xA;override this.StartDelete : string * System.Threading.CancellationToken -&gt; Azure.ResourceManager.Management.Models.ManagementGroupDeleteOperation" Usage="managementGroup.StartDelete (cacheControl, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Management.Models.ManagementGroupDeleteOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cacheControl" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cacheControl"> Indicates whether the request should utilize any caches. Populate the header with 'no-cache' value to bypass existing caches. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Delete management group.
            If a management group contains child resources, the request will fail.
            .
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartDeleteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.Management.Models.ManagementGroupDeleteOperation&gt; StartDeleteAsync (string cacheControl = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.Management.Models.ManagementGroupDeleteOperation&gt; StartDeleteAsync(string cacheControl, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Management.ManagementGroup.StartDeleteAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartDeleteAsync (Optional cacheControl As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ManagementGroupDeleteOperation)" />
      <MemberSignature Language="F#" Value="abstract member StartDeleteAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.Management.Models.ManagementGroupDeleteOperation&gt;&#xA;override this.StartDeleteAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.Management.Models.ManagementGroupDeleteOperation&gt;" Usage="managementGroup.StartDeleteAsync (cacheControl, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.Management.Models.ManagementGroupDeleteOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cacheControl" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cacheControl"> Indicates whether the request should utilize any caches. Populate the header with 'no-cache' value to bypass existing caches. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Delete management group.
            If a management group contains child resources, the request will fail.
            .
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Management.ManagementGroup&gt; Update (Azure.ResourceManager.Management.Models.PatchManagementGroupOptions patchGroupOptions, string cacheControl = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Management.ManagementGroup&gt; Update(class Azure.ResourceManager.Management.Models.PatchManagementGroupOptions patchGroupOptions, string cacheControl, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Management.ManagementGroup.Update(Azure.ResourceManager.Management.Models.PatchManagementGroupOptions,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Update (patchGroupOptions As PatchManagementGroupOptions, Optional cacheControl As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ManagementGroup)" />
      <MemberSignature Language="F#" Value="abstract member Update : Azure.ResourceManager.Management.Models.PatchManagementGroupOptions * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Management.ManagementGroup&gt;&#xA;override this.Update : Azure.ResourceManager.Management.Models.PatchManagementGroupOptions * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Management.ManagementGroup&gt;" Usage="managementGroup.Update (patchGroupOptions, cacheControl, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Management.ManagementGroup&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="patchGroupOptions" Type="Azure.ResourceManager.Management.Models.PatchManagementGroupOptions" />
        <Parameter Name="cacheControl" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="patchGroupOptions"> Management group patch parameters. </param>
        <param name="cacheControl"> Indicates whether the request should utilize any caches. Populate the header with 'no-cache' value to bypass existing caches. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Update a management group.
            .
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Management.ManagementGroup&gt;&gt; UpdateAsync (Azure.ResourceManager.Management.Models.PatchManagementGroupOptions patchGroupOptions, string cacheControl = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Management.ManagementGroup&gt;&gt; UpdateAsync(class Azure.ResourceManager.Management.Models.PatchManagementGroupOptions patchGroupOptions, string cacheControl, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Management.ManagementGroup.UpdateAsync(Azure.ResourceManager.Management.Models.PatchManagementGroupOptions,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateAsync (patchGroupOptions As PatchManagementGroupOptions, Optional cacheControl As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ManagementGroup))" />
      <MemberSignature Language="F#" Value="abstract member UpdateAsync : Azure.ResourceManager.Management.Models.PatchManagementGroupOptions * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Management.ManagementGroup&gt;&gt;&#xA;override this.UpdateAsync : Azure.ResourceManager.Management.Models.PatchManagementGroupOptions * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Management.ManagementGroup&gt;&gt;" Usage="managementGroup.UpdateAsync (patchGroupOptions, cacheControl, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Management.ManagementGroup&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="patchGroupOptions" Type="Azure.ResourceManager.Management.Models.PatchManagementGroupOptions" />
        <Parameter Name="cacheControl" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="patchGroupOptions"> Management group patch parameters. </param>
        <param name="cacheControl"> Indicates whether the request should utilize any caches. Populate the header with 'no-cache' value to bypass existing caches. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Update a management group.
            .
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidResourceType">
      <MemberSignature Language="C#" Value="protected override Azure.ResourceManager.ResourceType ValidResourceType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.ResourceType ValidResourceType" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Management.ManagementGroup.ValidResourceType" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ValidResourceType As ResourceType" />
      <MemberSignature Language="F#" Value="member this.ValidResourceType : Azure.ResourceManager.ResourceType" Usage="Azure.ResourceManager.Management.ManagementGroup.ValidResourceType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ResourceType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the valid Azure resource type for the current operations.
            </summary>
        <value> A valid Azure resource type. </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="JSONModelFeature" FullName="Microsoft.Azure.CognitiveServices.Language.LUIS.Authoring.Models.JSONModelFeature">
  <TypeSignature Language="C#" Value="public class JSONModelFeature" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit JSONModelFeature extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.CognitiveServices.Language.LUIS.Authoring.Models.JSONModelFeature" />
  <TypeSignature Language="VB.NET" Value="Public Class JSONModelFeature" />
  <TypeSignature Language="F#" Value="type JSONModelFeature = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.CognitiveServices.Language.LUIS.Authoring</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Exported Model - Phraselist Model Feature.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JSONModelFeature ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.Language.LUIS.Authoring.Models.JSONModelFeature.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Language.LUIS.Authoring</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the JSONModelFeature class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JSONModelFeature (Nullable&lt;bool&gt; activated = null, string name = null, string words = null, Nullable&lt;bool&gt; mode = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Nullable`1&lt;bool&gt; activated, string name, string words, valuetype System.Nullable`1&lt;bool&gt; mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.CognitiveServices.Language.LUIS.Authoring.Models.JSONModelFeature.#ctor(System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Optional activated As Nullable(Of Boolean) = null, Optional name As String = null, Optional words As String = null, Optional mode As Nullable(Of Boolean) = null)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.CognitiveServices.Language.LUIS.Authoring.Models.JSONModelFeature : Nullable&lt;bool&gt; * string * string * Nullable&lt;bool&gt; -&gt; Microsoft.Azure.CognitiveServices.Language.LUIS.Authoring.Models.JSONModelFeature" Usage="new Microsoft.Azure.CognitiveServices.Language.LUIS.Authoring.Models.JSONModelFeature (activated, name, words, mode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Language.LUIS.Authoring</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="activated" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="words" Type="System.String" />
        <Parameter Name="mode" Type="System.Nullable&lt;System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="activated">Indicates if the feature is
            enabled.</param>
        <param name="name">The Phraselist name.</param>
        <param name="words">List of comma-separated phrases that represent
            the Phraselist.</param>
        <param name="mode">An exchangeable phrase list feature are serves
            as single feature to the LUIS underlying training algorithm. It is
            used as a lexicon lookup feature where its value is 1 if the
            lexicon contains a given word or 0 if it doesn’t. Think of an
            exchangeable as a synonyms list. A non-exchangeable phrase list
            feature has all the phrases in the list serve as separate features
            to the underlying training algorithm. So, if you your phrase list
            feature contains 5 phrases, they will be mapped to 5 separate
            features. You can think of the non-exchangeable phrase list feature
            as an additional bag of words that you are willing to add to LUIS
            existing vocabulary features. Think of a non-exchangeable as set of
            different words. Default value is true.</param>
        <summary>
            Initializes a new instance of the JSONModelFeature class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Activated">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; Activated { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; Activated" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.CognitiveServices.Language.LUIS.Authoring.Models.JSONModelFeature.Activated" />
      <MemberSignature Language="VB.NET" Value="Public Property Activated As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.Activated : Nullable&lt;bool&gt; with get, set" Usage="Microsoft.Azure.CognitiveServices.Language.LUIS.Authoring.Models.JSONModelFeature.Activated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Language.LUIS.Authoring</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="activated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets indicates if the feature is enabled.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Mode">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; Mode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; Mode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.CognitiveServices.Language.LUIS.Authoring.Models.JSONModelFeature.Mode" />
      <MemberSignature Language="VB.NET" Value="Public Property Mode As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.Mode : Nullable&lt;bool&gt; with get, set" Usage="Microsoft.Azure.CognitiveServices.Language.LUIS.Authoring.Models.JSONModelFeature.Mode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Language.LUIS.Authoring</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="mode")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets an exchangeable phrase list feature are serves as
            single feature to the LUIS underlying training algorithm. It is
            used as a lexicon lookup feature where its value is 1 if the
            lexicon contains a given word or 0 if it doesn’t. Think of an
            exchangeable as a synonyms list. A non-exchangeable phrase list
            feature has all the phrases in the list serve as separate features
            to the underlying training algorithm. So, if you your phrase list
            feature contains 5 phrases, they will be mapped to 5 separate
            features. You can think of the non-exchangeable phrase list feature
            as an additional bag of words that you are willing to add to LUIS
            existing vocabulary features. Think of a non-exchangeable as set of
            different words. Default value is true.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.CognitiveServices.Language.LUIS.Authoring.Models.JSONModelFeature.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="Microsoft.Azure.CognitiveServices.Language.LUIS.Authoring.Models.JSONModelFeature.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Language.LUIS.Authoring</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="name")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the Phraselist name.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Words">
      <MemberSignature Language="C#" Value="public string Words { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Words" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.CognitiveServices.Language.LUIS.Authoring.Models.JSONModelFeature.Words" />
      <MemberSignature Language="VB.NET" Value="Public Property Words As String" />
      <MemberSignature Language="F#" Value="member this.Words : string with get, set" Usage="Microsoft.Azure.CognitiveServices.Language.LUIS.Authoring.Models.JSONModelFeature.Words" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.CognitiveServices.Language.LUIS.Authoring</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="words")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets list of comma-separated phrases that represent the
            Phraselist.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
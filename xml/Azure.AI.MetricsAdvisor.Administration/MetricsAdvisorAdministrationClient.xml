<Type Name="MetricsAdvisorAdministrationClient" FullName="Azure.AI.MetricsAdvisor.Administration.MetricsAdvisorAdministrationClient">
  <TypeSignature Language="C#" Value="public class MetricsAdvisorAdministrationClient" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MetricsAdvisorAdministrationClient extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.AI.MetricsAdvisor.Administration.MetricsAdvisorAdministrationClient" />
  <TypeSignature Language="VB.NET" Value="Public Class MetricsAdvisorAdministrationClient" />
  <TypeSignature Language="F#" Value="type MetricsAdvisorAdministrationClient = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.AI.MetricsAdvisor</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            The client to use to connect to the Metrics Advisor Cognitive Service to handle administrative
            operations, configuring the behavior of the service. It provides the ability to create and manage
            data feeds, anomaly detection configurations, anomaly alerting configurations and hooks.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MetricsAdvisorAdministrationClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.MetricsAdvisor.Administration.MetricsAdvisorAdministrationClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.MetricsAdvisor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.AI.MetricsAdvisor.Administration.MetricsAdvisorAdministrationClient" /> class. This constructor
            is intended to be used for mocking only.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MetricsAdvisorAdministrationClient (Uri endpoint, Azure.AI.MetricsAdvisor.MetricsAdvisorKeyCredential credential);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, class Azure.AI.MetricsAdvisor.MetricsAdvisorKeyCredential credential) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.MetricsAdvisor.Administration.MetricsAdvisorAdministrationClient.#ctor(System.Uri,Azure.AI.MetricsAdvisor.MetricsAdvisorKeyCredential)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, credential As MetricsAdvisorKeyCredential)" />
      <MemberSignature Language="F#" Value="new Azure.AI.MetricsAdvisor.Administration.MetricsAdvisorAdministrationClient : Uri * Azure.AI.MetricsAdvisor.MetricsAdvisorKeyCredential -&gt; Azure.AI.MetricsAdvisor.Administration.MetricsAdvisorAdministrationClient" Usage="new Azure.AI.MetricsAdvisor.Administration.MetricsAdvisorAdministrationClient (endpoint, credential)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.MetricsAdvisor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.AI.MetricsAdvisor.MetricsAdvisorKeyCredential" />
      </Parameters>
      <Docs>
        <param name="endpoint">The endpoint to use for connecting to the Metrics Advisor Cognitive Service.</param>
        <param name="credential">A credential used to authenticate to the service.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.AI.MetricsAdvisor.Administration.MetricsAdvisorAdministrationClient" /> class.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="endpoint" /> or <paramref name="credential" /> is null.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MetricsAdvisorAdministrationClient (Uri endpoint, Azure.AI.MetricsAdvisor.MetricsAdvisorKeyCredential credential, Azure.AI.MetricsAdvisor.MetricsAdvisorClientsOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, class Azure.AI.MetricsAdvisor.MetricsAdvisorKeyCredential credential, class Azure.AI.MetricsAdvisor.MetricsAdvisorClientsOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.MetricsAdvisor.Administration.MetricsAdvisorAdministrationClient.#ctor(System.Uri,Azure.AI.MetricsAdvisor.MetricsAdvisorKeyCredential,Azure.AI.MetricsAdvisor.MetricsAdvisorClientsOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, credential As MetricsAdvisorKeyCredential, options As MetricsAdvisorClientsOptions)" />
      <MemberSignature Language="F#" Value="new Azure.AI.MetricsAdvisor.Administration.MetricsAdvisorAdministrationClient : Uri * Azure.AI.MetricsAdvisor.MetricsAdvisorKeyCredential * Azure.AI.MetricsAdvisor.MetricsAdvisorClientsOptions -&gt; Azure.AI.MetricsAdvisor.Administration.MetricsAdvisorAdministrationClient" Usage="new Azure.AI.MetricsAdvisor.Administration.MetricsAdvisorAdministrationClient (endpoint, credential, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.MetricsAdvisor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.AI.MetricsAdvisor.MetricsAdvisorKeyCredential" />
        <Parameter Name="options" Type="Azure.AI.MetricsAdvisor.MetricsAdvisorClientsOptions" />
      </Parameters>
      <Docs>
        <param name="endpoint">The endpoint to use for connecting to the Metrics Advisor Cognitive Service.</param>
        <param name="credential">A credential used to authenticate to the service.</param>
        <param name="options">A set of options to apply when configuring the client.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.AI.MetricsAdvisor.Administration.MetricsAdvisorAdministrationClient" /> class.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="endpoint" /> or <paramref name="credential" /> is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateAlertConfiguration">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;string&gt; CreateAlertConfiguration (Azure.AI.MetricsAdvisor.Models.AnomalyAlertConfiguration alertConfiguration, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;string&gt; CreateAlertConfiguration(class Azure.AI.MetricsAdvisor.Models.AnomalyAlertConfiguration alertConfiguration, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.MetricsAdvisor.Administration.MetricsAdvisorAdministrationClient.CreateAlertConfiguration(Azure.AI.MetricsAdvisor.Models.AnomalyAlertConfiguration,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateAlertConfiguration (alertConfiguration As AnomalyAlertConfiguration, Optional cancellationToken As CancellationToken = Nothing) As Response(Of String)" />
      <MemberSignature Language="F#" Value="abstract member CreateAlertConfiguration : Azure.AI.MetricsAdvisor.Models.AnomalyAlertConfiguration * System.Threading.CancellationToken -&gt; Azure.Response&lt;string&gt;&#xA;override this.CreateAlertConfiguration : Azure.AI.MetricsAdvisor.Models.AnomalyAlertConfiguration * System.Threading.CancellationToken -&gt; Azure.Response&lt;string&gt;" Usage="metricsAdvisorAdministrationClient.CreateAlertConfiguration (alertConfiguration, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.MetricsAdvisor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="alertConfiguration" Type="Azure.AI.MetricsAdvisor.Models.AnomalyAlertConfiguration" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="alertConfiguration">Specifies how the created <see cref="T:Azure.AI.MetricsAdvisor.Models.AnomalyAlertConfiguration" /> should be configured.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Creates an <see cref="T:Azure.AI.MetricsAdvisor.Models.AnomalyAlertConfiguration" /> and assigns it a unique ID.
            </summary>
        <returns>
            A <see cref="T:Azure.Response`1" /> containing the result of the operation. The result is a <c>string</c>
            containing the ID of the newly created configuration.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="alertConfiguration" /> or <paramref name="alertConfiguration" />.MetricAlertConfigurations is null.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="alertConfiguration" />.MetricAlertConfigurations is empty.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateAlertConfigurationAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;string&gt;&gt; CreateAlertConfigurationAsync (Azure.AI.MetricsAdvisor.Models.AnomalyAlertConfiguration alertConfiguration, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;string&gt;&gt; CreateAlertConfigurationAsync(class Azure.AI.MetricsAdvisor.Models.AnomalyAlertConfiguration alertConfiguration, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.MetricsAdvisor.Administration.MetricsAdvisorAdministrationClient.CreateAlertConfigurationAsync(Azure.AI.MetricsAdvisor.Models.AnomalyAlertConfiguration,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateAlertConfigurationAsync (alertConfiguration As AnomalyAlertConfiguration, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of String))" />
      <MemberSignature Language="F#" Value="abstract member CreateAlertConfigurationAsync : Azure.AI.MetricsAdvisor.Models.AnomalyAlertConfiguration * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;string&gt;&gt;&#xA;override this.CreateAlertConfigurationAsync : Azure.AI.MetricsAdvisor.Models.AnomalyAlertConfiguration * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;string&gt;&gt;" Usage="metricsAdvisorAdministrationClient.CreateAlertConfigurationAsync (alertConfiguration, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.MetricsAdvisor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="alertConfiguration" Type="Azure.AI.MetricsAdvisor.Models.AnomalyAlertConfiguration" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="alertConfiguration">Specifies how the created <see cref="T:Azure.AI.MetricsAdvisor.Models.AnomalyAlertConfiguration" /> should be configured.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Creates an <see cref="T:Azure.AI.MetricsAdvisor.Models.AnomalyAlertConfiguration" /> and assigns it a unique ID.
            </summary>
        <returns>
            A <see cref="T:Azure.Response`1" /> containing the result of the operation. The result is a <c>string</c>
            containing the ID of the newly created configuration.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="alertConfiguration" /> or <paramref name="alertConfiguration" />.MetricAlertConfigurations is null.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="alertConfiguration" />.MetricAlertConfigurations is empty.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateDataFeed">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;string&gt; CreateDataFeed (Azure.AI.MetricsAdvisor.Models.DataFeed dataFeed, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;string&gt; CreateDataFeed(class Azure.AI.MetricsAdvisor.Models.DataFeed dataFeed, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.MetricsAdvisor.Administration.MetricsAdvisorAdministrationClient.CreateDataFeed(Azure.AI.MetricsAdvisor.Models.DataFeed,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateDataFeed (dataFeed As DataFeed, Optional cancellationToken As CancellationToken = Nothing) As Response(Of String)" />
      <MemberSignature Language="F#" Value="abstract member CreateDataFeed : Azure.AI.MetricsAdvisor.Models.DataFeed * System.Threading.CancellationToken -&gt; Azure.Response&lt;string&gt;&#xA;override this.CreateDataFeed : Azure.AI.MetricsAdvisor.Models.DataFeed * System.Threading.CancellationToken -&gt; Azure.Response&lt;string&gt;" Usage="metricsAdvisorAdministrationClient.CreateDataFeed (dataFeed, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.MetricsAdvisor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataFeed" Type="Azure.AI.MetricsAdvisor.Models.DataFeed" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="dataFeed">Specifies how the created <see cref="T:Azure.AI.MetricsAdvisor.Models.DataFeed" /> should be configured.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Creates a <see cref="T:Azure.AI.MetricsAdvisor.Models.DataFeed" /> and assigns it a unique ID.
            </summary>
        <returns>
            A <see cref="T:Azure.Response`1" /> containing the result of the operation. The result is a <c>string</c> instance
            containing the ID of the newly created feed.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dataFeed" /> is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateDataFeedAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;string&gt;&gt; CreateDataFeedAsync (Azure.AI.MetricsAdvisor.Models.DataFeed dataFeed, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;string&gt;&gt; CreateDataFeedAsync(class Azure.AI.MetricsAdvisor.Models.DataFeed dataFeed, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.MetricsAdvisor.Administration.MetricsAdvisorAdministrationClient.CreateDataFeedAsync(Azure.AI.MetricsAdvisor.Models.DataFeed,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateDataFeedAsync (dataFeed As DataFeed, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of String))" />
      <MemberSignature Language="F#" Value="abstract member CreateDataFeedAsync : Azure.AI.MetricsAdvisor.Models.DataFeed * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;string&gt;&gt;&#xA;override this.CreateDataFeedAsync : Azure.AI.MetricsAdvisor.Models.DataFeed * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;string&gt;&gt;" Usage="metricsAdvisorAdministrationClient.CreateDataFeedAsync (dataFeed, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.MetricsAdvisor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataFeed" Type="Azure.AI.MetricsAdvisor.Models.DataFeed" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="dataFeed">Specifies how the created <see cref="T:Azure.AI.MetricsAdvisor.Models.DataFeed" /> should be configured.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Creates a <see cref="T:Azure.AI.MetricsAdvisor.Models.DataFeed" /> and assigns it a unique ID.
            </summary>
        <returns>
            A <see cref="T:Azure.Response`1" /> containing the result of the operation. The result is a <c>string</c>
            containing the ID of the newly created feed.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dataFeed" /> is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateDetectionConfiguration">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;string&gt; CreateDetectionConfiguration (Azure.AI.MetricsAdvisor.Models.AnomalyDetectionConfiguration detectionConfiguration, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;string&gt; CreateDetectionConfiguration(class Azure.AI.MetricsAdvisor.Models.AnomalyDetectionConfiguration detectionConfiguration, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.MetricsAdvisor.Administration.MetricsAdvisorAdministrationClient.CreateDetectionConfiguration(Azure.AI.MetricsAdvisor.Models.AnomalyDetectionConfiguration,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateDetectionConfiguration (detectionConfiguration As AnomalyDetectionConfiguration, Optional cancellationToken As CancellationToken = Nothing) As Response(Of String)" />
      <MemberSignature Language="F#" Value="abstract member CreateDetectionConfiguration : Azure.AI.MetricsAdvisor.Models.AnomalyDetectionConfiguration * System.Threading.CancellationToken -&gt; Azure.Response&lt;string&gt;&#xA;override this.CreateDetectionConfiguration : Azure.AI.MetricsAdvisor.Models.AnomalyDetectionConfiguration * System.Threading.CancellationToken -&gt; Azure.Response&lt;string&gt;" Usage="metricsAdvisorAdministrationClient.CreateDetectionConfiguration (detectionConfiguration, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.MetricsAdvisor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="detectionConfiguration" Type="Azure.AI.MetricsAdvisor.Models.AnomalyDetectionConfiguration" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="detectionConfiguration">Specifies how the created <see cref="T:Azure.AI.MetricsAdvisor.Models.AnomalyDetectionConfiguration" /> should be configured.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Creates an <see cref="T:Azure.AI.MetricsAdvisor.Models.AnomalyDetectionConfiguration" /> and assigns it a unique ID.
            </summary>
        <returns>
            A <see cref="T:Azure.Response`1" /> containing the result of the operation. The result is a <c>string</c>
            containing the ID of the newly created configuration.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="detectionConfiguration" /> is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateDetectionConfigurationAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;string&gt;&gt; CreateDetectionConfigurationAsync (Azure.AI.MetricsAdvisor.Models.AnomalyDetectionConfiguration detectionConfiguration, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;string&gt;&gt; CreateDetectionConfigurationAsync(class Azure.AI.MetricsAdvisor.Models.AnomalyDetectionConfiguration detectionConfiguration, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.MetricsAdvisor.Administration.MetricsAdvisorAdministrationClient.CreateDetectionConfigurationAsync(Azure.AI.MetricsAdvisor.Models.AnomalyDetectionConfiguration,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateDetectionConfigurationAsync (detectionConfiguration As AnomalyDetectionConfiguration, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of String))" />
      <MemberSignature Language="F#" Value="abstract member CreateDetectionConfigurationAsync : Azure.AI.MetricsAdvisor.Models.AnomalyDetectionConfiguration * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;string&gt;&gt;&#xA;override this.CreateDetectionConfigurationAsync : Azure.AI.MetricsAdvisor.Models.AnomalyDetectionConfiguration * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;string&gt;&gt;" Usage="metricsAdvisorAdministrationClient.CreateDetectionConfigurationAsync (detectionConfiguration, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.MetricsAdvisor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="detectionConfiguration" Type="Azure.AI.MetricsAdvisor.Models.AnomalyDetectionConfiguration" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="detectionConfiguration">Specifies how the created <see cref="T:Azure.AI.MetricsAdvisor.Models.AnomalyDetectionConfiguration" /> should be configured.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Creates an <see cref="T:Azure.AI.MetricsAdvisor.Models.AnomalyDetectionConfiguration" /> and assigns it a unique ID.
            </summary>
        <returns>
            A <see cref="T:Azure.Response`1" /> containing the result of the operation. The result is a <c>string</c>
            containing the ID of the newly created configuration.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="detectionConfiguration" /> is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateHook">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;string&gt; CreateHook (Azure.AI.MetricsAdvisor.Models.NotificationHook hook, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;string&gt; CreateHook(class Azure.AI.MetricsAdvisor.Models.NotificationHook hook, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.MetricsAdvisor.Administration.MetricsAdvisorAdministrationClient.CreateHook(Azure.AI.MetricsAdvisor.Models.NotificationHook,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateHook (hook As NotificationHook, Optional cancellationToken As CancellationToken = Nothing) As Response(Of String)" />
      <MemberSignature Language="F#" Value="abstract member CreateHook : Azure.AI.MetricsAdvisor.Models.NotificationHook * System.Threading.CancellationToken -&gt; Azure.Response&lt;string&gt;&#xA;override this.CreateHook : Azure.AI.MetricsAdvisor.Models.NotificationHook * System.Threading.CancellationToken -&gt; Azure.Response&lt;string&gt;" Usage="metricsAdvisorAdministrationClient.CreateHook (hook, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.MetricsAdvisor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hook" Type="Azure.AI.MetricsAdvisor.Models.NotificationHook" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="hook">Specifies how the created <see cref="T:Azure.AI.MetricsAdvisor.Models.NotificationHook" /> should be configured.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Creates a <see cref="T:Azure.AI.MetricsAdvisor.Models.NotificationHook" /> and assigns it a unique ID.
            </summary>
        <returns>
            A <see cref="T:Azure.Response`1" /> containing the result of the operation. The result is a <c>string</c>
            containing the ID of the newly created hook.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="hook" /> is null; or <paramref name="hook" /> is an <see cref="T:Azure.AI.MetricsAdvisor.Models.EmailNotificationHook" /> and <paramref name="hook" />.EmailsToAlert is null.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="hook" /> is an <see cref="T:Azure.AI.MetricsAdvisor.Models.EmailNotificationHook" /> and <paramref name="hook" />.EmailsToAlert is empty.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateHookAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;string&gt;&gt; CreateHookAsync (Azure.AI.MetricsAdvisor.Models.NotificationHook hook, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;string&gt;&gt; CreateHookAsync(class Azure.AI.MetricsAdvisor.Models.NotificationHook hook, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.MetricsAdvisor.Administration.MetricsAdvisorAdministrationClient.CreateHookAsync(Azure.AI.MetricsAdvisor.Models.NotificationHook,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateHookAsync (hook As NotificationHook, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of String))" />
      <MemberSignature Language="F#" Value="abstract member CreateHookAsync : Azure.AI.MetricsAdvisor.Models.NotificationHook * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;string&gt;&gt;&#xA;override this.CreateHookAsync : Azure.AI.MetricsAdvisor.Models.NotificationHook * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;string&gt;&gt;" Usage="metricsAdvisorAdministrationClient.CreateHookAsync (hook, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.MetricsAdvisor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hook" Type="Azure.AI.MetricsAdvisor.Models.NotificationHook" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="hook">Specifies how the created <see cref="T:Azure.AI.MetricsAdvisor.Models.NotificationHook" /> should be configured.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Creates a <see cref="T:Azure.AI.MetricsAdvisor.Models.NotificationHook" /> and assigns it a unique ID.
            </summary>
        <returns>
            A <see cref="T:Azure.Response`1" /> containing the result of the operation. The result is a <c>string</c>
            containing the ID of the newly created hook.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="hook" /> is null; or <paramref name="hook" /> is an <see cref="T:Azure.AI.MetricsAdvisor.Models.EmailNotificationHook" /> and <paramref name="hook" />.EmailsToAlert is null.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="hook" /> is an <see cref="T:Azure.AI.MetricsAdvisor.Models.EmailNotificationHook" /> and <paramref name="hook" />.EmailsToAlert is empty.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteAlertConfiguration">
      <MemberSignature Language="C#" Value="public virtual Azure.Response DeleteAlertConfiguration (string alertConfigurationId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response DeleteAlertConfiguration(string alertConfigurationId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.MetricsAdvisor.Administration.MetricsAdvisorAdministrationClient.DeleteAlertConfiguration(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteAlertConfiguration (alertConfigurationId As String, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member DeleteAlertConfiguration : string * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.DeleteAlertConfiguration : string * System.Threading.CancellationToken -&gt; Azure.Response" Usage="metricsAdvisorAdministrationClient.DeleteAlertConfiguration (alertConfigurationId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.MetricsAdvisor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="alertConfigurationId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="alertConfigurationId">The unique identifier of the <see cref="T:Azure.AI.MetricsAdvisor.Models.AnomalyAlertConfiguration" /> to be deleted.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Deletes an existing <see cref="T:Azure.AI.MetricsAdvisor.Models.AnomalyAlertConfiguration" />.
            </summary>
        <returns>
            A <see cref="T:Azure.Response" /> containing the result of the operation.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="alertConfigurationId" /> is null.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="alertConfigurationId" /> is empty or not a valid GUID.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteAlertConfigurationAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DeleteAlertConfigurationAsync (string alertConfigurationId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeleteAlertConfigurationAsync(string alertConfigurationId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.MetricsAdvisor.Administration.MetricsAdvisorAdministrationClient.DeleteAlertConfigurationAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteAlertConfigurationAsync (alertConfigurationId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DeleteAlertConfigurationAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DeleteAlertConfigurationAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="metricsAdvisorAdministrationClient.DeleteAlertConfigurationAsync (alertConfigurationId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.MetricsAdvisor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="alertConfigurationId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="alertConfigurationId">The unique identifier of the <see cref="T:Azure.AI.MetricsAdvisor.Models.AnomalyAlertConfiguration" /> to be deleted.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Deletes an existing <see cref="T:Azure.AI.MetricsAdvisor.Models.AnomalyAlertConfiguration" />.
            </summary>
        <returns>
            A <see cref="T:Azure.Response" /> containing the result of the operation.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="alertConfigurationId" /> is null.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="alertConfigurationId" /> is empty or not a valid GUID.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteDataFeed">
      <MemberSignature Language="C#" Value="public virtual Azure.Response DeleteDataFeed (string dataFeedId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response DeleteDataFeed(string dataFeedId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.MetricsAdvisor.Administration.MetricsAdvisorAdministrationClient.DeleteDataFeed(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteDataFeed (dataFeedId As String, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member DeleteDataFeed : string * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.DeleteDataFeed : string * System.Threading.CancellationToken -&gt; Azure.Response" Usage="metricsAdvisorAdministrationClient.DeleteDataFeed (dataFeedId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.MetricsAdvisor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataFeedId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="dataFeedId">The unique identifier of the <see cref="T:Azure.AI.MetricsAdvisor.Models.DataFeed" /> to be deleted.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Deletes an existing <see cref="T:Azure.AI.MetricsAdvisor.Models.DataFeed" />.
            </summary>
        <returns>
            A <see cref="T:Azure.Response" /> containing the result of the operation.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dataFeedId" /> is null.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="dataFeedId" /> is empty or not a valid GUID.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteDataFeedAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DeleteDataFeedAsync (string dataFeedId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeleteDataFeedAsync(string dataFeedId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.MetricsAdvisor.Administration.MetricsAdvisorAdministrationClient.DeleteDataFeedAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteDataFeedAsync (dataFeedId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DeleteDataFeedAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DeleteDataFeedAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="metricsAdvisorAdministrationClient.DeleteDataFeedAsync (dataFeedId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.MetricsAdvisor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataFeedId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="dataFeedId">The unique identifier of the <see cref="T:Azure.AI.MetricsAdvisor.Models.DataFeed" /> to be deleted.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Deletes an existing <see cref="T:Azure.AI.MetricsAdvisor.Models.DataFeed" />.
            </summary>
        <returns>
            A <see cref="T:Azure.Response" /> containing the result of the operation.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dataFeedId" /> is null.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="dataFeedId" /> is empty or not a valid GUID.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteDetectionConfiguration">
      <MemberSignature Language="C#" Value="public virtual Azure.Response DeleteDetectionConfiguration (string detectionConfigurationId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response DeleteDetectionConfiguration(string detectionConfigurationId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.MetricsAdvisor.Administration.MetricsAdvisorAdministrationClient.DeleteDetectionConfiguration(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteDetectionConfiguration (detectionConfigurationId As String, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member DeleteDetectionConfiguration : string * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.DeleteDetectionConfiguration : string * System.Threading.CancellationToken -&gt; Azure.Response" Usage="metricsAdvisorAdministrationClient.DeleteDetectionConfiguration (detectionConfigurationId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.MetricsAdvisor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="detectionConfigurationId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="detectionConfigurationId">The unique identifier of the <see cref="T:Azure.AI.MetricsAdvisor.Models.AnomalyDetectionConfiguration" /> to be deleted.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Deletes an existing <see cref="T:Azure.AI.MetricsAdvisor.Models.AnomalyDetectionConfiguration" />.
            </summary>
        <returns>
            A <see cref="T:Azure.Response" /> containing the result of the operation.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="detectionConfigurationId" /> is null.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="detectionConfigurationId" /> is empty or not a valid GUID.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteDetectionConfigurationAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DeleteDetectionConfigurationAsync (string detectionConfigurationId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeleteDetectionConfigurationAsync(string detectionConfigurationId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.MetricsAdvisor.Administration.MetricsAdvisorAdministrationClient.DeleteDetectionConfigurationAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteDetectionConfigurationAsync (detectionConfigurationId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DeleteDetectionConfigurationAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DeleteDetectionConfigurationAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="metricsAdvisorAdministrationClient.DeleteDetectionConfigurationAsync (detectionConfigurationId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.MetricsAdvisor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="detectionConfigurationId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="detectionConfigurationId">The unique identifier of the <see cref="T:Azure.AI.MetricsAdvisor.Models.AnomalyDetectionConfiguration" /> to be deleted.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Deletes an existing <see cref="T:Azure.AI.MetricsAdvisor.Models.AnomalyDetectionConfiguration" />.
            </summary>
        <returns>
            A <see cref="T:Azure.Response" /> containing the result of the operation.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="detectionConfigurationId" /> is null.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="detectionConfigurationId" /> is empty or not a valid GUID.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteHook">
      <MemberSignature Language="C#" Value="public virtual Azure.Response DeleteHook (string hookId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response DeleteHook(string hookId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.MetricsAdvisor.Administration.MetricsAdvisorAdministrationClient.DeleteHook(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteHook (hookId As String, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member DeleteHook : string * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.DeleteHook : string * System.Threading.CancellationToken -&gt; Azure.Response" Usage="metricsAdvisorAdministrationClient.DeleteHook (hookId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.MetricsAdvisor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hookId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="hookId">The unique identifier of the <see cref="T:Azure.AI.MetricsAdvisor.Models.NotificationHook" /> to be deleted.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Deletes an existing <see cref="T:Azure.AI.MetricsAdvisor.Models.NotificationHook" />.
            </summary>
        <returns>
            A <see cref="T:Azure.Response" /> containing the result of the operation.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="hookId" /> is null.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="hookId" /> is empty or not a valid GUID.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteHookAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DeleteHookAsync (string hookId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeleteHookAsync(string hookId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.MetricsAdvisor.Administration.MetricsAdvisorAdministrationClient.DeleteHookAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteHookAsync (hookId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DeleteHookAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DeleteHookAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="metricsAdvisorAdministrationClient.DeleteHookAsync (hookId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.MetricsAdvisor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hookId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="hookId">The unique identifier of the <see cref="T:Azure.AI.MetricsAdvisor.Models.NotificationHook" /> to be deleted.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Deletes an existing <see cref="T:Azure.AI.MetricsAdvisor.Models.NotificationHook" />.
            </summary>
        <returns>
            A <see cref="T:Azure.Response" /> containing the result of the operation.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="hookId" /> is null.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="hookId" /> is empty or not a valid GUID.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetAlertConfiguration">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.AI.MetricsAdvisor.Models.AnomalyAlertConfiguration&gt; GetAlertConfiguration (string alertConfigurationId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.AI.MetricsAdvisor.Models.AnomalyAlertConfiguration&gt; GetAlertConfiguration(string alertConfigurationId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.MetricsAdvisor.Administration.MetricsAdvisorAdministrationClient.GetAlertConfiguration(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAlertConfiguration (alertConfigurationId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of AnomalyAlertConfiguration)" />
      <MemberSignature Language="F#" Value="abstract member GetAlertConfiguration : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.MetricsAdvisor.Models.AnomalyAlertConfiguration&gt;&#xA;override this.GetAlertConfiguration : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.MetricsAdvisor.Models.AnomalyAlertConfiguration&gt;" Usage="metricsAdvisorAdministrationClient.GetAlertConfiguration (alertConfigurationId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.MetricsAdvisor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.AI.MetricsAdvisor.Models.AnomalyAlertConfiguration&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="alertConfigurationId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="alertConfigurationId">The unique identifier of the <see cref="T:Azure.AI.MetricsAdvisor.Models.AnomalyAlertConfiguration" />.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Gets an existing <see cref="T:Azure.AI.MetricsAdvisor.Models.AnomalyAlertConfiguration" />.
            </summary>
        <returns>
            A <see cref="T:Azure.Response`1" /> containing the result of the operation. The result is an <see cref="T:Azure.AI.MetricsAdvisor.Models.AnomalyAlertConfiguration" />
            instance containing the requested information.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="alertConfigurationId" /> is null.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="alertConfigurationId" /> is empty or not a valid GUID.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetAlertConfigurationAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.MetricsAdvisor.Models.AnomalyAlertConfiguration&gt;&gt; GetAlertConfigurationAsync (string alertConfigurationId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.AI.MetricsAdvisor.Models.AnomalyAlertConfiguration&gt;&gt; GetAlertConfigurationAsync(string alertConfigurationId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.MetricsAdvisor.Administration.MetricsAdvisorAdministrationClient.GetAlertConfigurationAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAlertConfigurationAsync (alertConfigurationId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AnomalyAlertConfiguration))" />
      <MemberSignature Language="F#" Value="abstract member GetAlertConfigurationAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.MetricsAdvisor.Models.AnomalyAlertConfiguration&gt;&gt;&#xA;override this.GetAlertConfigurationAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.MetricsAdvisor.Models.AnomalyAlertConfiguration&gt;&gt;" Usage="metricsAdvisorAdministrationClient.GetAlertConfigurationAsync (alertConfigurationId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.MetricsAdvisor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.MetricsAdvisor.Models.AnomalyAlertConfiguration&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="alertConfigurationId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="alertConfigurationId">The unique identifier of the <see cref="T:Azure.AI.MetricsAdvisor.Models.AnomalyAlertConfiguration" />.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Gets an existing <see cref="T:Azure.AI.MetricsAdvisor.Models.AnomalyAlertConfiguration" />.
            </summary>
        <returns>
            A <see cref="T:Azure.Response`1" /> containing the result of the operation. The result is an <see cref="T:Azure.AI.MetricsAdvisor.Models.AnomalyAlertConfiguration" />
            instance containing the requested information.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="alertConfigurationId" /> is null.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="alertConfigurationId" /> is empty or not a valid GUID.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetAlertConfigurations">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.AI.MetricsAdvisor.Models.AnomalyAlertConfiguration&gt; GetAlertConfigurations (string detectionConfigurationId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.AI.MetricsAdvisor.Models.AnomalyAlertConfiguration&gt; GetAlertConfigurations(string detectionConfigurationId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.MetricsAdvisor.Administration.MetricsAdvisorAdministrationClient.GetAlertConfigurations(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAlertConfigurations (detectionConfigurationId As String, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of AnomalyAlertConfiguration)" />
      <MemberSignature Language="F#" Value="abstract member GetAlertConfigurations : string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.AI.MetricsAdvisor.Models.AnomalyAlertConfiguration&gt;&#xA;override this.GetAlertConfigurations : string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.AI.MetricsAdvisor.Models.AnomalyAlertConfiguration&gt;" Usage="metricsAdvisorAdministrationClient.GetAlertConfigurations (detectionConfigurationId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.MetricsAdvisor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.AI.MetricsAdvisor.Models.AnomalyAlertConfiguration&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="detectionConfigurationId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="detectionConfigurationId">Filters the result. The unique identifier of the <see cref="T:Azure.AI.MetricsAdvisor.Models.AnomalyDetectionConfiguration" /> to which the returned <see cref="T:Azure.AI.MetricsAdvisor.Models.AnomalyAlertConfiguration" />s apply.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Gets a collection of items describing the existing <see cref="T:Azure.AI.MetricsAdvisor.Models.AnomalyAlertConfiguration" />s in this Metrics
            Advisor resource.
            </summary>
        <returns>An <see cref="T:Azure.AsyncPageable`1" /> containing the collection of <see cref="T:Azure.AI.MetricsAdvisor.Models.AnomalyAlertConfiguration" />s.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="detectionConfigurationId" /> is null.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="detectionConfigurationId" /> is empty or not a valid GUID.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetAlertConfigurationsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.AI.MetricsAdvisor.Models.AnomalyAlertConfiguration&gt; GetAlertConfigurationsAsync (string detectionConfigurationId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.AI.MetricsAdvisor.Models.AnomalyAlertConfiguration&gt; GetAlertConfigurationsAsync(string detectionConfigurationId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.MetricsAdvisor.Administration.MetricsAdvisorAdministrationClient.GetAlertConfigurationsAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAlertConfigurationsAsync (detectionConfigurationId As String, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of AnomalyAlertConfiguration)" />
      <MemberSignature Language="F#" Value="abstract member GetAlertConfigurationsAsync : string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.AI.MetricsAdvisor.Models.AnomalyAlertConfiguration&gt;&#xA;override this.GetAlertConfigurationsAsync : string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.AI.MetricsAdvisor.Models.AnomalyAlertConfiguration&gt;" Usage="metricsAdvisorAdministrationClient.GetAlertConfigurationsAsync (detectionConfigurationId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.MetricsAdvisor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.AI.MetricsAdvisor.Models.AnomalyAlertConfiguration&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="detectionConfigurationId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="detectionConfigurationId">Filters the result. The unique identifier of the <see cref="T:Azure.AI.MetricsAdvisor.Models.AnomalyDetectionConfiguration" /> to which the returned <see cref="T:Azure.AI.MetricsAdvisor.Models.AnomalyAlertConfiguration" />s apply.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Gets a collection of items describing the existing <see cref="T:Azure.AI.MetricsAdvisor.Models.AnomalyAlertConfiguration" />s in this Metrics
            Advisor resource.
            </summary>
        <returns>An <see cref="T:Azure.AsyncPageable`1" /> containing the collection of <see cref="T:Azure.AI.MetricsAdvisor.Models.AnomalyAlertConfiguration" />s.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="detectionConfigurationId" /> is null.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="detectionConfigurationId" /> is empty or not a valid GUID.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataFeed">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.AI.MetricsAdvisor.Models.DataFeed&gt; GetDataFeed (string dataFeedId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.AI.MetricsAdvisor.Models.DataFeed&gt; GetDataFeed(string dataFeedId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.MetricsAdvisor.Administration.MetricsAdvisorAdministrationClient.GetDataFeed(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataFeed (dataFeedId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DataFeed)" />
      <MemberSignature Language="F#" Value="abstract member GetDataFeed : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.MetricsAdvisor.Models.DataFeed&gt;&#xA;override this.GetDataFeed : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.MetricsAdvisor.Models.DataFeed&gt;" Usage="metricsAdvisorAdministrationClient.GetDataFeed (dataFeedId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.MetricsAdvisor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.AI.MetricsAdvisor.Models.DataFeed&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataFeedId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="dataFeedId">The unique identifier of the <see cref="T:Azure.AI.MetricsAdvisor.Models.DataFeed" />.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Gets an existing <see cref="T:Azure.AI.MetricsAdvisor.Models.DataFeed" />.
            </summary>
        <returns>
            A <see cref="T:Azure.Response`1" /> containing the result of the operation. The result is a <see cref="T:Azure.AI.MetricsAdvisor.Models.DataFeed" /> instance
            containing the requested information.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dataFeedId" /> is null.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="dataFeedId" /> is empty or not a valid GUID.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataFeedAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.MetricsAdvisor.Models.DataFeed&gt;&gt; GetDataFeedAsync (string dataFeedId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.AI.MetricsAdvisor.Models.DataFeed&gt;&gt; GetDataFeedAsync(string dataFeedId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.MetricsAdvisor.Administration.MetricsAdvisorAdministrationClient.GetDataFeedAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataFeedAsync (dataFeedId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DataFeed))" />
      <MemberSignature Language="F#" Value="abstract member GetDataFeedAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.MetricsAdvisor.Models.DataFeed&gt;&gt;&#xA;override this.GetDataFeedAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.MetricsAdvisor.Models.DataFeed&gt;&gt;" Usage="metricsAdvisorAdministrationClient.GetDataFeedAsync (dataFeedId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.MetricsAdvisor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.MetricsAdvisor.Models.DataFeed&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataFeedId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="dataFeedId">The unique identifier of the <see cref="T:Azure.AI.MetricsAdvisor.Models.DataFeed" />.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Gets an existing <see cref="T:Azure.AI.MetricsAdvisor.Models.DataFeed" />.
            </summary>
        <returns>
            A <see cref="T:Azure.Response`1" /> containing the result of the operation. The result is a <see cref="T:Azure.AI.MetricsAdvisor.Models.DataFeed" /> instance
            containing the requested information.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dataFeedId" /> is null.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="dataFeedId" /> is empty or not a valid GUID.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataFeedIngestionProgress">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.AI.MetricsAdvisor.Models.DataFeedIngestionProgress&gt; GetDataFeedIngestionProgress (string dataFeedId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.AI.MetricsAdvisor.Models.DataFeedIngestionProgress&gt; GetDataFeedIngestionProgress(string dataFeedId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.MetricsAdvisor.Administration.MetricsAdvisorAdministrationClient.GetDataFeedIngestionProgress(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataFeedIngestionProgress (dataFeedId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DataFeedIngestionProgress)" />
      <MemberSignature Language="F#" Value="abstract member GetDataFeedIngestionProgress : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.MetricsAdvisor.Models.DataFeedIngestionProgress&gt;&#xA;override this.GetDataFeedIngestionProgress : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.MetricsAdvisor.Models.DataFeedIngestionProgress&gt;" Usage="metricsAdvisorAdministrationClient.GetDataFeedIngestionProgress (dataFeedId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.MetricsAdvisor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.AI.MetricsAdvisor.Models.DataFeedIngestionProgress&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataFeedId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="dataFeedId">The unique identifier of the <see cref="T:Azure.AI.MetricsAdvisor.Models.DataFeed" />.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Gets the ingestion progress for data being ingested to a given data feed.
            </summary>
        <returns>
            A <see cref="T:Azure.Response`1" /> containing the result of the operation. The result is a <see cref="T:Azure.AI.MetricsAdvisor.Models.DataFeedIngestionProgress" /> instance.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataFeedIngestionProgressAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.MetricsAdvisor.Models.DataFeedIngestionProgress&gt;&gt; GetDataFeedIngestionProgressAsync (string dataFeedId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.AI.MetricsAdvisor.Models.DataFeedIngestionProgress&gt;&gt; GetDataFeedIngestionProgressAsync(string dataFeedId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.MetricsAdvisor.Administration.MetricsAdvisorAdministrationClient.GetDataFeedIngestionProgressAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataFeedIngestionProgressAsync (dataFeedId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DataFeedIngestionProgress))" />
      <MemberSignature Language="F#" Value="abstract member GetDataFeedIngestionProgressAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.MetricsAdvisor.Models.DataFeedIngestionProgress&gt;&gt;&#xA;override this.GetDataFeedIngestionProgressAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.MetricsAdvisor.Models.DataFeedIngestionProgress&gt;&gt;" Usage="metricsAdvisorAdministrationClient.GetDataFeedIngestionProgressAsync (dataFeedId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.MetricsAdvisor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.MetricsAdvisor.Models.DataFeedIngestionProgress&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataFeedId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="dataFeedId">The unique identifier of the <see cref="T:Azure.AI.MetricsAdvisor.Models.DataFeed" />.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Gets the ingestion progress for data being ingested to a given data feed.
            </summary>
        <returns>
            A <see cref="T:Azure.Response`1" /> containing the result of the operation. The result is a <see cref="T:Azure.AI.MetricsAdvisor.Models.DataFeedIngestionProgress" /> instance.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataFeedIngestionStatuses">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.AI.MetricsAdvisor.Models.DataFeedIngestionStatus&gt; GetDataFeedIngestionStatuses (string dataFeedId, Azure.AI.MetricsAdvisor.GetDataFeedIngestionStatusesOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.AI.MetricsAdvisor.Models.DataFeedIngestionStatus&gt; GetDataFeedIngestionStatuses(string dataFeedId, class Azure.AI.MetricsAdvisor.GetDataFeedIngestionStatusesOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.MetricsAdvisor.Administration.MetricsAdvisorAdministrationClient.GetDataFeedIngestionStatuses(System.String,Azure.AI.MetricsAdvisor.GetDataFeedIngestionStatusesOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataFeedIngestionStatuses (dataFeedId As String, options As GetDataFeedIngestionStatusesOptions, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of DataFeedIngestionStatus)" />
      <MemberSignature Language="F#" Value="abstract member GetDataFeedIngestionStatuses : string * Azure.AI.MetricsAdvisor.GetDataFeedIngestionStatusesOptions * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.AI.MetricsAdvisor.Models.DataFeedIngestionStatus&gt;&#xA;override this.GetDataFeedIngestionStatuses : string * Azure.AI.MetricsAdvisor.GetDataFeedIngestionStatusesOptions * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.AI.MetricsAdvisor.Models.DataFeedIngestionStatus&gt;" Usage="metricsAdvisorAdministrationClient.GetDataFeedIngestionStatuses (dataFeedId, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.MetricsAdvisor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.AI.MetricsAdvisor.Models.DataFeedIngestionStatus&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataFeedId" Type="System.String" />
        <Parameter Name="options" Type="Azure.AI.MetricsAdvisor.GetDataFeedIngestionStatusesOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="dataFeedId">The unique identifier of the <see cref="T:Azure.AI.MetricsAdvisor.Models.DataFeed" />.</param>
        <param name="options">An optional set of options used to configure the request's behavior.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Gets the ingestion status for data being ingested to a given data feed.
            </summary>
        <returns>An <see cref="T:Azure.Pageable`1" /> containing the collection of <see cref="T:Azure.AI.MetricsAdvisor.Models.DataFeedIngestionStatus" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataFeedIngestionStatusesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.AI.MetricsAdvisor.Models.DataFeedIngestionStatus&gt; GetDataFeedIngestionStatusesAsync (string dataFeedId, Azure.AI.MetricsAdvisor.GetDataFeedIngestionStatusesOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.AI.MetricsAdvisor.Models.DataFeedIngestionStatus&gt; GetDataFeedIngestionStatusesAsync(string dataFeedId, class Azure.AI.MetricsAdvisor.GetDataFeedIngestionStatusesOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.MetricsAdvisor.Administration.MetricsAdvisorAdministrationClient.GetDataFeedIngestionStatusesAsync(System.String,Azure.AI.MetricsAdvisor.GetDataFeedIngestionStatusesOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataFeedIngestionStatusesAsync (dataFeedId As String, options As GetDataFeedIngestionStatusesOptions, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of DataFeedIngestionStatus)" />
      <MemberSignature Language="F#" Value="abstract member GetDataFeedIngestionStatusesAsync : string * Azure.AI.MetricsAdvisor.GetDataFeedIngestionStatusesOptions * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.AI.MetricsAdvisor.Models.DataFeedIngestionStatus&gt;&#xA;override this.GetDataFeedIngestionStatusesAsync : string * Azure.AI.MetricsAdvisor.GetDataFeedIngestionStatusesOptions * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.AI.MetricsAdvisor.Models.DataFeedIngestionStatus&gt;" Usage="metricsAdvisorAdministrationClient.GetDataFeedIngestionStatusesAsync (dataFeedId, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.MetricsAdvisor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.AI.MetricsAdvisor.Models.DataFeedIngestionStatus&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataFeedId" Type="System.String" />
        <Parameter Name="options" Type="Azure.AI.MetricsAdvisor.GetDataFeedIngestionStatusesOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="dataFeedId">The unique identifier of the <see cref="T:Azure.AI.MetricsAdvisor.Models.DataFeed" />.</param>
        <param name="options">An optional set of options used to configure the request's behavior.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Gets the ingestion status for data being ingested to a given data feed.
            </summary>
        <returns>An <see cref="T:Azure.AsyncPageable`1" /> containing the collection of <see cref="T:Azure.AI.MetricsAdvisor.Models.DataFeedIngestionStatus" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataFeeds">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.AI.MetricsAdvisor.Models.DataFeed&gt; GetDataFeeds (Azure.AI.MetricsAdvisor.GetDataFeedsOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.AI.MetricsAdvisor.Models.DataFeed&gt; GetDataFeeds(class Azure.AI.MetricsAdvisor.GetDataFeedsOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.MetricsAdvisor.Administration.MetricsAdvisorAdministrationClient.GetDataFeeds(Azure.AI.MetricsAdvisor.GetDataFeedsOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataFeeds (Optional options As GetDataFeedsOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of DataFeed)" />
      <MemberSignature Language="F#" Value="abstract member GetDataFeeds : Azure.AI.MetricsAdvisor.GetDataFeedsOptions * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.AI.MetricsAdvisor.Models.DataFeed&gt;&#xA;override this.GetDataFeeds : Azure.AI.MetricsAdvisor.GetDataFeedsOptions * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.AI.MetricsAdvisor.Models.DataFeed&gt;" Usage="metricsAdvisorAdministrationClient.GetDataFeeds (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.MetricsAdvisor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.AI.MetricsAdvisor.Models.DataFeed&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.AI.MetricsAdvisor.GetDataFeedsOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options">An optional set of options used to configure the request's behavior.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Gets a collection of items describing the existing <see cref="T:Azure.AI.MetricsAdvisor.Models.DataFeed" />s in this Metrics
            Advisor resource.
            </summary>
        <returns>A <see cref="T:Azure.Pageable`1" /> containing the collection of <see cref="T:Azure.AI.MetricsAdvisor.Models.DataFeed" />s.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataFeedsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.AI.MetricsAdvisor.Models.DataFeed&gt; GetDataFeedsAsync (Azure.AI.MetricsAdvisor.GetDataFeedsOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.AI.MetricsAdvisor.Models.DataFeed&gt; GetDataFeedsAsync(class Azure.AI.MetricsAdvisor.GetDataFeedsOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.MetricsAdvisor.Administration.MetricsAdvisorAdministrationClient.GetDataFeedsAsync(Azure.AI.MetricsAdvisor.GetDataFeedsOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataFeedsAsync (Optional options As GetDataFeedsOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of DataFeed)" />
      <MemberSignature Language="F#" Value="abstract member GetDataFeedsAsync : Azure.AI.MetricsAdvisor.GetDataFeedsOptions * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.AI.MetricsAdvisor.Models.DataFeed&gt;&#xA;override this.GetDataFeedsAsync : Azure.AI.MetricsAdvisor.GetDataFeedsOptions * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.AI.MetricsAdvisor.Models.DataFeed&gt;" Usage="metricsAdvisorAdministrationClient.GetDataFeedsAsync (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.MetricsAdvisor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.AI.MetricsAdvisor.Models.DataFeed&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.AI.MetricsAdvisor.GetDataFeedsOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options">An optional set of options used to configure the request's behavior.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Gets a collection of items describing the existing <see cref="T:Azure.AI.MetricsAdvisor.Models.DataFeed" />s in this Metrics
            Advisor resource.
            </summary>
        <returns>An <see cref="T:Azure.AsyncPageable`1" /> containing the collection of <see cref="T:Azure.AI.MetricsAdvisor.Models.DataFeed" />s.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDetectionConfiguration">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.AI.MetricsAdvisor.Models.AnomalyDetectionConfiguration&gt; GetDetectionConfiguration (string detectionConfigurationId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.AI.MetricsAdvisor.Models.AnomalyDetectionConfiguration&gt; GetDetectionConfiguration(string detectionConfigurationId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.MetricsAdvisor.Administration.MetricsAdvisorAdministrationClient.GetDetectionConfiguration(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDetectionConfiguration (detectionConfigurationId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of AnomalyDetectionConfiguration)" />
      <MemberSignature Language="F#" Value="abstract member GetDetectionConfiguration : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.MetricsAdvisor.Models.AnomalyDetectionConfiguration&gt;&#xA;override this.GetDetectionConfiguration : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.MetricsAdvisor.Models.AnomalyDetectionConfiguration&gt;" Usage="metricsAdvisorAdministrationClient.GetDetectionConfiguration (detectionConfigurationId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.MetricsAdvisor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.AI.MetricsAdvisor.Models.AnomalyDetectionConfiguration&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="detectionConfigurationId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="detectionConfigurationId">The unique identifier of the <see cref="T:Azure.AI.MetricsAdvisor.Models.AnomalyDetectionConfiguration" />.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Gets an existing <see cref="T:Azure.AI.MetricsAdvisor.Models.AnomalyDetectionConfiguration" />.
            </summary>
        <returns>
            A <see cref="T:Azure.Response`1" /> containing the result of the operation. The result is an <see cref="T:Azure.AI.MetricsAdvisor.Models.AnomalyDetectionConfiguration" />
            instance containing the requested information.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="detectionConfigurationId" /> is null.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="detectionConfigurationId" /> is empty or not a valid GUID.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetDetectionConfigurationAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.MetricsAdvisor.Models.AnomalyDetectionConfiguration&gt;&gt; GetDetectionConfigurationAsync (string detectionConfigurationId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.AI.MetricsAdvisor.Models.AnomalyDetectionConfiguration&gt;&gt; GetDetectionConfigurationAsync(string detectionConfigurationId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.MetricsAdvisor.Administration.MetricsAdvisorAdministrationClient.GetDetectionConfigurationAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDetectionConfigurationAsync (detectionConfigurationId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AnomalyDetectionConfiguration))" />
      <MemberSignature Language="F#" Value="abstract member GetDetectionConfigurationAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.MetricsAdvisor.Models.AnomalyDetectionConfiguration&gt;&gt;&#xA;override this.GetDetectionConfigurationAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.MetricsAdvisor.Models.AnomalyDetectionConfiguration&gt;&gt;" Usage="metricsAdvisorAdministrationClient.GetDetectionConfigurationAsync (detectionConfigurationId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.MetricsAdvisor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.MetricsAdvisor.Models.AnomalyDetectionConfiguration&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="detectionConfigurationId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="detectionConfigurationId">The unique identifier of the <see cref="T:Azure.AI.MetricsAdvisor.Models.AnomalyDetectionConfiguration" />.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Gets an existing <see cref="T:Azure.AI.MetricsAdvisor.Models.AnomalyDetectionConfiguration" />.
            </summary>
        <returns>
            A <see cref="T:Azure.Response`1" /> containing the result of the operation. The result is an <see cref="T:Azure.AI.MetricsAdvisor.Models.AnomalyDetectionConfiguration" />
            instance containing the requested information.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="detectionConfigurationId" /> is null.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="detectionConfigurationId" /> is empty or not a valid GUID.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetDetectionConfigurations">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.AI.MetricsAdvisor.Models.AnomalyDetectionConfiguration&gt; GetDetectionConfigurations (string metricId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.AI.MetricsAdvisor.Models.AnomalyDetectionConfiguration&gt; GetDetectionConfigurations(string metricId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.MetricsAdvisor.Administration.MetricsAdvisorAdministrationClient.GetDetectionConfigurations(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDetectionConfigurations (metricId As String, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of AnomalyDetectionConfiguration)" />
      <MemberSignature Language="F#" Value="abstract member GetDetectionConfigurations : string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.AI.MetricsAdvisor.Models.AnomalyDetectionConfiguration&gt;&#xA;override this.GetDetectionConfigurations : string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.AI.MetricsAdvisor.Models.AnomalyDetectionConfiguration&gt;" Usage="metricsAdvisorAdministrationClient.GetDetectionConfigurations (metricId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.MetricsAdvisor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.AI.MetricsAdvisor.Models.AnomalyDetectionConfiguration&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metricId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="metricId">Filters the result. The unique identifier of the metric to which the returned <see cref="T:Azure.AI.MetricsAdvisor.Models.AnomalyDetectionConfiguration" />s apply.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Gets a collection of items describing the existing <see cref="T:Azure.AI.MetricsAdvisor.Models.AnomalyDetectionConfiguration" />s in this Metrics
            Advisor resource.
            </summary>
        <returns>A <see cref="T:Azure.Pageable`1" /> containing the collection of <see cref="T:Azure.AI.MetricsAdvisor.Models.AnomalyDetectionConfiguration" />s.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="metricId" /> is null.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="metricId" /> is empty or not a valid GUID.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetDetectionConfigurationsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.AI.MetricsAdvisor.Models.AnomalyDetectionConfiguration&gt; GetDetectionConfigurationsAsync (string metricId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.AI.MetricsAdvisor.Models.AnomalyDetectionConfiguration&gt; GetDetectionConfigurationsAsync(string metricId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.MetricsAdvisor.Administration.MetricsAdvisorAdministrationClient.GetDetectionConfigurationsAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDetectionConfigurationsAsync (metricId As String, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of AnomalyDetectionConfiguration)" />
      <MemberSignature Language="F#" Value="abstract member GetDetectionConfigurationsAsync : string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.AI.MetricsAdvisor.Models.AnomalyDetectionConfiguration&gt;&#xA;override this.GetDetectionConfigurationsAsync : string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.AI.MetricsAdvisor.Models.AnomalyDetectionConfiguration&gt;" Usage="metricsAdvisorAdministrationClient.GetDetectionConfigurationsAsync (metricId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.MetricsAdvisor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.AI.MetricsAdvisor.Models.AnomalyDetectionConfiguration&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metricId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="metricId">Filters the result. The unique identifier of the metric to which the returned <see cref="T:Azure.AI.MetricsAdvisor.Models.AnomalyDetectionConfiguration" />s apply.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Gets a collection of items describing the existing <see cref="T:Azure.AI.MetricsAdvisor.Models.AnomalyDetectionConfiguration" />s in this Metrics
            Advisor resource.
            </summary>
        <returns>An <see cref="T:Azure.AsyncPageable`1" /> containing the collection of <see cref="T:Azure.AI.MetricsAdvisor.Models.AnomalyDetectionConfiguration" />s.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="metricId" /> is null.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="metricId" /> is empty or not a valid GUID.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetHook">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.AI.MetricsAdvisor.Models.NotificationHook&gt; GetHook (string hookId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.AI.MetricsAdvisor.Models.NotificationHook&gt; GetHook(string hookId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.MetricsAdvisor.Administration.MetricsAdvisorAdministrationClient.GetHook(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetHook (hookId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of NotificationHook)" />
      <MemberSignature Language="F#" Value="abstract member GetHook : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.MetricsAdvisor.Models.NotificationHook&gt;&#xA;override this.GetHook : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.MetricsAdvisor.Models.NotificationHook&gt;" Usage="metricsAdvisorAdministrationClient.GetHook (hookId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.MetricsAdvisor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.AI.MetricsAdvisor.Models.NotificationHook&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hookId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="hookId">The unique identifier of the <see cref="T:Azure.AI.MetricsAdvisor.Models.NotificationHook" />.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Gets an existing <see cref="T:Azure.AI.MetricsAdvisor.Models.NotificationHook" />.
            </summary>
        <returns>
            A <see cref="T:Azure.Response`1" /> containing the result of the operation. The result is a <see cref="T:Azure.AI.MetricsAdvisor.Models.NotificationHook" />
            instance containing the requested information.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="hookId" /> is null.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="hookId" /> is empty or not a valid GUID.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetHookAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.MetricsAdvisor.Models.NotificationHook&gt;&gt; GetHookAsync (string hookId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.AI.MetricsAdvisor.Models.NotificationHook&gt;&gt; GetHookAsync(string hookId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.MetricsAdvisor.Administration.MetricsAdvisorAdministrationClient.GetHookAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetHookAsync (hookId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of NotificationHook))" />
      <MemberSignature Language="F#" Value="abstract member GetHookAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.MetricsAdvisor.Models.NotificationHook&gt;&gt;&#xA;override this.GetHookAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.MetricsAdvisor.Models.NotificationHook&gt;&gt;" Usage="metricsAdvisorAdministrationClient.GetHookAsync (hookId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.MetricsAdvisor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.MetricsAdvisor.Models.NotificationHook&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hookId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="hookId">The unique identifier of the <see cref="T:Azure.AI.MetricsAdvisor.Models.NotificationHook" />.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Gets an existing <see cref="T:Azure.AI.MetricsAdvisor.Models.NotificationHook" />.
            </summary>
        <returns>
            A <see cref="T:Azure.Response`1" /> containing the result of the operation. The result is a <see cref="T:Azure.AI.MetricsAdvisor.Models.NotificationHook" />
            instance containing the requested information.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="hookId" /> is null.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="hookId" /> is empty or not a valid GUID.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetHooks">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.AI.MetricsAdvisor.Models.NotificationHook&gt; GetHooks (Azure.AI.MetricsAdvisor.GetHooksOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.AI.MetricsAdvisor.Models.NotificationHook&gt; GetHooks(class Azure.AI.MetricsAdvisor.GetHooksOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.MetricsAdvisor.Administration.MetricsAdvisorAdministrationClient.GetHooks(Azure.AI.MetricsAdvisor.GetHooksOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetHooks (Optional options As GetHooksOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of NotificationHook)" />
      <MemberSignature Language="F#" Value="abstract member GetHooks : Azure.AI.MetricsAdvisor.GetHooksOptions * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.AI.MetricsAdvisor.Models.NotificationHook&gt;&#xA;override this.GetHooks : Azure.AI.MetricsAdvisor.GetHooksOptions * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.AI.MetricsAdvisor.Models.NotificationHook&gt;" Usage="metricsAdvisorAdministrationClient.GetHooks (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.MetricsAdvisor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.AI.MetricsAdvisor.Models.NotificationHook&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.AI.MetricsAdvisor.GetHooksOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options">An optional set of options used to configure the request's behavior.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Gets a collection of items describing the existing <see cref="T:Azure.AI.MetricsAdvisor.Models.NotificationHook" />s in this resource.
            </summary>
        <returns>A <see cref="T:Azure.Pageable`1" /> containing the collection of <see cref="T:Azure.AI.MetricsAdvisor.Models.NotificationHook" />s.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHooksAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.AI.MetricsAdvisor.Models.NotificationHook&gt; GetHooksAsync (Azure.AI.MetricsAdvisor.GetHooksOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.AI.MetricsAdvisor.Models.NotificationHook&gt; GetHooksAsync(class Azure.AI.MetricsAdvisor.GetHooksOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.MetricsAdvisor.Administration.MetricsAdvisorAdministrationClient.GetHooksAsync(Azure.AI.MetricsAdvisor.GetHooksOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetHooksAsync (Optional options As GetHooksOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of NotificationHook)" />
      <MemberSignature Language="F#" Value="abstract member GetHooksAsync : Azure.AI.MetricsAdvisor.GetHooksOptions * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.AI.MetricsAdvisor.Models.NotificationHook&gt;&#xA;override this.GetHooksAsync : Azure.AI.MetricsAdvisor.GetHooksOptions * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.AI.MetricsAdvisor.Models.NotificationHook&gt;" Usage="metricsAdvisorAdministrationClient.GetHooksAsync (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.MetricsAdvisor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.AI.MetricsAdvisor.Models.NotificationHook&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.AI.MetricsAdvisor.GetHooksOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options">An optional set of options used to configure the request's behavior.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Gets a collection of items describing the existing <see cref="T:Azure.AI.MetricsAdvisor.Models.NotificationHook" />s in this resource.
            </summary>
        <returns>An <see cref="T:Azure.AsyncPageable`1" /> containing the collection of <see cref="T:Azure.AI.MetricsAdvisor.Models.NotificationHook" />s.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RefreshDataFeedIngestion">
      <MemberSignature Language="C#" Value="public virtual Azure.Response RefreshDataFeedIngestion (string dataFeedId, DateTimeOffset startTime, DateTimeOffset endTime, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response RefreshDataFeedIngestion(string dataFeedId, valuetype System.DateTimeOffset startTime, valuetype System.DateTimeOffset endTime, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.MetricsAdvisor.Administration.MetricsAdvisorAdministrationClient.RefreshDataFeedIngestion(System.String,System.DateTimeOffset,System.DateTimeOffset,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RefreshDataFeedIngestion (dataFeedId As String, startTime As DateTimeOffset, endTime As DateTimeOffset, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member RefreshDataFeedIngestion : string * DateTimeOffset * DateTimeOffset * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.RefreshDataFeedIngestion : string * DateTimeOffset * DateTimeOffset * System.Threading.CancellationToken -&gt; Azure.Response" Usage="metricsAdvisorAdministrationClient.RefreshDataFeedIngestion (dataFeedId, startTime, endTime, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.MetricsAdvisor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataFeedId" Type="System.String" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" />
        <Parameter Name="endTime" Type="System.DateTimeOffset" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="dataFeedId">The unique identifier of the <see cref="T:Azure.AI.MetricsAdvisor.Models.DataFeed" />.</param>
        <param name="startTime">The inclusive data back-fill time range.</param>
        <param name="endTime">The exclusive data back-fill time range.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Resets the data ingestion status for a given data feed to back-fill data. This can be useful to fix a failed ingestion or override the existing data.
            Anomaly detection is re-triggered on selected range only.
            </summary>
        <returns>
            A <see cref="T:Azure.Response" /> containing the result of the operation.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RefreshDataFeedIngestionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; RefreshDataFeedIngestionAsync (string dataFeedId, DateTimeOffset startTime, DateTimeOffset endTime, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; RefreshDataFeedIngestionAsync(string dataFeedId, valuetype System.DateTimeOffset startTime, valuetype System.DateTimeOffset endTime, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.MetricsAdvisor.Administration.MetricsAdvisorAdministrationClient.RefreshDataFeedIngestionAsync(System.String,System.DateTimeOffset,System.DateTimeOffset,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RefreshDataFeedIngestionAsync (dataFeedId As String, startTime As DateTimeOffset, endTime As DateTimeOffset, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member RefreshDataFeedIngestionAsync : string * DateTimeOffset * DateTimeOffset * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.RefreshDataFeedIngestionAsync : string * DateTimeOffset * DateTimeOffset * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="metricsAdvisorAdministrationClient.RefreshDataFeedIngestionAsync (dataFeedId, startTime, endTime, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.MetricsAdvisor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataFeedId" Type="System.String" />
        <Parameter Name="startTime" Type="System.DateTimeOffset" />
        <Parameter Name="endTime" Type="System.DateTimeOffset" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="dataFeedId">The unique identifier of the <see cref="T:Azure.AI.MetricsAdvisor.Models.DataFeed" />.</param>
        <param name="startTime">The inclusive data back-fill time range.</param>
        <param name="endTime">The exclusive data back-fill time range.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Resets the data ingestion status for a given data feed to back-fill data. This can be useful to fix a failed ingestion or override the existing data.
            Anomaly detection is re-triggered on selected range only.
            </summary>
        <returns>
            A <see cref="T:Azure.Response" /> containing the result of the operation.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateAlertConfiguration">
      <MemberSignature Language="C#" Value="public virtual Azure.Response UpdateAlertConfiguration (string alertConfigurationId, Azure.AI.MetricsAdvisor.Models.AnomalyAlertConfiguration alertConfiguration, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response UpdateAlertConfiguration(string alertConfigurationId, class Azure.AI.MetricsAdvisor.Models.AnomalyAlertConfiguration alertConfiguration, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.MetricsAdvisor.Administration.MetricsAdvisorAdministrationClient.UpdateAlertConfiguration(System.String,Azure.AI.MetricsAdvisor.Models.AnomalyAlertConfiguration,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateAlertConfiguration (alertConfigurationId As String, alertConfiguration As AnomalyAlertConfiguration, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member UpdateAlertConfiguration : string * Azure.AI.MetricsAdvisor.Models.AnomalyAlertConfiguration * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.UpdateAlertConfiguration : string * Azure.AI.MetricsAdvisor.Models.AnomalyAlertConfiguration * System.Threading.CancellationToken -&gt; Azure.Response" Usage="metricsAdvisorAdministrationClient.UpdateAlertConfiguration (alertConfigurationId, alertConfiguration, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.MetricsAdvisor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="alertConfigurationId" Type="System.String" />
        <Parameter Name="alertConfiguration" Type="Azure.AI.MetricsAdvisor.Models.AnomalyAlertConfiguration" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="alertConfigurationId">The unique identifier of the <see cref="T:Azure.AI.MetricsAdvisor.Models.AnomalyAlertConfiguration" />.</param>
        <param name="alertConfiguration">The <see cref="T:Azure.AI.MetricsAdvisor.Models.AnomalyAlertConfiguration" /> containing the updates.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Updates an existing <see cref="T:Azure.AI.MetricsAdvisor.Models.AnomalyAlertConfiguration" />.
            </summary>
        <returns>
            A <see cref="T:Azure.Response" /> containing the result of the operation.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="alertConfigurationId" /> or <paramref name="alertConfiguration" /> is null.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="alertConfigurationId" /> is empty or not a valid GUID.</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateAlertConfigurationAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; UpdateAlertConfigurationAsync (string alertConfigurationId, Azure.AI.MetricsAdvisor.Models.AnomalyAlertConfiguration alertConfiguration, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; UpdateAlertConfigurationAsync(string alertConfigurationId, class Azure.AI.MetricsAdvisor.Models.AnomalyAlertConfiguration alertConfiguration, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.MetricsAdvisor.Administration.MetricsAdvisorAdministrationClient.UpdateAlertConfigurationAsync(System.String,Azure.AI.MetricsAdvisor.Models.AnomalyAlertConfiguration,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateAlertConfigurationAsync (alertConfigurationId As String, alertConfiguration As AnomalyAlertConfiguration, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member UpdateAlertConfigurationAsync : string * Azure.AI.MetricsAdvisor.Models.AnomalyAlertConfiguration * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.UpdateAlertConfigurationAsync : string * Azure.AI.MetricsAdvisor.Models.AnomalyAlertConfiguration * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="metricsAdvisorAdministrationClient.UpdateAlertConfigurationAsync (alertConfigurationId, alertConfiguration, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.MetricsAdvisor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="alertConfigurationId" Type="System.String" />
        <Parameter Name="alertConfiguration" Type="Azure.AI.MetricsAdvisor.Models.AnomalyAlertConfiguration" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="alertConfigurationId">The unique identifier of the <see cref="T:Azure.AI.MetricsAdvisor.Models.AnomalyAlertConfiguration" />.</param>
        <param name="alertConfiguration">The <see cref="T:Azure.AI.MetricsAdvisor.Models.AnomalyAlertConfiguration" /> containing the updates.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Updates an existing <see cref="T:Azure.AI.MetricsAdvisor.Models.AnomalyAlertConfiguration" />.
            </summary>
        <returns>
            A <see cref="T:Azure.Response" /> containing the result of the operation.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="alertConfigurationId" /> or <paramref name="alertConfiguration" /> is null.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="alertConfigurationId" /> is empty or not a valid GUID.</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateDataFeed">
      <MemberSignature Language="C#" Value="public virtual Azure.Response UpdateDataFeed (string dataFeedId, Azure.AI.MetricsAdvisor.Models.DataFeed dataFeed, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response UpdateDataFeed(string dataFeedId, class Azure.AI.MetricsAdvisor.Models.DataFeed dataFeed, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.MetricsAdvisor.Administration.MetricsAdvisorAdministrationClient.UpdateDataFeed(System.String,Azure.AI.MetricsAdvisor.Models.DataFeed,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateDataFeed (dataFeedId As String, dataFeed As DataFeed, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member UpdateDataFeed : string * Azure.AI.MetricsAdvisor.Models.DataFeed * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.UpdateDataFeed : string * Azure.AI.MetricsAdvisor.Models.DataFeed * System.Threading.CancellationToken -&gt; Azure.Response" Usage="metricsAdvisorAdministrationClient.UpdateDataFeed (dataFeedId, dataFeed, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.MetricsAdvisor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataFeedId" Type="System.String" />
        <Parameter Name="dataFeed" Type="Azure.AI.MetricsAdvisor.Models.DataFeed" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="dataFeedId">The ID of the existing <see cref="T:Azure.AI.MetricsAdvisor.Models.DataFeed" /> to update.</param>
        <param name="dataFeed">The <see cref="T:Azure.AI.MetricsAdvisor.Models.DataFeed" /> model containing the updates to be applied.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Updates an existing <see cref="T:Azure.AI.MetricsAdvisor.Models.DataFeed" />.
            </summary>
        <returns>
            A <see cref="T:Azure.Response" /> containing the result of the operation.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dataFeedId" /> or <paramref name="dataFeed" /> is null.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="dataFeedId" /> is empty or not a valid GUID.</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateDataFeedAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; UpdateDataFeedAsync (string dataFeedId, Azure.AI.MetricsAdvisor.Models.DataFeed dataFeed, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; UpdateDataFeedAsync(string dataFeedId, class Azure.AI.MetricsAdvisor.Models.DataFeed dataFeed, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.MetricsAdvisor.Administration.MetricsAdvisorAdministrationClient.UpdateDataFeedAsync(System.String,Azure.AI.MetricsAdvisor.Models.DataFeed,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateDataFeedAsync (dataFeedId As String, dataFeed As DataFeed, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member UpdateDataFeedAsync : string * Azure.AI.MetricsAdvisor.Models.DataFeed * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.UpdateDataFeedAsync : string * Azure.AI.MetricsAdvisor.Models.DataFeed * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="metricsAdvisorAdministrationClient.UpdateDataFeedAsync (dataFeedId, dataFeed, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.MetricsAdvisor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataFeedId" Type="System.String" />
        <Parameter Name="dataFeed" Type="Azure.AI.MetricsAdvisor.Models.DataFeed" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="dataFeedId">The ID of the existing <see cref="T:Azure.AI.MetricsAdvisor.Models.DataFeed" /> to update.</param>
        <param name="dataFeed">The <see cref="T:Azure.AI.MetricsAdvisor.Models.DataFeed" /> model containing the updates to be applied.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Updates an existing <see cref="T:Azure.AI.MetricsAdvisor.Models.DataFeed" />.
            </summary>
        <returns>
            A <see cref="T:Azure.Response" /> containing the result of the operation.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dataFeedId" /> or <paramref name="dataFeed" /> is null.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="dataFeedId" /> is empty or not a valid GUID.</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateDetectionConfiguration">
      <MemberSignature Language="C#" Value="public virtual Azure.Response UpdateDetectionConfiguration (string detectionConfigurationId, Azure.AI.MetricsAdvisor.Models.AnomalyDetectionConfiguration detectionConfiguration, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response UpdateDetectionConfiguration(string detectionConfigurationId, class Azure.AI.MetricsAdvisor.Models.AnomalyDetectionConfiguration detectionConfiguration, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.MetricsAdvisor.Administration.MetricsAdvisorAdministrationClient.UpdateDetectionConfiguration(System.String,Azure.AI.MetricsAdvisor.Models.AnomalyDetectionConfiguration,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateDetectionConfiguration (detectionConfigurationId As String, detectionConfiguration As AnomalyDetectionConfiguration, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member UpdateDetectionConfiguration : string * Azure.AI.MetricsAdvisor.Models.AnomalyDetectionConfiguration * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.UpdateDetectionConfiguration : string * Azure.AI.MetricsAdvisor.Models.AnomalyDetectionConfiguration * System.Threading.CancellationToken -&gt; Azure.Response" Usage="metricsAdvisorAdministrationClient.UpdateDetectionConfiguration (detectionConfigurationId, detectionConfiguration, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.MetricsAdvisor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="detectionConfigurationId" Type="System.String" />
        <Parameter Name="detectionConfiguration" Type="Azure.AI.MetricsAdvisor.Models.AnomalyDetectionConfiguration" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="detectionConfigurationId">The ID of the existing <see cref="T:Azure.AI.MetricsAdvisor.Models.AnomalyDetectionConfiguration" /> to update.</param>
        <param name="detectionConfiguration">The <see cref="T:Azure.AI.MetricsAdvisor.Models.AnomalyDetectionConfiguration" /> instance containing the desired updates.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Updates an existing <see cref="T:Azure.AI.MetricsAdvisor.Models.AnomalyDetectionConfiguration" /> in this resource.
            </summary>
        <returns>
            A <see cref="T:Azure.Response" /> containing the result of the operation.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="detectionConfigurationId" /> or <paramref name="detectionConfiguration" /> is null.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="detectionConfigurationId" /> is empty or not a valid GUID.</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateDetectionConfigurationAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; UpdateDetectionConfigurationAsync (string detectionConfigurationId, Azure.AI.MetricsAdvisor.Models.AnomalyDetectionConfiguration detectionConfiguration, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; UpdateDetectionConfigurationAsync(string detectionConfigurationId, class Azure.AI.MetricsAdvisor.Models.AnomalyDetectionConfiguration detectionConfiguration, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.MetricsAdvisor.Administration.MetricsAdvisorAdministrationClient.UpdateDetectionConfigurationAsync(System.String,Azure.AI.MetricsAdvisor.Models.AnomalyDetectionConfiguration,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateDetectionConfigurationAsync (detectionConfigurationId As String, detectionConfiguration As AnomalyDetectionConfiguration, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member UpdateDetectionConfigurationAsync : string * Azure.AI.MetricsAdvisor.Models.AnomalyDetectionConfiguration * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.UpdateDetectionConfigurationAsync : string * Azure.AI.MetricsAdvisor.Models.AnomalyDetectionConfiguration * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="metricsAdvisorAdministrationClient.UpdateDetectionConfigurationAsync (detectionConfigurationId, detectionConfiguration, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.MetricsAdvisor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="detectionConfigurationId" Type="System.String" />
        <Parameter Name="detectionConfiguration" Type="Azure.AI.MetricsAdvisor.Models.AnomalyDetectionConfiguration" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="detectionConfigurationId">The ID of the existing <see cref="T:Azure.AI.MetricsAdvisor.Models.AnomalyDetectionConfiguration" /> to update.</param>
        <param name="detectionConfiguration">The <see cref="T:Azure.AI.MetricsAdvisor.Models.AnomalyDetectionConfiguration" /> instance containing the desired updates.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Updates an existing <see cref="T:Azure.AI.MetricsAdvisor.Models.AnomalyDetectionConfiguration" /> in this resource.
            </summary>
        <returns>
            A <see cref="T:Azure.Response" /> containing the result of the operation.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="detectionConfigurationId" /> or <paramref name="detectionConfiguration" /> is null.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="detectionConfigurationId" /> is empty or not a valid GUID.</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateHook">
      <MemberSignature Language="C#" Value="public virtual Azure.Response UpdateHook (string hookId, Azure.AI.MetricsAdvisor.Models.NotificationHook hook, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response UpdateHook(string hookId, class Azure.AI.MetricsAdvisor.Models.NotificationHook hook, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.MetricsAdvisor.Administration.MetricsAdvisorAdministrationClient.UpdateHook(System.String,Azure.AI.MetricsAdvisor.Models.NotificationHook,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateHook (hookId As String, hook As NotificationHook, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member UpdateHook : string * Azure.AI.MetricsAdvisor.Models.NotificationHook * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.UpdateHook : string * Azure.AI.MetricsAdvisor.Models.NotificationHook * System.Threading.CancellationToken -&gt; Azure.Response" Usage="metricsAdvisorAdministrationClient.UpdateHook (hookId, hook, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.MetricsAdvisor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hookId" Type="System.String" />
        <Parameter Name="hook" Type="Azure.AI.MetricsAdvisor.Models.NotificationHook" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="hookId">The ID of the existing <see cref="T:Azure.AI.MetricsAdvisor.Models.NotificationHook" /> to update.</param>
        <param name="hook">The <see cref="T:Azure.AI.MetricsAdvisor.Models.NotificationHook" /> model containing the updates to be applied.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Updates an existing <see cref="T:Azure.AI.MetricsAdvisor.Models.NotificationHook" />.
            </summary>
        <returns>
            A <see cref="T:Azure.Response" /> containing the result of the operation.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="hookId" /> or <paramref name="hook" /> is null.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="hookId" /> is empty or not a valid GUID.</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateHookAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; UpdateHookAsync (string hookId, Azure.AI.MetricsAdvisor.Models.NotificationHook hook, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; UpdateHookAsync(string hookId, class Azure.AI.MetricsAdvisor.Models.NotificationHook hook, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.MetricsAdvisor.Administration.MetricsAdvisorAdministrationClient.UpdateHookAsync(System.String,Azure.AI.MetricsAdvisor.Models.NotificationHook,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateHookAsync (hookId As String, hook As NotificationHook, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member UpdateHookAsync : string * Azure.AI.MetricsAdvisor.Models.NotificationHook * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.UpdateHookAsync : string * Azure.AI.MetricsAdvisor.Models.NotificationHook * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="metricsAdvisorAdministrationClient.UpdateHookAsync (hookId, hook, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.MetricsAdvisor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hookId" Type="System.String" />
        <Parameter Name="hook" Type="Azure.AI.MetricsAdvisor.Models.NotificationHook" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="hookId">The ID of the existing <see cref="T:Azure.AI.MetricsAdvisor.Models.NotificationHook" /> to update.</param>
        <param name="hook">The <see cref="T:Azure.AI.MetricsAdvisor.Models.NotificationHook" /> model containing the updates to be applied.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Updates an existing <see cref="T:Azure.AI.MetricsAdvisor.Models.NotificationHook" />.
            </summary>
        <returns>
            A <see cref="T:Azure.Response" /> containing the result of the operation.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="hookId" /> or <paramref name="hook" /> is null.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="hookId" /> is empty or not a valid GUID.</exception>
      </Docs>
    </Member>
  </Members>
</Type>

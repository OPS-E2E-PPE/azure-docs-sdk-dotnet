<Type Name="AnalyzeRequest" FullName="Azure.Search.Documents.Models.AnalyzeRequest">
  <TypeSignature Language="C#" Value="public class AnalyzeRequest" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AnalyzeRequest extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Search.Documents.Models.AnalyzeRequest" />
  <TypeSignature Language="VB.NET" Value="Public Class AnalyzeRequest" />
  <TypeSignature Language="F#" Value="type AnalyzeRequest = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Search.Documents</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> Specifies some text and analysis components used to break that text into tokens. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AnalyzeRequest (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Models.AnalyzeRequest.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String)" />
      <MemberSignature Language="F#" Value="new Azure.Search.Documents.Models.AnalyzeRequest : string -&gt; Azure.Search.Documents.Models.AnalyzeRequest" Usage="new Azure.Search.Documents.Models.AnalyzeRequest text" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"> The text to break into tokens. </param>
        <summary> Initializes a new instance of AnalyzeRequest. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Analyzer">
      <MemberSignature Language="C#" Value="public Azure.Search.Documents.Models.AnalyzerName? Analyzer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype Azure.Search.Documents.Models.AnalyzerName&gt; Analyzer" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Models.AnalyzeRequest.Analyzer" />
      <MemberSignature Language="VB.NET" Value="Public Property Analyzer As Nullable(Of AnalyzerName)" />
      <MemberSignature Language="F#" Value="member this.Analyzer : Nullable&lt;Azure.Search.Documents.Models.AnalyzerName&gt; with get, set" Usage="Azure.Search.Documents.Models.AnalyzeRequest.Analyzer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Azure.Search.Documents.Models.AnalyzerName&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The name of the analyzer to use to break the given text. If this parameter is not specified, you must specify a tokenizer instead. The tokenizer and analyzer parameters are mutually exclusive. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CharFilters">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;string&gt; CharFilters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;string&gt; CharFilters" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Models.AnalyzeRequest.CharFilters" />
      <MemberSignature Language="VB.NET" Value="Public Property CharFilters As IList(Of String)" />
      <MemberSignature Language="F#" Value="member this.CharFilters : System.Collections.Generic.IList&lt;string&gt; with get, set" Usage="Azure.Search.Documents.Models.AnalyzeRequest.CharFilters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> An optional list of character filters to use when breaking the given text. This parameter can only be set when using the tokenizer parameter. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Models.AnalyzeRequest.Text" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Text As String" />
      <MemberSignature Language="F#" Value="member this.Text : string" Usage="Azure.Search.Documents.Models.AnalyzeRequest.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The text to break into tokens. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TokenFilters">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Azure.Search.Documents.Models.TokenFilterName&gt; TokenFilters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;valuetype Azure.Search.Documents.Models.TokenFilterName&gt; TokenFilters" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Models.AnalyzeRequest.TokenFilters" />
      <MemberSignature Language="VB.NET" Value="Public Property TokenFilters As IList(Of TokenFilterName)" />
      <MemberSignature Language="F#" Value="member this.TokenFilters : System.Collections.Generic.IList&lt;Azure.Search.Documents.Models.TokenFilterName&gt; with get, set" Usage="Azure.Search.Documents.Models.AnalyzeRequest.TokenFilters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Azure.Search.Documents.Models.TokenFilterName&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> An optional list of token filters to use when breaking the given text. This parameter can only be set when using the tokenizer parameter. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Tokenizer">
      <MemberSignature Language="C#" Value="public Azure.Search.Documents.Models.TokenizerName? Tokenizer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype Azure.Search.Documents.Models.TokenizerName&gt; Tokenizer" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Models.AnalyzeRequest.Tokenizer" />
      <MemberSignature Language="VB.NET" Value="Public Property Tokenizer As Nullable(Of TokenizerName)" />
      <MemberSignature Language="F#" Value="member this.Tokenizer : Nullable&lt;Azure.Search.Documents.Models.TokenizerName&gt; with get, set" Usage="Azure.Search.Documents.Models.AnalyzeRequest.Tokenizer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Azure.Search.Documents.Models.TokenizerName&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The name of the tokenizer to use to break the given text. If this parameter is not specified, you must specify an analyzer instead. The tokenizer and analyzer parameters are mutually exclusive. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="TokenizerName" FullName="Azure.Search.Documents.Models.TokenizerName">
  <TypeSignature Language="C#" Value="public struct TokenizerName : IEquatable&lt;Azure.Search.Documents.Models.TokenizerName&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit TokenizerName extends System.ValueType implements class System.IEquatable`1&lt;valuetype Azure.Search.Documents.Models.TokenizerName&gt;" />
  <TypeSignature Language="DocId" Value="T:Azure.Search.Documents.Models.TokenizerName" />
  <TypeSignature Language="VB.NET" Value="Public Structure TokenizerName&#xA;Implements IEquatable(Of TokenizerName)" />
  <TypeSignature Language="F#" Value="type TokenizerName = struct" />
  <AssemblyInfo>
    <AssemblyName>Azure.Search.Documents</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;Azure.Search.Documents.Models.TokenizerName&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary> Defines the names of all tokenizers supported by Azure Cognitive Search. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TokenizerName (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Models.TokenizerName.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As String)" />
      <MemberSignature Language="F#" Value="new Azure.Search.Documents.Models.TokenizerName : string -&gt; Azure.Search.Documents.Models.TokenizerName" Usage="new Azure.Search.Documents.Models.TokenizerName value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary> Determines if two <see cref="T:Azure.Search.Documents.Models.TokenizerName" /> values are the same. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Classic">
      <MemberSignature Language="C#" Value="public static Azure.Search.Documents.Models.TokenizerName Classic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.Search.Documents.Models.TokenizerName Classic" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Models.TokenizerName.Classic" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Classic As TokenizerName" />
      <MemberSignature Language="F#" Value="member this.Classic : Azure.Search.Documents.Models.TokenizerName" Usage="Azure.Search.Documents.Models.TokenizerName.Classic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Search.Documents.Models.TokenizerName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Grammar-based tokenizer that is suitable for processing most European-language documents. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/standard/ClassicTokenizer.html. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EdgeNGram">
      <MemberSignature Language="C#" Value="public static Azure.Search.Documents.Models.TokenizerName EdgeNGram { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.Search.Documents.Models.TokenizerName EdgeNGram" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Models.TokenizerName.EdgeNGram" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property EdgeNGram As TokenizerName" />
      <MemberSignature Language="F#" Value="member this.EdgeNGram : Azure.Search.Documents.Models.TokenizerName" Usage="Azure.Search.Documents.Models.TokenizerName.EdgeNGram" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Search.Documents.Models.TokenizerName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Tokenizes the input from an edge into n-grams of the given size(s). See https://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/ngram/EdgeNGramTokenizer.html. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (Azure.Search.Documents.Models.TokenizerName other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype Azure.Search.Documents.Models.TokenizerName other) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Models.TokenizerName.Equals(Azure.Search.Documents.Models.TokenizerName)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As TokenizerName) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : Azure.Search.Documents.Models.TokenizerName -&gt; bool" Usage="tokenizerName.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Azure.Search.Documents.Models.TokenizerName" />
      </Parameters>
      <Docs>
        <param name="other">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Models.TokenizerName.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="tokenizerName.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Models.TokenizerName.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="tokenizerName.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Keyword">
      <MemberSignature Language="C#" Value="public static Azure.Search.Documents.Models.TokenizerName Keyword { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.Search.Documents.Models.TokenizerName Keyword" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Models.TokenizerName.Keyword" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Keyword As TokenizerName" />
      <MemberSignature Language="F#" Value="member this.Keyword : Azure.Search.Documents.Models.TokenizerName" Usage="Azure.Search.Documents.Models.TokenizerName.Keyword" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Search.Documents.Models.TokenizerName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Emits the entire input as a single token. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/core/KeywordTokenizer.html. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Letter">
      <MemberSignature Language="C#" Value="public static Azure.Search.Documents.Models.TokenizerName Letter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.Search.Documents.Models.TokenizerName Letter" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Models.TokenizerName.Letter" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Letter As TokenizerName" />
      <MemberSignature Language="F#" Value="member this.Letter : Azure.Search.Documents.Models.TokenizerName" Usage="Azure.Search.Documents.Models.TokenizerName.Letter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Search.Documents.Models.TokenizerName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Divides text at non-letters. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/core/LetterTokenizer.html. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lowercase">
      <MemberSignature Language="C#" Value="public static Azure.Search.Documents.Models.TokenizerName Lowercase { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.Search.Documents.Models.TokenizerName Lowercase" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Models.TokenizerName.Lowercase" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Lowercase As TokenizerName" />
      <MemberSignature Language="F#" Value="member this.Lowercase : Azure.Search.Documents.Models.TokenizerName" Usage="Azure.Search.Documents.Models.TokenizerName.Lowercase" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Search.Documents.Models.TokenizerName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Divides text at non-letters and converts them to lower case. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/core/LowerCaseTokenizer.html. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MicrosoftLanguageStemmingTokenizer">
      <MemberSignature Language="C#" Value="public static Azure.Search.Documents.Models.TokenizerName MicrosoftLanguageStemmingTokenizer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.Search.Documents.Models.TokenizerName MicrosoftLanguageStemmingTokenizer" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Models.TokenizerName.MicrosoftLanguageStemmingTokenizer" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MicrosoftLanguageStemmingTokenizer As TokenizerName" />
      <MemberSignature Language="F#" Value="member this.MicrosoftLanguageStemmingTokenizer : Azure.Search.Documents.Models.TokenizerName" Usage="Azure.Search.Documents.Models.TokenizerName.MicrosoftLanguageStemmingTokenizer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Search.Documents.Models.TokenizerName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Divides text using language-specific rules and reduces words to their base forms. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MicrosoftLanguageTokenizer">
      <MemberSignature Language="C#" Value="public static Azure.Search.Documents.Models.TokenizerName MicrosoftLanguageTokenizer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.Search.Documents.Models.TokenizerName MicrosoftLanguageTokenizer" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Models.TokenizerName.MicrosoftLanguageTokenizer" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MicrosoftLanguageTokenizer As TokenizerName" />
      <MemberSignature Language="F#" Value="member this.MicrosoftLanguageTokenizer : Azure.Search.Documents.Models.TokenizerName" Usage="Azure.Search.Documents.Models.TokenizerName.MicrosoftLanguageTokenizer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Search.Documents.Models.TokenizerName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Divides text using language-specific rules. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NGram">
      <MemberSignature Language="C#" Value="public static Azure.Search.Documents.Models.TokenizerName NGram { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.Search.Documents.Models.TokenizerName NGram" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Models.TokenizerName.NGram" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property NGram As TokenizerName" />
      <MemberSignature Language="F#" Value="member this.NGram : Azure.Search.Documents.Models.TokenizerName" Usage="Azure.Search.Documents.Models.TokenizerName.NGram" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Search.Documents.Models.TokenizerName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Tokenizes the input into n-grams of the given size(s). See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/ngram/NGramTokenizer.html. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (Azure.Search.Documents.Models.TokenizerName left, Azure.Search.Documents.Models.TokenizerName right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype Azure.Search.Documents.Models.TokenizerName left, valuetype Azure.Search.Documents.Models.TokenizerName right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Models.TokenizerName.op_Equality(Azure.Search.Documents.Models.TokenizerName,Azure.Search.Documents.Models.TokenizerName)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As TokenizerName, right As TokenizerName) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( = ) : Azure.Search.Documents.Models.TokenizerName * Azure.Search.Documents.Models.TokenizerName -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="Azure.Search.Documents.Models.TokenizerName" />
        <Parameter Name="right" Type="Azure.Search.Documents.Models.TokenizerName" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary> Determines if two <see cref="T:Azure.Search.Documents.Models.TokenizerName" /> values are the same. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator Azure.Search.Documents.Models.TokenizerName (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype Azure.Search.Documents.Models.TokenizerName op_Implicit(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Models.TokenizerName.op_Implicit(System.String)~Azure.Search.Documents.Models.TokenizerName" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As String) As TokenizerName" />
      <MemberSignature Language="F#" Value="static member op_Implicit : string -&gt; Azure.Search.Documents.Models.TokenizerName" Usage="Azure.Search.Documents.Models.TokenizerName.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Search.Documents.Models.TokenizerName</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary> Converts a string to a <see cref="T:Azure.Search.Documents.Models.TokenizerName" />. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (Azure.Search.Documents.Models.TokenizerName left, Azure.Search.Documents.Models.TokenizerName right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype Azure.Search.Documents.Models.TokenizerName left, valuetype Azure.Search.Documents.Models.TokenizerName right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Models.TokenizerName.op_Inequality(Azure.Search.Documents.Models.TokenizerName,Azure.Search.Documents.Models.TokenizerName)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As TokenizerName, right As TokenizerName) As Boolean" />
      <MemberSignature Language="F#" Value="static member op_Inequality : Azure.Search.Documents.Models.TokenizerName * Azure.Search.Documents.Models.TokenizerName -&gt; bool" Usage="Azure.Search.Documents.Models.TokenizerName.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="Azure.Search.Documents.Models.TokenizerName" />
        <Parameter Name="right" Type="Azure.Search.Documents.Models.TokenizerName" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary> Determines if two <see cref="T:Azure.Search.Documents.Models.TokenizerName" /> values are not the same. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PathHierarchy">
      <MemberSignature Language="C#" Value="public static Azure.Search.Documents.Models.TokenizerName PathHierarchy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.Search.Documents.Models.TokenizerName PathHierarchy" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Models.TokenizerName.PathHierarchy" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property PathHierarchy As TokenizerName" />
      <MemberSignature Language="F#" Value="member this.PathHierarchy : Azure.Search.Documents.Models.TokenizerName" Usage="Azure.Search.Documents.Models.TokenizerName.PathHierarchy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Search.Documents.Models.TokenizerName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Tokenizer for path-like hierarchies. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/path/PathHierarchyTokenizer.html. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Pattern">
      <MemberSignature Language="C#" Value="public static Azure.Search.Documents.Models.TokenizerName Pattern { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.Search.Documents.Models.TokenizerName Pattern" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Models.TokenizerName.Pattern" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Pattern As TokenizerName" />
      <MemberSignature Language="F#" Value="member this.Pattern : Azure.Search.Documents.Models.TokenizerName" Usage="Azure.Search.Documents.Models.TokenizerName.Pattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Search.Documents.Models.TokenizerName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Tokenizer that uses regex pattern matching to construct distinct tokens. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/pattern/PatternTokenizer.html. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Standard">
      <MemberSignature Language="C#" Value="public static Azure.Search.Documents.Models.TokenizerName Standard { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.Search.Documents.Models.TokenizerName Standard" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Models.TokenizerName.Standard" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Standard As TokenizerName" />
      <MemberSignature Language="F#" Value="member this.Standard : Azure.Search.Documents.Models.TokenizerName" Usage="Azure.Search.Documents.Models.TokenizerName.Standard" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Search.Documents.Models.TokenizerName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Standard Lucene analyzer; Composed of the standard tokenizer, lowercase filter and stop filter. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/standard/StandardTokenizer.html. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Models.TokenizerName.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="tokenizerName.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="UaxUrlEmail">
      <MemberSignature Language="C#" Value="public static Azure.Search.Documents.Models.TokenizerName UaxUrlEmail { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.Search.Documents.Models.TokenizerName UaxUrlEmail" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Models.TokenizerName.UaxUrlEmail" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property UaxUrlEmail As TokenizerName" />
      <MemberSignature Language="F#" Value="member this.UaxUrlEmail : Azure.Search.Documents.Models.TokenizerName" Usage="Azure.Search.Documents.Models.TokenizerName.UaxUrlEmail" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Search.Documents.Models.TokenizerName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Tokenizes urls and emails as one token. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/standard/UAX29URLEmailTokenizer.html. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Whitespace">
      <MemberSignature Language="C#" Value="public static Azure.Search.Documents.Models.TokenizerName Whitespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Azure.Search.Documents.Models.TokenizerName Whitespace" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Models.TokenizerName.Whitespace" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Whitespace As TokenizerName" />
      <MemberSignature Language="F#" Value="member this.Whitespace : Azure.Search.Documents.Models.TokenizerName" Usage="Azure.Search.Documents.Models.TokenizerName.Whitespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Search.Documents.Models.TokenizerName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Divides text at whitespace. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/core/WhitespaceTokenizer.html. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

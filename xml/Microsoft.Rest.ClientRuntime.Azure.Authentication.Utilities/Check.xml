<Type Name="Check" FullName="Microsoft.Rest.ClientRuntime.Azure.Authentication.Utilities.Check">
  <TypeSignature Language="C#" Value="public static class Check" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Check extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Rest.ClientRuntime.Azure.Authentication.Utilities.Check" />
  <TypeSignature Language="VB.NET" Value="Public Class Check" />
  <TypeSignature Language="F#" Value="type Check = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Rest.ClientRuntime.Azure.Authentication</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Utility to check Null/Empty and throw appropriate exceptions
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="DirectoryExists">
      <MemberSignature Language="C#" Value="public static void DirectoryExists (string dirPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DirectoryExists(string dirPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Rest.ClientRuntime.Azure.Authentication.Utilities.Check.DirectoryExists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DirectoryExists (dirPath As String)" />
      <MemberSignature Language="F#" Value="static member DirectoryExists : string -&gt; unit" Usage="Microsoft.Rest.ClientRuntime.Azure.Authentication.Utilities.Check.DirectoryExists dirPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Rest.ClientRuntime.Azure.Authentication</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dirPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dirPath">Directory Path</param>
        <summary>
            Checks if the DirectoryPath exists
            Throws DirectoryNotFoundException if the DirectoryPath does not exists
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Empty&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void Empty&lt;T&gt; (System.Collections.Generic.IEnumerable&lt;T&gt; collection, bool expectedResult, string exceptionMessage = &quot;Collection items do not match with expectedResult&quot;);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Empty&lt;T&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; collection, bool expectedResult, string exceptionMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Rest.ClientRuntime.Azure.Authentication.Utilities.Check.Empty``1(System.Collections.Generic.IEnumerable{``0},System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Empty(Of T) (collection As IEnumerable(Of T), expectedResult As Boolean, Optional exceptionMessage As String = &quot;Collection items do not match with expectedResult&quot;)" />
      <MemberSignature Language="F#" Value="static member Empty : seq&lt;'T&gt; * bool * string -&gt; unit" Usage="Microsoft.Rest.ClientRuntime.Azure.Authentication.Utilities.Check.Empty (collection, expectedResult, exceptionMessage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Rest.ClientRuntime.Azure.Authentication</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
        <Parameter Name="expectedResult" Type="System.Boolean" />
        <Parameter Name="exceptionMessage" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="collection">To be added.</param>
        <param name="expectedResult">To be added.</param>
        <param name="exceptionMessage">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FileExists">
      <MemberSignature Language="C#" Value="public static void FileExists (string filePath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FileExists(string filePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Rest.ClientRuntime.Azure.Authentication.Utilities.Check.FileExists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub FileExists (filePath As String)" />
      <MemberSignature Language="F#" Value="static member FileExists : string -&gt; unit" Usage="Microsoft.Rest.ClientRuntime.Azure.Authentication.Utilities.Check.FileExists filePath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Rest.ClientRuntime.Azure.Authentication</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filePath">file path info for logging purpose</param>
        <summary>
            Checks if the FilePath exists
            Throws FileNotFoundException if the filePath does not exists
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NotEmptyNotNull">
      <MemberSignature Language="C#" Value="public static void NotEmptyNotNull (string argument, string argumentName = &quot;argument&quot;);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void NotEmptyNotNull(string argument, string argumentName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Rest.ClientRuntime.Azure.Authentication.Utilities.Check.NotEmptyNotNull(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub NotEmptyNotNull (argument As String, Optional argumentName As String = &quot;argument&quot;)" />
      <MemberSignature Language="F#" Value="static member NotEmptyNotNull : string * string -&gt; unit" Usage="Microsoft.Rest.ClientRuntime.Azure.Authentication.Utilities.Check.NotEmptyNotNull (argument, argumentName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Rest.ClientRuntime.Azure.Authentication</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="argumentName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="argument">arument info for logging purpose</param>
        <param name="argumentName">argument info for logging</param>
        <summary>
            Checks if the string argument passed in is NonEmpty and NotNull
            Throws NullReferenceException if the arugment is Null or Empty
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NotNull">
      <MemberSignature Language="C#" Value="public static void NotNull (object argument, string argumentName = &quot;argument&quot;);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void NotNull(object argument, string argumentName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Rest.ClientRuntime.Azure.Authentication.Utilities.Check.NotNull(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub NotNull (argument As Object, Optional argumentName As String = &quot;argument&quot;)" />
      <MemberSignature Language="F#" Value="static member NotNull : obj * string -&gt; unit" Usage="Microsoft.Rest.ClientRuntime.Azure.Authentication.Utilities.Check.NotNull (argument, argumentName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Rest.ClientRuntime.Azure.Authentication</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Object" />
        <Parameter Name="argumentName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="argument">arument info for logging purpose</param>
        <param name="argumentName">argument info for logging</param>
        <summary>
            Checks if the argument passed in is NotNull
            Throws NullReferenceException if the arugment is Null
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

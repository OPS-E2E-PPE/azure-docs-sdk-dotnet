<Type Name="MatchCondition" FullName="Microsoft.Azure.Management.Cdn.Models.MatchCondition">
  <TypeSignature Language="C#" Value="public class MatchCondition" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MatchCondition extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Management.Cdn.Models.MatchCondition" />
  <TypeSignature Language="VB.NET" Value="Public Class MatchCondition" />
  <TypeSignature Language="F#" Value="type MatchCondition = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Management.Cdn</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Define match conditions
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MatchCondition ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Cdn.Models.MatchCondition.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Cdn</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the MatchCondition class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MatchCondition (string matchVariable, string operatorProperty, System.Collections.Generic.IList&lt;string&gt; matchValue, string selector = default, bool? negateCondition = default, System.Collections.Generic.IList&lt;string&gt; transforms = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string matchVariable, string operatorProperty, class System.Collections.Generic.IList`1&lt;string&gt; matchValue, string selector, valuetype System.Nullable`1&lt;bool&gt; negateCondition, class System.Collections.Generic.IList`1&lt;string&gt; transforms) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Cdn.Models.MatchCondition.#ctor(System.String,System.String,System.Collections.Generic.IList{System.String},System.String,System.Nullable{System.Boolean},System.Collections.Generic.IList{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (matchVariable As String, operatorProperty As String, matchValue As IList(Of String), Optional selector As String = Nothing, Optional negateCondition As Nullable(Of Boolean) = Nothing, Optional transforms As IList(Of String) = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.Management.Cdn.Models.MatchCondition : string * string * System.Collections.Generic.IList&lt;string&gt; * string * Nullable&lt;bool&gt; * System.Collections.Generic.IList&lt;string&gt; -&gt; Microsoft.Azure.Management.Cdn.Models.MatchCondition" Usage="new Microsoft.Azure.Management.Cdn.Models.MatchCondition (matchVariable, operatorProperty, matchValue, selector, negateCondition, transforms)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Cdn</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="matchVariable" Type="System.String" />
        <Parameter Name="operatorProperty" Type="System.String" />
        <Parameter Name="matchValue" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="selector" Type="System.String" />
        <Parameter Name="negateCondition" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="transforms" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="matchVariable">Match variable to compare against.
            Possible values include: 'RemoteAddr', 'SocketAddr',
            'RequestMethod', 'RequestHeader', 'RequestUri', 'QueryString',
            'RequestBody', 'Cookies', 'PostArgs'</param>
        <param name="operatorProperty">Describes operator to be matched.
            Possible values include: 'Any', 'IPMatch', 'GeoMatch', 'Equal',
            'Contains', 'LessThan', 'GreaterThan', 'LessThanOrEqual',
            'GreaterThanOrEqual', 'BeginsWith', 'EndsWith', 'RegEx'</param>
        <param name="matchValue">List of possible match values.</param>
        <param name="selector">Selector can used to match a specific key
            for QueryString, Cookies, RequestHeader or PostArgs.</param>
        <param name="negateCondition">Describes if the result of this
            condition should be negated.</param>
        <param name="transforms">List of transforms.</param>
        <summary>
            Initializes a new instance of the MatchCondition class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MatchValue">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;string&gt; MatchValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;string&gt; MatchValue" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Cdn.Models.MatchCondition.MatchValue" />
      <MemberSignature Language="VB.NET" Value="Public Property MatchValue As IList(Of String)" />
      <MemberSignature Language="F#" Value="member this.MatchValue : System.Collections.Generic.IList&lt;string&gt; with get, set" Usage="Microsoft.Azure.Management.Cdn.Models.MatchCondition.MatchValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Cdn</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="matchValue")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="matchValue")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets list of possible match values.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MatchVariable">
      <MemberSignature Language="C#" Value="public string MatchVariable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MatchVariable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Cdn.Models.MatchCondition.MatchVariable" />
      <MemberSignature Language="VB.NET" Value="Public Property MatchVariable As String" />
      <MemberSignature Language="F#" Value="member this.MatchVariable : string with get, set" Usage="Microsoft.Azure.Management.Cdn.Models.MatchCondition.MatchVariable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Cdn</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="matchVariable")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="matchVariable")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets match variable to compare against. Possible values
            include: 'RemoteAddr', 'SocketAddr', 'RequestMethod',
            'RequestHeader', 'RequestUri', 'QueryString', 'RequestBody',
            'Cookies', 'PostArgs'
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NegateCondition">
      <MemberSignature Language="C#" Value="public bool? NegateCondition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; NegateCondition" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Cdn.Models.MatchCondition.NegateCondition" />
      <MemberSignature Language="VB.NET" Value="Public Property NegateCondition As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.NegateCondition : Nullable&lt;bool&gt; with get, set" Usage="Microsoft.Azure.Management.Cdn.Models.MatchCondition.NegateCondition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Cdn</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="negateCondition")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="negateCondition")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets describes if the result of this condition should be
            negated.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OperatorProperty">
      <MemberSignature Language="C#" Value="public string OperatorProperty { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OperatorProperty" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Cdn.Models.MatchCondition.OperatorProperty" />
      <MemberSignature Language="VB.NET" Value="Public Property OperatorProperty As String" />
      <MemberSignature Language="F#" Value="member this.OperatorProperty : string with get, set" Usage="Microsoft.Azure.Management.Cdn.Models.MatchCondition.OperatorProperty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Cdn</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="operator")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="operator")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets describes operator to be matched. Possible values
            include: 'Any', 'IPMatch', 'GeoMatch', 'Equal', 'Contains',
            'LessThan', 'GreaterThan', 'LessThanOrEqual', 'GreaterThanOrEqual',
            'BeginsWith', 'EndsWith', 'RegEx'
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Selector">
      <MemberSignature Language="C#" Value="public string Selector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Selector" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Cdn.Models.MatchCondition.Selector" />
      <MemberSignature Language="VB.NET" Value="Public Property Selector As String" />
      <MemberSignature Language="F#" Value="member this.Selector : string with get, set" Usage="Microsoft.Azure.Management.Cdn.Models.MatchCondition.Selector" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Cdn</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="selector")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="selector")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets selector can used to match a specific key for
            QueryString, Cookies, RequestHeader or PostArgs.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Transforms">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;string&gt; Transforms { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;string&gt; Transforms" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.Cdn.Models.MatchCondition.Transforms" />
      <MemberSignature Language="VB.NET" Value="Public Property Transforms As IList(Of String)" />
      <MemberSignature Language="F#" Value="member this.Transforms : System.Collections.Generic.IList&lt;string&gt; with get, set" Usage="Microsoft.Azure.Management.Cdn.Models.MatchCondition.Transforms" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Cdn</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="transforms")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="transforms")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets list of transforms.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public virtual void Validate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Validate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.Cdn.Models.MatchCondition.Validate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Validate ()" />
      <MemberSignature Language="F#" Value="abstract member Validate : unit -&gt; unit&#xA;override this.Validate : unit -&gt; unit" Usage="matchCondition.Validate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.Cdn</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Validate the object.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
      </Docs>
    </Member>
  </Members>
</Type>

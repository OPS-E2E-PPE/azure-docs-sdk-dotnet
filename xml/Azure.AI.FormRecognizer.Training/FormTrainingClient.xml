<Type Name="FormTrainingClient" FullName="Azure.AI.FormRecognizer.Training.FormTrainingClient">
  <TypeSignature Language="C#" Value="public class FormTrainingClient" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FormTrainingClient extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.AI.FormRecognizer.Training.FormTrainingClient" />
  <TypeSignature Language="VB.NET" Value="Public Class FormTrainingClient" />
  <TypeSignature Language="F#" Value="type FormTrainingClient = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.AI.FormRecognizer</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            The client to use to connect with the Form Recognizer Azure Cognitive Service to train models from
            custom forms.  It also supports listing and deleting trained models, as well as accessing account
            properties.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected FormTrainingClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.FormRecognizer.Training.FormTrainingClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.FormRecognizer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.AI.FormRecognizer.Training.FormTrainingClient" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormTrainingClient (Uri endpoint, Azure.AzureKeyCredential credential);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, class Azure.AzureKeyCredential credential) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.FormRecognizer.Training.FormTrainingClient.#ctor(System.Uri,Azure.AzureKeyCredential)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, credential As AzureKeyCredential)" />
      <MemberSignature Language="F#" Value="new Azure.AI.FormRecognizer.Training.FormTrainingClient : Uri * Azure.AzureKeyCredential -&gt; Azure.AI.FormRecognizer.Training.FormTrainingClient" Usage="new Azure.AI.FormRecognizer.Training.FormTrainingClient (endpoint, credential)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.FormRecognizer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.AzureKeyCredential" />
      </Parameters>
      <Docs>
        <param name="endpoint">The endpoint to use for connecting to the Form Recognizer Azure Cognitive Service. The URI is likely to be similar to <c>{protocol}://{resourcename}.cognitiveservices.azure.com</c>.</param>
        <param name="credential">A credential used to authenticate to an Azure Service.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.AI.FormRecognizer.Training.FormTrainingClient" /> class.
            </summary>
        <remarks>
            Both the <paramref name="endpoint" /> URI <c>string</c> and the <paramref name="credential" /><c>string</c> key
            can be found in the Azure Portal.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormTrainingClient (Uri endpoint, Azure.AzureKeyCredential credential, Azure.AI.FormRecognizer.FormRecognizerClientOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, class Azure.AzureKeyCredential credential, class Azure.AI.FormRecognizer.FormRecognizerClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.FormRecognizer.Training.FormTrainingClient.#ctor(System.Uri,Azure.AzureKeyCredential,Azure.AI.FormRecognizer.FormRecognizerClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, credential As AzureKeyCredential, options As FormRecognizerClientOptions)" />
      <MemberSignature Language="F#" Value="new Azure.AI.FormRecognizer.Training.FormTrainingClient : Uri * Azure.AzureKeyCredential * Azure.AI.FormRecognizer.FormRecognizerClientOptions -&gt; Azure.AI.FormRecognizer.Training.FormTrainingClient" Usage="new Azure.AI.FormRecognizer.Training.FormTrainingClient (endpoint, credential, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.FormRecognizer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.AzureKeyCredential" />
        <Parameter Name="options" Type="Azure.AI.FormRecognizer.FormRecognizerClientOptions" />
      </Parameters>
      <Docs>
        <param name="endpoint">The endpoint to use for connecting to the Form Recognizer Azure Cognitive Service. The URI is likely to be similar to <c>{protocol}://{resourcename}.cognitiveservices.azure.com</c>.</param>
        <param name="credential">A credential used to authenticate to an Azure Service.</param>
        <param name="options">A set of options to apply when configuring the client.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.AI.FormRecognizer.Training.FormTrainingClient" /> class.
            </summary>
        <remarks>
            Both the <paramref name="endpoint" /> URI <c>string</c> and the <paramref name="credential" /><c>string</c> key
            can be found in the Azure Portal.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteModel">
      <MemberSignature Language="C#" Value="public virtual Azure.Response DeleteModel (string modelId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response DeleteModel(string modelId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.FormRecognizer.Training.FormTrainingClient.DeleteModel(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteModel (modelId As String, Optional cancellationToken As CancellationToken = null) As Response" />
      <MemberSignature Language="F#" Value="abstract member DeleteModel : string * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.DeleteModel : string * System.Threading.CancellationToken -&gt; Azure.Response" Usage="formTrainingClient.DeleteModel (modelId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.FormRecognizer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="modelId">The ID of the model to delete.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Deletes the model with the specified model ID.
            </summary>
        <returns>A <see cref="T:Azure.Response" /> representing the result of the operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteModelAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DeleteModelAsync (string modelId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeleteModelAsync(string modelId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.FormRecognizer.Training.FormTrainingClient.DeleteModelAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteModelAsync (modelId As String, Optional cancellationToken As CancellationToken = null) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DeleteModelAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DeleteModelAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="formTrainingClient.DeleteModelAsync (modelId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.FormRecognizer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="modelId">The ID of the model to delete.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Deletes the model with the specified model ID.
            </summary>
        <returns>A <see cref="T:Azure.Response" /> representing the result of the operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAccountProperties">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.AI.FormRecognizer.Training.AccountProperties&gt; GetAccountProperties (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.AI.FormRecognizer.Training.AccountProperties&gt; GetAccountProperties(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.FormRecognizer.Training.FormTrainingClient.GetAccountProperties(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAccountProperties (Optional cancellationToken As CancellationToken = null) As Response(Of AccountProperties)" />
      <MemberSignature Language="F#" Value="abstract member GetAccountProperties : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.FormRecognizer.Training.AccountProperties&gt;&#xA;override this.GetAccountProperties : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.FormRecognizer.Training.AccountProperties&gt;" Usage="formTrainingClient.GetAccountProperties cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.FormRecognizer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.AI.FormRecognizer.Training.AccountProperties&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Gets the number of models trained on this Cognitive Services Account and the account limits.
            </summary>
        <returns>A <see cref="T:Azure.Response`1" /> representing the result of the operation. It can be cast to an <see cref="T:Azure.AI.FormRecognizer.Training.AccountProperties" /> containing
            the account properties.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAccountPropertiesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.FormRecognizer.Training.AccountProperties&gt;&gt; GetAccountPropertiesAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.AI.FormRecognizer.Training.AccountProperties&gt;&gt; GetAccountPropertiesAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.FormRecognizer.Training.FormTrainingClient.GetAccountPropertiesAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAccountPropertiesAsync (Optional cancellationToken As CancellationToken = null) As Task(Of Response(Of AccountProperties))" />
      <MemberSignature Language="F#" Value="abstract member GetAccountPropertiesAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.FormRecognizer.Training.AccountProperties&gt;&gt;&#xA;override this.GetAccountPropertiesAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.FormRecognizer.Training.AccountProperties&gt;&gt;" Usage="formTrainingClient.GetAccountPropertiesAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.FormRecognizer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.FormRecognizer.Training.AccountProperties&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Gets the number of models trained on this Cognitive Services Account and the account limits.
            </summary>
        <returns>A <see cref="T:Azure.Response`1" /> representing the result of the operation. It can be cast to an <see cref="T:Azure.AI.FormRecognizer.Training.AccountProperties" /> containing
            the account properties.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCustomModel">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.AI.FormRecognizer.Training.CustomFormModel&gt; GetCustomModel (string modelId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.AI.FormRecognizer.Training.CustomFormModel&gt; GetCustomModel(string modelId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.FormRecognizer.Training.FormTrainingClient.GetCustomModel(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCustomModel (modelId As String, Optional cancellationToken As CancellationToken = null) As Response(Of CustomFormModel)" />
      <MemberSignature Language="F#" Value="abstract member GetCustomModel : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.FormRecognizer.Training.CustomFormModel&gt;&#xA;override this.GetCustomModel : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.FormRecognizer.Training.CustomFormModel&gt;" Usage="formTrainingClient.GetCustomModel (modelId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.FormRecognizer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.AI.FormRecognizer.Training.CustomFormModel&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="modelId">The ID of the model to retrieve.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Gets a description of a custom model, including the types of forms it can recognize and the fields it will extract for each form type.
            </summary>
        <returns>A <see cref="T:Azure.Response`1" /> representing the result of the operation. It can be cast to a <see cref="T:Azure.AI.FormRecognizer.Training.CustomFormModel" /> containing
            information about the requested model.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCustomModelAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.FormRecognizer.Training.CustomFormModel&gt;&gt; GetCustomModelAsync (string modelId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.AI.FormRecognizer.Training.CustomFormModel&gt;&gt; GetCustomModelAsync(string modelId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.FormRecognizer.Training.FormTrainingClient.GetCustomModelAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCustomModelAsync (modelId As String, Optional cancellationToken As CancellationToken = null) As Task(Of Response(Of CustomFormModel))" />
      <MemberSignature Language="F#" Value="abstract member GetCustomModelAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.FormRecognizer.Training.CustomFormModel&gt;&gt;&#xA;override this.GetCustomModelAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.FormRecognizer.Training.CustomFormModel&gt;&gt;" Usage="formTrainingClient.GetCustomModelAsync (modelId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.FormRecognizer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.FormRecognizer.Training.CustomFormModel&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="modelId">The ID of the model to retrieve.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Gets a description of a custom model, including the types of forms it can recognize and the fields it will extract for each form type.
            </summary>
        <returns>A <see cref="T:Azure.Response`1" /> representing the result of the operation. It can be cast to a <see cref="T:Azure.AI.FormRecognizer.Training.CustomFormModel" /> containing
            information about the requested model.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetModelInfos">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.AI.FormRecognizer.Training.CustomFormModelInfo&gt; GetModelInfos (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.AI.FormRecognizer.Training.CustomFormModelInfo&gt; GetModelInfos(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.FormRecognizer.Training.FormTrainingClient.GetModelInfos(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetModelInfos (Optional cancellationToken As CancellationToken = null) As Pageable(Of CustomFormModelInfo)" />
      <MemberSignature Language="F#" Value="abstract member GetModelInfos : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.AI.FormRecognizer.Training.CustomFormModelInfo&gt;&#xA;override this.GetModelInfos : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.AI.FormRecognizer.Training.CustomFormModelInfo&gt;" Usage="formTrainingClient.GetModelInfos cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.FormRecognizer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.AI.FormRecognizer.Training.CustomFormModelInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Gets a collection of items describing the models trained on this Cognitive Services Account
            and their training status.
            </summary>
        <returns>A collection of <see cref="T:Azure.AI.FormRecognizer.Training.CustomFormModelInfo" /> items.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetModelInfosAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.AI.FormRecognizer.Training.CustomFormModelInfo&gt; GetModelInfosAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.AI.FormRecognizer.Training.CustomFormModelInfo&gt; GetModelInfosAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.FormRecognizer.Training.FormTrainingClient.GetModelInfosAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetModelInfosAsync (Optional cancellationToken As CancellationToken = null) As AsyncPageable(Of CustomFormModelInfo)" />
      <MemberSignature Language="F#" Value="abstract member GetModelInfosAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.AI.FormRecognizer.Training.CustomFormModelInfo&gt;&#xA;override this.GetModelInfosAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.AI.FormRecognizer.Training.CustomFormModelInfo&gt;" Usage="formTrainingClient.GetModelInfosAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.FormRecognizer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.AI.FormRecognizer.Training.CustomFormModelInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Gets a collection of items describing the models trained on this Cognitive Services Account
            and their training status.
            </summary>
        <returns>A collection of <see cref="T:Azure.AI.FormRecognizer.Training.CustomFormModelInfo" /> items.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartTraining">
      <MemberSignature Language="C#" Value="public virtual Azure.AI.FormRecognizer.Training.TrainingOperation StartTraining (Uri trainingFiles, bool useLabels = false, Azure.AI.FormRecognizer.Training.TrainingFileFilter filter = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AI.FormRecognizer.Training.TrainingOperation StartTraining(class System.Uri trainingFiles, bool useLabels, class Azure.AI.FormRecognizer.Training.TrainingFileFilter filter, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.FormRecognizer.Training.FormTrainingClient.StartTraining(System.Uri,System.Boolean,Azure.AI.FormRecognizer.Training.TrainingFileFilter,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartTraining (trainingFiles As Uri, Optional useLabels As Boolean = false, Optional filter As TrainingFileFilter = null, Optional cancellationToken As CancellationToken = null) As TrainingOperation" />
      <MemberSignature Language="F#" Value="abstract member StartTraining : Uri * bool * Azure.AI.FormRecognizer.Training.TrainingFileFilter * System.Threading.CancellationToken -&gt; Azure.AI.FormRecognizer.Training.TrainingOperation&#xA;override this.StartTraining : Uri * bool * Azure.AI.FormRecognizer.Training.TrainingFileFilter * System.Threading.CancellationToken -&gt; Azure.AI.FormRecognizer.Training.TrainingOperation" Usage="formTrainingClient.StartTraining (trainingFiles, useLabels, filter, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.FormRecognizer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.FormRecognizer.Training.TrainingOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="trainingFiles" Type="System.Uri" />
        <Parameter Name="useLabels" Type="System.Boolean" />
        <Parameter Name="filter" Type="Azure.AI.FormRecognizer.Training.TrainingFileFilter" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="trainingFiles">An externally accessible Azure storage blob container Uri.</param>
        <param name="useLabels">If <c>true</c>, use a label file created in the &lt;link-to-label-tool-doc&gt; to provide training-time labels for training a model. If <c>false</c>, the model will be trained from forms only.</param>
        <param name="filter">Filter to apply to the documents in the source path for training.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Trains a model from a collection of custom forms in a blob storage container.
            </summary>
        <returns>A <see cref="T:Azure.AI.FormRecognizer.Training.TrainingOperation" /> to wait on this long-running operation.  Its <see cref="T:Azure.AI.FormRecognizer.Training.TrainingOperation" />.Value upon successful
            completion will contain meta-data about the trained model.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartTrainingAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.AI.FormRecognizer.Training.TrainingOperation&gt; StartTrainingAsync (Uri trainingFiles, bool useLabels = false, Azure.AI.FormRecognizer.Training.TrainingFileFilter filter = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.AI.FormRecognizer.Training.TrainingOperation&gt; StartTrainingAsync(class System.Uri trainingFiles, bool useLabels, class Azure.AI.FormRecognizer.Training.TrainingFileFilter filter, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.FormRecognizer.Training.FormTrainingClient.StartTrainingAsync(System.Uri,System.Boolean,Azure.AI.FormRecognizer.Training.TrainingFileFilter,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartTrainingAsync (trainingFiles As Uri, Optional useLabels As Boolean = false, Optional filter As TrainingFileFilter = null, Optional cancellationToken As CancellationToken = null) As Task(Of TrainingOperation)" />
      <MemberSignature Language="F#" Value="abstract member StartTrainingAsync : Uri * bool * Azure.AI.FormRecognizer.Training.TrainingFileFilter * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.AI.FormRecognizer.Training.TrainingOperation&gt;&#xA;override this.StartTrainingAsync : Uri * bool * Azure.AI.FormRecognizer.Training.TrainingFileFilter * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.AI.FormRecognizer.Training.TrainingOperation&gt;" Usage="formTrainingClient.StartTrainingAsync (trainingFiles, useLabels, filter, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.FormRecognizer</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.AI.FormRecognizer.Training.TrainingOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="trainingFiles" Type="System.Uri" />
        <Parameter Name="useLabels" Type="System.Boolean" />
        <Parameter Name="filter" Type="Azure.AI.FormRecognizer.Training.TrainingFileFilter" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="trainingFiles">An externally accessible Azure storage blob container Uri.</param>
        <param name="useLabels">If <c>true</c>, use a label file created in the &lt;link-to-label-tool-doc&gt; to provide training-time labels for training a model. If <c>false</c>, the model will be trained from forms only.</param>
        <param name="filter">Filter to apply to the documents in the source path for training.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Trains a model from a collection of custom forms in a blob storage container.
            </summary>
        <returns>A <see cref="T:Azure.AI.FormRecognizer.Training.TrainingOperation" /> to wait on this long-running operation.  Its <see cref="T:Azure.AI.FormRecognizer.Training.TrainingOperation" />.Value upon successful
            completion will contain meta-data about the trained model.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

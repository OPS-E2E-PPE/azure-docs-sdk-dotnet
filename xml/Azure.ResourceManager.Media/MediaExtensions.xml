<Type Name="MediaExtensions" FullName="Azure.ResourceManager.Media.MediaExtensions">
  <TypeSignature Language="C#" Value="public static class MediaExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit MediaExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Media.MediaExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module MediaExtensions" />
  <TypeSignature Language="F#" Value="type MediaExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Media</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to Azure.ResourceManager.Media. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CheckNameAvailabilityLocation">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.Media.Models.EntityNameAvailabilityCheckOutput&gt; CheckNameAvailabilityLocation (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string locationName, Azure.ResourceManager.Media.Models.CheckNameAvailabilityContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.Media.Models.EntityNameAvailabilityCheckOutput&gt; CheckNameAvailabilityLocation(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string locationName, class Azure.ResourceManager.Media.Models.CheckNameAvailabilityContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Media.MediaExtensions.CheckNameAvailabilityLocation(Azure.ResourceManager.Resources.SubscriptionResource,System.String,Azure.ResourceManager.Media.Models.CheckNameAvailabilityContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CheckNameAvailabilityLocation (subscriptionResource As SubscriptionResource, locationName As String, content As CheckNameAvailabilityContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of EntityNameAvailabilityCheckOutput)" />
      <MemberSignature Language="F#" Value="static member CheckNameAvailabilityLocation : Azure.ResourceManager.Resources.SubscriptionResource * string * Azure.ResourceManager.Media.Models.CheckNameAvailabilityContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Media.Models.EntityNameAvailabilityCheckOutput&gt;" Usage="Azure.ResourceManager.Media.MediaExtensions.CheckNameAvailabilityLocation (subscriptionResource, locationName, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Media</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Media.Models.EntityNameAvailabilityCheckOutput&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="locationName" Type="System.String" />
        <Parameter Name="content" Type="Azure.ResourceManager.Media.Models.CheckNameAvailabilityContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="locationName"> Location name. </param>
        <param name="content"> The request parameters. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Checks whether the Media Service resource name is available.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Media/locations/{locationName}/checkNameAvailability
            Operation Id: Locations_CheckNameAvailability
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="locationName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="locationName" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CheckNameAvailabilityLocationAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Media.Models.EntityNameAvailabilityCheckOutput&gt;&gt; CheckNameAvailabilityLocationAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string locationName, Azure.ResourceManager.Media.Models.CheckNameAvailabilityContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Media.Models.EntityNameAvailabilityCheckOutput&gt;&gt; CheckNameAvailabilityLocationAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string locationName, class Azure.ResourceManager.Media.Models.CheckNameAvailabilityContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Media.MediaExtensions.CheckNameAvailabilityLocationAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.String,Azure.ResourceManager.Media.Models.CheckNameAvailabilityContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CheckNameAvailabilityLocationAsync (subscriptionResource As SubscriptionResource, locationName As String, content As CheckNameAvailabilityContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of EntityNameAvailabilityCheckOutput))" />
      <MemberSignature Language="F#" Value="static member CheckNameAvailabilityLocationAsync : Azure.ResourceManager.Resources.SubscriptionResource * string * Azure.ResourceManager.Media.Models.CheckNameAvailabilityContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Media.Models.EntityNameAvailabilityCheckOutput&gt;&gt;" Usage="Azure.ResourceManager.Media.MediaExtensions.CheckNameAvailabilityLocationAsync (subscriptionResource, locationName, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Media</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Media.Models.EntityNameAvailabilityCheckOutput&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="locationName" Type="System.String" />
        <Parameter Name="content" Type="Azure.ResourceManager.Media.Models.CheckNameAvailabilityContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="locationName"> Location name. </param>
        <param name="content"> The request parameters. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Checks whether the Media Service resource name is available.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Media/locations/{locationName}/checkNameAvailability
            Operation Id: Locations_CheckNameAvailability
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="locationName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="locationName" /> or <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAccountFilterResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Media.AccountFilterResource GetAccountFilterResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Media.AccountFilterResource GetAccountFilterResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Media.MediaExtensions.GetAccountFilterResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAccountFilterResource (client As ArmClient, id As ResourceIdentifier) As AccountFilterResource" />
      <MemberSignature Language="F#" Value="static member GetAccountFilterResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Media.AccountFilterResource" Usage="Azure.ResourceManager.Media.MediaExtensions.GetAccountFilterResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Media</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Media.AccountFilterResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Media.AccountFilterResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Media.AccountFilterResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.Media.AccountFilterResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Media.AccountFilterResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAssetFilterResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Media.AssetFilterResource GetAssetFilterResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Media.AssetFilterResource GetAssetFilterResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Media.MediaExtensions.GetAssetFilterResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAssetFilterResource (client As ArmClient, id As ResourceIdentifier) As AssetFilterResource" />
      <MemberSignature Language="F#" Value="static member GetAssetFilterResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Media.AssetFilterResource" Usage="Azure.ResourceManager.Media.MediaExtensions.GetAssetFilterResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Media</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Media.AssetFilterResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Media.AssetFilterResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Media.AssetFilterResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.Media.AssetFilterResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Media.AssetFilterResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAssetResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Media.AssetResource GetAssetResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Media.AssetResource GetAssetResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Media.MediaExtensions.GetAssetResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAssetResource (client As ArmClient, id As ResourceIdentifier) As AssetResource" />
      <MemberSignature Language="F#" Value="static member GetAssetResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Media.AssetResource" Usage="Azure.ResourceManager.Media.MediaExtensions.GetAssetResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Media</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Media.AssetResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Media.AssetResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Media.AssetResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.Media.AssetResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Media.AssetResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContentKeyPolicyResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Media.ContentKeyPolicyResource GetContentKeyPolicyResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Media.ContentKeyPolicyResource GetContentKeyPolicyResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Media.MediaExtensions.GetContentKeyPolicyResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetContentKeyPolicyResource (client As ArmClient, id As ResourceIdentifier) As ContentKeyPolicyResource" />
      <MemberSignature Language="F#" Value="static member GetContentKeyPolicyResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Media.ContentKeyPolicyResource" Usage="Azure.ResourceManager.Media.MediaExtensions.GetContentKeyPolicyResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Media</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Media.ContentKeyPolicyResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Media.ContentKeyPolicyResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Media.ContentKeyPolicyResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Media.ContentKeyPolicyResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Media.ContentKeyPolicyResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetJobResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Media.JobResource GetJobResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Media.JobResource GetJobResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Media.MediaExtensions.GetJobResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetJobResource (client As ArmClient, id As ResourceIdentifier) As JobResource" />
      <MemberSignature Language="F#" Value="static member GetJobResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Media.JobResource" Usage="Azure.ResourceManager.Media.MediaExtensions.GetJobResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Media</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Media.JobResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Media.JobResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Media.JobResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Media.JobResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Media.JobResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLiveEventResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Media.LiveEventResource GetLiveEventResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Media.LiveEventResource GetLiveEventResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Media.MediaExtensions.GetLiveEventResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetLiveEventResource (client As ArmClient, id As ResourceIdentifier) As LiveEventResource" />
      <MemberSignature Language="F#" Value="static member GetLiveEventResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Media.LiveEventResource" Usage="Azure.ResourceManager.Media.MediaExtensions.GetLiveEventResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Media</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Media.LiveEventResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Media.LiveEventResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Media.LiveEventResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Media.LiveEventResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Media.LiveEventResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLiveOutputResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Media.LiveOutputResource GetLiveOutputResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Media.LiveOutputResource GetLiveOutputResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Media.MediaExtensions.GetLiveOutputResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetLiveOutputResource (client As ArmClient, id As ResourceIdentifier) As LiveOutputResource" />
      <MemberSignature Language="F#" Value="static member GetLiveOutputResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Media.LiveOutputResource" Usage="Azure.ResourceManager.Media.MediaExtensions.GetLiveOutputResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Media</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Media.LiveOutputResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Media.LiveOutputResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Media.LiveOutputResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Media.LiveOutputResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Media.LiveOutputResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLocationMediaServicesOperationResult">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.Media.LocationMediaServicesOperationResultResource&gt; GetLocationMediaServicesOperationResult (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string locationName, string operationId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.Media.LocationMediaServicesOperationResultResource&gt; GetLocationMediaServicesOperationResult(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string locationName, string operationId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Media.MediaExtensions.GetLocationMediaServicesOperationResult(Azure.ResourceManager.Resources.SubscriptionResource,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetLocationMediaServicesOperationResult (subscriptionResource As SubscriptionResource, locationName As String, operationId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of LocationMediaServicesOperationResultResource)" />
      <MemberSignature Language="F#" Value="static member GetLocationMediaServicesOperationResult : Azure.ResourceManager.Resources.SubscriptionResource * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Media.LocationMediaServicesOperationResultResource&gt;" Usage="Azure.ResourceManager.Media.MediaExtensions.GetLocationMediaServicesOperationResult (subscriptionResource, locationName, operationId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Media</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Media.LocationMediaServicesOperationResultResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="locationName" Type="System.String" />
        <Parameter Name="operationId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="locationName"> Location name. </param>
        <param name="operationId"> Operation Id. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get media service operation result.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Media/locations/{locationName}/mediaServicesOperationResults/{operationId}
            Operation Id: MediaServicesOperationResults_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="locationName" /> or <paramref name="operationId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="locationName" /> or <paramref name="operationId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetLocationMediaServicesOperationResultAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Media.LocationMediaServicesOperationResultResource&gt;&gt; GetLocationMediaServicesOperationResultAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string locationName, string operationId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Media.LocationMediaServicesOperationResultResource&gt;&gt; GetLocationMediaServicesOperationResultAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string locationName, string operationId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Media.MediaExtensions.GetLocationMediaServicesOperationResultAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetLocationMediaServicesOperationResultAsync (subscriptionResource As SubscriptionResource, locationName As String, operationId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of LocationMediaServicesOperationResultResource))" />
      <MemberSignature Language="F#" Value="static member GetLocationMediaServicesOperationResultAsync : Azure.ResourceManager.Resources.SubscriptionResource * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Media.LocationMediaServicesOperationResultResource&gt;&gt;" Usage="Azure.ResourceManager.Media.MediaExtensions.GetLocationMediaServicesOperationResultAsync (subscriptionResource, locationName, operationId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Media</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Media.LocationMediaServicesOperationResultResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="locationName" Type="System.String" />
        <Parameter Name="operationId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="locationName"> Location name. </param>
        <param name="operationId"> Operation Id. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get media service operation result.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Media/locations/{locationName}/mediaServicesOperationResults/{operationId}
            Operation Id: MediaServicesOperationResults_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="locationName" /> or <paramref name="operationId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="locationName" /> or <paramref name="operationId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetLocationMediaServicesOperationResultResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Media.LocationMediaServicesOperationResultResource GetLocationMediaServicesOperationResultResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Media.LocationMediaServicesOperationResultResource GetLocationMediaServicesOperationResultResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Media.MediaExtensions.GetLocationMediaServicesOperationResultResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetLocationMediaServicesOperationResultResource (client As ArmClient, id As ResourceIdentifier) As LocationMediaServicesOperationResultResource" />
      <MemberSignature Language="F#" Value="static member GetLocationMediaServicesOperationResultResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Media.LocationMediaServicesOperationResultResource" Usage="Azure.ResourceManager.Media.MediaExtensions.GetLocationMediaServicesOperationResultResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Media</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Media.LocationMediaServicesOperationResultResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Media.LocationMediaServicesOperationResultResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Media.LocationMediaServicesOperationResultResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Media.LocationMediaServicesOperationResultResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Media.LocationMediaServicesOperationResultResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLocationMediaServicesOperationResults">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Media.LocationMediaServicesOperationResultCollection GetLocationMediaServicesOperationResults (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Media.LocationMediaServicesOperationResultCollection GetLocationMediaServicesOperationResults(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Media.MediaExtensions.GetLocationMediaServicesOperationResults(Azure.ResourceManager.Resources.SubscriptionResource)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetLocationMediaServicesOperationResults (subscriptionResource As SubscriptionResource) As LocationMediaServicesOperationResultCollection" />
      <MemberSignature Language="F#" Value="static member GetLocationMediaServicesOperationResults : Azure.ResourceManager.Resources.SubscriptionResource -&gt; Azure.ResourceManager.Media.LocationMediaServicesOperationResultCollection" Usage="Azure.ResourceManager.Media.MediaExtensions.GetLocationMediaServicesOperationResults subscriptionResource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Media</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Media.LocationMediaServicesOperationResultCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <summary> Gets a collection of LocationMediaServicesOperationResultResources in the SubscriptionResource. </summary>
        <returns> An object representing collection of LocationMediaServicesOperationResultResources and their operations over a LocationMediaServicesOperationResultResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMediaPrivateEndpointConnectionResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Media.MediaPrivateEndpointConnectionResource GetMediaPrivateEndpointConnectionResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Media.MediaPrivateEndpointConnectionResource GetMediaPrivateEndpointConnectionResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Media.MediaExtensions.GetMediaPrivateEndpointConnectionResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetMediaPrivateEndpointConnectionResource (client As ArmClient, id As ResourceIdentifier) As MediaPrivateEndpointConnectionResource" />
      <MemberSignature Language="F#" Value="static member GetMediaPrivateEndpointConnectionResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Media.MediaPrivateEndpointConnectionResource" Usage="Azure.ResourceManager.Media.MediaExtensions.GetMediaPrivateEndpointConnectionResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Media</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Media.MediaPrivateEndpointConnectionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Media.MediaPrivateEndpointConnectionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Media.MediaPrivateEndpointConnectionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Media.MediaPrivateEndpointConnectionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Media.MediaPrivateEndpointConnectionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMediaPrivateLinkResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Media.MediaPrivateLinkResource GetMediaPrivateLinkResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Media.MediaPrivateLinkResource GetMediaPrivateLinkResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Media.MediaExtensions.GetMediaPrivateLinkResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetMediaPrivateLinkResource (client As ArmClient, id As ResourceIdentifier) As MediaPrivateLinkResource" />
      <MemberSignature Language="F#" Value="static member GetMediaPrivateLinkResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Media.MediaPrivateLinkResource" Usage="Azure.ResourceManager.Media.MediaExtensions.GetMediaPrivateLinkResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Media</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Media.MediaPrivateLinkResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Media.MediaPrivateLinkResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Media.MediaPrivateLinkResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Media.MediaPrivateLinkResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Media.MediaPrivateLinkResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMediaservice">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.Media.MediaserviceResource&gt; GetMediaservice (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string accountName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.Media.MediaserviceResource&gt; GetMediaservice(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string accountName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Media.MediaExtensions.GetMediaservice(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetMediaservice (resourceGroupResource As ResourceGroupResource, accountName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of MediaserviceResource)" />
      <MemberSignature Language="F#" Value="static member GetMediaservice : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Media.MediaserviceResource&gt;" Usage="Azure.ResourceManager.Media.MediaExtensions.GetMediaservice (resourceGroupResource, accountName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Media</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Media.MediaserviceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="accountName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="accountName"> The Media Services account name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the details of a Media Services account
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaservices/{accountName}
            Operation Id: Mediaservices_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="accountName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="accountName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMediaServiceAssetTrackOperationResultResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Media.MediaServiceAssetTrackOperationResultResource GetMediaServiceAssetTrackOperationResultResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Media.MediaServiceAssetTrackOperationResultResource GetMediaServiceAssetTrackOperationResultResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Media.MediaExtensions.GetMediaServiceAssetTrackOperationResultResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetMediaServiceAssetTrackOperationResultResource (client As ArmClient, id As ResourceIdentifier) As MediaServiceAssetTrackOperationResultResource" />
      <MemberSignature Language="F#" Value="static member GetMediaServiceAssetTrackOperationResultResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Media.MediaServiceAssetTrackOperationResultResource" Usage="Azure.ResourceManager.Media.MediaExtensions.GetMediaServiceAssetTrackOperationResultResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Media</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Media.MediaServiceAssetTrackOperationResultResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Media.MediaServiceAssetTrackOperationResultResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Media.MediaServiceAssetTrackOperationResultResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Media.MediaServiceAssetTrackOperationResultResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Media.MediaServiceAssetTrackOperationResultResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMediaServiceAssetTrackResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Media.MediaServiceAssetTrackResource GetMediaServiceAssetTrackResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Media.MediaServiceAssetTrackResource GetMediaServiceAssetTrackResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Media.MediaExtensions.GetMediaServiceAssetTrackResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetMediaServiceAssetTrackResource (client As ArmClient, id As ResourceIdentifier) As MediaServiceAssetTrackResource" />
      <MemberSignature Language="F#" Value="static member GetMediaServiceAssetTrackResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Media.MediaServiceAssetTrackResource" Usage="Azure.ResourceManager.Media.MediaExtensions.GetMediaServiceAssetTrackResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Media</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Media.MediaServiceAssetTrackResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Media.MediaServiceAssetTrackResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Media.MediaServiceAssetTrackResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Media.MediaServiceAssetTrackResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Media.MediaServiceAssetTrackResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMediaserviceAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Media.MediaserviceResource&gt;&gt; GetMediaserviceAsync (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string accountName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Media.MediaserviceResource&gt;&gt; GetMediaserviceAsync(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string accountName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Media.MediaExtensions.GetMediaserviceAsync(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetMediaserviceAsync (resourceGroupResource As ResourceGroupResource, accountName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of MediaserviceResource))" />
      <MemberSignature Language="F#" Value="static member GetMediaserviceAsync : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Media.MediaserviceResource&gt;&gt;" Usage="Azure.ResourceManager.Media.MediaExtensions.GetMediaserviceAsync (resourceGroupResource, accountName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Media</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Media.MediaserviceResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="accountName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="accountName"> The Media Services account name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the details of a Media Services account
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaservices/{accountName}
            Operation Id: Mediaservices_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="accountName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="accountName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMediaserviceResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Media.MediaserviceResource GetMediaserviceResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Media.MediaserviceResource GetMediaserviceResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Media.MediaExtensions.GetMediaserviceResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetMediaserviceResource (client As ArmClient, id As ResourceIdentifier) As MediaserviceResource" />
      <MemberSignature Language="F#" Value="static member GetMediaserviceResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Media.MediaserviceResource" Usage="Azure.ResourceManager.Media.MediaExtensions.GetMediaserviceResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Media</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Media.MediaserviceResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Media.MediaserviceResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Media.MediaserviceResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Media.MediaserviceResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Media.MediaserviceResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMediaservices">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Media.MediaserviceCollection GetMediaservices (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Media.MediaserviceCollection GetMediaservices(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Media.MediaExtensions.GetMediaservices(Azure.ResourceManager.Resources.ResourceGroupResource)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetMediaservices (resourceGroupResource As ResourceGroupResource) As MediaserviceCollection" />
      <MemberSignature Language="F#" Value="static member GetMediaservices : Azure.ResourceManager.Resources.ResourceGroupResource -&gt; Azure.ResourceManager.Media.MediaserviceCollection" Usage="Azure.ResourceManager.Media.MediaExtensions.GetMediaservices resourceGroupResource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Media</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Media.MediaserviceCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <summary> Gets a collection of MediaserviceResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of MediaserviceResources and their operations over a MediaserviceResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMediaservices">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.Media.MediaserviceResource&gt; GetMediaservices (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.Media.MediaserviceResource&gt; GetMediaservices(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Media.MediaExtensions.GetMediaservices(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetMediaservices (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of MediaserviceResource)" />
      <MemberSignature Language="F#" Value="static member GetMediaservices : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Media.MediaserviceResource&gt;" Usage="Azure.ResourceManager.Media.MediaExtensions.GetMediaservices (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Media</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Media.MediaserviceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List Media Services accounts in the subscription.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Media/mediaservices
            Operation Id: Mediaservices_ListBySubscription
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Media.MediaserviceResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMediaservicesAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.Media.MediaserviceResource&gt; GetMediaservicesAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Media.MediaserviceResource&gt; GetMediaservicesAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Media.MediaExtensions.GetMediaservicesAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetMediaservicesAsync (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of MediaserviceResource)" />
      <MemberSignature Language="F#" Value="static member GetMediaservicesAsync : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Media.MediaserviceResource&gt;" Usage="Azure.ResourceManager.Media.MediaExtensions.GetMediaservicesAsync (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Media</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Media.MediaserviceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List Media Services accounts in the subscription.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Media/mediaservices
            Operation Id: Mediaservices_ListBySubscription
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Media.MediaserviceResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMediaServicesOperationStatus">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.Media.Models.MediaServiceOperationStatus&gt; GetMediaServicesOperationStatus (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string locationName, string operationId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.Media.Models.MediaServiceOperationStatus&gt; GetMediaServicesOperationStatus(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string locationName, string operationId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Media.MediaExtensions.GetMediaServicesOperationStatus(Azure.ResourceManager.Resources.SubscriptionResource,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetMediaServicesOperationStatus (subscriptionResource As SubscriptionResource, locationName As String, operationId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of MediaServiceOperationStatus)" />
      <MemberSignature Language="F#" Value="static member GetMediaServicesOperationStatus : Azure.ResourceManager.Resources.SubscriptionResource * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Media.Models.MediaServiceOperationStatus&gt;" Usage="Azure.ResourceManager.Media.MediaExtensions.GetMediaServicesOperationStatus (subscriptionResource, locationName, operationId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Media</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Media.Models.MediaServiceOperationStatus&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="locationName" Type="System.String" />
        <Parameter Name="operationId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="locationName"> Location name. </param>
        <param name="operationId"> Operation ID. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get media service operation status.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Media/locations/{locationName}/mediaServicesOperationStatuses/{operationId}
            Operation Id: MediaServicesOperationStatuses_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="locationName" /> or <paramref name="operationId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="locationName" /> or <paramref name="operationId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMediaServicesOperationStatusAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Media.Models.MediaServiceOperationStatus&gt;&gt; GetMediaServicesOperationStatusAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string locationName, string operationId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Media.Models.MediaServiceOperationStatus&gt;&gt; GetMediaServicesOperationStatusAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string locationName, string operationId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Media.MediaExtensions.GetMediaServicesOperationStatusAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetMediaServicesOperationStatusAsync (subscriptionResource As SubscriptionResource, locationName As String, operationId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of MediaServiceOperationStatus))" />
      <MemberSignature Language="F#" Value="static member GetMediaServicesOperationStatusAsync : Azure.ResourceManager.Resources.SubscriptionResource * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Media.Models.MediaServiceOperationStatus&gt;&gt;" Usage="Azure.ResourceManager.Media.MediaExtensions.GetMediaServicesOperationStatusAsync (subscriptionResource, locationName, operationId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Media</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Media.Models.MediaServiceOperationStatus&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="locationName" Type="System.String" />
        <Parameter Name="operationId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="locationName"> Location name. </param>
        <param name="operationId"> Operation ID. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get media service operation status.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Media/locations/{locationName}/mediaServicesOperationStatuses/{operationId}
            Operation Id: MediaServicesOperationStatuses_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="locationName" /> or <paramref name="operationId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="locationName" /> or <paramref name="operationId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetStreamingEndpointResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Media.StreamingEndpointResource GetStreamingEndpointResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Media.StreamingEndpointResource GetStreamingEndpointResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Media.MediaExtensions.GetStreamingEndpointResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetStreamingEndpointResource (client As ArmClient, id As ResourceIdentifier) As StreamingEndpointResource" />
      <MemberSignature Language="F#" Value="static member GetStreamingEndpointResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Media.StreamingEndpointResource" Usage="Azure.ResourceManager.Media.MediaExtensions.GetStreamingEndpointResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Media</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Media.StreamingEndpointResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Media.StreamingEndpointResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Media.StreamingEndpointResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Media.StreamingEndpointResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Media.StreamingEndpointResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStreamingLocatorResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Media.StreamingLocatorResource GetStreamingLocatorResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Media.StreamingLocatorResource GetStreamingLocatorResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Media.MediaExtensions.GetStreamingLocatorResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetStreamingLocatorResource (client As ArmClient, id As ResourceIdentifier) As StreamingLocatorResource" />
      <MemberSignature Language="F#" Value="static member GetStreamingLocatorResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Media.StreamingLocatorResource" Usage="Azure.ResourceManager.Media.MediaExtensions.GetStreamingLocatorResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Media</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Media.StreamingLocatorResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Media.StreamingLocatorResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Media.StreamingLocatorResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Media.StreamingLocatorResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Media.StreamingLocatorResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStreamingPolicyResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Media.StreamingPolicyResource GetStreamingPolicyResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Media.StreamingPolicyResource GetStreamingPolicyResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Media.MediaExtensions.GetStreamingPolicyResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetStreamingPolicyResource (client As ArmClient, id As ResourceIdentifier) As StreamingPolicyResource" />
      <MemberSignature Language="F#" Value="static member GetStreamingPolicyResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Media.StreamingPolicyResource" Usage="Azure.ResourceManager.Media.MediaExtensions.GetStreamingPolicyResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Media</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Media.StreamingPolicyResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Media.StreamingPolicyResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Media.StreamingPolicyResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Media.StreamingPolicyResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Media.StreamingPolicyResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTransformResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Media.TransformResource GetTransformResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Media.TransformResource GetTransformResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Media.MediaExtensions.GetTransformResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetTransformResource (client As ArmClient, id As ResourceIdentifier) As TransformResource" />
      <MemberSignature Language="F#" Value="static member GetTransformResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Media.TransformResource" Usage="Azure.ResourceManager.Media.MediaExtensions.GetTransformResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Media</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Media.TransformResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Media.TransformResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Media.TransformResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Media.TransformResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Media.TransformResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

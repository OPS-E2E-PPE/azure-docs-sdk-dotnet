<Type Name="CloudEvent" FullName="Azure.Messaging.EventGrid.CloudEvent">
  <TypeSignature Language="C#" Value="public class CloudEvent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CloudEvent extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Messaging.EventGrid.CloudEvent" />
  <TypeSignature Language="VB.NET" Value="Public Class CloudEvent" />
  <TypeSignature Language="F#" Value="type CloudEvent = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Messaging.EventGrid</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> Properties of an event published to an Event Grid topic using the CloudEvent 1.0 Schema. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CloudEvent (string source, string type, object data, Type dataSerializationType = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string source, string type, object data, class System.Type dataSerializationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventGrid.CloudEvent.#ctor(System.String,System.String,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (source As String, type As String, data As Object, Optional dataSerializationType As Type = Nothing)" />
      <MemberSignature Language="F#" Value="new Azure.Messaging.EventGrid.CloudEvent : string * string * obj * Type -&gt; Azure.Messaging.EventGrid.CloudEvent" Usage="new Azure.Messaging.EventGrid.CloudEvent (source, type, data, dataSerializationType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventGrid</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="type" Type="System.String" />
        <Parameter Name="data" Type="System.Object" />
        <Parameter Name="dataSerializationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="source"> Identifies the context in which an event happened. The combination of id and source must be unique for each distinct event. </param>
        <param name="type"> Type of event related to the originating occurrence. For example, "Contoso.Items.ItemReceived". </param>
        <param name="data"> Event data specific to the event type. </param>
        <param name="dataSerializationType">The type to use when serializing the data.
            If not specified, <see cref="M:System.Object.GetType" /> will be used on <paramref name="data" />.</param>
        <summary> Initializes a new instance of the <see cref="T:Azure.Messaging.EventGrid.CloudEvent" /> class with an object payload that will
            be serialized as JSON. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CloudEvent (string source, string type, ReadOnlyMemory&lt;byte&gt; data, string dataContentType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string source, string type, valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt; data, string dataContentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventGrid.CloudEvent.#ctor(System.String,System.String,System.ReadOnlyMemory{System.Byte},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (source As String, type As String, data As ReadOnlyMemory(Of Byte), dataContentType As String)" />
      <MemberSignature Language="F#" Value="new Azure.Messaging.EventGrid.CloudEvent : string * string * ReadOnlyMemory&lt;byte&gt; * string -&gt; Azure.Messaging.EventGrid.CloudEvent" Usage="new Azure.Messaging.EventGrid.CloudEvent (source, type, data, dataContentType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventGrid</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="type" Type="System.String" />
        <Parameter Name="data" Type="System.ReadOnlyMemory&lt;System.Byte&gt;" />
        <Parameter Name="dataContentType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source"> Identifies the context in which an event happened. The combination of id and source must be unique for each distinct event. </param>
        <param name="type"> Type of event related to the originating occurrence. For example, "Contoso.Items.ItemReceived". </param>
        <param name="data"> Binary event data specific to the event type. </param>
        <param name="dataContentType"> Content type of the payload. A content type different from "application/json" should be specified if payload is not JSON. </param>
        <summary> Initializes a new instance of the <see cref="T:Azure.Messaging.EventGrid.CloudEvent" /> class using binary event data.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataContentType">
      <MemberSignature Language="C#" Value="public string DataContentType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataContentType" />
      <MemberSignature Language="DocId" Value="P:Azure.Messaging.EventGrid.CloudEvent.DataContentType" />
      <MemberSignature Language="VB.NET" Value="Public Property DataContentType As String" />
      <MemberSignature Language="F#" Value="member this.DataContentType : string with get, set" Usage="Azure.Messaging.EventGrid.CloudEvent.DataContentType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventGrid</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the content type of the data.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataSchema">
      <MemberSignature Language="C#" Value="public string DataSchema { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataSchema" />
      <MemberSignature Language="DocId" Value="P:Azure.Messaging.EventGrid.CloudEvent.DataSchema" />
      <MemberSignature Language="VB.NET" Value="Public Property DataSchema As String" />
      <MemberSignature Language="F#" Value="member this.DataSchema : string with get, set" Usage="Azure.Messaging.EventGrid.CloudEvent.DataSchema" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventGrid</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the schema that the data adheres to.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtensionAttributes">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.Dictionary&lt;string,object&gt; ExtensionAttributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.Dictionary`2&lt;string, object&gt; ExtensionAttributes" />
      <MemberSignature Language="DocId" Value="P:Azure.Messaging.EventGrid.CloudEvent.ExtensionAttributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExtensionAttributes As Dictionary(Of String, Object)" />
      <MemberSignature Language="F#" Value="member this.ExtensionAttributes : System.Collections.Generic.Dictionary&lt;string, obj&gt;" Usage="Azure.Messaging.EventGrid.CloudEvent.ExtensionAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventGrid</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets extension attributes that can be additionally added to the CloudEvent envelope.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public BinaryData GetData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.BinaryData GetData() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventGrid.CloudEvent.GetData" />
      <MemberSignature Language="VB.NET" Value="Public Function GetData () As BinaryData" />
      <MemberSignature Language="F#" Value="member this.GetData : unit -&gt; BinaryData" Usage="cloudEvent.GetData " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventGrid</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Deserializes the event payload into a system event type or
            returns the payload of the event wrapped as <see cref="T:System.BinaryData" />. Using BinaryData,
            one can deserialize the payload into rich data, or access the raw JSON data using <see cref="M:System.BinaryData.ToString" />.
            </summary>
        <returns>
            Deserialized payload of the event. Returns null if there is no event data.
            Returns <see cref="T:System.BinaryData" /> for unknown event types.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetData&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T GetData&lt;T&gt; (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T GetData&lt;T&gt;(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventGrid.CloudEvent.GetData``1(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetData(Of T) (Optional cancellationToken As CancellationToken = Nothing) As T" />
      <MemberSignature Language="F#" Value="member this.GetData : System.Threading.CancellationToken -&gt; 'T" Usage="cloudEvent.GetData cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventGrid</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="T"> Type of event to deserialize to. </typeparam>
        <param name="cancellationToken"> The cancellation token to use during deserialization. </param>
        <summary>
            Deserializes the event payload into a specified event type using the default serializer, <see cref="T:Azure.Core.Serialization.JsonObjectSerializer" />.
            </summary>
        <returns> Deserialized payload of the event, cast to the specified type. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"> Event was not created from CloudEvent.Parse() method. </exception>
        <exception cref="T:System.InvalidCastException"> Event payload cannot be cast to the specified event type. </exception>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public string Id { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:Azure.Messaging.EventGrid.CloudEvent.Id" />
      <MemberSignature Language="VB.NET" Value="Public Property Id As String" />
      <MemberSignature Language="F#" Value="member this.Id : string with get, set" Usage="Azure.Messaging.EventGrid.CloudEvent.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventGrid</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets an identifier for the event. The combination of <see cref="P:Azure.Messaging.EventGrid.CloudEvent.Id" /> and <see cref="P:Azure.Messaging.EventGrid.CloudEvent.Source" /> must be unique for each distinct event.
            If not explicitly set, this will default to a <see cref="T:System.Guid" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static Azure.Messaging.EventGrid.CloudEvent[] Parse (string requestContent);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Messaging.EventGrid.CloudEvent[] Parse(string requestContent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventGrid.CloudEvent.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (requestContent As String) As CloudEvent()" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; Azure.Messaging.EventGrid.CloudEvent[]" Usage="Azure.Messaging.EventGrid.CloudEvent.Parse requestContent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventGrid</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Messaging.EventGrid.CloudEvent[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestContent" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="requestContent"> The JSON-encoded representation of either a single event or an array or events, in the CloudEvent schema. </param>
        <summary>
            Given JSON-encoded events, parses the event envelope and returns an array of CloudEvents.
            </summary>
        <returns> A list of <see cref="T:Azure.Messaging.EventGrid.CloudEvent" />. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public string Source { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Source" />
      <MemberSignature Language="DocId" Value="P:Azure.Messaging.EventGrid.CloudEvent.Source" />
      <MemberSignature Language="VB.NET" Value="Public Property Source As String" />
      <MemberSignature Language="F#" Value="member this.Source : string with get, set" Usage="Azure.Messaging.EventGrid.CloudEvent.Source" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventGrid</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the context in which an event happened. The combination of <see cref="P:Azure.Messaging.EventGrid.CloudEvent.Id" /> and <see cref="P:Azure.Messaging.EventGrid.CloudEvent.Source" /> must be unique for each distinct event.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Subject">
      <MemberSignature Language="C#" Value="public string Subject { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Subject" />
      <MemberSignature Language="DocId" Value="P:Azure.Messaging.EventGrid.CloudEvent.Subject" />
      <MemberSignature Language="VB.NET" Value="Public Property Subject As String" />
      <MemberSignature Language="F#" Value="member this.Subject : string with get, set" Usage="Azure.Messaging.EventGrid.CloudEvent.Subject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventGrid</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the subject of the event in the context of the event producer (identified by source). </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Time">
      <MemberSignature Language="C#" Value="public DateTimeOffset? Time { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; Time" />
      <MemberSignature Language="DocId" Value="P:Azure.Messaging.EventGrid.CloudEvent.Time" />
      <MemberSignature Language="VB.NET" Value="Public Property Time As Nullable(Of DateTimeOffset)" />
      <MemberSignature Language="F#" Value="member this.Time : Nullable&lt;DateTimeOffset&gt; with get, set" Usage="Azure.Messaging.EventGrid.CloudEvent.Time" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventGrid</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.DateTimeOffset&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the time (in UTC) the event was generated, in RFC3339 format.
            If not explicitly set, this will default to the time that the event is constructed.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetSystemEventData">
      <MemberSignature Language="C#" Value="public bool TryGetSystemEventData (out object eventData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetSystemEventData([out] object&amp; eventData) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventGrid.CloudEvent.TryGetSystemEventData(System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetSystemEventData (ByRef eventData As Object) As Boolean" />
      <MemberSignature Language="F#" Value="member this.TryGetSystemEventData : obj -&gt; bool" Usage="cloudEvent.TryGetSystemEventData eventData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventGrid</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventData" Type="System.Object" RefType="out" />
      </Parameters>
      <Docs>
        <param name="eventData">If the event is a system event, this will be populated
            with the deserialized system event data. Otherwise, this will be null.</param>
        <summary>
            Gets whether or not the event is a System defined event and returns the deserialized
            system event data via out parameter.
            </summary>
        <returns> Whether or not the event is a system event.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public string Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Type" />
      <MemberSignature Language="DocId" Value="P:Azure.Messaging.EventGrid.CloudEvent.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As String" />
      <MemberSignature Language="F#" Value="member this.Type : string with get, set" Usage="Azure.Messaging.EventGrid.CloudEvent.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventGrid</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the type of event related to the originating occurrence.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

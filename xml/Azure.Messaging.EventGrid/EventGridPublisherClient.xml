<Type Name="EventGridPublisherClient" FullName="Azure.Messaging.EventGrid.EventGridPublisherClient">
  <TypeSignature Language="C#" Value="public class EventGridPublisherClient" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EventGridPublisherClient extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Messaging.EventGrid.EventGridPublisherClient" />
  <TypeSignature Language="VB.NET" Value="Public Class EventGridPublisherClient" />
  <TypeSignature Language="F#" Value="type EventGridPublisherClient = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Messaging.EventGrid</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            The <see cref="T:Azure.Messaging.EventGrid.EventGridPublisherClient" /> is used to publish events to Event Grid topics.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EventGridPublisherClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventGrid.EventGridPublisherClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventGrid</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initalizes a new instance of the <see cref="T:Azure.Messaging.EventGrid.EventGridPublisherClient" /> class for mocking.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventGridPublisherClient (Uri endpoint, Azure.AzureKeyCredential credential);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, class Azure.AzureKeyCredential credential) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventGrid.EventGridPublisherClient.#ctor(System.Uri,Azure.AzureKeyCredential)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, credential As AzureKeyCredential)" />
      <MemberSignature Language="F#" Value="new Azure.Messaging.EventGrid.EventGridPublisherClient : Uri * Azure.AzureKeyCredential -&gt; Azure.Messaging.EventGrid.EventGridPublisherClient" Usage="new Azure.Messaging.EventGrid.EventGridPublisherClient (endpoint, credential)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventGrid</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.AzureKeyCredential" />
      </Parameters>
      <Docs>
        <param name="endpoint">The topic endpoint. For example, "https://TOPIC-NAME.REGION-NAME-1.eventgrid.azure.net/api/events".</param>
        <param name="credential">The key credential used to authenticate with the service.</param>
        <summary>Initalizes a new instance of the <see cref="T:Azure.Messaging.EventGrid.EventGridPublisherClient" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventGridPublisherClient (Uri endpoint, Azure.AzureKeyCredential credential, Azure.Messaging.EventGrid.EventGridPublisherClientOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, class Azure.AzureKeyCredential credential, class Azure.Messaging.EventGrid.EventGridPublisherClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventGrid.EventGridPublisherClient.#ctor(System.Uri,Azure.AzureKeyCredential,Azure.Messaging.EventGrid.EventGridPublisherClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, credential As AzureKeyCredential, options As EventGridPublisherClientOptions)" />
      <MemberSignature Language="F#" Value="new Azure.Messaging.EventGrid.EventGridPublisherClient : Uri * Azure.AzureKeyCredential * Azure.Messaging.EventGrid.EventGridPublisherClientOptions -&gt; Azure.Messaging.EventGrid.EventGridPublisherClient" Usage="new Azure.Messaging.EventGrid.EventGridPublisherClient (endpoint, credential, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventGrid</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.AzureKeyCredential" />
        <Parameter Name="options" Type="Azure.Messaging.EventGrid.EventGridPublisherClientOptions" />
      </Parameters>
      <Docs>
        <param name="endpoint">The topic endpoint. For example, "https://TOPIC-NAME.REGION-NAME-1.eventgrid.azure.net/api/events".</param>
        <param name="credential">The key credential used to authenticate with the service.</param>
        <param name="options">The set of options to use for configuring the client.</param>
        <summary>Initalizes a new instance of the <see cref="T:Azure.Messaging.EventGrid.EventGridPublisherClient" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventGridPublisherClient (Uri endpoint, Azure.AzureSasCredential credential, Azure.Messaging.EventGrid.EventGridPublisherClientOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, class Azure.AzureSasCredential credential, class Azure.Messaging.EventGrid.EventGridPublisherClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventGrid.EventGridPublisherClient.#ctor(System.Uri,Azure.AzureSasCredential,Azure.Messaging.EventGrid.EventGridPublisherClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, credential As AzureSasCredential, Optional options As EventGridPublisherClientOptions = Nothing)" />
      <MemberSignature Language="F#" Value="new Azure.Messaging.EventGrid.EventGridPublisherClient : Uri * Azure.AzureSasCredential * Azure.Messaging.EventGrid.EventGridPublisherClientOptions -&gt; Azure.Messaging.EventGrid.EventGridPublisherClient" Usage="new Azure.Messaging.EventGrid.EventGridPublisherClient (endpoint, credential, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventGrid</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.AzureSasCredential" />
        <Parameter Name="options" Type="Azure.Messaging.EventGrid.EventGridPublisherClientOptions" />
      </Parameters>
      <Docs>
        <param name="endpoint">The topic endpoint. For example, "https://TOPIC-NAME.REGION-NAME-1.eventgrid.azure.net/api/events".</param>
        <param name="credential">The Shared Access Signature credential used to connect to Azure. This signature
            can be constructed using the <see cref="T:Azure.Messaging.EventGrid.EventGridSasBuilder" />.</param>
        <param name="options">The set of options to use for configuring the client.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.Messaging.EventGrid.EventGridPublisherClient" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendEncodedCloudEvents">
      <MemberSignature Language="C#" Value="public virtual Azure.Response SendEncodedCloudEvents (ReadOnlyMemory&lt;byte&gt; cloudEvents, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response SendEncodedCloudEvents(valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt; cloudEvents, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventGrid.EventGridPublisherClient.SendEncodedCloudEvents(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SendEncodedCloudEvents (cloudEvents As ReadOnlyMemory(Of Byte), Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member SendEncodedCloudEvents : ReadOnlyMemory&lt;byte&gt; * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.SendEncodedCloudEvents : ReadOnlyMemory&lt;byte&gt; * System.Threading.CancellationToken -&gt; Azure.Response" Usage="eventGridPublisherClient.SendEncodedCloudEvents (cloudEvents, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventGrid</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cloudEvents" Type="System.ReadOnlyMemory&lt;System.Byte&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cloudEvents"> The set of encoded cloud events to be published to Event Grid. </param>
        <param name="cancellationToken"> An optional cancellation token instance to signal the request to cancel the operation.</param>
        <summary> Publishes a set of encoded cloud events to an Event Grid topic. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendEncodedCloudEventsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; SendEncodedCloudEventsAsync (ReadOnlyMemory&lt;byte&gt; cloudEvents, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; SendEncodedCloudEventsAsync(valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt; cloudEvents, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventGrid.EventGridPublisherClient.SendEncodedCloudEventsAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SendEncodedCloudEventsAsync (cloudEvents As ReadOnlyMemory(Of Byte), Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member SendEncodedCloudEventsAsync : ReadOnlyMemory&lt;byte&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.SendEncodedCloudEventsAsync : ReadOnlyMemory&lt;byte&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="eventGridPublisherClient.SendEncodedCloudEventsAsync (cloudEvents, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventGrid</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cloudEvents" Type="System.ReadOnlyMemory&lt;System.Byte&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cloudEvents"> The set of encoded cloud events to be published to Event Grid. </param>
        <param name="cancellationToken"> An optional cancellation token instance to signal the request to cancel the operation.</param>
        <summary> Publishes a set of encoded cloud events to an Event Grid topic. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendEvents">
      <MemberSignature Language="C#" Value="public virtual Azure.Response SendEvents (System.Collections.Generic.IEnumerable&lt;Azure.Messaging.EventGrid.CloudEvent&gt; events, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response SendEvents(class System.Collections.Generic.IEnumerable`1&lt;class Azure.Messaging.EventGrid.CloudEvent&gt; events, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventGrid.EventGridPublisherClient.SendEvents(System.Collections.Generic.IEnumerable{Azure.Messaging.EventGrid.CloudEvent},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SendEvents (events As IEnumerable(Of CloudEvent), Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member SendEvents : seq&lt;Azure.Messaging.EventGrid.CloudEvent&gt; * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.SendEvents : seq&lt;Azure.Messaging.EventGrid.CloudEvent&gt; * System.Threading.CancellationToken -&gt; Azure.Response" Usage="eventGridPublisherClient.SendEvents (events, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventGrid</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="events" Type="System.Collections.Generic.IEnumerable&lt;Azure.Messaging.EventGrid.CloudEvent&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="events"> The set of events to be published to Event Grid. </param>
        <param name="cancellationToken"> An optional cancellation token instance to signal the request to cancel the operation.</param>
        <summary> Publishes a set of CloudEvents to an Event Grid topic. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendEvents">
      <MemberSignature Language="C#" Value="public virtual Azure.Response SendEvents (System.Collections.Generic.IEnumerable&lt;Azure.Messaging.EventGrid.EventGridEvent&gt; events, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response SendEvents(class System.Collections.Generic.IEnumerable`1&lt;class Azure.Messaging.EventGrid.EventGridEvent&gt; events, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventGrid.EventGridPublisherClient.SendEvents(System.Collections.Generic.IEnumerable{Azure.Messaging.EventGrid.EventGridEvent},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SendEvents (events As IEnumerable(Of EventGridEvent), Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member SendEvents : seq&lt;Azure.Messaging.EventGrid.EventGridEvent&gt; * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.SendEvents : seq&lt;Azure.Messaging.EventGrid.EventGridEvent&gt; * System.Threading.CancellationToken -&gt; Azure.Response" Usage="eventGridPublisherClient.SendEvents (events, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventGrid</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="events" Type="System.Collections.Generic.IEnumerable&lt;Azure.Messaging.EventGrid.EventGridEvent&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="events"> The set of events to be published to Event Grid. </param>
        <param name="cancellationToken"> An optional cancellation token instance to signal the request to cancel the operation.</param>
        <summary> Publishes a set of EventGridEvents to an Event Grid topic. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendEvents">
      <MemberSignature Language="C#" Value="public virtual Azure.Response SendEvents (System.Collections.Generic.IEnumerable&lt;object&gt; events, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response SendEvents(class System.Collections.Generic.IEnumerable`1&lt;object&gt; events, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventGrid.EventGridPublisherClient.SendEvents(System.Collections.Generic.IEnumerable{System.Object},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SendEvents (events As IEnumerable(Of Object), Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member SendEvents : seq&lt;obj&gt; * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.SendEvents : seq&lt;obj&gt; * System.Threading.CancellationToken -&gt; Azure.Response" Usage="eventGridPublisherClient.SendEvents (events, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventGrid</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="events" Type="System.Collections.Generic.IEnumerable&lt;System.Object&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="events"> An array of events to be published to Event Grid. </param>
        <param name="cancellationToken"> An optional cancellation token instance to signal the request to cancel the operation.</param>
        <summary> Publishes a set of custom events to an Event Grid topic. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendEventsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; SendEventsAsync (System.Collections.Generic.IEnumerable&lt;Azure.Messaging.EventGrid.CloudEvent&gt; events, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; SendEventsAsync(class System.Collections.Generic.IEnumerable`1&lt;class Azure.Messaging.EventGrid.CloudEvent&gt; events, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventGrid.EventGridPublisherClient.SendEventsAsync(System.Collections.Generic.IEnumerable{Azure.Messaging.EventGrid.CloudEvent},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SendEventsAsync (events As IEnumerable(Of CloudEvent), Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member SendEventsAsync : seq&lt;Azure.Messaging.EventGrid.CloudEvent&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.SendEventsAsync : seq&lt;Azure.Messaging.EventGrid.CloudEvent&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="eventGridPublisherClient.SendEventsAsync (events, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventGrid</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="events" Type="System.Collections.Generic.IEnumerable&lt;Azure.Messaging.EventGrid.CloudEvent&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="events"> The set of events to be published to Event Grid. </param>
        <param name="cancellationToken"> An optional cancellation token instance to signal the request to cancel the operation.</param>
        <summary> Publishes a set of CloudEvents to an Event Grid topic. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendEventsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; SendEventsAsync (System.Collections.Generic.IEnumerable&lt;Azure.Messaging.EventGrid.EventGridEvent&gt; events, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; SendEventsAsync(class System.Collections.Generic.IEnumerable`1&lt;class Azure.Messaging.EventGrid.EventGridEvent&gt; events, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventGrid.EventGridPublisherClient.SendEventsAsync(System.Collections.Generic.IEnumerable{Azure.Messaging.EventGrid.EventGridEvent},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SendEventsAsync (events As IEnumerable(Of EventGridEvent), Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member SendEventsAsync : seq&lt;Azure.Messaging.EventGrid.EventGridEvent&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.SendEventsAsync : seq&lt;Azure.Messaging.EventGrid.EventGridEvent&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="eventGridPublisherClient.SendEventsAsync (events, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventGrid</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="events" Type="System.Collections.Generic.IEnumerable&lt;Azure.Messaging.EventGrid.EventGridEvent&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="events"> The set of events to be published to Event Grid. </param>
        <param name="cancellationToken"> An optional cancellation token instance to signal the request to cancel the operation.</param>
        <summary> Publishes a set of EventGridEvents to an Event Grid topic. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendEventsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; SendEventsAsync (System.Collections.Generic.IEnumerable&lt;object&gt; events, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; SendEventsAsync(class System.Collections.Generic.IEnumerable`1&lt;object&gt; events, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventGrid.EventGridPublisherClient.SendEventsAsync(System.Collections.Generic.IEnumerable{System.Object},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SendEventsAsync (events As IEnumerable(Of Object), Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member SendEventsAsync : seq&lt;obj&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.SendEventsAsync : seq&lt;obj&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="eventGridPublisherClient.SendEventsAsync (events, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventGrid</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="events" Type="System.Collections.Generic.IEnumerable&lt;System.Object&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="events"> An array of events to be published to Event Grid. </param>
        <param name="cancellationToken"> An optional cancellation token instance to signal the request to cancel the operation.</param>
        <summary> Publishes a set of custom events to an Event Grid topic. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="PurviewRelationships" FullName="Azure.Analytics.Purview.Catalog.PurviewRelationships">
  <TypeSignature Language="C#" Value="public class PurviewRelationships" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PurviewRelationships extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Analytics.Purview.Catalog.PurviewRelationships" />
  <TypeSignature Language="VB.NET" Value="Public Class PurviewRelationships" />
  <TypeSignature Language="F#" Value="type PurviewRelationships = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> The PurviewRelationships service client. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PurviewRelationships ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewRelationships.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of PurviewRelationships for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public virtual Azure.Response Create (Azure.Core.RequestContent requestBody, Azure.RequestOptions requestOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response Create(class Azure.Core.RequestContent requestBody, class Azure.RequestOptions requestOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewRelationships.Create(Azure.Core.RequestContent,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Create (requestBody As RequestContent, Optional requestOptions As RequestOptions = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member Create : Azure.Core.RequestContent * Azure.RequestOptions -&gt; Azure.Response&#xA;override this.Create : Azure.Core.RequestContent * Azure.RequestOptions -&gt; Azure.Response" Usage="purviewRelationships.Create (requestBody, requestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestBody" Type="Azure.Core.RequestContent" />
        <Parameter Name="requestOptions" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="requestBody"> The request body. </param>
        <param name="requestOptions"> The request options. </param>
        <summary> Create a new relationship between entities. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Request Body</c>:
            <list type="table"><listeader><term>Name</term><term>Type</term><term>Required</term><term>Description</term></listeader><item><term>attributes</term><term>Dictionary&lt;string, AnyObject&gt;</term><term /><term> The attributes of the struct. </term></item><item><term>typeName</term><term>string</term><term /><term> The name of the type. </term></item><item><term>lastModifiedTS</term><term>string</term><term /><term> ETag for concurrency control. </term></item><item><term>createTime</term><term>number</term><term /><term> The created time of the record. </term></item><item><term>createdBy</term><term>string</term><term /><term> The user who created the record. </term></item><item><term>end1</term><term>AtlasObjectId</term><term /><term> Reference to an object-instance of an Atlas type - like entity. </term></item><item><term>end2</term><term>AtlasObjectId</term><term /><term> Reference to an object-instance of an Atlas type - like entity. </term></item><item><term>guid</term><term>string</term><term /><term> The GUID of the relationship. </term></item><item><term>homeId</term><term>string</term><term /><term> The home ID of the relationship. </term></item><item><term>label</term><term>string</term><term /><term> The label of the relationship. </term></item><item><term>provenanceType</term><term>number</term><term /><term> Used to record the provenance of an instance of an entity or relationship. </term></item><item><term>status</term><term>"ACTIVE" | "DELETED"</term><term /><term> The enum of relationship status. </term></item><item><term>updateTime</term><term>number</term><term /><term> The update time of the record. </term></item><item><term>updatedBy</term><term>string</term><term /><term> The user who updated the record. </term></item><item><term>version</term><term>number</term><term /><term> The version of the relationship. </term></item></list>
            Schema for <c>AtlasObjectId</c>:
            <list type="table"><listeader><term>Name</term><term>Type</term><term>Required</term><term>Description</term></listeader><item><term>guid</term><term>string</term><term /><term> The GUID of the object. </term></item><item><term>typeName</term><term>string</term><term /><term> The name of the type. </term></item><item><term>uniqueAttributes</term><term>Dictionary&lt;string, AnyObject&gt;</term><term /><term> The unique attributes of the object. </term></item></list></remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; CreateAsync (Azure.Core.RequestContent requestBody, Azure.RequestOptions requestOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; CreateAsync(class Azure.Core.RequestContent requestBody, class Azure.RequestOptions requestOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewRelationships.CreateAsync(Azure.Core.RequestContent,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateAsync (requestBody As RequestContent, Optional requestOptions As RequestOptions = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member CreateAsync : Azure.Core.RequestContent * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.CreateAsync : Azure.Core.RequestContent * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="purviewRelationships.CreateAsync (requestBody, requestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestBody" Type="Azure.Core.RequestContent" />
        <Parameter Name="requestOptions" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="requestBody"> The request body. </param>
        <param name="requestOptions"> The request options. </param>
        <summary> Create a new relationship between entities. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Request Body</c>:
            <list type="table"><listeader><term>Name</term><term>Type</term><term>Required</term><term>Description</term></listeader><item><term>attributes</term><term>Dictionary&lt;string, AnyObject&gt;</term><term /><term> The attributes of the struct. </term></item><item><term>typeName</term><term>string</term><term /><term> The name of the type. </term></item><item><term>lastModifiedTS</term><term>string</term><term /><term> ETag for concurrency control. </term></item><item><term>createTime</term><term>number</term><term /><term> The created time of the record. </term></item><item><term>createdBy</term><term>string</term><term /><term> The user who created the record. </term></item><item><term>end1</term><term>AtlasObjectId</term><term /><term> Reference to an object-instance of an Atlas type - like entity. </term></item><item><term>end2</term><term>AtlasObjectId</term><term /><term> Reference to an object-instance of an Atlas type - like entity. </term></item><item><term>guid</term><term>string</term><term /><term> The GUID of the relationship. </term></item><item><term>homeId</term><term>string</term><term /><term> The home ID of the relationship. </term></item><item><term>label</term><term>string</term><term /><term> The label of the relationship. </term></item><item><term>provenanceType</term><term>number</term><term /><term> Used to record the provenance of an instance of an entity or relationship. </term></item><item><term>status</term><term>"ACTIVE" | "DELETED"</term><term /><term> The enum of relationship status. </term></item><item><term>updateTime</term><term>number</term><term /><term> The update time of the record. </term></item><item><term>updatedBy</term><term>string</term><term /><term> The user who updated the record. </term></item><item><term>version</term><term>number</term><term /><term> The version of the relationship. </term></item></list>
            Schema for <c>AtlasObjectId</c>:
            <list type="table"><listeader><term>Name</term><term>Type</term><term>Required</term><term>Description</term></listeader><item><term>guid</term><term>string</term><term /><term> The GUID of the object. </term></item><item><term>typeName</term><term>string</term><term /><term> The name of the type. </term></item><item><term>uniqueAttributes</term><term>Dictionary&lt;string, AnyObject&gt;</term><term /><term> The unique attributes of the object. </term></item></list></remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public virtual Azure.Response Delete (string guid, Azure.RequestOptions requestOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response Delete(string guid, class Azure.RequestOptions requestOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewRelationships.Delete(System.String,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Delete (guid As String, Optional requestOptions As RequestOptions = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member Delete : string * Azure.RequestOptions -&gt; Azure.Response&#xA;override this.Delete : string * Azure.RequestOptions -&gt; Azure.Response" Usage="purviewRelationships.Delete (guid, requestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="guid" Type="System.String" />
        <Parameter Name="requestOptions" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="guid"> The globally unique identifier of the relationship. </param>
        <param name="requestOptions"> The request options. </param>
        <summary> Delete a relationship between entities by its GUID. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DeleteAsync (string guid, Azure.RequestOptions requestOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeleteAsync(string guid, class Azure.RequestOptions requestOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewRelationships.DeleteAsync(System.String,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteAsync (guid As String, Optional requestOptions As RequestOptions = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DeleteAsync : string * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DeleteAsync : string * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="purviewRelationships.DeleteAsync (guid, requestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="guid" Type="System.String" />
        <Parameter Name="requestOptions" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="guid"> The globally unique identifier of the relationship. </param>
        <param name="requestOptions"> The request options. </param>
        <summary> Delete a relationship between entities by its GUID. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual Azure.Response Get (string guid, bool? extendedInfo = default, Azure.RequestOptions requestOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response Get(string guid, valuetype System.Nullable`1&lt;bool&gt; extendedInfo, class Azure.RequestOptions requestOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewRelationships.Get(System.String,System.Nullable{System.Boolean},Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Get (guid As String, Optional extendedInfo As Nullable(Of Boolean) = Nothing, Optional requestOptions As RequestOptions = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member Get : string * Nullable&lt;bool&gt; * Azure.RequestOptions -&gt; Azure.Response&#xA;override this.Get : string * Nullable&lt;bool&gt; * Azure.RequestOptions -&gt; Azure.Response" Usage="purviewRelationships.Get (guid, extendedInfo, requestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="guid" Type="System.String" />
        <Parameter Name="extendedInfo" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="requestOptions" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="guid"> The globally unique identifier of the relationship. </param>
        <param name="extendedInfo"> Limits whether includes extended information. </param>
        <param name="requestOptions"> The request options. </param>
        <summary> Get relationship information between entities by its GUID. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; GetAsync (string guid, bool? extendedInfo = default, Azure.RequestOptions requestOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; GetAsync(string guid, valuetype System.Nullable`1&lt;bool&gt; extendedInfo, class Azure.RequestOptions requestOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewRelationships.GetAsync(System.String,System.Nullable{System.Boolean},Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAsync (guid As String, Optional extendedInfo As Nullable(Of Boolean) = Nothing, Optional requestOptions As RequestOptions = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member GetAsync : string * Nullable&lt;bool&gt; * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.GetAsync : string * Nullable&lt;bool&gt; * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="purviewRelationships.GetAsync (guid, extendedInfo, requestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="guid" Type="System.String" />
        <Parameter Name="extendedInfo" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="requestOptions" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="guid"> The globally unique identifier of the relationship. </param>
        <param name="extendedInfo"> Limits whether includes extended information. </param>
        <param name="requestOptions"> The request options. </param>
        <summary> Get relationship information between entities by its GUID. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Pipeline">
      <MemberSignature Language="C#" Value="public virtual Azure.Core.Pipeline.HttpPipeline Pipeline { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Core.Pipeline.HttpPipeline Pipeline" />
      <MemberSignature Language="DocId" Value="P:Azure.Analytics.Purview.Catalog.PurviewRelationships.Pipeline" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Pipeline As HttpPipeline" />
      <MemberSignature Language="F#" Value="member this.Pipeline : Azure.Core.Pipeline.HttpPipeline" Usage="Azure.Analytics.Purview.Catalog.PurviewRelationships.Pipeline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.Pipeline.HttpPipeline</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The HTTP pipeline for sending and receiving REST requests and responses. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public virtual Azure.Response Update (Azure.Core.RequestContent requestBody, Azure.RequestOptions requestOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response Update(class Azure.Core.RequestContent requestBody, class Azure.RequestOptions requestOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewRelationships.Update(Azure.Core.RequestContent,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Update (requestBody As RequestContent, Optional requestOptions As RequestOptions = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member Update : Azure.Core.RequestContent * Azure.RequestOptions -&gt; Azure.Response&#xA;override this.Update : Azure.Core.RequestContent * Azure.RequestOptions -&gt; Azure.Response" Usage="purviewRelationships.Update (requestBody, requestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestBody" Type="Azure.Core.RequestContent" />
        <Parameter Name="requestOptions" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="requestBody"> The request body. </param>
        <param name="requestOptions"> The request options. </param>
        <summary> Update an existing relationship between entities. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Request Body</c>:
            <list type="table"><listeader><term>Name</term><term>Type</term><term>Required</term><term>Description</term></listeader><item><term>attributes</term><term>Dictionary&lt;string, AnyObject&gt;</term><term /><term> The attributes of the struct. </term></item><item><term>typeName</term><term>string</term><term /><term> The name of the type. </term></item><item><term>lastModifiedTS</term><term>string</term><term /><term> ETag for concurrency control. </term></item><item><term>createTime</term><term>number</term><term /><term> The created time of the record. </term></item><item><term>createdBy</term><term>string</term><term /><term> The user who created the record. </term></item><item><term>end1</term><term>AtlasObjectId</term><term /><term> Reference to an object-instance of an Atlas type - like entity. </term></item><item><term>end2</term><term>AtlasObjectId</term><term /><term> Reference to an object-instance of an Atlas type - like entity. </term></item><item><term>guid</term><term>string</term><term /><term> The GUID of the relationship. </term></item><item><term>homeId</term><term>string</term><term /><term> The home ID of the relationship. </term></item><item><term>label</term><term>string</term><term /><term> The label of the relationship. </term></item><item><term>provenanceType</term><term>number</term><term /><term> Used to record the provenance of an instance of an entity or relationship. </term></item><item><term>status</term><term>"ACTIVE" | "DELETED"</term><term /><term> The enum of relationship status. </term></item><item><term>updateTime</term><term>number</term><term /><term> The update time of the record. </term></item><item><term>updatedBy</term><term>string</term><term /><term> The user who updated the record. </term></item><item><term>version</term><term>number</term><term /><term> The version of the relationship. </term></item></list>
            Schema for <c>AtlasObjectId</c>:
            <list type="table"><listeader><term>Name</term><term>Type</term><term>Required</term><term>Description</term></listeader><item><term>guid</term><term>string</term><term /><term> The GUID of the object. </term></item><item><term>typeName</term><term>string</term><term /><term> The name of the type. </term></item><item><term>uniqueAttributes</term><term>Dictionary&lt;string, AnyObject&gt;</term><term /><term> The unique attributes of the object. </term></item></list></remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; UpdateAsync (Azure.Core.RequestContent requestBody, Azure.RequestOptions requestOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; UpdateAsync(class Azure.Core.RequestContent requestBody, class Azure.RequestOptions requestOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewRelationships.UpdateAsync(Azure.Core.RequestContent,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateAsync (requestBody As RequestContent, Optional requestOptions As RequestOptions = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member UpdateAsync : Azure.Core.RequestContent * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.UpdateAsync : Azure.Core.RequestContent * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="purviewRelationships.UpdateAsync (requestBody, requestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestBody" Type="Azure.Core.RequestContent" />
        <Parameter Name="requestOptions" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="requestBody"> The request body. </param>
        <param name="requestOptions"> The request options. </param>
        <summary> Update an existing relationship between entities. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Request Body</c>:
            <list type="table"><listeader><term>Name</term><term>Type</term><term>Required</term><term>Description</term></listeader><item><term>attributes</term><term>Dictionary&lt;string, AnyObject&gt;</term><term /><term> The attributes of the struct. </term></item><item><term>typeName</term><term>string</term><term /><term> The name of the type. </term></item><item><term>lastModifiedTS</term><term>string</term><term /><term> ETag for concurrency control. </term></item><item><term>createTime</term><term>number</term><term /><term> The created time of the record. </term></item><item><term>createdBy</term><term>string</term><term /><term> The user who created the record. </term></item><item><term>end1</term><term>AtlasObjectId</term><term /><term> Reference to an object-instance of an Atlas type - like entity. </term></item><item><term>end2</term><term>AtlasObjectId</term><term /><term> Reference to an object-instance of an Atlas type - like entity. </term></item><item><term>guid</term><term>string</term><term /><term> The GUID of the relationship. </term></item><item><term>homeId</term><term>string</term><term /><term> The home ID of the relationship. </term></item><item><term>label</term><term>string</term><term /><term> The label of the relationship. </term></item><item><term>provenanceType</term><term>number</term><term /><term> Used to record the provenance of an instance of an entity or relationship. </term></item><item><term>status</term><term>"ACTIVE" | "DELETED"</term><term /><term> The enum of relationship status. </term></item><item><term>updateTime</term><term>number</term><term /><term> The update time of the record. </term></item><item><term>updatedBy</term><term>string</term><term /><term> The user who updated the record. </term></item><item><term>version</term><term>number</term><term /><term> The version of the relationship. </term></item></list>
            Schema for <c>AtlasObjectId</c>:
            <list type="table"><listeader><term>Name</term><term>Type</term><term>Required</term><term>Description</term></listeader><item><term>guid</term><term>string</term><term /><term> The GUID of the object. </term></item><item><term>typeName</term><term>string</term><term /><term> The name of the type. </term></item><item><term>uniqueAttributes</term><term>Dictionary&lt;string, AnyObject&gt;</term><term /><term> The unique attributes of the object. </term></item></list></remarks>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="PurviewEntities" FullName="Azure.Analytics.Purview.Catalog.PurviewEntities">
  <TypeSignature Language="C#" Value="public class PurviewEntities" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PurviewEntities extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Analytics.Purview.Catalog.PurviewEntities" />
  <TypeSignature Language="VB.NET" Value="Public Class PurviewEntities" />
  <TypeSignature Language="F#" Value="type PurviewEntities = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> The PurviewEntities service client. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PurviewEntities ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewEntities.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of PurviewEntities for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddClassification">
      <MemberSignature Language="C#" Value="public virtual Azure.Response AddClassification (Azure.Core.RequestContent requestBody, Azure.RequestOptions requestOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response AddClassification(class Azure.Core.RequestContent requestBody, class Azure.RequestOptions requestOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewEntities.AddClassification(Azure.Core.RequestContent,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddClassification (requestBody As RequestContent, Optional requestOptions As RequestOptions = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member AddClassification : Azure.Core.RequestContent * Azure.RequestOptions -&gt; Azure.Response&#xA;override this.AddClassification : Azure.Core.RequestContent * Azure.RequestOptions -&gt; Azure.Response" Usage="purviewEntities.AddClassification (requestBody, requestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestBody" Type="Azure.Core.RequestContent" />
        <Parameter Name="requestOptions" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="requestBody"> The request body. </param>
        <param name="requestOptions"> The request options. </param>
        <summary> Associate a classification to multiple entities in bulk. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Request Body</c>:
            <list type="table"><listeader><term>Name</term><term>Type</term><term>Required</term><term>Description</term></listeader><item><term>classification</term><term>AtlasClassification</term><term /><term> An instance of a classification; it doesn't have an identity, this object exists only when associated with an entity. </term></item><item><term>entityGuids</term><term>string[]</term><term /><term> The GUID of the entity. </term></item></list>
            Schema for <c>AtlasClassification</c>:
            <list type="table"><listeader><term>Name</term><term>Type</term><term>Required</term><term>Description</term></listeader><item><term>attributes</term><term>Dictionary&lt;string, AnyObject&gt;</term><term /><term> The attributes of the struct. </term></item><item><term>typeName</term><term>string</term><term /><term> The name of the type. </term></item><item><term>lastModifiedTS</term><term>string</term><term /><term> ETag for concurrency control. </term></item><item><term>entityGuid</term><term>string</term><term /><term> The GUID of the entity. </term></item><item><term>entityStatus</term><term>"ACTIVE" | "DELETED"</term><term /><term> Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store. </term></item><item><term>removePropagationsOnEntityDelete</term><term>boolean</term><term /><term> Determines if propagations will be removed on entity deletion. </term></item><item><term>validityPeriods</term><term>TimeBoundary[]</term><term /><term> An array of time boundaries indicating validity periods. </term></item><item><term>source</term><term>string</term><term /><term> indicate the source who create the classification detail. </term></item><item><term>sourceDetails</term><term>Dictionary&lt;string, AnyObject&gt;</term><term /><term> more detail on source information. </term></item></list>
            Schema for <c>TimeBoundary</c>:
            <list type="table"><listeader><term>Name</term><term>Type</term><term>Required</term><term>Description</term></listeader><item><term>endTime</term><term>string</term><term /><term> The end of the time boundary. </term></item><item><term>startTime</term><term>string</term><term /><term> The start of the time boundary. </term></item><item><term>timeZone</term><term>string</term><term /><term> The timezone of the time boundary. </term></item></list></remarks>
      </Docs>
    </Member>
    <Member MemberName="AddClassificationAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; AddClassificationAsync (Azure.Core.RequestContent requestBody, Azure.RequestOptions requestOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; AddClassificationAsync(class Azure.Core.RequestContent requestBody, class Azure.RequestOptions requestOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewEntities.AddClassificationAsync(Azure.Core.RequestContent,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddClassificationAsync (requestBody As RequestContent, Optional requestOptions As RequestOptions = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member AddClassificationAsync : Azure.Core.RequestContent * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.AddClassificationAsync : Azure.Core.RequestContent * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="purviewEntities.AddClassificationAsync (requestBody, requestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestBody" Type="Azure.Core.RequestContent" />
        <Parameter Name="requestOptions" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="requestBody"> The request body. </param>
        <param name="requestOptions"> The request options. </param>
        <summary> Associate a classification to multiple entities in bulk. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Request Body</c>:
            <list type="table"><listeader><term>Name</term><term>Type</term><term>Required</term><term>Description</term></listeader><item><term>classification</term><term>AtlasClassification</term><term /><term> An instance of a classification; it doesn't have an identity, this object exists only when associated with an entity. </term></item><item><term>entityGuids</term><term>string[]</term><term /><term> The GUID of the entity. </term></item></list>
            Schema for <c>AtlasClassification</c>:
            <list type="table"><listeader><term>Name</term><term>Type</term><term>Required</term><term>Description</term></listeader><item><term>attributes</term><term>Dictionary&lt;string, AnyObject&gt;</term><term /><term> The attributes of the struct. </term></item><item><term>typeName</term><term>string</term><term /><term> The name of the type. </term></item><item><term>lastModifiedTS</term><term>string</term><term /><term> ETag for concurrency control. </term></item><item><term>entityGuid</term><term>string</term><term /><term> The GUID of the entity. </term></item><item><term>entityStatus</term><term>"ACTIVE" | "DELETED"</term><term /><term> Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store. </term></item><item><term>removePropagationsOnEntityDelete</term><term>boolean</term><term /><term> Determines if propagations will be removed on entity deletion. </term></item><item><term>validityPeriods</term><term>TimeBoundary[]</term><term /><term> An array of time boundaries indicating validity periods. </term></item><item><term>source</term><term>string</term><term /><term> indicate the source who create the classification detail. </term></item><item><term>sourceDetails</term><term>Dictionary&lt;string, AnyObject&gt;</term><term /><term> more detail on source information. </term></item></list>
            Schema for <c>TimeBoundary</c>:
            <list type="table"><listeader><term>Name</term><term>Type</term><term>Required</term><term>Description</term></listeader><item><term>endTime</term><term>string</term><term /><term> The end of the time boundary. </term></item><item><term>startTime</term><term>string</term><term /><term> The start of the time boundary. </term></item><item><term>timeZone</term><term>string</term><term /><term> The timezone of the time boundary. </term></item></list></remarks>
      </Docs>
    </Member>
    <Member MemberName="AddClassifications">
      <MemberSignature Language="C#" Value="public virtual Azure.Response AddClassifications (string guid, Azure.Core.RequestContent requestBody, Azure.RequestOptions requestOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response AddClassifications(string guid, class Azure.Core.RequestContent requestBody, class Azure.RequestOptions requestOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewEntities.AddClassifications(System.String,Azure.Core.RequestContent,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddClassifications (guid As String, requestBody As RequestContent, Optional requestOptions As RequestOptions = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member AddClassifications : string * Azure.Core.RequestContent * Azure.RequestOptions -&gt; Azure.Response&#xA;override this.AddClassifications : string * Azure.Core.RequestContent * Azure.RequestOptions -&gt; Azure.Response" Usage="purviewEntities.AddClassifications (guid, requestBody, requestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="guid" Type="System.String" />
        <Parameter Name="requestBody" Type="Azure.Core.RequestContent" />
        <Parameter Name="requestOptions" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="guid"> The globally unique identifier of the entity. </param>
        <param name="requestBody"> The request body. </param>
        <param name="requestOptions"> The request options. </param>
        <summary> Add classifications to an existing entity represented by a GUID. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>AtlasClassification</c>:
            <list type="table"><listeader><term>Name</term><term>Type</term><term>Required</term><term>Description</term></listeader><item><term>attributes</term><term>Dictionary&lt;string, AnyObject&gt;</term><term /><term> The attributes of the struct. </term></item><item><term>typeName</term><term>string</term><term /><term> The name of the type. </term></item><item><term>lastModifiedTS</term><term>string</term><term /><term> ETag for concurrency control. </term></item><item><term>entityGuid</term><term>string</term><term /><term> The GUID of the entity. </term></item><item><term>entityStatus</term><term>"ACTIVE" | "DELETED"</term><term /><term> Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store. </term></item><item><term>removePropagationsOnEntityDelete</term><term>boolean</term><term /><term> Determines if propagations will be removed on entity deletion. </term></item><item><term>validityPeriods</term><term>TimeBoundary[]</term><term /><term> An array of time boundaries indicating validity periods. </term></item><item><term>source</term><term>string</term><term /><term> indicate the source who create the classification detail. </term></item><item><term>sourceDetails</term><term>Dictionary&lt;string, AnyObject&gt;</term><term /><term> more detail on source information. </term></item></list>
            Schema for <c>TimeBoundary</c>:
            <list type="table"><listeader><term>Name</term><term>Type</term><term>Required</term><term>Description</term></listeader><item><term>endTime</term><term>string</term><term /><term> The end of the time boundary. </term></item><item><term>startTime</term><term>string</term><term /><term> The start of the time boundary. </term></item><item><term>timeZone</term><term>string</term><term /><term> The timezone of the time boundary. </term></item></list></remarks>
      </Docs>
    </Member>
    <Member MemberName="AddClassificationsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; AddClassificationsAsync (string guid, Azure.Core.RequestContent requestBody, Azure.RequestOptions requestOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; AddClassificationsAsync(string guid, class Azure.Core.RequestContent requestBody, class Azure.RequestOptions requestOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewEntities.AddClassificationsAsync(System.String,Azure.Core.RequestContent,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddClassificationsAsync (guid As String, requestBody As RequestContent, Optional requestOptions As RequestOptions = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member AddClassificationsAsync : string * Azure.Core.RequestContent * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.AddClassificationsAsync : string * Azure.Core.RequestContent * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="purviewEntities.AddClassificationsAsync (guid, requestBody, requestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="guid" Type="System.String" />
        <Parameter Name="requestBody" Type="Azure.Core.RequestContent" />
        <Parameter Name="requestOptions" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="guid"> The globally unique identifier of the entity. </param>
        <param name="requestBody"> The request body. </param>
        <param name="requestOptions"> The request options. </param>
        <summary> Add classifications to an existing entity represented by a GUID. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>AtlasClassification</c>:
            <list type="table"><listeader><term>Name</term><term>Type</term><term>Required</term><term>Description</term></listeader><item><term>attributes</term><term>Dictionary&lt;string, AnyObject&gt;</term><term /><term> The attributes of the struct. </term></item><item><term>typeName</term><term>string</term><term /><term> The name of the type. </term></item><item><term>lastModifiedTS</term><term>string</term><term /><term> ETag for concurrency control. </term></item><item><term>entityGuid</term><term>string</term><term /><term> The GUID of the entity. </term></item><item><term>entityStatus</term><term>"ACTIVE" | "DELETED"</term><term /><term> Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store. </term></item><item><term>removePropagationsOnEntityDelete</term><term>boolean</term><term /><term> Determines if propagations will be removed on entity deletion. </term></item><item><term>validityPeriods</term><term>TimeBoundary[]</term><term /><term> An array of time boundaries indicating validity periods. </term></item><item><term>source</term><term>string</term><term /><term> indicate the source who create the classification detail. </term></item><item><term>sourceDetails</term><term>Dictionary&lt;string, AnyObject&gt;</term><term /><term> more detail on source information. </term></item></list>
            Schema for <c>TimeBoundary</c>:
            <list type="table"><listeader><term>Name</term><term>Type</term><term>Required</term><term>Description</term></listeader><item><term>endTime</term><term>string</term><term /><term> The end of the time boundary. </term></item><item><term>startTime</term><term>string</term><term /><term> The start of the time boundary. </term></item><item><term>timeZone</term><term>string</term><term /><term> The timezone of the time boundary. </term></item></list></remarks>
      </Docs>
    </Member>
    <Member MemberName="AddClassificationsByUniqueAttribute">
      <MemberSignature Language="C#" Value="public virtual Azure.Response AddClassificationsByUniqueAttribute (string typeName, Azure.Core.RequestContent requestBody, string attrQualifiedName = default, Azure.RequestOptions requestOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response AddClassificationsByUniqueAttribute(string typeName, class Azure.Core.RequestContent requestBody, string attrQualifiedName, class Azure.RequestOptions requestOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewEntities.AddClassificationsByUniqueAttribute(System.String,Azure.Core.RequestContent,System.String,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddClassificationsByUniqueAttribute (typeName As String, requestBody As RequestContent, Optional attrQualifiedName As String = Nothing, Optional requestOptions As RequestOptions = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member AddClassificationsByUniqueAttribute : string * Azure.Core.RequestContent * string * Azure.RequestOptions -&gt; Azure.Response&#xA;override this.AddClassificationsByUniqueAttribute : string * Azure.Core.RequestContent * string * Azure.RequestOptions -&gt; Azure.Response" Usage="purviewEntities.AddClassificationsByUniqueAttribute (typeName, requestBody, attrQualifiedName, requestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="requestBody" Type="Azure.Core.RequestContent" />
        <Parameter Name="attrQualifiedName" Type="System.String" />
        <Parameter Name="requestOptions" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="typeName"> The name of the type. </param>
        <param name="requestBody"> The request body. </param>
        <param name="attrQualifiedName"> The qualified name of the entity. </param>
        <param name="requestOptions"> The request options. </param>
        <summary> Add classification to the entity identified by its type and unique attributes. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>AtlasClassification</c>:
            <list type="table"><listeader><term>Name</term><term>Type</term><term>Required</term><term>Description</term></listeader><item><term>attributes</term><term>Dictionary&lt;string, AnyObject&gt;</term><term /><term> The attributes of the struct. </term></item><item><term>typeName</term><term>string</term><term /><term> The name of the type. </term></item><item><term>lastModifiedTS</term><term>string</term><term /><term> ETag for concurrency control. </term></item><item><term>entityGuid</term><term>string</term><term /><term> The GUID of the entity. </term></item><item><term>entityStatus</term><term>"ACTIVE" | "DELETED"</term><term /><term> Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store. </term></item><item><term>removePropagationsOnEntityDelete</term><term>boolean</term><term /><term> Determines if propagations will be removed on entity deletion. </term></item><item><term>validityPeriods</term><term>TimeBoundary[]</term><term /><term> An array of time boundaries indicating validity periods. </term></item><item><term>source</term><term>string</term><term /><term> indicate the source who create the classification detail. </term></item><item><term>sourceDetails</term><term>Dictionary&lt;string, AnyObject&gt;</term><term /><term> more detail on source information. </term></item></list>
            Schema for <c>TimeBoundary</c>:
            <list type="table"><listeader><term>Name</term><term>Type</term><term>Required</term><term>Description</term></listeader><item><term>endTime</term><term>string</term><term /><term> The end of the time boundary. </term></item><item><term>startTime</term><term>string</term><term /><term> The start of the time boundary. </term></item><item><term>timeZone</term><term>string</term><term /><term> The timezone of the time boundary. </term></item></list></remarks>
      </Docs>
    </Member>
    <Member MemberName="AddClassificationsByUniqueAttributeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; AddClassificationsByUniqueAttributeAsync (string typeName, Azure.Core.RequestContent requestBody, string attrQualifiedName = default, Azure.RequestOptions requestOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; AddClassificationsByUniqueAttributeAsync(string typeName, class Azure.Core.RequestContent requestBody, string attrQualifiedName, class Azure.RequestOptions requestOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewEntities.AddClassificationsByUniqueAttributeAsync(System.String,Azure.Core.RequestContent,System.String,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddClassificationsByUniqueAttributeAsync (typeName As String, requestBody As RequestContent, Optional attrQualifiedName As String = Nothing, Optional requestOptions As RequestOptions = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member AddClassificationsByUniqueAttributeAsync : string * Azure.Core.RequestContent * string * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.AddClassificationsByUniqueAttributeAsync : string * Azure.Core.RequestContent * string * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="purviewEntities.AddClassificationsByUniqueAttributeAsync (typeName, requestBody, attrQualifiedName, requestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="requestBody" Type="Azure.Core.RequestContent" />
        <Parameter Name="attrQualifiedName" Type="System.String" />
        <Parameter Name="requestOptions" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="typeName"> The name of the type. </param>
        <param name="requestBody"> The request body. </param>
        <param name="attrQualifiedName"> The qualified name of the entity. </param>
        <param name="requestOptions"> The request options. </param>
        <summary> Add classification to the entity identified by its type and unique attributes. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>AtlasClassification</c>:
            <list type="table"><listeader><term>Name</term><term>Type</term><term>Required</term><term>Description</term></listeader><item><term>attributes</term><term>Dictionary&lt;string, AnyObject&gt;</term><term /><term> The attributes of the struct. </term></item><item><term>typeName</term><term>string</term><term /><term> The name of the type. </term></item><item><term>lastModifiedTS</term><term>string</term><term /><term> ETag for concurrency control. </term></item><item><term>entityGuid</term><term>string</term><term /><term> The GUID of the entity. </term></item><item><term>entityStatus</term><term>"ACTIVE" | "DELETED"</term><term /><term> Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store. </term></item><item><term>removePropagationsOnEntityDelete</term><term>boolean</term><term /><term> Determines if propagations will be removed on entity deletion. </term></item><item><term>validityPeriods</term><term>TimeBoundary[]</term><term /><term> An array of time boundaries indicating validity periods. </term></item><item><term>source</term><term>string</term><term /><term> indicate the source who create the classification detail. </term></item><item><term>sourceDetails</term><term>Dictionary&lt;string, AnyObject&gt;</term><term /><term> more detail on source information. </term></item></list>
            Schema for <c>TimeBoundary</c>:
            <list type="table"><listeader><term>Name</term><term>Type</term><term>Required</term><term>Description</term></listeader><item><term>endTime</term><term>string</term><term /><term> The end of the time boundary. </term></item><item><term>startTime</term><term>string</term><term /><term> The start of the time boundary. </term></item><item><term>timeZone</term><term>string</term><term /><term> The timezone of the time boundary. </term></item></list></remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdate">
      <MemberSignature Language="C#" Value="public virtual Azure.Response CreateOrUpdate (Azure.Core.RequestContent requestBody, Azure.RequestOptions requestOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response CreateOrUpdate(class Azure.Core.RequestContent requestBody, class Azure.RequestOptions requestOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewEntities.CreateOrUpdate(Azure.Core.RequestContent,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdate (requestBody As RequestContent, Optional requestOptions As RequestOptions = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdate : Azure.Core.RequestContent * Azure.RequestOptions -&gt; Azure.Response&#xA;override this.CreateOrUpdate : Azure.Core.RequestContent * Azure.RequestOptions -&gt; Azure.Response" Usage="purviewEntities.CreateOrUpdate (requestBody, requestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestBody" Type="Azure.Core.RequestContent" />
        <Parameter Name="requestOptions" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="requestBody"> The request body. </param>
        <param name="requestOptions"> The request options. </param>
        <summary>
            Create or update an entity in Atlas.
            Existing entity is matched using its unique guid if supplied or by its unique attributes eg: qualifiedName.
            Map and array of collections are not well supported. E.g., array&lt;array&lt;int&gt;&gt;, array&lt;map&lt;string, int&gt;&gt;.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Request Body</c>:
            <list type="table"><listeader><term>Name</term><term>Type</term><term>Required</term><term>Description</term></listeader><item><term>referredEntities</term><term>Dictionary&lt;string, AtlasEntity&gt;</term><term /><term> The referred entities. </term></item><item><term>entity</term><term>AtlasEntity</term><term /><term> An instance of an entity - like hive_table, hive_database. </term></item></list>
            Schema for <c>AtlasEntity</c>:
            <list type="table"><listeader><term>Name</term><term>Type</term><term>Required</term><term>Description</term></listeader><item><term>attributes</term><term>Dictionary&lt;string, AnyObject&gt;</term><term /><term> The attributes of the struct. </term></item><item><term>typeName</term><term>string</term><term /><term> The name of the type. </term></item><item><term>lastModifiedTS</term><term>string</term><term /><term> ETag for concurrency control. </term></item><item><term>classifications</term><term>AtlasClassification[]</term><term /><term> An array of classifications. </term></item><item><term>createTime</term><term>number</term><term /><term> The created time of the record. </term></item><item><term>createdBy</term><term>string</term><term /><term> The user who created the record. </term></item><item><term>guid</term><term>string</term><term /><term> The GUID of the entity. </term></item><item><term>homeId</term><term>string</term><term /><term> The home ID of the entity. </term></item><item><term>meanings</term><term>AtlasTermAssignmentHeader[]</term><term /><term> An array of term assignment headers indicating the meanings of the entity. </term></item><item><term>provenanceType</term><term>number</term><term /><term> Used to record the provenance of an instance of an entity or relationship. </term></item><item><term>proxy</term><term>boolean</term><term /><term> Determines if there's a proxy. </term></item><item><term>relationshipAttributes</term><term>Dictionary&lt;string, AnyObject&gt;</term><term /><term> The attributes of relationship. </term></item><item><term>status</term><term>"ACTIVE" | "DELETED"</term><term /><term> Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store. </term></item><item><term>updateTime</term><term>number</term><term /><term> The update time of the record. </term></item><item><term>updatedBy</term><term>string</term><term /><term> The user who updated the record. </term></item><item><term>version</term><term>number</term><term /><term> The version of the entity. </term></item><item><term>source</term><term>string</term><term /><term> indicate the source who create the classification detail. </term></item><item><term>sourceDetails</term><term>Dictionary&lt;string, AnyObject&gt;</term><term /><term> more detail on source information. </term></item><item><term>contacts</term><term>Dictionary&lt;string, ContactBasic[]&gt;</term><term /><term> The dictionary of contacts for terms. Key could be Expert or Owner. </term></item></list>
            Schema for <c>AtlasClassification</c>:
            <list type="table"><listeader><term>Name</term><term>Type</term><term>Required</term><term>Description</term></listeader><item><term>attributes</term><term>Dictionary&lt;string, AnyObject&gt;</term><term /><term> The attributes of the struct. </term></item><item><term>typeName</term><term>string</term><term /><term> The name of the type. </term></item><item><term>lastModifiedTS</term><term>string</term><term /><term> ETag for concurrency control. </term></item><item><term>entityGuid</term><term>string</term><term /><term> The GUID of the entity. </term></item><item><term>entityStatus</term><term>"ACTIVE" | "DELETED"</term><term /><term> Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store. </term></item><item><term>removePropagationsOnEntityDelete</term><term>boolean</term><term /><term> Determines if propagations will be removed on entity deletion. </term></item><item><term>validityPeriods</term><term>TimeBoundary[]</term><term /><term> An array of time boundaries indicating validity periods. </term></item><item><term>source</term><term>string</term><term /><term> indicate the source who create the classification detail. </term></item><item><term>sourceDetails</term><term>Dictionary&lt;string, AnyObject&gt;</term><term /><term> more detail on source information. </term></item></list>
            Schema for <c>AtlasTermAssignmentHeader</c>:
            <list type="table"><listeader><term>Name</term><term>Type</term><term>Required</term><term>Description</term></listeader><item><term>confidence</term><term>number</term><term /><term> The confidence of the term assignment. </term></item><item><term>createdBy</term><term>string</term><term /><term> The user who created the record. </term></item><item><term>description</term><term>string</term><term /><term> The description of the term assignment. </term></item><item><term>displayText</term><term>string</term><term /><term> The display text. </term></item><item><term>expression</term><term>string</term><term /><term> The expression of the term assignment. </term></item><item><term>relationGuid</term><term>string</term><term /><term> The GUID of the relationship. </term></item><item><term>source</term><term>string</term><term /><term> The source of the term. </term></item><item><term>status</term><term>"DISCOVERED" | "PROPOSED" | "IMPORTED" | "VALIDATED" | "DEPRECATED" | "OBSOLETE" | "OTHER"</term><term /><term> The status of terms assignment. </term></item><item><term>steward</term><term>string</term><term /><term> The steward of the term. </term></item><item><term>termGuid</term><term>string</term><term /><term> The GUID of the term. </term></item></list>
            Schema for <c>ContactBasic</c>:
            <list type="table"><listeader><term>Name</term><term>Type</term><term>Required</term><term>Description</term></listeader><item><term>id</term><term>string</term><term /><term> Azure Active Directory object Id. </term></item><item><term>info</term><term>string</term><term /><term> additional information to describe this contact. </term></item></list>
            Schema for <c>TimeBoundary</c>:
            <list type="table"><listeader><term>Name</term><term>Type</term><term>Required</term><term>Description</term></listeader><item><term>endTime</term><term>string</term><term /><term> The end of the time boundary. </term></item><item><term>startTime</term><term>string</term><term /><term> The start of the time boundary. </term></item><item><term>timeZone</term><term>string</term><term /><term> The timezone of the time boundary. </term></item></list></remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; CreateOrUpdateAsync (Azure.Core.RequestContent requestBody, Azure.RequestOptions requestOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; CreateOrUpdateAsync(class Azure.Core.RequestContent requestBody, class Azure.RequestOptions requestOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewEntities.CreateOrUpdateAsync(Azure.Core.RequestContent,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdateAsync (requestBody As RequestContent, Optional requestOptions As RequestOptions = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdateAsync : Azure.Core.RequestContent * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.CreateOrUpdateAsync : Azure.Core.RequestContent * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="purviewEntities.CreateOrUpdateAsync (requestBody, requestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestBody" Type="Azure.Core.RequestContent" />
        <Parameter Name="requestOptions" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="requestBody"> The request body. </param>
        <param name="requestOptions"> The request options. </param>
        <summary>
            Create or update an entity in Atlas.
            Existing entity is matched using its unique guid if supplied or by its unique attributes eg: qualifiedName.
            Map and array of collections are not well supported. E.g., array&lt;array&lt;int&gt;&gt;, array&lt;map&lt;string, int&gt;&gt;.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Request Body</c>:
            <list type="table"><listeader><term>Name</term><term>Type</term><term>Required</term><term>Description</term></listeader><item><term>referredEntities</term><term>Dictionary&lt;string, AtlasEntity&gt;</term><term /><term> The referred entities. </term></item><item><term>entity</term><term>AtlasEntity</term><term /><term> An instance of an entity - like hive_table, hive_database. </term></item></list>
            Schema for <c>AtlasEntity</c>:
            <list type="table"><listeader><term>Name</term><term>Type</term><term>Required</term><term>Description</term></listeader><item><term>attributes</term><term>Dictionary&lt;string, AnyObject&gt;</term><term /><term> The attributes of the struct. </term></item><item><term>typeName</term><term>string</term><term /><term> The name of the type. </term></item><item><term>lastModifiedTS</term><term>string</term><term /><term> ETag for concurrency control. </term></item><item><term>classifications</term><term>AtlasClassification[]</term><term /><term> An array of classifications. </term></item><item><term>createTime</term><term>number</term><term /><term> The created time of the record. </term></item><item><term>createdBy</term><term>string</term><term /><term> The user who created the record. </term></item><item><term>guid</term><term>string</term><term /><term> The GUID of the entity. </term></item><item><term>homeId</term><term>string</term><term /><term> The home ID of the entity. </term></item><item><term>meanings</term><term>AtlasTermAssignmentHeader[]</term><term /><term> An array of term assignment headers indicating the meanings of the entity. </term></item><item><term>provenanceType</term><term>number</term><term /><term> Used to record the provenance of an instance of an entity or relationship. </term></item><item><term>proxy</term><term>boolean</term><term /><term> Determines if there's a proxy. </term></item><item><term>relationshipAttributes</term><term>Dictionary&lt;string, AnyObject&gt;</term><term /><term> The attributes of relationship. </term></item><item><term>status</term><term>"ACTIVE" | "DELETED"</term><term /><term> Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store. </term></item><item><term>updateTime</term><term>number</term><term /><term> The update time of the record. </term></item><item><term>updatedBy</term><term>string</term><term /><term> The user who updated the record. </term></item><item><term>version</term><term>number</term><term /><term> The version of the entity. </term></item><item><term>source</term><term>string</term><term /><term> indicate the source who create the classification detail. </term></item><item><term>sourceDetails</term><term>Dictionary&lt;string, AnyObject&gt;</term><term /><term> more detail on source information. </term></item><item><term>contacts</term><term>Dictionary&lt;string, ContactBasic[]&gt;</term><term /><term> The dictionary of contacts for terms. Key could be Expert or Owner. </term></item></list>
            Schema for <c>AtlasClassification</c>:
            <list type="table"><listeader><term>Name</term><term>Type</term><term>Required</term><term>Description</term></listeader><item><term>attributes</term><term>Dictionary&lt;string, AnyObject&gt;</term><term /><term> The attributes of the struct. </term></item><item><term>typeName</term><term>string</term><term /><term> The name of the type. </term></item><item><term>lastModifiedTS</term><term>string</term><term /><term> ETag for concurrency control. </term></item><item><term>entityGuid</term><term>string</term><term /><term> The GUID of the entity. </term></item><item><term>entityStatus</term><term>"ACTIVE" | "DELETED"</term><term /><term> Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store. </term></item><item><term>removePropagationsOnEntityDelete</term><term>boolean</term><term /><term> Determines if propagations will be removed on entity deletion. </term></item><item><term>validityPeriods</term><term>TimeBoundary[]</term><term /><term> An array of time boundaries indicating validity periods. </term></item><item><term>source</term><term>string</term><term /><term> indicate the source who create the classification detail. </term></item><item><term>sourceDetails</term><term>Dictionary&lt;string, AnyObject&gt;</term><term /><term> more detail on source information. </term></item></list>
            Schema for <c>AtlasTermAssignmentHeader</c>:
            <list type="table"><listeader><term>Name</term><term>Type</term><term>Required</term><term>Description</term></listeader><item><term>confidence</term><term>number</term><term /><term> The confidence of the term assignment. </term></item><item><term>createdBy</term><term>string</term><term /><term> The user who created the record. </term></item><item><term>description</term><term>string</term><term /><term> The description of the term assignment. </term></item><item><term>displayText</term><term>string</term><term /><term> The display text. </term></item><item><term>expression</term><term>string</term><term /><term> The expression of the term assignment. </term></item><item><term>relationGuid</term><term>string</term><term /><term> The GUID of the relationship. </term></item><item><term>source</term><term>string</term><term /><term> The source of the term. </term></item><item><term>status</term><term>"DISCOVERED" | "PROPOSED" | "IMPORTED" | "VALIDATED" | "DEPRECATED" | "OBSOLETE" | "OTHER"</term><term /><term> The status of terms assignment. </term></item><item><term>steward</term><term>string</term><term /><term> The steward of the term. </term></item><item><term>termGuid</term><term>string</term><term /><term> The GUID of the term. </term></item></list>
            Schema for <c>ContactBasic</c>:
            <list type="table"><listeader><term>Name</term><term>Type</term><term>Required</term><term>Description</term></listeader><item><term>id</term><term>string</term><term /><term> Azure Active Directory object Id. </term></item><item><term>info</term><term>string</term><term /><term> additional information to describe this contact. </term></item></list>
            Schema for <c>TimeBoundary</c>:
            <list type="table"><listeader><term>Name</term><term>Type</term><term>Required</term><term>Description</term></listeader><item><term>endTime</term><term>string</term><term /><term> The end of the time boundary. </term></item><item><term>startTime</term><term>string</term><term /><term> The start of the time boundary. </term></item><item><term>timeZone</term><term>string</term><term /><term> The timezone of the time boundary. </term></item></list></remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdateEntities">
      <MemberSignature Language="C#" Value="public virtual Azure.Response CreateOrUpdateEntities (Azure.Core.RequestContent requestBody, Azure.RequestOptions requestOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response CreateOrUpdateEntities(class Azure.Core.RequestContent requestBody, class Azure.RequestOptions requestOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewEntities.CreateOrUpdateEntities(Azure.Core.RequestContent,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdateEntities (requestBody As RequestContent, Optional requestOptions As RequestOptions = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdateEntities : Azure.Core.RequestContent * Azure.RequestOptions -&gt; Azure.Response&#xA;override this.CreateOrUpdateEntities : Azure.Core.RequestContent * Azure.RequestOptions -&gt; Azure.Response" Usage="purviewEntities.CreateOrUpdateEntities (requestBody, requestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestBody" Type="Azure.Core.RequestContent" />
        <Parameter Name="requestOptions" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="requestBody"> The request body. </param>
        <param name="requestOptions"> The request options. </param>
        <summary>
            Create or update entities in Atlas in bulk.
            Existing entity is matched using its unique guid if supplied or by its unique attributes eg: qualifiedName.
            Map and array of collections are not well supported. E.g., array&lt;array&lt;int&gt;&gt;, array&lt;map&lt;string, int&gt;&gt;.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Request Body</c>:
            <list type="table"><listeader><term>Name</term><term>Type</term><term>Required</term><term>Description</term></listeader><item><term>referredEntities</term><term>Dictionary&lt;string, AtlasEntity&gt;</term><term /><term> The referred entities. </term></item><item><term>entities</term><term>AtlasEntity[]</term><term /><term> An array of entities. </term></item></list>
            Schema for <c>AtlasEntity</c>:
            <list type="table"><listeader><term>Name</term><term>Type</term><term>Required</term><term>Description</term></listeader><item><term>attributes</term><term>Dictionary&lt;string, AnyObject&gt;</term><term /><term> The attributes of the struct. </term></item><item><term>typeName</term><term>string</term><term /><term> The name of the type. </term></item><item><term>lastModifiedTS</term><term>string</term><term /><term> ETag for concurrency control. </term></item><item><term>classifications</term><term>AtlasClassification[]</term><term /><term> An array of classifications. </term></item><item><term>createTime</term><term>number</term><term /><term> The created time of the record. </term></item><item><term>createdBy</term><term>string</term><term /><term> The user who created the record. </term></item><item><term>guid</term><term>string</term><term /><term> The GUID of the entity. </term></item><item><term>homeId</term><term>string</term><term /><term> The home ID of the entity. </term></item><item><term>meanings</term><term>AtlasTermAssignmentHeader[]</term><term /><term> An array of term assignment headers indicating the meanings of the entity. </term></item><item><term>provenanceType</term><term>number</term><term /><term> Used to record the provenance of an instance of an entity or relationship. </term></item><item><term>proxy</term><term>boolean</term><term /><term> Determines if there's a proxy. </term></item><item><term>relationshipAttributes</term><term>Dictionary&lt;string, AnyObject&gt;</term><term /><term> The attributes of relationship. </term></item><item><term>status</term><term>"ACTIVE" | "DELETED"</term><term /><term> Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store. </term></item><item><term>updateTime</term><term>number</term><term /><term> The update time of the record. </term></item><item><term>updatedBy</term><term>string</term><term /><term> The user who updated the record. </term></item><item><term>version</term><term>number</term><term /><term> The version of the entity. </term></item><item><term>source</term><term>string</term><term /><term> indicate the source who create the classification detail. </term></item><item><term>sourceDetails</term><term>Dictionary&lt;string, AnyObject&gt;</term><term /><term> more detail on source information. </term></item><item><term>contacts</term><term>Dictionary&lt;string, ContactBasic[]&gt;</term><term /><term> The dictionary of contacts for terms. Key could be Expert or Owner. </term></item></list>
            Schema for <c>AtlasClassification</c>:
            <list type="table"><listeader><term>Name</term><term>Type</term><term>Required</term><term>Description</term></listeader><item><term>attributes</term><term>Dictionary&lt;string, AnyObject&gt;</term><term /><term> The attributes of the struct. </term></item><item><term>typeName</term><term>string</term><term /><term> The name of the type. </term></item><item><term>lastModifiedTS</term><term>string</term><term /><term> ETag for concurrency control. </term></item><item><term>entityGuid</term><term>string</term><term /><term> The GUID of the entity. </term></item><item><term>entityStatus</term><term>"ACTIVE" | "DELETED"</term><term /><term> Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store. </term></item><item><term>removePropagationsOnEntityDelete</term><term>boolean</term><term /><term> Determines if propagations will be removed on entity deletion. </term></item><item><term>validityPeriods</term><term>TimeBoundary[]</term><term /><term> An array of time boundaries indicating validity periods. </term></item><item><term>source</term><term>string</term><term /><term> indicate the source who create the classification detail. </term></item><item><term>sourceDetails</term><term>Dictionary&lt;string, AnyObject&gt;</term><term /><term> more detail on source information. </term></item></list>
            Schema for <c>AtlasTermAssignmentHeader</c>:
            <list type="table"><listeader><term>Name</term><term>Type</term><term>Required</term><term>Description</term></listeader><item><term>confidence</term><term>number</term><term /><term> The confidence of the term assignment. </term></item><item><term>createdBy</term><term>string</term><term /><term> The user who created the record. </term></item><item><term>description</term><term>string</term><term /><term> The description of the term assignment. </term></item><item><term>displayText</term><term>string</term><term /><term> The display text. </term></item><item><term>expression</term><term>string</term><term /><term> The expression of the term assignment. </term></item><item><term>relationGuid</term><term>string</term><term /><term> The GUID of the relationship. </term></item><item><term>source</term><term>string</term><term /><term> The source of the term. </term></item><item><term>status</term><term>"DISCOVERED" | "PROPOSED" | "IMPORTED" | "VALIDATED" | "DEPRECATED" | "OBSOLETE" | "OTHER"</term><term /><term> The status of terms assignment. </term></item><item><term>steward</term><term>string</term><term /><term> The steward of the term. </term></item><item><term>termGuid</term><term>string</term><term /><term> The GUID of the term. </term></item></list>
            Schema for <c>ContactBasic</c>:
            <list type="table"><listeader><term>Name</term><term>Type</term><term>Required</term><term>Description</term></listeader><item><term>id</term><term>string</term><term /><term> Azure Active Directory object Id. </term></item><item><term>info</term><term>string</term><term /><term> additional information to describe this contact. </term></item></list>
            Schema for <c>TimeBoundary</c>:
            <list type="table"><listeader><term>Name</term><term>Type</term><term>Required</term><term>Description</term></listeader><item><term>endTime</term><term>string</term><term /><term> The end of the time boundary. </term></item><item><term>startTime</term><term>string</term><term /><term> The start of the time boundary. </term></item><item><term>timeZone</term><term>string</term><term /><term> The timezone of the time boundary. </term></item></list></remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdateEntitiesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; CreateOrUpdateEntitiesAsync (Azure.Core.RequestContent requestBody, Azure.RequestOptions requestOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; CreateOrUpdateEntitiesAsync(class Azure.Core.RequestContent requestBody, class Azure.RequestOptions requestOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewEntities.CreateOrUpdateEntitiesAsync(Azure.Core.RequestContent,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdateEntitiesAsync (requestBody As RequestContent, Optional requestOptions As RequestOptions = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdateEntitiesAsync : Azure.Core.RequestContent * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.CreateOrUpdateEntitiesAsync : Azure.Core.RequestContent * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="purviewEntities.CreateOrUpdateEntitiesAsync (requestBody, requestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestBody" Type="Azure.Core.RequestContent" />
        <Parameter Name="requestOptions" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="requestBody"> The request body. </param>
        <param name="requestOptions"> The request options. </param>
        <summary>
            Create or update entities in Atlas in bulk.
            Existing entity is matched using its unique guid if supplied or by its unique attributes eg: qualifiedName.
            Map and array of collections are not well supported. E.g., array&lt;array&lt;int&gt;&gt;, array&lt;map&lt;string, int&gt;&gt;.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Request Body</c>:
            <list type="table"><listeader><term>Name</term><term>Type</term><term>Required</term><term>Description</term></listeader><item><term>referredEntities</term><term>Dictionary&lt;string, AtlasEntity&gt;</term><term /><term> The referred entities. </term></item><item><term>entities</term><term>AtlasEntity[]</term><term /><term> An array of entities. </term></item></list>
            Schema for <c>AtlasEntity</c>:
            <list type="table"><listeader><term>Name</term><term>Type</term><term>Required</term><term>Description</term></listeader><item><term>attributes</term><term>Dictionary&lt;string, AnyObject&gt;</term><term /><term> The attributes of the struct. </term></item><item><term>typeName</term><term>string</term><term /><term> The name of the type. </term></item><item><term>lastModifiedTS</term><term>string</term><term /><term> ETag for concurrency control. </term></item><item><term>classifications</term><term>AtlasClassification[]</term><term /><term> An array of classifications. </term></item><item><term>createTime</term><term>number</term><term /><term> The created time of the record. </term></item><item><term>createdBy</term><term>string</term><term /><term> The user who created the record. </term></item><item><term>guid</term><term>string</term><term /><term> The GUID of the entity. </term></item><item><term>homeId</term><term>string</term><term /><term> The home ID of the entity. </term></item><item><term>meanings</term><term>AtlasTermAssignmentHeader[]</term><term /><term> An array of term assignment headers indicating the meanings of the entity. </term></item><item><term>provenanceType</term><term>number</term><term /><term> Used to record the provenance of an instance of an entity or relationship. </term></item><item><term>proxy</term><term>boolean</term><term /><term> Determines if there's a proxy. </term></item><item><term>relationshipAttributes</term><term>Dictionary&lt;string, AnyObject&gt;</term><term /><term> The attributes of relationship. </term></item><item><term>status</term><term>"ACTIVE" | "DELETED"</term><term /><term> Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store. </term></item><item><term>updateTime</term><term>number</term><term /><term> The update time of the record. </term></item><item><term>updatedBy</term><term>string</term><term /><term> The user who updated the record. </term></item><item><term>version</term><term>number</term><term /><term> The version of the entity. </term></item><item><term>source</term><term>string</term><term /><term> indicate the source who create the classification detail. </term></item><item><term>sourceDetails</term><term>Dictionary&lt;string, AnyObject&gt;</term><term /><term> more detail on source information. </term></item><item><term>contacts</term><term>Dictionary&lt;string, ContactBasic[]&gt;</term><term /><term> The dictionary of contacts for terms. Key could be Expert or Owner. </term></item></list>
            Schema for <c>AtlasClassification</c>:
            <list type="table"><listeader><term>Name</term><term>Type</term><term>Required</term><term>Description</term></listeader><item><term>attributes</term><term>Dictionary&lt;string, AnyObject&gt;</term><term /><term> The attributes of the struct. </term></item><item><term>typeName</term><term>string</term><term /><term> The name of the type. </term></item><item><term>lastModifiedTS</term><term>string</term><term /><term> ETag for concurrency control. </term></item><item><term>entityGuid</term><term>string</term><term /><term> The GUID of the entity. </term></item><item><term>entityStatus</term><term>"ACTIVE" | "DELETED"</term><term /><term> Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store. </term></item><item><term>removePropagationsOnEntityDelete</term><term>boolean</term><term /><term> Determines if propagations will be removed on entity deletion. </term></item><item><term>validityPeriods</term><term>TimeBoundary[]</term><term /><term> An array of time boundaries indicating validity periods. </term></item><item><term>source</term><term>string</term><term /><term> indicate the source who create the classification detail. </term></item><item><term>sourceDetails</term><term>Dictionary&lt;string, AnyObject&gt;</term><term /><term> more detail on source information. </term></item></list>
            Schema for <c>AtlasTermAssignmentHeader</c>:
            <list type="table"><listeader><term>Name</term><term>Type</term><term>Required</term><term>Description</term></listeader><item><term>confidence</term><term>number</term><term /><term> The confidence of the term assignment. </term></item><item><term>createdBy</term><term>string</term><term /><term> The user who created the record. </term></item><item><term>description</term><term>string</term><term /><term> The description of the term assignment. </term></item><item><term>displayText</term><term>string</term><term /><term> The display text. </term></item><item><term>expression</term><term>string</term><term /><term> The expression of the term assignment. </term></item><item><term>relationGuid</term><term>string</term><term /><term> The GUID of the relationship. </term></item><item><term>source</term><term>string</term><term /><term> The source of the term. </term></item><item><term>status</term><term>"DISCOVERED" | "PROPOSED" | "IMPORTED" | "VALIDATED" | "DEPRECATED" | "OBSOLETE" | "OTHER"</term><term /><term> The status of terms assignment. </term></item><item><term>steward</term><term>string</term><term /><term> The steward of the term. </term></item><item><term>termGuid</term><term>string</term><term /><term> The GUID of the term. </term></item></list>
            Schema for <c>ContactBasic</c>:
            <list type="table"><listeader><term>Name</term><term>Type</term><term>Required</term><term>Description</term></listeader><item><term>id</term><term>string</term><term /><term> Azure Active Directory object Id. </term></item><item><term>info</term><term>string</term><term /><term> additional information to describe this contact. </term></item></list>
            Schema for <c>TimeBoundary</c>:
            <list type="table"><listeader><term>Name</term><term>Type</term><term>Required</term><term>Description</term></listeader><item><term>endTime</term><term>string</term><term /><term> The end of the time boundary. </term></item><item><term>startTime</term><term>string</term><term /><term> The start of the time boundary. </term></item><item><term>timeZone</term><term>string</term><term /><term> The timezone of the time boundary. </term></item></list></remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteByGuid">
      <MemberSignature Language="C#" Value="public virtual Azure.Response DeleteByGuid (string guid, Azure.RequestOptions requestOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response DeleteByGuid(string guid, class Azure.RequestOptions requestOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewEntities.DeleteByGuid(System.String,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteByGuid (guid As String, Optional requestOptions As RequestOptions = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member DeleteByGuid : string * Azure.RequestOptions -&gt; Azure.Response&#xA;override this.DeleteByGuid : string * Azure.RequestOptions -&gt; Azure.Response" Usage="purviewEntities.DeleteByGuid (guid, requestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="guid" Type="System.String" />
        <Parameter Name="requestOptions" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="guid"> The globally unique identifier of the entity. </param>
        <param name="requestOptions"> The request options. </param>
        <summary> Delete an entity identified by its GUID. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteByGuidAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DeleteByGuidAsync (string guid, Azure.RequestOptions requestOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeleteByGuidAsync(string guid, class Azure.RequestOptions requestOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewEntities.DeleteByGuidAsync(System.String,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteByGuidAsync (guid As String, Optional requestOptions As RequestOptions = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DeleteByGuidAsync : string * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DeleteByGuidAsync : string * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="purviewEntities.DeleteByGuidAsync (guid, requestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="guid" Type="System.String" />
        <Parameter Name="requestOptions" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="guid"> The globally unique identifier of the entity. </param>
        <param name="requestOptions"> The request options. </param>
        <summary> Delete an entity identified by its GUID. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteByGuids">
      <MemberSignature Language="C#" Value="public virtual Azure.Response DeleteByGuids (System.Collections.Generic.IEnumerable&lt;string&gt; guids, Azure.RequestOptions requestOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response DeleteByGuids(class System.Collections.Generic.IEnumerable`1&lt;string&gt; guids, class Azure.RequestOptions requestOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewEntities.DeleteByGuids(System.Collections.Generic.IEnumerable{System.String},Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteByGuids (guids As IEnumerable(Of String), Optional requestOptions As RequestOptions = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member DeleteByGuids : seq&lt;string&gt; * Azure.RequestOptions -&gt; Azure.Response&#xA;override this.DeleteByGuids : seq&lt;string&gt; * Azure.RequestOptions -&gt; Azure.Response" Usage="purviewEntities.DeleteByGuids (guids, requestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="guids" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="requestOptions" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="guids"> An array of GUIDs of entities to delete. </param>
        <param name="requestOptions"> The request options. </param>
        <summary> Delete a list of entities in bulk identified by their GUIDs or unique attributes. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteByGuidsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DeleteByGuidsAsync (System.Collections.Generic.IEnumerable&lt;string&gt; guids, Azure.RequestOptions requestOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeleteByGuidsAsync(class System.Collections.Generic.IEnumerable`1&lt;string&gt; guids, class Azure.RequestOptions requestOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewEntities.DeleteByGuidsAsync(System.Collections.Generic.IEnumerable{System.String},Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteByGuidsAsync (guids As IEnumerable(Of String), Optional requestOptions As RequestOptions = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DeleteByGuidsAsync : seq&lt;string&gt; * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DeleteByGuidsAsync : seq&lt;string&gt; * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="purviewEntities.DeleteByGuidsAsync (guids, requestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="guids" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="requestOptions" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="guids"> An array of GUIDs of entities to delete. </param>
        <param name="requestOptions"> The request options. </param>
        <summary> Delete a list of entities in bulk identified by their GUIDs or unique attributes. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteByUniqueAttribute">
      <MemberSignature Language="C#" Value="public virtual Azure.Response DeleteByUniqueAttribute (string typeName, string attrQualifiedName = default, Azure.RequestOptions requestOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response DeleteByUniqueAttribute(string typeName, string attrQualifiedName, class Azure.RequestOptions requestOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewEntities.DeleteByUniqueAttribute(System.String,System.String,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteByUniqueAttribute (typeName As String, Optional attrQualifiedName As String = Nothing, Optional requestOptions As RequestOptions = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member DeleteByUniqueAttribute : string * string * Azure.RequestOptions -&gt; Azure.Response&#xA;override this.DeleteByUniqueAttribute : string * string * Azure.RequestOptions -&gt; Azure.Response" Usage="purviewEntities.DeleteByUniqueAttribute (typeName, attrQualifiedName, requestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="attrQualifiedName" Type="System.String" />
        <Parameter Name="requestOptions" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="typeName"> The name of the type. </param>
        <param name="attrQualifiedName"> The qualified name of the entity. </param>
        <param name="requestOptions"> The request options. </param>
        <summary>
            Delete an entity identified by its type and unique attributes.
            In addition to the typeName path parameter, attribute key-value pair(s) can be provided in the following format:
            attr:\&lt;attrName&gt;=\&lt;attrValue&gt;.
            NOTE: The attrName and attrValue should be unique across entities, eg. qualifiedName.
            The REST request would look something like this:
            DELETE /v2/entity/uniqueAttribute/type/aType?attr:aTypeAttribute=someValue.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteByUniqueAttributeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DeleteByUniqueAttributeAsync (string typeName, string attrQualifiedName = default, Azure.RequestOptions requestOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeleteByUniqueAttributeAsync(string typeName, string attrQualifiedName, class Azure.RequestOptions requestOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewEntities.DeleteByUniqueAttributeAsync(System.String,System.String,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteByUniqueAttributeAsync (typeName As String, Optional attrQualifiedName As String = Nothing, Optional requestOptions As RequestOptions = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DeleteByUniqueAttributeAsync : string * string * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DeleteByUniqueAttributeAsync : string * string * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="purviewEntities.DeleteByUniqueAttributeAsync (typeName, attrQualifiedName, requestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="attrQualifiedName" Type="System.String" />
        <Parameter Name="requestOptions" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="typeName"> The name of the type. </param>
        <param name="attrQualifiedName"> The qualified name of the entity. </param>
        <param name="requestOptions"> The request options. </param>
        <summary>
            Delete an entity identified by its type and unique attributes.
            In addition to the typeName path parameter, attribute key-value pair(s) can be provided in the following format:
            attr:\&lt;attrName&gt;=\&lt;attrValue&gt;.
            NOTE: The attrName and attrValue should be unique across entities, eg. qualifiedName.
            The REST request would look something like this:
            DELETE /v2/entity/uniqueAttribute/type/aType?attr:aTypeAttribute=someValue.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteClassification">
      <MemberSignature Language="C#" Value="public virtual Azure.Response DeleteClassification (string guid, string classificationName, Azure.RequestOptions requestOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response DeleteClassification(string guid, string classificationName, class Azure.RequestOptions requestOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewEntities.DeleteClassification(System.String,System.String,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteClassification (guid As String, classificationName As String, Optional requestOptions As RequestOptions = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member DeleteClassification : string * string * Azure.RequestOptions -&gt; Azure.Response&#xA;override this.DeleteClassification : string * string * Azure.RequestOptions -&gt; Azure.Response" Usage="purviewEntities.DeleteClassification (guid, classificationName, requestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="guid" Type="System.String" />
        <Parameter Name="classificationName" Type="System.String" />
        <Parameter Name="requestOptions" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="guid"> The globally unique identifier of the entity. </param>
        <param name="classificationName"> The name of the classification. </param>
        <param name="requestOptions"> The request options. </param>
        <summary> Delete a given classification from an existing entity represented by a GUID. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteClassificationAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DeleteClassificationAsync (string guid, string classificationName, Azure.RequestOptions requestOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeleteClassificationAsync(string guid, string classificationName, class Azure.RequestOptions requestOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewEntities.DeleteClassificationAsync(System.String,System.String,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteClassificationAsync (guid As String, classificationName As String, Optional requestOptions As RequestOptions = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DeleteClassificationAsync : string * string * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DeleteClassificationAsync : string * string * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="purviewEntities.DeleteClassificationAsync (guid, classificationName, requestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="guid" Type="System.String" />
        <Parameter Name="classificationName" Type="System.String" />
        <Parameter Name="requestOptions" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="guid"> The globally unique identifier of the entity. </param>
        <param name="classificationName"> The name of the classification. </param>
        <param name="requestOptions"> The request options. </param>
        <summary> Delete a given classification from an existing entity represented by a GUID. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteClassificationByUniqueAttribute">
      <MemberSignature Language="C#" Value="public virtual Azure.Response DeleteClassificationByUniqueAttribute (string typeName, string classificationName, string attrQualifiedName = default, Azure.RequestOptions requestOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response DeleteClassificationByUniqueAttribute(string typeName, string classificationName, string attrQualifiedName, class Azure.RequestOptions requestOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewEntities.DeleteClassificationByUniqueAttribute(System.String,System.String,System.String,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteClassificationByUniqueAttribute (typeName As String, classificationName As String, Optional attrQualifiedName As String = Nothing, Optional requestOptions As RequestOptions = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member DeleteClassificationByUniqueAttribute : string * string * string * Azure.RequestOptions -&gt; Azure.Response&#xA;override this.DeleteClassificationByUniqueAttribute : string * string * string * Azure.RequestOptions -&gt; Azure.Response" Usage="purviewEntities.DeleteClassificationByUniqueAttribute (typeName, classificationName, attrQualifiedName, requestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="classificationName" Type="System.String" />
        <Parameter Name="attrQualifiedName" Type="System.String" />
        <Parameter Name="requestOptions" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="typeName"> The name of the type. </param>
        <param name="classificationName"> The name of the classification. </param>
        <param name="attrQualifiedName"> The qualified name of the entity. </param>
        <param name="requestOptions"> The request options. </param>
        <summary> Delete a given classification from an entity identified by its type and unique attributes. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteClassificationByUniqueAttributeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DeleteClassificationByUniqueAttributeAsync (string typeName, string classificationName, string attrQualifiedName = default, Azure.RequestOptions requestOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeleteClassificationByUniqueAttributeAsync(string typeName, string classificationName, string attrQualifiedName, class Azure.RequestOptions requestOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewEntities.DeleteClassificationByUniqueAttributeAsync(System.String,System.String,System.String,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteClassificationByUniqueAttributeAsync (typeName As String, classificationName As String, Optional attrQualifiedName As String = Nothing, Optional requestOptions As RequestOptions = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DeleteClassificationByUniqueAttributeAsync : string * string * string * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DeleteClassificationByUniqueAttributeAsync : string * string * string * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="purviewEntities.DeleteClassificationByUniqueAttributeAsync (typeName, classificationName, attrQualifiedName, requestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="classificationName" Type="System.String" />
        <Parameter Name="attrQualifiedName" Type="System.String" />
        <Parameter Name="requestOptions" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="typeName"> The name of the type. </param>
        <param name="classificationName"> The name of the classification. </param>
        <param name="attrQualifiedName"> The qualified name of the entity. </param>
        <param name="requestOptions"> The request options. </param>
        <summary> Delete a given classification from an entity identified by its type and unique attributes. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetByGuid">
      <MemberSignature Language="C#" Value="public virtual Azure.Response GetByGuid (string guid, bool? minExtInfo = default, bool? ignoreRelationships = default, Azure.RequestOptions requestOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response GetByGuid(string guid, valuetype System.Nullable`1&lt;bool&gt; minExtInfo, valuetype System.Nullable`1&lt;bool&gt; ignoreRelationships, class Azure.RequestOptions requestOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewEntities.GetByGuid(System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetByGuid (guid As String, Optional minExtInfo As Nullable(Of Boolean) = Nothing, Optional ignoreRelationships As Nullable(Of Boolean) = Nothing, Optional requestOptions As RequestOptions = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member GetByGuid : string * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Azure.RequestOptions -&gt; Azure.Response&#xA;override this.GetByGuid : string * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Azure.RequestOptions -&gt; Azure.Response" Usage="purviewEntities.GetByGuid (guid, minExtInfo, ignoreRelationships, requestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="guid" Type="System.String" />
        <Parameter Name="minExtInfo" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="ignoreRelationships" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="requestOptions" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="guid"> The globally unique identifier of the entity. </param>
        <param name="minExtInfo"> Whether to return minimal information for referred entities. </param>
        <param name="ignoreRelationships"> Whether to ignore relationship attributes. </param>
        <param name="requestOptions"> The request options. </param>
        <summary> Get complete definition of an entity given its GUID. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetByGuidAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; GetByGuidAsync (string guid, bool? minExtInfo = default, bool? ignoreRelationships = default, Azure.RequestOptions requestOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; GetByGuidAsync(string guid, valuetype System.Nullable`1&lt;bool&gt; minExtInfo, valuetype System.Nullable`1&lt;bool&gt; ignoreRelationships, class Azure.RequestOptions requestOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewEntities.GetByGuidAsync(System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetByGuidAsync (guid As String, Optional minExtInfo As Nullable(Of Boolean) = Nothing, Optional ignoreRelationships As Nullable(Of Boolean) = Nothing, Optional requestOptions As RequestOptions = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member GetByGuidAsync : string * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.GetByGuidAsync : string * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="purviewEntities.GetByGuidAsync (guid, minExtInfo, ignoreRelationships, requestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="guid" Type="System.String" />
        <Parameter Name="minExtInfo" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="ignoreRelationships" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="requestOptions" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="guid"> The globally unique identifier of the entity. </param>
        <param name="minExtInfo"> Whether to return minimal information for referred entities. </param>
        <param name="ignoreRelationships"> Whether to ignore relationship attributes. </param>
        <param name="requestOptions"> The request options. </param>
        <summary> Get complete definition of an entity given its GUID. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetByGuids">
      <MemberSignature Language="C#" Value="public virtual Azure.Response GetByGuids (System.Collections.Generic.IEnumerable&lt;string&gt; guids, bool? minExtInfo = default, bool? ignoreRelationships = default, System.Collections.Generic.IEnumerable&lt;string&gt; excludeRelationshipTypes = default, Azure.RequestOptions requestOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response GetByGuids(class System.Collections.Generic.IEnumerable`1&lt;string&gt; guids, valuetype System.Nullable`1&lt;bool&gt; minExtInfo, valuetype System.Nullable`1&lt;bool&gt; ignoreRelationships, class System.Collections.Generic.IEnumerable`1&lt;string&gt; excludeRelationshipTypes, class Azure.RequestOptions requestOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewEntities.GetByGuids(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Collections.Generic.IEnumerable{System.String},Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetByGuids (guids As IEnumerable(Of String), Optional minExtInfo As Nullable(Of Boolean) = Nothing, Optional ignoreRelationships As Nullable(Of Boolean) = Nothing, Optional excludeRelationshipTypes As IEnumerable(Of String) = Nothing, Optional requestOptions As RequestOptions = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member GetByGuids : seq&lt;string&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * seq&lt;string&gt; * Azure.RequestOptions -&gt; Azure.Response&#xA;override this.GetByGuids : seq&lt;string&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * seq&lt;string&gt; * Azure.RequestOptions -&gt; Azure.Response" Usage="purviewEntities.GetByGuids (guids, minExtInfo, ignoreRelationships, excludeRelationshipTypes, requestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="guids" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="minExtInfo" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="ignoreRelationships" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="excludeRelationshipTypes" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="requestOptions" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="guids"> An array of GUIDs of entities to create. </param>
        <param name="minExtInfo"> Whether to return minimal information for referred entities. </param>
        <param name="ignoreRelationships"> Whether to ignore relationship attributes. </param>
        <param name="excludeRelationshipTypes"> An array of the relationship types need to be excluded from the response. </param>
        <param name="requestOptions"> The request options. </param>
        <summary> List entities in bulk identified by its GUIDs. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetByGuidsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; GetByGuidsAsync (System.Collections.Generic.IEnumerable&lt;string&gt; guids, bool? minExtInfo = default, bool? ignoreRelationships = default, System.Collections.Generic.IEnumerable&lt;string&gt; excludeRelationshipTypes = default, Azure.RequestOptions requestOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; GetByGuidsAsync(class System.Collections.Generic.IEnumerable`1&lt;string&gt; guids, valuetype System.Nullable`1&lt;bool&gt; minExtInfo, valuetype System.Nullable`1&lt;bool&gt; ignoreRelationships, class System.Collections.Generic.IEnumerable`1&lt;string&gt; excludeRelationshipTypes, class Azure.RequestOptions requestOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewEntities.GetByGuidsAsync(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Collections.Generic.IEnumerable{System.String},Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetByGuidsAsync (guids As IEnumerable(Of String), Optional minExtInfo As Nullable(Of Boolean) = Nothing, Optional ignoreRelationships As Nullable(Of Boolean) = Nothing, Optional excludeRelationshipTypes As IEnumerable(Of String) = Nothing, Optional requestOptions As RequestOptions = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member GetByGuidsAsync : seq&lt;string&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * seq&lt;string&gt; * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.GetByGuidsAsync : seq&lt;string&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * seq&lt;string&gt; * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="purviewEntities.GetByGuidsAsync (guids, minExtInfo, ignoreRelationships, excludeRelationshipTypes, requestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="guids" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="minExtInfo" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="ignoreRelationships" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="excludeRelationshipTypes" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="requestOptions" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="guids"> An array of GUIDs of entities to create. </param>
        <param name="minExtInfo"> Whether to return minimal information for referred entities. </param>
        <param name="ignoreRelationships"> Whether to ignore relationship attributes. </param>
        <param name="excludeRelationshipTypes"> An array of the relationship types need to be excluded from the response. </param>
        <param name="requestOptions"> The request options. </param>
        <summary> List entities in bulk identified by its GUIDs. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetByUniqueAttributes">
      <MemberSignature Language="C#" Value="public virtual Azure.Response GetByUniqueAttributes (string typeName, bool? minExtInfo = default, bool? ignoreRelationships = default, string attrQualifiedName = default, Azure.RequestOptions requestOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response GetByUniqueAttributes(string typeName, valuetype System.Nullable`1&lt;bool&gt; minExtInfo, valuetype System.Nullable`1&lt;bool&gt; ignoreRelationships, string attrQualifiedName, class Azure.RequestOptions requestOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewEntities.GetByUniqueAttributes(System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetByUniqueAttributes (typeName As String, Optional minExtInfo As Nullable(Of Boolean) = Nothing, Optional ignoreRelationships As Nullable(Of Boolean) = Nothing, Optional attrQualifiedName As String = Nothing, Optional requestOptions As RequestOptions = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member GetByUniqueAttributes : string * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * string * Azure.RequestOptions -&gt; Azure.Response&#xA;override this.GetByUniqueAttributes : string * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * string * Azure.RequestOptions -&gt; Azure.Response" Usage="purviewEntities.GetByUniqueAttributes (typeName, minExtInfo, ignoreRelationships, attrQualifiedName, requestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="minExtInfo" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="ignoreRelationships" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="attrQualifiedName" Type="System.String" />
        <Parameter Name="requestOptions" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="typeName"> The name of the type. </param>
        <param name="minExtInfo"> Whether to return minimal information for referred entities. </param>
        <param name="ignoreRelationships"> Whether to ignore relationship attributes. </param>
        <param name="attrQualifiedName"> The qualified name of the entity. </param>
        <param name="requestOptions"> The request options. </param>
        <summary>
            Get complete definition of an entity given its type and unique attribute.
            In addition to the typeName path parameter, attribute key-value pair(s) can be provided in the following format:
            attr:\&lt;attrName&gt;=&lt;attrValue&gt;.
            NOTE: The attrName and attrValue should be unique across entities, eg. qualifiedName.
            The REST request would look something like this:
            GET /v2/entity/uniqueAttribute/type/aType?attr:aTypeAttribute=someValue.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetByUniqueAttributesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; GetByUniqueAttributesAsync (string typeName, bool? minExtInfo = default, bool? ignoreRelationships = default, string attrQualifiedName = default, Azure.RequestOptions requestOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; GetByUniqueAttributesAsync(string typeName, valuetype System.Nullable`1&lt;bool&gt; minExtInfo, valuetype System.Nullable`1&lt;bool&gt; ignoreRelationships, string attrQualifiedName, class Azure.RequestOptions requestOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewEntities.GetByUniqueAttributesAsync(System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetByUniqueAttributesAsync (typeName As String, Optional minExtInfo As Nullable(Of Boolean) = Nothing, Optional ignoreRelationships As Nullable(Of Boolean) = Nothing, Optional attrQualifiedName As String = Nothing, Optional requestOptions As RequestOptions = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member GetByUniqueAttributesAsync : string * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * string * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.GetByUniqueAttributesAsync : string * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * string * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="purviewEntities.GetByUniqueAttributesAsync (typeName, minExtInfo, ignoreRelationships, attrQualifiedName, requestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="minExtInfo" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="ignoreRelationships" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="attrQualifiedName" Type="System.String" />
        <Parameter Name="requestOptions" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="typeName"> The name of the type. </param>
        <param name="minExtInfo"> Whether to return minimal information for referred entities. </param>
        <param name="ignoreRelationships"> Whether to ignore relationship attributes. </param>
        <param name="attrQualifiedName"> The qualified name of the entity. </param>
        <param name="requestOptions"> The request options. </param>
        <summary>
            Get complete definition of an entity given its type and unique attribute.
            In addition to the typeName path parameter, attribute key-value pair(s) can be provided in the following format:
            attr:\&lt;attrName&gt;=&lt;attrValue&gt;.
            NOTE: The attrName and attrValue should be unique across entities, eg. qualifiedName.
            The REST request would look something like this:
            GET /v2/entity/uniqueAttribute/type/aType?attr:aTypeAttribute=someValue.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetClassification">
      <MemberSignature Language="C#" Value="public virtual Azure.Response GetClassification (string guid, string classificationName, Azure.RequestOptions requestOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response GetClassification(string guid, string classificationName, class Azure.RequestOptions requestOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewEntities.GetClassification(System.String,System.String,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetClassification (guid As String, classificationName As String, Optional requestOptions As RequestOptions = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member GetClassification : string * string * Azure.RequestOptions -&gt; Azure.Response&#xA;override this.GetClassification : string * string * Azure.RequestOptions -&gt; Azure.Response" Usage="purviewEntities.GetClassification (guid, classificationName, requestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="guid" Type="System.String" />
        <Parameter Name="classificationName" Type="System.String" />
        <Parameter Name="requestOptions" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="guid"> The globally unique identifier of the entity. </param>
        <param name="classificationName"> The name of the classification. </param>
        <param name="requestOptions"> The request options. </param>
        <summary> List classifications for a given entity represented by a GUID. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetClassificationAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; GetClassificationAsync (string guid, string classificationName, Azure.RequestOptions requestOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; GetClassificationAsync(string guid, string classificationName, class Azure.RequestOptions requestOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewEntities.GetClassificationAsync(System.String,System.String,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetClassificationAsync (guid As String, classificationName As String, Optional requestOptions As RequestOptions = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member GetClassificationAsync : string * string * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.GetClassificationAsync : string * string * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="purviewEntities.GetClassificationAsync (guid, classificationName, requestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="guid" Type="System.String" />
        <Parameter Name="classificationName" Type="System.String" />
        <Parameter Name="requestOptions" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="guid"> The globally unique identifier of the entity. </param>
        <param name="classificationName"> The name of the classification. </param>
        <param name="requestOptions"> The request options. </param>
        <summary> List classifications for a given entity represented by a GUID. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetClassifications">
      <MemberSignature Language="C#" Value="public virtual Azure.Response GetClassifications (string guid, Azure.RequestOptions requestOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response GetClassifications(string guid, class Azure.RequestOptions requestOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewEntities.GetClassifications(System.String,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetClassifications (guid As String, Optional requestOptions As RequestOptions = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member GetClassifications : string * Azure.RequestOptions -&gt; Azure.Response&#xA;override this.GetClassifications : string * Azure.RequestOptions -&gt; Azure.Response" Usage="purviewEntities.GetClassifications (guid, requestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="guid" Type="System.String" />
        <Parameter Name="requestOptions" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="guid"> The globally unique identifier of the entity. </param>
        <param name="requestOptions"> The request options. </param>
        <summary> List classifications for a given entity represented by a GUID. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetClassificationsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; GetClassificationsAsync (string guid, Azure.RequestOptions requestOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; GetClassificationsAsync(string guid, class Azure.RequestOptions requestOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewEntities.GetClassificationsAsync(System.String,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetClassificationsAsync (guid As String, Optional requestOptions As RequestOptions = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member GetClassificationsAsync : string * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.GetClassificationsAsync : string * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="purviewEntities.GetClassificationsAsync (guid, requestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="guid" Type="System.String" />
        <Parameter Name="requestOptions" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="guid"> The globally unique identifier of the entity. </param>
        <param name="requestOptions"> The request options. </param>
        <summary> List classifications for a given entity represented by a GUID. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEntitiesByUniqueAttributes">
      <MemberSignature Language="C#" Value="public virtual Azure.Response GetEntitiesByUniqueAttributes (string typeName, bool? minExtInfo = default, bool? ignoreRelationships = default, string attrNQualifiedName = default, Azure.RequestOptions requestOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response GetEntitiesByUniqueAttributes(string typeName, valuetype System.Nullable`1&lt;bool&gt; minExtInfo, valuetype System.Nullable`1&lt;bool&gt; ignoreRelationships, string attrNQualifiedName, class Azure.RequestOptions requestOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewEntities.GetEntitiesByUniqueAttributes(System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEntitiesByUniqueAttributes (typeName As String, Optional minExtInfo As Nullable(Of Boolean) = Nothing, Optional ignoreRelationships As Nullable(Of Boolean) = Nothing, Optional attrNQualifiedName As String = Nothing, Optional requestOptions As RequestOptions = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member GetEntitiesByUniqueAttributes : string * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * string * Azure.RequestOptions -&gt; Azure.Response&#xA;override this.GetEntitiesByUniqueAttributes : string * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * string * Azure.RequestOptions -&gt; Azure.Response" Usage="purviewEntities.GetEntitiesByUniqueAttributes (typeName, minExtInfo, ignoreRelationships, attrNQualifiedName, requestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="minExtInfo" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="ignoreRelationships" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="attrNQualifiedName" Type="System.String" />
        <Parameter Name="requestOptions" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="typeName"> The name of the type. </param>
        <param name="minExtInfo"> Whether to return minimal information for referred entities. </param>
        <param name="ignoreRelationships"> Whether to ignore relationship attributes. </param>
        <param name="attrNQualifiedName"> Qualified name of an entity. E.g. to find 2 entities you can set attrs_0:qualifiedName=db1@cl1&amp;attrs_2:qualifiedName=db2@cl1. </param>
        <param name="requestOptions"> The request options. </param>
        <summary>
            Bulk API to retrieve list of entities identified by its unique attributes.
            
            In addition to the typeName path parameter, attribute key-value pair(s) can be provided in the following format
            
            typeName=\&lt;typeName&gt;&amp;attr_1:\&lt;attrName&gt;=\&lt;attrValue&gt;&amp;attr_2:\&lt;attrName&gt;=\&lt;attrValue&gt;&amp;attr_3:\&lt;attrName&gt;=\&lt;attrValue&gt;
            
            NOTE: The attrName should be an unique attribute for the given entity-type
            
            The REST request would look something like this
            
            GET /v2/entity/bulk/uniqueAttribute/type/hive_db?attr_0:qualifiedName=db1@cl1&amp;attr_2:qualifiedName=db2@cl1.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEntitiesByUniqueAttributesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; GetEntitiesByUniqueAttributesAsync (string typeName, bool? minExtInfo = default, bool? ignoreRelationships = default, string attrNQualifiedName = default, Azure.RequestOptions requestOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; GetEntitiesByUniqueAttributesAsync(string typeName, valuetype System.Nullable`1&lt;bool&gt; minExtInfo, valuetype System.Nullable`1&lt;bool&gt; ignoreRelationships, string attrNQualifiedName, class Azure.RequestOptions requestOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewEntities.GetEntitiesByUniqueAttributesAsync(System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEntitiesByUniqueAttributesAsync (typeName As String, Optional minExtInfo As Nullable(Of Boolean) = Nothing, Optional ignoreRelationships As Nullable(Of Boolean) = Nothing, Optional attrNQualifiedName As String = Nothing, Optional requestOptions As RequestOptions = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member GetEntitiesByUniqueAttributesAsync : string * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * string * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.GetEntitiesByUniqueAttributesAsync : string * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * string * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="purviewEntities.GetEntitiesByUniqueAttributesAsync (typeName, minExtInfo, ignoreRelationships, attrNQualifiedName, requestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="minExtInfo" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="ignoreRelationships" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="attrNQualifiedName" Type="System.String" />
        <Parameter Name="requestOptions" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="typeName"> The name of the type. </param>
        <param name="minExtInfo"> Whether to return minimal information for referred entities. </param>
        <param name="ignoreRelationships"> Whether to ignore relationship attributes. </param>
        <param name="attrNQualifiedName"> Qualified name of an entity. E.g. to find 2 entities you can set attrs_0:qualifiedName=db1@cl1&amp;attrs_2:qualifiedName=db2@cl1. </param>
        <param name="requestOptions"> The request options. </param>
        <summary>
            Bulk API to retrieve list of entities identified by its unique attributes.
            
            In addition to the typeName path parameter, attribute key-value pair(s) can be provided in the following format
            
            typeName=\&lt;typeName&gt;&amp;attr_1:\&lt;attrName&gt;=\&lt;attrValue&gt;&amp;attr_2:\&lt;attrName&gt;=\&lt;attrValue&gt;&amp;attr_3:\&lt;attrName&gt;=\&lt;attrValue&gt;
            
            NOTE: The attrName should be an unique attribute for the given entity-type
            
            The REST request would look something like this
            
            GET /v2/entity/bulk/uniqueAttribute/type/hive_db?attr_0:qualifiedName=db1@cl1&amp;attr_2:qualifiedName=db2@cl1.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHeader">
      <MemberSignature Language="C#" Value="public virtual Azure.Response GetHeader (string guid, Azure.RequestOptions requestOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response GetHeader(string guid, class Azure.RequestOptions requestOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewEntities.GetHeader(System.String,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetHeader (guid As String, Optional requestOptions As RequestOptions = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member GetHeader : string * Azure.RequestOptions -&gt; Azure.Response&#xA;override this.GetHeader : string * Azure.RequestOptions -&gt; Azure.Response" Usage="purviewEntities.GetHeader (guid, requestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="guid" Type="System.String" />
        <Parameter Name="requestOptions" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="guid"> The globally unique identifier of the entity. </param>
        <param name="requestOptions"> The request options. </param>
        <summary> Get entity header given its GUID. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHeaderAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; GetHeaderAsync (string guid, Azure.RequestOptions requestOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; GetHeaderAsync(string guid, class Azure.RequestOptions requestOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewEntities.GetHeaderAsync(System.String,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetHeaderAsync (guid As String, Optional requestOptions As RequestOptions = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member GetHeaderAsync : string * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.GetHeaderAsync : string * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="purviewEntities.GetHeaderAsync (guid, requestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="guid" Type="System.String" />
        <Parameter Name="requestOptions" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="guid"> The globally unique identifier of the entity. </param>
        <param name="requestOptions"> The request options. </param>
        <summary> Get entity header given its GUID. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PartialUpdateEntityAttributeByGuid">
      <MemberSignature Language="C#" Value="public virtual Azure.Response PartialUpdateEntityAttributeByGuid (string guid, string name, Azure.Core.RequestContent requestBody, Azure.RequestOptions requestOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response PartialUpdateEntityAttributeByGuid(string guid, string name, class Azure.Core.RequestContent requestBody, class Azure.RequestOptions requestOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewEntities.PartialUpdateEntityAttributeByGuid(System.String,System.String,Azure.Core.RequestContent,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PartialUpdateEntityAttributeByGuid (guid As String, name As String, requestBody As RequestContent, Optional requestOptions As RequestOptions = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member PartialUpdateEntityAttributeByGuid : string * string * Azure.Core.RequestContent * Azure.RequestOptions -&gt; Azure.Response&#xA;override this.PartialUpdateEntityAttributeByGuid : string * string * Azure.Core.RequestContent * Azure.RequestOptions -&gt; Azure.Response" Usage="purviewEntities.PartialUpdateEntityAttributeByGuid (guid, name, requestBody, requestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="guid" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="requestBody" Type="Azure.Core.RequestContent" />
        <Parameter Name="requestOptions" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="guid"> The globally unique identifier of the entity. </param>
        <param name="name"> The name of the attribute. </param>
        <param name="requestBody"> The request body. </param>
        <param name="requestOptions"> The request options. </param>
        <summary>
            Update entity partially - create or update entity attribute identified by its GUID.
            Supports only primitive attribute type and entity references.
            It does not support updating complex types like arrays, and maps.
            Null updates are not possible.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PartialUpdateEntityAttributeByGuidAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; PartialUpdateEntityAttributeByGuidAsync (string guid, string name, Azure.Core.RequestContent requestBody, Azure.RequestOptions requestOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; PartialUpdateEntityAttributeByGuidAsync(string guid, string name, class Azure.Core.RequestContent requestBody, class Azure.RequestOptions requestOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewEntities.PartialUpdateEntityAttributeByGuidAsync(System.String,System.String,Azure.Core.RequestContent,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PartialUpdateEntityAttributeByGuidAsync (guid As String, name As String, requestBody As RequestContent, Optional requestOptions As RequestOptions = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member PartialUpdateEntityAttributeByGuidAsync : string * string * Azure.Core.RequestContent * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.PartialUpdateEntityAttributeByGuidAsync : string * string * Azure.Core.RequestContent * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="purviewEntities.PartialUpdateEntityAttributeByGuidAsync (guid, name, requestBody, requestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="guid" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="requestBody" Type="Azure.Core.RequestContent" />
        <Parameter Name="requestOptions" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="guid"> The globally unique identifier of the entity. </param>
        <param name="name"> The name of the attribute. </param>
        <param name="requestBody"> The request body. </param>
        <param name="requestOptions"> The request options. </param>
        <summary>
            Update entity partially - create or update entity attribute identified by its GUID.
            Supports only primitive attribute type and entity references.
            It does not support updating complex types like arrays, and maps.
            Null updates are not possible.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PartialUpdateEntityByUniqueAttributes">
      <MemberSignature Language="C#" Value="public virtual Azure.Response PartialUpdateEntityByUniqueAttributes (string typeName, Azure.Core.RequestContent requestBody, string attrQualifiedName = default, Azure.RequestOptions requestOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response PartialUpdateEntityByUniqueAttributes(string typeName, class Azure.Core.RequestContent requestBody, string attrQualifiedName, class Azure.RequestOptions requestOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewEntities.PartialUpdateEntityByUniqueAttributes(System.String,Azure.Core.RequestContent,System.String,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PartialUpdateEntityByUniqueAttributes (typeName As String, requestBody As RequestContent, Optional attrQualifiedName As String = Nothing, Optional requestOptions As RequestOptions = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member PartialUpdateEntityByUniqueAttributes : string * Azure.Core.RequestContent * string * Azure.RequestOptions -&gt; Azure.Response&#xA;override this.PartialUpdateEntityByUniqueAttributes : string * Azure.Core.RequestContent * string * Azure.RequestOptions -&gt; Azure.Response" Usage="purviewEntities.PartialUpdateEntityByUniqueAttributes (typeName, requestBody, attrQualifiedName, requestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="requestBody" Type="Azure.Core.RequestContent" />
        <Parameter Name="attrQualifiedName" Type="System.String" />
        <Parameter Name="requestOptions" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="typeName"> The name of the type. </param>
        <param name="requestBody"> The request body. </param>
        <param name="attrQualifiedName"> The qualified name of the entity. </param>
        <param name="requestOptions"> The request options. </param>
        <summary>
            Update entity partially - Allow a subset of attributes to be updated on
            an entity which is identified by its type and unique attribute  eg: Referenceable.qualifiedName.
            Null updates are not possible.
            In addition to the typeName path parameter, attribute key-value pair(s) can be provided in the following format:
            attr:&lt;attrName&gt;=&lt;attrValue&gt;.
            NOTE: The attrName and attrValue should be unique across entities, eg. qualifiedName.
            The REST request would look something like this:
            PUT /v2/entity/uniqueAttribute/type/aType?attr:aTypeAttribute=someValue.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Request Body</c>:
            <list type="table"><listeader><term>Name</term><term>Type</term><term>Required</term><term>Description</term></listeader><item><term>referredEntities</term><term>Dictionary&lt;string, AtlasEntity&gt;</term><term /><term> The referred entities. </term></item><item><term>entity</term><term>AtlasEntity</term><term /><term> An instance of an entity - like hive_table, hive_database. </term></item></list>
            Schema for <c>AtlasEntity</c>:
            <list type="table"><listeader><term>Name</term><term>Type</term><term>Required</term><term>Description</term></listeader><item><term>attributes</term><term>Dictionary&lt;string, AnyObject&gt;</term><term /><term> The attributes of the struct. </term></item><item><term>typeName</term><term>string</term><term /><term> The name of the type. </term></item><item><term>lastModifiedTS</term><term>string</term><term /><term> ETag for concurrency control. </term></item><item><term>classifications</term><term>AtlasClassification[]</term><term /><term> An array of classifications. </term></item><item><term>createTime</term><term>number</term><term /><term> The created time of the record. </term></item><item><term>createdBy</term><term>string</term><term /><term> The user who created the record. </term></item><item><term>guid</term><term>string</term><term /><term> The GUID of the entity. </term></item><item><term>homeId</term><term>string</term><term /><term> The home ID of the entity. </term></item><item><term>meanings</term><term>AtlasTermAssignmentHeader[]</term><term /><term> An array of term assignment headers indicating the meanings of the entity. </term></item><item><term>provenanceType</term><term>number</term><term /><term> Used to record the provenance of an instance of an entity or relationship. </term></item><item><term>proxy</term><term>boolean</term><term /><term> Determines if there's a proxy. </term></item><item><term>relationshipAttributes</term><term>Dictionary&lt;string, AnyObject&gt;</term><term /><term> The attributes of relationship. </term></item><item><term>status</term><term>"ACTIVE" | "DELETED"</term><term /><term> Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store. </term></item><item><term>updateTime</term><term>number</term><term /><term> The update time of the record. </term></item><item><term>updatedBy</term><term>string</term><term /><term> The user who updated the record. </term></item><item><term>version</term><term>number</term><term /><term> The version of the entity. </term></item><item><term>source</term><term>string</term><term /><term> indicate the source who create the classification detail. </term></item><item><term>sourceDetails</term><term>Dictionary&lt;string, AnyObject&gt;</term><term /><term> more detail on source information. </term></item><item><term>contacts</term><term>Dictionary&lt;string, ContactBasic[]&gt;</term><term /><term> The dictionary of contacts for terms. Key could be Expert or Owner. </term></item></list>
            Schema for <c>AtlasClassification</c>:
            <list type="table"><listeader><term>Name</term><term>Type</term><term>Required</term><term>Description</term></listeader><item><term>attributes</term><term>Dictionary&lt;string, AnyObject&gt;</term><term /><term> The attributes of the struct. </term></item><item><term>typeName</term><term>string</term><term /><term> The name of the type. </term></item><item><term>lastModifiedTS</term><term>string</term><term /><term> ETag for concurrency control. </term></item><item><term>entityGuid</term><term>string</term><term /><term> The GUID of the entity. </term></item><item><term>entityStatus</term><term>"ACTIVE" | "DELETED"</term><term /><term> Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store. </term></item><item><term>removePropagationsOnEntityDelete</term><term>boolean</term><term /><term> Determines if propagations will be removed on entity deletion. </term></item><item><term>validityPeriods</term><term>TimeBoundary[]</term><term /><term> An array of time boundaries indicating validity periods. </term></item><item><term>source</term><term>string</term><term /><term> indicate the source who create the classification detail. </term></item><item><term>sourceDetails</term><term>Dictionary&lt;string, AnyObject&gt;</term><term /><term> more detail on source information. </term></item></list>
            Schema for <c>AtlasTermAssignmentHeader</c>:
            <list type="table"><listeader><term>Name</term><term>Type</term><term>Required</term><term>Description</term></listeader><item><term>confidence</term><term>number</term><term /><term> The confidence of the term assignment. </term></item><item><term>createdBy</term><term>string</term><term /><term> The user who created the record. </term></item><item><term>description</term><term>string</term><term /><term> The description of the term assignment. </term></item><item><term>displayText</term><term>string</term><term /><term> The display text. </term></item><item><term>expression</term><term>string</term><term /><term> The expression of the term assignment. </term></item><item><term>relationGuid</term><term>string</term><term /><term> The GUID of the relationship. </term></item><item><term>source</term><term>string</term><term /><term> The source of the term. </term></item><item><term>status</term><term>"DISCOVERED" | "PROPOSED" | "IMPORTED" | "VALIDATED" | "DEPRECATED" | "OBSOLETE" | "OTHER"</term><term /><term> The status of terms assignment. </term></item><item><term>steward</term><term>string</term><term /><term> The steward of the term. </term></item><item><term>termGuid</term><term>string</term><term /><term> The GUID of the term. </term></item></list>
            Schema for <c>ContactBasic</c>:
            <list type="table"><listeader><term>Name</term><term>Type</term><term>Required</term><term>Description</term></listeader><item><term>id</term><term>string</term><term /><term> Azure Active Directory object Id. </term></item><item><term>info</term><term>string</term><term /><term> additional information to describe this contact. </term></item></list>
            Schema for <c>TimeBoundary</c>:
            <list type="table"><listeader><term>Name</term><term>Type</term><term>Required</term><term>Description</term></listeader><item><term>endTime</term><term>string</term><term /><term> The end of the time boundary. </term></item><item><term>startTime</term><term>string</term><term /><term> The start of the time boundary. </term></item><item><term>timeZone</term><term>string</term><term /><term> The timezone of the time boundary. </term></item></list></remarks>
      </Docs>
    </Member>
    <Member MemberName="PartialUpdateEntityByUniqueAttributesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; PartialUpdateEntityByUniqueAttributesAsync (string typeName, Azure.Core.RequestContent requestBody, string attrQualifiedName = default, Azure.RequestOptions requestOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; PartialUpdateEntityByUniqueAttributesAsync(string typeName, class Azure.Core.RequestContent requestBody, string attrQualifiedName, class Azure.RequestOptions requestOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewEntities.PartialUpdateEntityByUniqueAttributesAsync(System.String,Azure.Core.RequestContent,System.String,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PartialUpdateEntityByUniqueAttributesAsync (typeName As String, requestBody As RequestContent, Optional attrQualifiedName As String = Nothing, Optional requestOptions As RequestOptions = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member PartialUpdateEntityByUniqueAttributesAsync : string * Azure.Core.RequestContent * string * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.PartialUpdateEntityByUniqueAttributesAsync : string * Azure.Core.RequestContent * string * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="purviewEntities.PartialUpdateEntityByUniqueAttributesAsync (typeName, requestBody, attrQualifiedName, requestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="requestBody" Type="Azure.Core.RequestContent" />
        <Parameter Name="attrQualifiedName" Type="System.String" />
        <Parameter Name="requestOptions" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="typeName"> The name of the type. </param>
        <param name="requestBody"> The request body. </param>
        <param name="attrQualifiedName"> The qualified name of the entity. </param>
        <param name="requestOptions"> The request options. </param>
        <summary>
            Update entity partially - Allow a subset of attributes to be updated on
            an entity which is identified by its type and unique attribute  eg: Referenceable.qualifiedName.
            Null updates are not possible.
            In addition to the typeName path parameter, attribute key-value pair(s) can be provided in the following format:
            attr:&lt;attrName&gt;=&lt;attrValue&gt;.
            NOTE: The attrName and attrValue should be unique across entities, eg. qualifiedName.
            The REST request would look something like this:
            PUT /v2/entity/uniqueAttribute/type/aType?attr:aTypeAttribute=someValue.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Request Body</c>:
            <list type="table"><listeader><term>Name</term><term>Type</term><term>Required</term><term>Description</term></listeader><item><term>referredEntities</term><term>Dictionary&lt;string, AtlasEntity&gt;</term><term /><term> The referred entities. </term></item><item><term>entity</term><term>AtlasEntity</term><term /><term> An instance of an entity - like hive_table, hive_database. </term></item></list>
            Schema for <c>AtlasEntity</c>:
            <list type="table"><listeader><term>Name</term><term>Type</term><term>Required</term><term>Description</term></listeader><item><term>attributes</term><term>Dictionary&lt;string, AnyObject&gt;</term><term /><term> The attributes of the struct. </term></item><item><term>typeName</term><term>string</term><term /><term> The name of the type. </term></item><item><term>lastModifiedTS</term><term>string</term><term /><term> ETag for concurrency control. </term></item><item><term>classifications</term><term>AtlasClassification[]</term><term /><term> An array of classifications. </term></item><item><term>createTime</term><term>number</term><term /><term> The created time of the record. </term></item><item><term>createdBy</term><term>string</term><term /><term> The user who created the record. </term></item><item><term>guid</term><term>string</term><term /><term> The GUID of the entity. </term></item><item><term>homeId</term><term>string</term><term /><term> The home ID of the entity. </term></item><item><term>meanings</term><term>AtlasTermAssignmentHeader[]</term><term /><term> An array of term assignment headers indicating the meanings of the entity. </term></item><item><term>provenanceType</term><term>number</term><term /><term> Used to record the provenance of an instance of an entity or relationship. </term></item><item><term>proxy</term><term>boolean</term><term /><term> Determines if there's a proxy. </term></item><item><term>relationshipAttributes</term><term>Dictionary&lt;string, AnyObject&gt;</term><term /><term> The attributes of relationship. </term></item><item><term>status</term><term>"ACTIVE" | "DELETED"</term><term /><term> Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store. </term></item><item><term>updateTime</term><term>number</term><term /><term> The update time of the record. </term></item><item><term>updatedBy</term><term>string</term><term /><term> The user who updated the record. </term></item><item><term>version</term><term>number</term><term /><term> The version of the entity. </term></item><item><term>source</term><term>string</term><term /><term> indicate the source who create the classification detail. </term></item><item><term>sourceDetails</term><term>Dictionary&lt;string, AnyObject&gt;</term><term /><term> more detail on source information. </term></item><item><term>contacts</term><term>Dictionary&lt;string, ContactBasic[]&gt;</term><term /><term> The dictionary of contacts for terms. Key could be Expert or Owner. </term></item></list>
            Schema for <c>AtlasClassification</c>:
            <list type="table"><listeader><term>Name</term><term>Type</term><term>Required</term><term>Description</term></listeader><item><term>attributes</term><term>Dictionary&lt;string, AnyObject&gt;</term><term /><term> The attributes of the struct. </term></item><item><term>typeName</term><term>string</term><term /><term> The name of the type. </term></item><item><term>lastModifiedTS</term><term>string</term><term /><term> ETag for concurrency control. </term></item><item><term>entityGuid</term><term>string</term><term /><term> The GUID of the entity. </term></item><item><term>entityStatus</term><term>"ACTIVE" | "DELETED"</term><term /><term> Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store. </term></item><item><term>removePropagationsOnEntityDelete</term><term>boolean</term><term /><term> Determines if propagations will be removed on entity deletion. </term></item><item><term>validityPeriods</term><term>TimeBoundary[]</term><term /><term> An array of time boundaries indicating validity periods. </term></item><item><term>source</term><term>string</term><term /><term> indicate the source who create the classification detail. </term></item><item><term>sourceDetails</term><term>Dictionary&lt;string, AnyObject&gt;</term><term /><term> more detail on source information. </term></item></list>
            Schema for <c>AtlasTermAssignmentHeader</c>:
            <list type="table"><listeader><term>Name</term><term>Type</term><term>Required</term><term>Description</term></listeader><item><term>confidence</term><term>number</term><term /><term> The confidence of the term assignment. </term></item><item><term>createdBy</term><term>string</term><term /><term> The user who created the record. </term></item><item><term>description</term><term>string</term><term /><term> The description of the term assignment. </term></item><item><term>displayText</term><term>string</term><term /><term> The display text. </term></item><item><term>expression</term><term>string</term><term /><term> The expression of the term assignment. </term></item><item><term>relationGuid</term><term>string</term><term /><term> The GUID of the relationship. </term></item><item><term>source</term><term>string</term><term /><term> The source of the term. </term></item><item><term>status</term><term>"DISCOVERED" | "PROPOSED" | "IMPORTED" | "VALIDATED" | "DEPRECATED" | "OBSOLETE" | "OTHER"</term><term /><term> The status of terms assignment. </term></item><item><term>steward</term><term>string</term><term /><term> The steward of the term. </term></item><item><term>termGuid</term><term>string</term><term /><term> The GUID of the term. </term></item></list>
            Schema for <c>ContactBasic</c>:
            <list type="table"><listeader><term>Name</term><term>Type</term><term>Required</term><term>Description</term></listeader><item><term>id</term><term>string</term><term /><term> Azure Active Directory object Id. </term></item><item><term>info</term><term>string</term><term /><term> additional information to describe this contact. </term></item></list>
            Schema for <c>TimeBoundary</c>:
            <list type="table"><listeader><term>Name</term><term>Type</term><term>Required</term><term>Description</term></listeader><item><term>endTime</term><term>string</term><term /><term> The end of the time boundary. </term></item><item><term>startTime</term><term>string</term><term /><term> The start of the time boundary. </term></item><item><term>timeZone</term><term>string</term><term /><term> The timezone of the time boundary. </term></item></list></remarks>
      </Docs>
    </Member>
    <Member MemberName="Pipeline">
      <MemberSignature Language="C#" Value="public virtual Azure.Core.Pipeline.HttpPipeline Pipeline { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Core.Pipeline.HttpPipeline Pipeline" />
      <MemberSignature Language="DocId" Value="P:Azure.Analytics.Purview.Catalog.PurviewEntities.Pipeline" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Pipeline As HttpPipeline" />
      <MemberSignature Language="F#" Value="member this.Pipeline : Azure.Core.Pipeline.HttpPipeline" Usage="Azure.Analytics.Purview.Catalog.PurviewEntities.Pipeline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.Pipeline.HttpPipeline</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The HTTP pipeline for sending and receiving REST requests and responses. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetClassifications">
      <MemberSignature Language="C#" Value="public virtual Azure.Response SetClassifications (Azure.Core.RequestContent requestBody, Azure.RequestOptions requestOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response SetClassifications(class Azure.Core.RequestContent requestBody, class Azure.RequestOptions requestOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewEntities.SetClassifications(Azure.Core.RequestContent,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetClassifications (requestBody As RequestContent, Optional requestOptions As RequestOptions = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member SetClassifications : Azure.Core.RequestContent * Azure.RequestOptions -&gt; Azure.Response&#xA;override this.SetClassifications : Azure.Core.RequestContent * Azure.RequestOptions -&gt; Azure.Response" Usage="purviewEntities.SetClassifications (requestBody, requestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestBody" Type="Azure.Core.RequestContent" />
        <Parameter Name="requestOptions" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="requestBody"> The request body. </param>
        <param name="requestOptions"> The request options. </param>
        <summary> Set classifications on entities in bulk. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Request Body</c>:
            <list type="table"><listeader><term>Name</term><term>Type</term><term>Required</term><term>Description</term></listeader><item><term>guidHeaderMap</term><term>Dictionary&lt;string, AtlasEntityHeader&gt;</term><term /><term> The description of the guid header map,. </term></item></list>
            Schema for <c>AtlasEntityHeader</c>:
            <list type="table"><listeader><term>Name</term><term>Type</term><term>Required</term><term>Description</term></listeader><item><term>attributes</term><term>Dictionary&lt;string, AnyObject&gt;</term><term /><term> The attributes of the struct. </term></item><item><term>typeName</term><term>string</term><term /><term> The name of the type. </term></item><item><term>lastModifiedTS</term><term>string</term><term /><term> ETag for concurrency control. </term></item><item><term>classificationNames</term><term>string[]</term><term /><term> An array of classification names. </term></item><item><term>classifications</term><term>AtlasClassification[]</term><term /><term> An array of classifications. </term></item><item><term>displayText</term><term>string</term><term /><term> The display text. </term></item><item><term>guid</term><term>string</term><term /><term> The GUID of the record. </term></item><item><term>meaningNames</term><term>string[]</term><term /><term> An array of meanings. </term></item><item><term>meanings</term><term>AtlasTermAssignmentHeader[]</term><term /><term> An array of term assignment headers. </term></item><item><term>status</term><term>"ACTIVE" | "DELETED"</term><term /><term> Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store. </term></item></list>
            Schema for <c>AtlasClassification</c>:
            <list type="table"><listeader><term>Name</term><term>Type</term><term>Required</term><term>Description</term></listeader><item><term>attributes</term><term>Dictionary&lt;string, AnyObject&gt;</term><term /><term> The attributes of the struct. </term></item><item><term>typeName</term><term>string</term><term /><term> The name of the type. </term></item><item><term>lastModifiedTS</term><term>string</term><term /><term> ETag for concurrency control. </term></item><item><term>entityGuid</term><term>string</term><term /><term> The GUID of the entity. </term></item><item><term>entityStatus</term><term>"ACTIVE" | "DELETED"</term><term /><term> Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store. </term></item><item><term>removePropagationsOnEntityDelete</term><term>boolean</term><term /><term> Determines if propagations will be removed on entity deletion. </term></item><item><term>validityPeriods</term><term>TimeBoundary[]</term><term /><term> An array of time boundaries indicating validity periods. </term></item><item><term>source</term><term>string</term><term /><term> indicate the source who create the classification detail. </term></item><item><term>sourceDetails</term><term>Dictionary&lt;string, AnyObject&gt;</term><term /><term> more detail on source information. </term></item></list>
            Schema for <c>AtlasTermAssignmentHeader</c>:
            <list type="table"><listeader><term>Name</term><term>Type</term><term>Required</term><term>Description</term></listeader><item><term>confidence</term><term>number</term><term /><term> The confidence of the term assignment. </term></item><item><term>createdBy</term><term>string</term><term /><term> The user who created the record. </term></item><item><term>description</term><term>string</term><term /><term> The description of the term assignment. </term></item><item><term>displayText</term><term>string</term><term /><term> The display text. </term></item><item><term>expression</term><term>string</term><term /><term> The expression of the term assignment. </term></item><item><term>relationGuid</term><term>string</term><term /><term> The GUID of the relationship. </term></item><item><term>source</term><term>string</term><term /><term> The source of the term. </term></item><item><term>status</term><term>"DISCOVERED" | "PROPOSED" | "IMPORTED" | "VALIDATED" | "DEPRECATED" | "OBSOLETE" | "OTHER"</term><term /><term> The status of terms assignment. </term></item><item><term>steward</term><term>string</term><term /><term> The steward of the term. </term></item><item><term>termGuid</term><term>string</term><term /><term> The GUID of the term. </term></item></list>
            Schema for <c>TimeBoundary</c>:
            <list type="table"><listeader><term>Name</term><term>Type</term><term>Required</term><term>Description</term></listeader><item><term>endTime</term><term>string</term><term /><term> The end of the time boundary. </term></item><item><term>startTime</term><term>string</term><term /><term> The start of the time boundary. </term></item><item><term>timeZone</term><term>string</term><term /><term> The timezone of the time boundary. </term></item></list></remarks>
      </Docs>
    </Member>
    <Member MemberName="SetClassificationsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; SetClassificationsAsync (Azure.Core.RequestContent requestBody, Azure.RequestOptions requestOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; SetClassificationsAsync(class Azure.Core.RequestContent requestBody, class Azure.RequestOptions requestOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewEntities.SetClassificationsAsync(Azure.Core.RequestContent,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetClassificationsAsync (requestBody As RequestContent, Optional requestOptions As RequestOptions = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member SetClassificationsAsync : Azure.Core.RequestContent * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.SetClassificationsAsync : Azure.Core.RequestContent * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="purviewEntities.SetClassificationsAsync (requestBody, requestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestBody" Type="Azure.Core.RequestContent" />
        <Parameter Name="requestOptions" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="requestBody"> The request body. </param>
        <param name="requestOptions"> The request options. </param>
        <summary> Set classifications on entities in bulk. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Request Body</c>:
            <list type="table"><listeader><term>Name</term><term>Type</term><term>Required</term><term>Description</term></listeader><item><term>guidHeaderMap</term><term>Dictionary&lt;string, AtlasEntityHeader&gt;</term><term /><term> The description of the guid header map,. </term></item></list>
            Schema for <c>AtlasEntityHeader</c>:
            <list type="table"><listeader><term>Name</term><term>Type</term><term>Required</term><term>Description</term></listeader><item><term>attributes</term><term>Dictionary&lt;string, AnyObject&gt;</term><term /><term> The attributes of the struct. </term></item><item><term>typeName</term><term>string</term><term /><term> The name of the type. </term></item><item><term>lastModifiedTS</term><term>string</term><term /><term> ETag for concurrency control. </term></item><item><term>classificationNames</term><term>string[]</term><term /><term> An array of classification names. </term></item><item><term>classifications</term><term>AtlasClassification[]</term><term /><term> An array of classifications. </term></item><item><term>displayText</term><term>string</term><term /><term> The display text. </term></item><item><term>guid</term><term>string</term><term /><term> The GUID of the record. </term></item><item><term>meaningNames</term><term>string[]</term><term /><term> An array of meanings. </term></item><item><term>meanings</term><term>AtlasTermAssignmentHeader[]</term><term /><term> An array of term assignment headers. </term></item><item><term>status</term><term>"ACTIVE" | "DELETED"</term><term /><term> Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store. </term></item></list>
            Schema for <c>AtlasClassification</c>:
            <list type="table"><listeader><term>Name</term><term>Type</term><term>Required</term><term>Description</term></listeader><item><term>attributes</term><term>Dictionary&lt;string, AnyObject&gt;</term><term /><term> The attributes of the struct. </term></item><item><term>typeName</term><term>string</term><term /><term> The name of the type. </term></item><item><term>lastModifiedTS</term><term>string</term><term /><term> ETag for concurrency control. </term></item><item><term>entityGuid</term><term>string</term><term /><term> The GUID of the entity. </term></item><item><term>entityStatus</term><term>"ACTIVE" | "DELETED"</term><term /><term> Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store. </term></item><item><term>removePropagationsOnEntityDelete</term><term>boolean</term><term /><term> Determines if propagations will be removed on entity deletion. </term></item><item><term>validityPeriods</term><term>TimeBoundary[]</term><term /><term> An array of time boundaries indicating validity periods. </term></item><item><term>source</term><term>string</term><term /><term> indicate the source who create the classification detail. </term></item><item><term>sourceDetails</term><term>Dictionary&lt;string, AnyObject&gt;</term><term /><term> more detail on source information. </term></item></list>
            Schema for <c>AtlasTermAssignmentHeader</c>:
            <list type="table"><listeader><term>Name</term><term>Type</term><term>Required</term><term>Description</term></listeader><item><term>confidence</term><term>number</term><term /><term> The confidence of the term assignment. </term></item><item><term>createdBy</term><term>string</term><term /><term> The user who created the record. </term></item><item><term>description</term><term>string</term><term /><term> The description of the term assignment. </term></item><item><term>displayText</term><term>string</term><term /><term> The display text. </term></item><item><term>expression</term><term>string</term><term /><term> The expression of the term assignment. </term></item><item><term>relationGuid</term><term>string</term><term /><term> The GUID of the relationship. </term></item><item><term>source</term><term>string</term><term /><term> The source of the term. </term></item><item><term>status</term><term>"DISCOVERED" | "PROPOSED" | "IMPORTED" | "VALIDATED" | "DEPRECATED" | "OBSOLETE" | "OTHER"</term><term /><term> The status of terms assignment. </term></item><item><term>steward</term><term>string</term><term /><term> The steward of the term. </term></item><item><term>termGuid</term><term>string</term><term /><term> The GUID of the term. </term></item></list>
            Schema for <c>TimeBoundary</c>:
            <list type="table"><listeader><term>Name</term><term>Type</term><term>Required</term><term>Description</term></listeader><item><term>endTime</term><term>string</term><term /><term> The end of the time boundary. </term></item><item><term>startTime</term><term>string</term><term /><term> The start of the time boundary. </term></item><item><term>timeZone</term><term>string</term><term /><term> The timezone of the time boundary. </term></item></list></remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateClassifications">
      <MemberSignature Language="C#" Value="public virtual Azure.Response UpdateClassifications (string guid, Azure.Core.RequestContent requestBody, Azure.RequestOptions requestOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response UpdateClassifications(string guid, class Azure.Core.RequestContent requestBody, class Azure.RequestOptions requestOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewEntities.UpdateClassifications(System.String,Azure.Core.RequestContent,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateClassifications (guid As String, requestBody As RequestContent, Optional requestOptions As RequestOptions = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member UpdateClassifications : string * Azure.Core.RequestContent * Azure.RequestOptions -&gt; Azure.Response&#xA;override this.UpdateClassifications : string * Azure.Core.RequestContent * Azure.RequestOptions -&gt; Azure.Response" Usage="purviewEntities.UpdateClassifications (guid, requestBody, requestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="guid" Type="System.String" />
        <Parameter Name="requestBody" Type="Azure.Core.RequestContent" />
        <Parameter Name="requestOptions" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="guid"> The globally unique identifier of the entity. </param>
        <param name="requestBody"> The request body. </param>
        <param name="requestOptions"> The request options. </param>
        <summary> Update classifications to an existing entity represented by a guid. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>AtlasClassification</c>:
            <list type="table"><listeader><term>Name</term><term>Type</term><term>Required</term><term>Description</term></listeader><item><term>attributes</term><term>Dictionary&lt;string, AnyObject&gt;</term><term /><term> The attributes of the struct. </term></item><item><term>typeName</term><term>string</term><term /><term> The name of the type. </term></item><item><term>lastModifiedTS</term><term>string</term><term /><term> ETag for concurrency control. </term></item><item><term>entityGuid</term><term>string</term><term /><term> The GUID of the entity. </term></item><item><term>entityStatus</term><term>"ACTIVE" | "DELETED"</term><term /><term> Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store. </term></item><item><term>removePropagationsOnEntityDelete</term><term>boolean</term><term /><term> Determines if propagations will be removed on entity deletion. </term></item><item><term>validityPeriods</term><term>TimeBoundary[]</term><term /><term> An array of time boundaries indicating validity periods. </term></item><item><term>source</term><term>string</term><term /><term> indicate the source who create the classification detail. </term></item><item><term>sourceDetails</term><term>Dictionary&lt;string, AnyObject&gt;</term><term /><term> more detail on source information. </term></item></list>
            Schema for <c>TimeBoundary</c>:
            <list type="table"><listeader><term>Name</term><term>Type</term><term>Required</term><term>Description</term></listeader><item><term>endTime</term><term>string</term><term /><term> The end of the time boundary. </term></item><item><term>startTime</term><term>string</term><term /><term> The start of the time boundary. </term></item><item><term>timeZone</term><term>string</term><term /><term> The timezone of the time boundary. </term></item></list></remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateClassificationsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; UpdateClassificationsAsync (string guid, Azure.Core.RequestContent requestBody, Azure.RequestOptions requestOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; UpdateClassificationsAsync(string guid, class Azure.Core.RequestContent requestBody, class Azure.RequestOptions requestOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewEntities.UpdateClassificationsAsync(System.String,Azure.Core.RequestContent,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateClassificationsAsync (guid As String, requestBody As RequestContent, Optional requestOptions As RequestOptions = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member UpdateClassificationsAsync : string * Azure.Core.RequestContent * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.UpdateClassificationsAsync : string * Azure.Core.RequestContent * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="purviewEntities.UpdateClassificationsAsync (guid, requestBody, requestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="guid" Type="System.String" />
        <Parameter Name="requestBody" Type="Azure.Core.RequestContent" />
        <Parameter Name="requestOptions" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="guid"> The globally unique identifier of the entity. </param>
        <param name="requestBody"> The request body. </param>
        <param name="requestOptions"> The request options. </param>
        <summary> Update classifications to an existing entity represented by a guid. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>AtlasClassification</c>:
            <list type="table"><listeader><term>Name</term><term>Type</term><term>Required</term><term>Description</term></listeader><item><term>attributes</term><term>Dictionary&lt;string, AnyObject&gt;</term><term /><term> The attributes of the struct. </term></item><item><term>typeName</term><term>string</term><term /><term> The name of the type. </term></item><item><term>lastModifiedTS</term><term>string</term><term /><term> ETag for concurrency control. </term></item><item><term>entityGuid</term><term>string</term><term /><term> The GUID of the entity. </term></item><item><term>entityStatus</term><term>"ACTIVE" | "DELETED"</term><term /><term> Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store. </term></item><item><term>removePropagationsOnEntityDelete</term><term>boolean</term><term /><term> Determines if propagations will be removed on entity deletion. </term></item><item><term>validityPeriods</term><term>TimeBoundary[]</term><term /><term> An array of time boundaries indicating validity periods. </term></item><item><term>source</term><term>string</term><term /><term> indicate the source who create the classification detail. </term></item><item><term>sourceDetails</term><term>Dictionary&lt;string, AnyObject&gt;</term><term /><term> more detail on source information. </term></item></list>
            Schema for <c>TimeBoundary</c>:
            <list type="table"><listeader><term>Name</term><term>Type</term><term>Required</term><term>Description</term></listeader><item><term>endTime</term><term>string</term><term /><term> The end of the time boundary. </term></item><item><term>startTime</term><term>string</term><term /><term> The start of the time boundary. </term></item><item><term>timeZone</term><term>string</term><term /><term> The timezone of the time boundary. </term></item></list></remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateClassificationsByUniqueAttribute">
      <MemberSignature Language="C#" Value="public virtual Azure.Response UpdateClassificationsByUniqueAttribute (string typeName, Azure.Core.RequestContent requestBody, string attrQualifiedName = default, Azure.RequestOptions requestOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response UpdateClassificationsByUniqueAttribute(string typeName, class Azure.Core.RequestContent requestBody, string attrQualifiedName, class Azure.RequestOptions requestOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewEntities.UpdateClassificationsByUniqueAttribute(System.String,Azure.Core.RequestContent,System.String,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateClassificationsByUniqueAttribute (typeName As String, requestBody As RequestContent, Optional attrQualifiedName As String = Nothing, Optional requestOptions As RequestOptions = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member UpdateClassificationsByUniqueAttribute : string * Azure.Core.RequestContent * string * Azure.RequestOptions -&gt; Azure.Response&#xA;override this.UpdateClassificationsByUniqueAttribute : string * Azure.Core.RequestContent * string * Azure.RequestOptions -&gt; Azure.Response" Usage="purviewEntities.UpdateClassificationsByUniqueAttribute (typeName, requestBody, attrQualifiedName, requestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="requestBody" Type="Azure.Core.RequestContent" />
        <Parameter Name="attrQualifiedName" Type="System.String" />
        <Parameter Name="requestOptions" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="typeName"> The name of the type. </param>
        <param name="requestBody"> The request body. </param>
        <param name="attrQualifiedName"> The qualified name of the entity. </param>
        <param name="requestOptions"> The request options. </param>
        <summary> Update classification on an entity identified by its type and unique attributes. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>AtlasClassification</c>:
            <list type="table"><listeader><term>Name</term><term>Type</term><term>Required</term><term>Description</term></listeader><item><term>attributes</term><term>Dictionary&lt;string, AnyObject&gt;</term><term /><term> The attributes of the struct. </term></item><item><term>typeName</term><term>string</term><term /><term> The name of the type. </term></item><item><term>lastModifiedTS</term><term>string</term><term /><term> ETag for concurrency control. </term></item><item><term>entityGuid</term><term>string</term><term /><term> The GUID of the entity. </term></item><item><term>entityStatus</term><term>"ACTIVE" | "DELETED"</term><term /><term> Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store. </term></item><item><term>removePropagationsOnEntityDelete</term><term>boolean</term><term /><term> Determines if propagations will be removed on entity deletion. </term></item><item><term>validityPeriods</term><term>TimeBoundary[]</term><term /><term> An array of time boundaries indicating validity periods. </term></item><item><term>source</term><term>string</term><term /><term> indicate the source who create the classification detail. </term></item><item><term>sourceDetails</term><term>Dictionary&lt;string, AnyObject&gt;</term><term /><term> more detail on source information. </term></item></list>
            Schema for <c>TimeBoundary</c>:
            <list type="table"><listeader><term>Name</term><term>Type</term><term>Required</term><term>Description</term></listeader><item><term>endTime</term><term>string</term><term /><term> The end of the time boundary. </term></item><item><term>startTime</term><term>string</term><term /><term> The start of the time boundary. </term></item><item><term>timeZone</term><term>string</term><term /><term> The timezone of the time boundary. </term></item></list></remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateClassificationsByUniqueAttributeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; UpdateClassificationsByUniqueAttributeAsync (string typeName, Azure.Core.RequestContent requestBody, string attrQualifiedName = default, Azure.RequestOptions requestOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; UpdateClassificationsByUniqueAttributeAsync(string typeName, class Azure.Core.RequestContent requestBody, string attrQualifiedName, class Azure.RequestOptions requestOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewEntities.UpdateClassificationsByUniqueAttributeAsync(System.String,Azure.Core.RequestContent,System.String,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateClassificationsByUniqueAttributeAsync (typeName As String, requestBody As RequestContent, Optional attrQualifiedName As String = Nothing, Optional requestOptions As RequestOptions = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member UpdateClassificationsByUniqueAttributeAsync : string * Azure.Core.RequestContent * string * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.UpdateClassificationsByUniqueAttributeAsync : string * Azure.Core.RequestContent * string * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="purviewEntities.UpdateClassificationsByUniqueAttributeAsync (typeName, requestBody, attrQualifiedName, requestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="requestBody" Type="Azure.Core.RequestContent" />
        <Parameter Name="attrQualifiedName" Type="System.String" />
        <Parameter Name="requestOptions" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="typeName"> The name of the type. </param>
        <param name="requestBody"> The request body. </param>
        <param name="attrQualifiedName"> The qualified name of the entity. </param>
        <param name="requestOptions"> The request options. </param>
        <summary> Update classification on an entity identified by its type and unique attributes. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>AtlasClassification</c>:
            <list type="table"><listeader><term>Name</term><term>Type</term><term>Required</term><term>Description</term></listeader><item><term>attributes</term><term>Dictionary&lt;string, AnyObject&gt;</term><term /><term> The attributes of the struct. </term></item><item><term>typeName</term><term>string</term><term /><term> The name of the type. </term></item><item><term>lastModifiedTS</term><term>string</term><term /><term> ETag for concurrency control. </term></item><item><term>entityGuid</term><term>string</term><term /><term> The GUID of the entity. </term></item><item><term>entityStatus</term><term>"ACTIVE" | "DELETED"</term><term /><term> Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store. </term></item><item><term>removePropagationsOnEntityDelete</term><term>boolean</term><term /><term> Determines if propagations will be removed on entity deletion. </term></item><item><term>validityPeriods</term><term>TimeBoundary[]</term><term /><term> An array of time boundaries indicating validity periods. </term></item><item><term>source</term><term>string</term><term /><term> indicate the source who create the classification detail. </term></item><item><term>sourceDetails</term><term>Dictionary&lt;string, AnyObject&gt;</term><term /><term> more detail on source information. </term></item></list>
            Schema for <c>TimeBoundary</c>:
            <list type="table"><listeader><term>Name</term><term>Type</term><term>Required</term><term>Description</term></listeader><item><term>endTime</term><term>string</term><term /><term> The end of the time boundary. </term></item><item><term>startTime</term><term>string</term><term /><term> The start of the time boundary. </term></item><item><term>timeZone</term><term>string</term><term /><term> The timezone of the time boundary. </term></item></list></remarks>
      </Docs>
    </Member>
  </Members>
</Type>

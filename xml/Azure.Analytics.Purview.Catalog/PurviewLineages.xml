<Type Name="PurviewLineages" FullName="Azure.Analytics.Purview.Catalog.PurviewLineages">
  <TypeSignature Language="C#" Value="public class PurviewLineages" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PurviewLineages extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Analytics.Purview.Catalog.PurviewLineages" />
  <TypeSignature Language="VB.NET" Value="Public Class PurviewLineages" />
  <TypeSignature Language="F#" Value="type PurviewLineages = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> The PurviewLineages service client. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PurviewLineages ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewLineages.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of PurviewLineages for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLineageGraph">
      <MemberSignature Language="C#" Value="public virtual Azure.Response GetLineageGraph (string guid, string direction, Azure.RequestOptions options, int? depth = default, int? width = default, bool? includeParent = default, bool? getDerivedLineage = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response GetLineageGraph(string guid, string direction, class Azure.RequestOptions options, valuetype System.Nullable`1&lt;int32&gt; depth, valuetype System.Nullable`1&lt;int32&gt; width, valuetype System.Nullable`1&lt;bool&gt; includeParent, valuetype System.Nullable`1&lt;bool&gt; getDerivedLineage) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewLineages.GetLineageGraph(System.String,System.String,Azure.RequestOptions,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLineageGraph (guid As String, direction As String, options As RequestOptions, Optional depth As Nullable(Of Integer) = Nothing, Optional width As Nullable(Of Integer) = Nothing, Optional includeParent As Nullable(Of Boolean) = Nothing, Optional getDerivedLineage As Nullable(Of Boolean) = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member GetLineageGraph : string * string * Azure.RequestOptions * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; -&gt; Azure.Response&#xA;override this.GetLineageGraph : string * string * Azure.RequestOptions * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; -&gt; Azure.Response" Usage="purviewLineages.GetLineageGraph (guid, direction, options, depth, width, includeParent, getDerivedLineage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="guid" Type="System.String" />
        <Parameter Name="direction" Type="System.String" />
        <Parameter Name="options" Type="Azure.RequestOptions" />
        <Parameter Name="depth" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="width" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="includeParent" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="getDerivedLineage" Type="System.Nullable&lt;System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="guid"> The globally unique identifier of the entity. </param>
        <param name="direction"> The direction of the lineage, which could be INPUT, OUTPUT or BOTH. Allowed values: "BOTH" | "INPUT" | "OUTPUT". </param>
        <param name="options"> The request options. </param>
        <param name="depth"> The number of hops for lineage. </param>
        <param name="width"> The number of max expanding width in lineage. </param>
        <param name="includeParent"> True to include the parent chain in the response. </param>
        <param name="getDerivedLineage"> True to include derived lineage in the response. </param>
        <summary> Get lineage info of the entity specified by GUID. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              baseEntityGuid: string,
              guidEntityMap: Dictionary&lt;string, AtlasEntityHeader&gt;,
              widthCounts: Dictionary&lt;string, Dictionary&lt;string, AnyObject&gt;&gt;,
              lineageDepth: number,
              lineageWidth: number,
              includeParent: boolean,
              childrenCount: number,
              lineageDirection: "INPUT" | "OUTPUT" | "BOTH",
              parentRelations: [
                {
                  childEntityId: string,
                  relationshipId: string,
                  parentEntityId: string
                }
              ],
              relations: [
                {
                  fromEntityId: string,
                  relationshipId: string,
                  toEntityId: string
                }
              ]
            }
            </code>
            Schema for <c>Response Error</c>:
            <code>{
              requestId: string,
              errorCode: string,
              errorMessage: string
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="guid" /> or <paramref name="direction" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetLineageGraphAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; GetLineageGraphAsync (string guid, string direction, Azure.RequestOptions options, int? depth = default, int? width = default, bool? includeParent = default, bool? getDerivedLineage = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; GetLineageGraphAsync(string guid, string direction, class Azure.RequestOptions options, valuetype System.Nullable`1&lt;int32&gt; depth, valuetype System.Nullable`1&lt;int32&gt; width, valuetype System.Nullable`1&lt;bool&gt; includeParent, valuetype System.Nullable`1&lt;bool&gt; getDerivedLineage) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewLineages.GetLineageGraphAsync(System.String,System.String,Azure.RequestOptions,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLineageGraphAsync (guid As String, direction As String, options As RequestOptions, Optional depth As Nullable(Of Integer) = Nothing, Optional width As Nullable(Of Integer) = Nothing, Optional includeParent As Nullable(Of Boolean) = Nothing, Optional getDerivedLineage As Nullable(Of Boolean) = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member GetLineageGraphAsync : string * string * Azure.RequestOptions * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.GetLineageGraphAsync : string * string * Azure.RequestOptions * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="purviewLineages.GetLineageGraphAsync (guid, direction, options, depth, width, includeParent, getDerivedLineage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="guid" Type="System.String" />
        <Parameter Name="direction" Type="System.String" />
        <Parameter Name="options" Type="Azure.RequestOptions" />
        <Parameter Name="depth" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="width" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="includeParent" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="getDerivedLineage" Type="System.Nullable&lt;System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="guid"> The globally unique identifier of the entity. </param>
        <param name="direction"> The direction of the lineage, which could be INPUT, OUTPUT or BOTH. Allowed values: "BOTH" | "INPUT" | "OUTPUT". </param>
        <param name="options"> The request options. </param>
        <param name="depth"> The number of hops for lineage. </param>
        <param name="width"> The number of max expanding width in lineage. </param>
        <param name="includeParent"> True to include the parent chain in the response. </param>
        <param name="getDerivedLineage"> True to include derived lineage in the response. </param>
        <summary> Get lineage info of the entity specified by GUID. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              baseEntityGuid: string,
              guidEntityMap: Dictionary&lt;string, AtlasEntityHeader&gt;,
              widthCounts: Dictionary&lt;string, Dictionary&lt;string, AnyObject&gt;&gt;,
              lineageDepth: number,
              lineageWidth: number,
              includeParent: boolean,
              childrenCount: number,
              lineageDirection: "INPUT" | "OUTPUT" | "BOTH",
              parentRelations: [
                {
                  childEntityId: string,
                  relationshipId: string,
                  parentEntityId: string
                }
              ],
              relations: [
                {
                  fromEntityId: string,
                  relationshipId: string,
                  toEntityId: string
                }
              ]
            }
            </code>
            Schema for <c>Response Error</c>:
            <code>{
              requestId: string,
              errorCode: string,
              errorMessage: string
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="guid" /> or <paramref name="direction" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="NextPageLineage">
      <MemberSignature Language="C#" Value="public virtual Azure.Response NextPageLineage (string guid, string direction, Azure.RequestOptions options, bool? getDerivedLineage = default, int? offset = default, int? limit = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response NextPageLineage(string guid, string direction, class Azure.RequestOptions options, valuetype System.Nullable`1&lt;bool&gt; getDerivedLineage, valuetype System.Nullable`1&lt;int32&gt; offset, valuetype System.Nullable`1&lt;int32&gt; limit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewLineages.NextPageLineage(System.String,System.String,Azure.RequestOptions,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function NextPageLineage (guid As String, direction As String, options As RequestOptions, Optional getDerivedLineage As Nullable(Of Boolean) = Nothing, Optional offset As Nullable(Of Integer) = Nothing, Optional limit As Nullable(Of Integer) = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member NextPageLineage : string * string * Azure.RequestOptions * Nullable&lt;bool&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; -&gt; Azure.Response&#xA;override this.NextPageLineage : string * string * Azure.RequestOptions * Nullable&lt;bool&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; -&gt; Azure.Response" Usage="purviewLineages.NextPageLineage (guid, direction, options, getDerivedLineage, offset, limit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="guid" Type="System.String" />
        <Parameter Name="direction" Type="System.String" />
        <Parameter Name="options" Type="Azure.RequestOptions" />
        <Parameter Name="getDerivedLineage" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="offset" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="limit" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="guid"> The globally unique identifier of the entity. </param>
        <param name="direction"> The direction of the lineage, which could be INPUT, OUTPUT or BOTH. Allowed values: "BOTH" | "INPUT" | "OUTPUT". </param>
        <param name="options"> The request options. </param>
        <param name="getDerivedLineage"> True to include derived lineage in the response. </param>
        <param name="offset"> The offset for pagination purpose. </param>
        <param name="limit"> The page size - by default there is no paging. </param>
        <summary> Return immediate next page lineage info about entity with pagination. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              baseEntityGuid: string,
              guidEntityMap: Dictionary&lt;string, AtlasEntityHeader&gt;,
              widthCounts: Dictionary&lt;string, Dictionary&lt;string, AnyObject&gt;&gt;,
              lineageDepth: number,
              lineageWidth: number,
              includeParent: boolean,
              childrenCount: number,
              lineageDirection: "INPUT" | "OUTPUT" | "BOTH",
              parentRelations: [
                {
                  childEntityId: string,
                  relationshipId: string,
                  parentEntityId: string
                }
              ],
              relations: [
                {
                  fromEntityId: string,
                  relationshipId: string,
                  toEntityId: string
                }
              ]
            }
            </code>
            Schema for <c>Response Error</c>:
            <code>{
              requestId: string,
              errorCode: string,
              errorMessage: string
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="guid" /> or <paramref name="direction" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="NextPageLineageAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; NextPageLineageAsync (string guid, string direction, Azure.RequestOptions options, bool? getDerivedLineage = default, int? offset = default, int? limit = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; NextPageLineageAsync(string guid, string direction, class Azure.RequestOptions options, valuetype System.Nullable`1&lt;bool&gt; getDerivedLineage, valuetype System.Nullable`1&lt;int32&gt; offset, valuetype System.Nullable`1&lt;int32&gt; limit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewLineages.NextPageLineageAsync(System.String,System.String,Azure.RequestOptions,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function NextPageLineageAsync (guid As String, direction As String, options As RequestOptions, Optional getDerivedLineage As Nullable(Of Boolean) = Nothing, Optional offset As Nullable(Of Integer) = Nothing, Optional limit As Nullable(Of Integer) = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member NextPageLineageAsync : string * string * Azure.RequestOptions * Nullable&lt;bool&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.NextPageLineageAsync : string * string * Azure.RequestOptions * Nullable&lt;bool&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="purviewLineages.NextPageLineageAsync (guid, direction, options, getDerivedLineage, offset, limit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="guid" Type="System.String" />
        <Parameter Name="direction" Type="System.String" />
        <Parameter Name="options" Type="Azure.RequestOptions" />
        <Parameter Name="getDerivedLineage" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="offset" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="limit" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="guid"> The globally unique identifier of the entity. </param>
        <param name="direction"> The direction of the lineage, which could be INPUT, OUTPUT or BOTH. Allowed values: "BOTH" | "INPUT" | "OUTPUT". </param>
        <param name="options"> The request options. </param>
        <param name="getDerivedLineage"> True to include derived lineage in the response. </param>
        <param name="offset"> The offset for pagination purpose. </param>
        <param name="limit"> The page size - by default there is no paging. </param>
        <summary> Return immediate next page lineage info about entity with pagination. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              baseEntityGuid: string,
              guidEntityMap: Dictionary&lt;string, AtlasEntityHeader&gt;,
              widthCounts: Dictionary&lt;string, Dictionary&lt;string, AnyObject&gt;&gt;,
              lineageDepth: number,
              lineageWidth: number,
              includeParent: boolean,
              childrenCount: number,
              lineageDirection: "INPUT" | "OUTPUT" | "BOTH",
              parentRelations: [
                {
                  childEntityId: string,
                  relationshipId: string,
                  parentEntityId: string
                }
              ],
              relations: [
                {
                  fromEntityId: string,
                  relationshipId: string,
                  toEntityId: string
                }
              ]
            }
            </code>
            Schema for <c>Response Error</c>:
            <code>{
              requestId: string,
              errorCode: string,
              errorMessage: string
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="guid" /> or <paramref name="direction" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Pipeline">
      <MemberSignature Language="C#" Value="public virtual Azure.Core.Pipeline.HttpPipeline Pipeline { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Core.Pipeline.HttpPipeline Pipeline" />
      <MemberSignature Language="DocId" Value="P:Azure.Analytics.Purview.Catalog.PurviewLineages.Pipeline" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Pipeline As HttpPipeline" />
      <MemberSignature Language="F#" Value="member this.Pipeline : Azure.Core.Pipeline.HttpPipeline" Usage="Azure.Analytics.Purview.Catalog.PurviewLineages.Pipeline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.Pipeline.HttpPipeline</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The HTTP pipeline for sending and receiving REST requests and responses. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="ShouldRetryHandler" FullName="Microsoft.Rest.TransientFaultHandling.ShouldRetryHandler">
  <TypeSignature Language="C#" Value="public delegate Microsoft.Rest.TransientFaultHandling.RetryCondition ShouldRetryHandler(int retryCount, Exception lastException);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ShouldRetryHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Rest.TransientFaultHandling.ShouldRetryHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function ShouldRetryHandler(retryCount As Integer, lastException As Exception) As RetryCondition " />
  <TypeSignature Language="F#" Value="type ShouldRetryHandler = delegate of int * Exception -&gt; RetryCondition" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Rest.ClientRuntime</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="retryCount" Type="System.Int32" />
    <Parameter Name="lastException" Type="System.Exception" />
  </Parameters>
  <ReturnValue>
    <ReturnType>Microsoft.Rest.TransientFaultHandling.RetryCondition</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="retryCount">To be added.</param>
    <param name="lastException">To be added.</param>
    <summary>To be added.</summary>
    <returns>To be added.</returns>
    <remarks>To be added.</remarks>
  </Docs>
</Type>

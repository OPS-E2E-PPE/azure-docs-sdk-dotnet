<Type Name="AttestationAdministrationClient" FullName="Azure.Security.Attestation.AttestationAdministrationClient">
  <TypeSignature Language="C#" Value="public class AttestationAdministrationClient" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AttestationAdministrationClient extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Security.Attestation.AttestationAdministrationClient" />
  <TypeSignature Language="VB.NET" Value="Public Class AttestationAdministrationClient" />
  <TypeSignature Language="F#" Value="type AttestationAdministrationClient = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Security.Attestation</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
             Attestation Client for the Microsoft Azure Attestation service.
            
             The Attestation client contains the implementation of the "Attest" family of MAA apis.
             </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AttestationAdministrationClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.Attestation.AttestationAdministrationClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.Attestation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Parameterless constructor for mocking.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AttestationAdministrationClient (Uri endpoint, Azure.Core.TokenCredential credential);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, class Azure.Core.TokenCredential credential) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.Attestation.AttestationAdministrationClient.#ctor(System.Uri,Azure.Core.TokenCredential)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, credential As TokenCredential)" />
      <MemberSignature Language="F#" Value="new Azure.Security.Attestation.AttestationAdministrationClient : Uri * Azure.Core.TokenCredential -&gt; Azure.Security.Attestation.AttestationAdministrationClient" Usage="new Azure.Security.Attestation.AttestationAdministrationClient (endpoint, credential)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.Attestation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.Core.TokenCredential" />
      </Parameters>
      <Docs>
        <param name="endpoint">Uri for the Microsoft Azure Attestation Service Instance to use.</param>
        <param name="credential">Credentials to be used in the Client.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.Security.Attestation.AttestationClient" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AttestationAdministrationClient (Uri endpoint, Azure.Core.TokenCredential credential, Azure.Security.Attestation.AttestationClientOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, class Azure.Core.TokenCredential credential, class Azure.Security.Attestation.AttestationClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.Attestation.AttestationAdministrationClient.#ctor(System.Uri,Azure.Core.TokenCredential,Azure.Security.Attestation.AttestationClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, credential As TokenCredential, options As AttestationClientOptions)" />
      <MemberSignature Language="F#" Value="new Azure.Security.Attestation.AttestationAdministrationClient : Uri * Azure.Core.TokenCredential * Azure.Security.Attestation.AttestationClientOptions -&gt; Azure.Security.Attestation.AttestationAdministrationClient" Usage="new Azure.Security.Attestation.AttestationAdministrationClient (endpoint, credential, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.Attestation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.Core.TokenCredential" />
        <Parameter Name="options" Type="Azure.Security.Attestation.AttestationClientOptions" />
      </Parameters>
      <Docs>
        <param name="endpoint">Uri for the Microsoft Azure Attestation Service Instance to use.</param>
        <param name="credential">Credentials to be used in the Client.</param>
        <param name="options">
          <see cref="T:Azure.Security.Attestation.AttestationClientOptions" /> used to configure the API client.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.Security.Attestation.AttestationClient" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPolicyManagementCertificate">
      <MemberSignature Language="C#" Value="public virtual Azure.Security.Attestation.AttestationResponse&lt;Azure.Security.Attestation.Models.PolicyCertificatesModificationResult&gt; AddPolicyManagementCertificate (Azure.Security.Attestation.SecuredAttestationToken certificateToAdd, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Security.Attestation.AttestationResponse`1&lt;class Azure.Security.Attestation.Models.PolicyCertificatesModificationResult&gt; AddPolicyManagementCertificate(class Azure.Security.Attestation.SecuredAttestationToken certificateToAdd, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.Attestation.AttestationAdministrationClient.AddPolicyManagementCertificate(Azure.Security.Attestation.SecuredAttestationToken,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddPolicyManagementCertificate (certificateToAdd As SecuredAttestationToken, Optional cancellationToken As CancellationToken = Nothing) As AttestationResponse(Of PolicyCertificatesModificationResult)" />
      <MemberSignature Language="F#" Value="abstract member AddPolicyManagementCertificate : Azure.Security.Attestation.SecuredAttestationToken * System.Threading.CancellationToken -&gt; Azure.Security.Attestation.AttestationResponse&lt;Azure.Security.Attestation.Models.PolicyCertificatesModificationResult&gt;&#xA;override this.AddPolicyManagementCertificate : Azure.Security.Attestation.SecuredAttestationToken * System.Threading.CancellationToken -&gt; Azure.Security.Attestation.AttestationResponse&lt;Azure.Security.Attestation.Models.PolicyCertificatesModificationResult&gt;" Usage="attestationAdministrationClient.AddPolicyManagementCertificate (certificateToAdd, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.Attestation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Security.Attestation.AttestationResponse&lt;Azure.Security.Attestation.Models.PolicyCertificatesModificationResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificateToAdd" Type="Azure.Security.Attestation.SecuredAttestationToken" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="certificateToAdd">Attestation Type to retrive.</param>
        <param name="cancellationToken" />
        <summary>
            Retrieves the attesttion policy for the specified <see cref="T:Azure.Security.Attestation.Models.AttestationType" />.
            </summary>
        <returns>An <see cref="T:Azure.Security.Attestation.AttestationResponse`1" /> with the policy for the specified attestation type.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPolicyManagementCertificateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Security.Attestation.AttestationResponse&lt;Azure.Security.Attestation.Models.PolicyCertificatesModificationResult&gt;&gt; AddPolicyManagementCertificateAsync (Azure.Security.Attestation.SecuredAttestationToken certificateToAdd, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Security.Attestation.AttestationResponse`1&lt;class Azure.Security.Attestation.Models.PolicyCertificatesModificationResult&gt;&gt; AddPolicyManagementCertificateAsync(class Azure.Security.Attestation.SecuredAttestationToken certificateToAdd, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.Attestation.AttestationAdministrationClient.AddPolicyManagementCertificateAsync(Azure.Security.Attestation.SecuredAttestationToken,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddPolicyManagementCertificateAsync (certificateToAdd As SecuredAttestationToken, Optional cancellationToken As CancellationToken = Nothing) As Task(Of AttestationResponse(Of PolicyCertificatesModificationResult))" />
      <MemberSignature Language="F#" Value="abstract member AddPolicyManagementCertificateAsync : Azure.Security.Attestation.SecuredAttestationToken * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Security.Attestation.AttestationResponse&lt;Azure.Security.Attestation.Models.PolicyCertificatesModificationResult&gt;&gt;&#xA;override this.AddPolicyManagementCertificateAsync : Azure.Security.Attestation.SecuredAttestationToken * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Security.Attestation.AttestationResponse&lt;Azure.Security.Attestation.Models.PolicyCertificatesModificationResult&gt;&gt;" Usage="attestationAdministrationClient.AddPolicyManagementCertificateAsync (certificateToAdd, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.Attestation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Security.Attestation.AttestationResponse&lt;Azure.Security.Attestation.Models.PolicyCertificatesModificationResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificateToAdd" Type="Azure.Security.Attestation.SecuredAttestationToken" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="certificateToAdd">Attestation Type to retrive.</param>
        <param name="cancellationToken" />
        <summary>
            Retrieves the attesttion policy for the specified <see cref="T:Azure.Security.Attestation.Models.AttestationType" />.
            </summary>
        <returns>An <see cref="T:Azure.Security.Attestation.AttestationResponse`1" /> with the policy for the specified attestation type.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Endpoint">
      <MemberSignature Language="C#" Value="public Uri Endpoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Endpoint" />
      <MemberSignature Language="DocId" Value="P:Azure.Security.Attestation.AttestationAdministrationClient.Endpoint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Endpoint As Uri" />
      <MemberSignature Language="F#" Value="member this.Endpoint : Uri" Usage="Azure.Security.Attestation.AttestationAdministrationClient.Endpoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.Attestation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns the URI used to communicate with the service.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPolicy">
      <MemberSignature Language="C#" Value="public virtual Azure.Security.Attestation.AttestationResponse&lt;Azure.Security.Attestation.Models.StoredAttestationPolicy&gt; GetPolicy (Azure.Security.Attestation.Models.AttestationType attestationType, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Security.Attestation.AttestationResponse`1&lt;class Azure.Security.Attestation.Models.StoredAttestationPolicy&gt; GetPolicy(valuetype Azure.Security.Attestation.Models.AttestationType attestationType, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.Attestation.AttestationAdministrationClient.GetPolicy(Azure.Security.Attestation.Models.AttestationType,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPolicy (attestationType As AttestationType, Optional cancellationToken As CancellationToken = Nothing) As AttestationResponse(Of StoredAttestationPolicy)" />
      <MemberSignature Language="F#" Value="abstract member GetPolicy : Azure.Security.Attestation.Models.AttestationType * System.Threading.CancellationToken -&gt; Azure.Security.Attestation.AttestationResponse&lt;Azure.Security.Attestation.Models.StoredAttestationPolicy&gt;&#xA;override this.GetPolicy : Azure.Security.Attestation.Models.AttestationType * System.Threading.CancellationToken -&gt; Azure.Security.Attestation.AttestationResponse&lt;Azure.Security.Attestation.Models.StoredAttestationPolicy&gt;" Usage="attestationAdministrationClient.GetPolicy (attestationType, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.Attestation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Security.Attestation.AttestationResponse&lt;Azure.Security.Attestation.Models.StoredAttestationPolicy&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attestationType" Type="Azure.Security.Attestation.Models.AttestationType" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="attestationType">Attestation Type to retrive.</param>
        <param name="cancellationToken" />
        <summary>
            Retrieves the attesttion policy for the specified <see cref="T:Azure.Security.Attestation.Models.AttestationType" />.
            </summary>
        <returns>An <see cref="T:Azure.Security.Attestation.AttestationResponse`1" /> with the policy for the specified attestation type.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPolicyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Security.Attestation.AttestationResponse&lt;Azure.Security.Attestation.Models.StoredAttestationPolicy&gt;&gt; GetPolicyAsync (Azure.Security.Attestation.Models.AttestationType attestationType, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Security.Attestation.AttestationResponse`1&lt;class Azure.Security.Attestation.Models.StoredAttestationPolicy&gt;&gt; GetPolicyAsync(valuetype Azure.Security.Attestation.Models.AttestationType attestationType, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.Attestation.AttestationAdministrationClient.GetPolicyAsync(Azure.Security.Attestation.Models.AttestationType,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPolicyAsync (attestationType As AttestationType, Optional cancellationToken As CancellationToken = Nothing) As Task(Of AttestationResponse(Of StoredAttestationPolicy))" />
      <MemberSignature Language="F#" Value="abstract member GetPolicyAsync : Azure.Security.Attestation.Models.AttestationType * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Security.Attestation.AttestationResponse&lt;Azure.Security.Attestation.Models.StoredAttestationPolicy&gt;&gt;&#xA;override this.GetPolicyAsync : Azure.Security.Attestation.Models.AttestationType * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Security.Attestation.AttestationResponse&lt;Azure.Security.Attestation.Models.StoredAttestationPolicy&gt;&gt;" Usage="attestationAdministrationClient.GetPolicyAsync (attestationType, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.Attestation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Security.Attestation.AttestationResponse&lt;Azure.Security.Attestation.Models.StoredAttestationPolicy&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attestationType" Type="Azure.Security.Attestation.Models.AttestationType" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="attestationType">Attestation Type to retrive.</param>
        <param name="cancellationToken" />
        <summary>
            Retrieves the attesttion policy for the specified <see cref="T:Azure.Security.Attestation.Models.AttestationType" />.
            </summary>
        <returns>An <see cref="T:Azure.Security.Attestation.AttestationResponse`1" /> with the policy for the specified attestation type.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPolicyManagementCertificates">
      <MemberSignature Language="C#" Value="public virtual Azure.Security.Attestation.AttestationResponse&lt;Azure.Security.Attestation.Models.PolicyCertificatesResult&gt; GetPolicyManagementCertificates (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Security.Attestation.AttestationResponse`1&lt;class Azure.Security.Attestation.Models.PolicyCertificatesResult&gt; GetPolicyManagementCertificates(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.Attestation.AttestationAdministrationClient.GetPolicyManagementCertificates(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPolicyManagementCertificates (Optional cancellationToken As CancellationToken = Nothing) As AttestationResponse(Of PolicyCertificatesResult)" />
      <MemberSignature Language="F#" Value="abstract member GetPolicyManagementCertificates : System.Threading.CancellationToken -&gt; Azure.Security.Attestation.AttestationResponse&lt;Azure.Security.Attestation.Models.PolicyCertificatesResult&gt;&#xA;override this.GetPolicyManagementCertificates : System.Threading.CancellationToken -&gt; Azure.Security.Attestation.AttestationResponse&lt;Azure.Security.Attestation.Models.PolicyCertificatesResult&gt;" Usage="attestationAdministrationClient.GetPolicyManagementCertificates cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.Attestation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Security.Attestation.AttestationResponse&lt;Azure.Security.Attestation.Models.PolicyCertificatesResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">Cancellation token used to cancel the operation.</param>
        <summary>
             Returns the set of policy management certificates currently configured for the attestation service.
            
             If the service is running in AAD mode, this list will be empty.
             </summary>
        <returns>A set of <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> objects representing the set of root certificates for policy management.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPolicyManagementCertificatesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Security.Attestation.AttestationResponse&lt;Azure.Security.Attestation.Models.PolicyCertificatesResult&gt;&gt; GetPolicyManagementCertificatesAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Security.Attestation.AttestationResponse`1&lt;class Azure.Security.Attestation.Models.PolicyCertificatesResult&gt;&gt; GetPolicyManagementCertificatesAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.Attestation.AttestationAdministrationClient.GetPolicyManagementCertificatesAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPolicyManagementCertificatesAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of AttestationResponse(Of PolicyCertificatesResult))" />
      <MemberSignature Language="F#" Value="abstract member GetPolicyManagementCertificatesAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Security.Attestation.AttestationResponse&lt;Azure.Security.Attestation.Models.PolicyCertificatesResult&gt;&gt;&#xA;override this.GetPolicyManagementCertificatesAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Security.Attestation.AttestationResponse&lt;Azure.Security.Attestation.Models.PolicyCertificatesResult&gt;&gt;" Usage="attestationAdministrationClient.GetPolicyManagementCertificatesAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.Attestation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Security.Attestation.AttestationResponse&lt;Azure.Security.Attestation.Models.PolicyCertificatesResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">Cancellation token used to cancel the operation.</param>
        <summary>
             Returns the set of policy management certificates currently configured for the attestation service.
            
             If the service is running in AAD mode, this list will be empty.
             </summary>
        <returns>A set of <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> objects representing the set of root certificates for policy management.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePolicyManagementCertificate">
      <MemberSignature Language="C#" Value="public virtual Azure.Security.Attestation.AttestationResponse&lt;Azure.Security.Attestation.Models.PolicyCertificatesModificationResult&gt; RemovePolicyManagementCertificate (Azure.Security.Attestation.SecuredAttestationToken certificateToAdd, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Security.Attestation.AttestationResponse`1&lt;class Azure.Security.Attestation.Models.PolicyCertificatesModificationResult&gt; RemovePolicyManagementCertificate(class Azure.Security.Attestation.SecuredAttestationToken certificateToAdd, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.Attestation.AttestationAdministrationClient.RemovePolicyManagementCertificate(Azure.Security.Attestation.SecuredAttestationToken,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemovePolicyManagementCertificate (certificateToAdd As SecuredAttestationToken, Optional cancellationToken As CancellationToken = Nothing) As AttestationResponse(Of PolicyCertificatesModificationResult)" />
      <MemberSignature Language="F#" Value="abstract member RemovePolicyManagementCertificate : Azure.Security.Attestation.SecuredAttestationToken * System.Threading.CancellationToken -&gt; Azure.Security.Attestation.AttestationResponse&lt;Azure.Security.Attestation.Models.PolicyCertificatesModificationResult&gt;&#xA;override this.RemovePolicyManagementCertificate : Azure.Security.Attestation.SecuredAttestationToken * System.Threading.CancellationToken -&gt; Azure.Security.Attestation.AttestationResponse&lt;Azure.Security.Attestation.Models.PolicyCertificatesModificationResult&gt;" Usage="attestationAdministrationClient.RemovePolicyManagementCertificate (certificateToAdd, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.Attestation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Security.Attestation.AttestationResponse&lt;Azure.Security.Attestation.Models.PolicyCertificatesModificationResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificateToAdd" Type="Azure.Security.Attestation.SecuredAttestationToken" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="certificateToAdd">Attestation Type to retrive.</param>
        <param name="cancellationToken" />
        <summary>
            Retrieves the attesttion policy for the specified <see cref="T:Azure.Security.Attestation.Models.AttestationType" />.
            </summary>
        <returns>An <see cref="T:Azure.Security.Attestation.AttestationResponse`1" /> with the policy for the specified attestation type.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePolicyManagementCertificateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Security.Attestation.AttestationResponse&lt;Azure.Security.Attestation.Models.PolicyCertificatesModificationResult&gt;&gt; RemovePolicyManagementCertificateAsync (Azure.Security.Attestation.SecuredAttestationToken certificateToAdd, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Security.Attestation.AttestationResponse`1&lt;class Azure.Security.Attestation.Models.PolicyCertificatesModificationResult&gt;&gt; RemovePolicyManagementCertificateAsync(class Azure.Security.Attestation.SecuredAttestationToken certificateToAdd, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.Attestation.AttestationAdministrationClient.RemovePolicyManagementCertificateAsync(Azure.Security.Attestation.SecuredAttestationToken,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemovePolicyManagementCertificateAsync (certificateToAdd As SecuredAttestationToken, Optional cancellationToken As CancellationToken = Nothing) As Task(Of AttestationResponse(Of PolicyCertificatesModificationResult))" />
      <MemberSignature Language="F#" Value="abstract member RemovePolicyManagementCertificateAsync : Azure.Security.Attestation.SecuredAttestationToken * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Security.Attestation.AttestationResponse&lt;Azure.Security.Attestation.Models.PolicyCertificatesModificationResult&gt;&gt;&#xA;override this.RemovePolicyManagementCertificateAsync : Azure.Security.Attestation.SecuredAttestationToken * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Security.Attestation.AttestationResponse&lt;Azure.Security.Attestation.Models.PolicyCertificatesModificationResult&gt;&gt;" Usage="attestationAdministrationClient.RemovePolicyManagementCertificateAsync (certificateToAdd, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.Attestation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Security.Attestation.AttestationResponse&lt;Azure.Security.Attestation.Models.PolicyCertificatesModificationResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificateToAdd" Type="Azure.Security.Attestation.SecuredAttestationToken" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="certificateToAdd">Attestation Type to retrive.</param>
        <param name="cancellationToken" />
        <summary>
            Removes one of the attestation policy management certificates.
            </summary>
        <returns>An <see cref="T:Azure.Security.Attestation.AttestationResponse`1" /> with the policy for the specified attestation type.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetPolicy">
      <MemberSignature Language="C#" Value="public virtual Azure.Security.Attestation.AttestationResponse&lt;Azure.Security.Attestation.Models.PolicyResult&gt; ResetPolicy (Azure.Security.Attestation.Models.AttestationType attestationType, Azure.Security.Attestation.AttestationToken authorizationToken = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Security.Attestation.AttestationResponse`1&lt;class Azure.Security.Attestation.Models.PolicyResult&gt; ResetPolicy(valuetype Azure.Security.Attestation.Models.AttestationType attestationType, class Azure.Security.Attestation.AttestationToken authorizationToken, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.Attestation.AttestationAdministrationClient.ResetPolicy(Azure.Security.Attestation.Models.AttestationType,Azure.Security.Attestation.AttestationToken,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ResetPolicy (attestationType As AttestationType, Optional authorizationToken As AttestationToken = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AttestationResponse(Of PolicyResult)" />
      <MemberSignature Language="F#" Value="abstract member ResetPolicy : Azure.Security.Attestation.Models.AttestationType * Azure.Security.Attestation.AttestationToken * System.Threading.CancellationToken -&gt; Azure.Security.Attestation.AttestationResponse&lt;Azure.Security.Attestation.Models.PolicyResult&gt;&#xA;override this.ResetPolicy : Azure.Security.Attestation.Models.AttestationType * Azure.Security.Attestation.AttestationToken * System.Threading.CancellationToken -&gt; Azure.Security.Attestation.AttestationResponse&lt;Azure.Security.Attestation.Models.PolicyResult&gt;" Usage="attestationAdministrationClient.ResetPolicy (attestationType, authorizationToken, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.Attestation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Security.Attestation.AttestationResponse&lt;Azure.Security.Attestation.Models.PolicyResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attestationType" Type="Azure.Security.Attestation.Models.AttestationType" />
        <Parameter Name="authorizationToken" Type="Azure.Security.Attestation.AttestationToken" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="attestationType">
          <see cref="T:Azure.Security.Attestation.Models.AttestationType" /> whose policy should be reset.</param>
        <param name="authorizationToken">Signed JSON Web Token signed by one of the policy management certificates used to verify the caller is authorized to reset policy to the default value..</param>
        <param name="cancellationToken" />
        <summary>
            Resets the policy for the specified <see cref="T:Azure.Security.Attestation.Models.AttestationType" /> to the default value.
            </summary>
        <returns>An <see cref="T:Azure.Security.Attestation.AttestationResponse`1" /> with the policy for the specified attestation type.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetPolicyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Security.Attestation.AttestationResponse&lt;Azure.Security.Attestation.Models.PolicyResult&gt;&gt; ResetPolicyAsync (Azure.Security.Attestation.Models.AttestationType attestationType, Azure.Security.Attestation.AttestationToken authorizationToken = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Security.Attestation.AttestationResponse`1&lt;class Azure.Security.Attestation.Models.PolicyResult&gt;&gt; ResetPolicyAsync(valuetype Azure.Security.Attestation.Models.AttestationType attestationType, class Azure.Security.Attestation.AttestationToken authorizationToken, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.Attestation.AttestationAdministrationClient.ResetPolicyAsync(Azure.Security.Attestation.Models.AttestationType,Azure.Security.Attestation.AttestationToken,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ResetPolicyAsync (attestationType As AttestationType, Optional authorizationToken As AttestationToken = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of AttestationResponse(Of PolicyResult))" />
      <MemberSignature Language="F#" Value="abstract member ResetPolicyAsync : Azure.Security.Attestation.Models.AttestationType * Azure.Security.Attestation.AttestationToken * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Security.Attestation.AttestationResponse&lt;Azure.Security.Attestation.Models.PolicyResult&gt;&gt;&#xA;override this.ResetPolicyAsync : Azure.Security.Attestation.Models.AttestationType * Azure.Security.Attestation.AttestationToken * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Security.Attestation.AttestationResponse&lt;Azure.Security.Attestation.Models.PolicyResult&gt;&gt;" Usage="attestationAdministrationClient.ResetPolicyAsync (attestationType, authorizationToken, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.Attestation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Security.Attestation.AttestationResponse&lt;Azure.Security.Attestation.Models.PolicyResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attestationType" Type="Azure.Security.Attestation.Models.AttestationType" />
        <Parameter Name="authorizationToken" Type="Azure.Security.Attestation.AttestationToken" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="attestationType">
          <see cref="T:Azure.Security.Attestation.Models.AttestationType" /> whose policy should be reset.</param>
        <param name="authorizationToken">Signed JSON Web Token signed by one of the policy management certificates used to verify the caller is authorized to reset policy to the default value..</param>
        <param name="cancellationToken" />
        <summary>
            Resets the policy for the specified <see cref="T:Azure.Security.Attestation.Models.AttestationType" /> to the default value.
            </summary>
        <returns>An <see cref="T:Azure.Security.Attestation.AttestationResponse`1" /> with the policy for the specified attestation type.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPolicy">
      <MemberSignature Language="C#" Value="public virtual Azure.Security.Attestation.AttestationResponse&lt;Azure.Security.Attestation.Models.PolicyResult&gt; SetPolicy (Azure.Security.Attestation.Models.AttestationType attestationType, Azure.Security.Attestation.AttestationToken policyToSet, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Security.Attestation.AttestationResponse`1&lt;class Azure.Security.Attestation.Models.PolicyResult&gt; SetPolicy(valuetype Azure.Security.Attestation.Models.AttestationType attestationType, class Azure.Security.Attestation.AttestationToken policyToSet, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.Attestation.AttestationAdministrationClient.SetPolicy(Azure.Security.Attestation.Models.AttestationType,Azure.Security.Attestation.AttestationToken,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetPolicy (attestationType As AttestationType, policyToSet As AttestationToken, Optional cancellationToken As CancellationToken = Nothing) As AttestationResponse(Of PolicyResult)" />
      <MemberSignature Language="F#" Value="abstract member SetPolicy : Azure.Security.Attestation.Models.AttestationType * Azure.Security.Attestation.AttestationToken * System.Threading.CancellationToken -&gt; Azure.Security.Attestation.AttestationResponse&lt;Azure.Security.Attestation.Models.PolicyResult&gt;&#xA;override this.SetPolicy : Azure.Security.Attestation.Models.AttestationType * Azure.Security.Attestation.AttestationToken * System.Threading.CancellationToken -&gt; Azure.Security.Attestation.AttestationResponse&lt;Azure.Security.Attestation.Models.PolicyResult&gt;" Usage="attestationAdministrationClient.SetPolicy (attestationType, policyToSet, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.Attestation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Security.Attestation.AttestationResponse&lt;Azure.Security.Attestation.Models.PolicyResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attestationType" Type="Azure.Security.Attestation.Models.AttestationType" />
        <Parameter Name="policyToSet" Type="Azure.Security.Attestation.AttestationToken" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="attestationType">
          <see cref="T:Azure.Security.Attestation.Models.AttestationType" /> whose policy should be set.</param>
        <param name="policyToSet">
          <see cref="T:Azure.Security.Attestation.AttestationToken" /> specifying the new stored attestation policy.</param>
        <param name="cancellationToken" />
        <summary>
            Sets the attesttion policy for the specified <see cref="T:Azure.Security.Attestation.Models.AttestationType" />.
            </summary>
        <returns>An <see cref="T:Azure.Security.Attestation.AttestationResponse`1" /> with the policy for the specified attestation type.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPolicyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Security.Attestation.AttestationResponse&lt;Azure.Security.Attestation.Models.PolicyResult&gt;&gt; SetPolicyAsync (Azure.Security.Attestation.Models.AttestationType attestationType, Azure.Security.Attestation.AttestationToken policyToSet, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Security.Attestation.AttestationResponse`1&lt;class Azure.Security.Attestation.Models.PolicyResult&gt;&gt; SetPolicyAsync(valuetype Azure.Security.Attestation.Models.AttestationType attestationType, class Azure.Security.Attestation.AttestationToken policyToSet, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Security.Attestation.AttestationAdministrationClient.SetPolicyAsync(Azure.Security.Attestation.Models.AttestationType,Azure.Security.Attestation.AttestationToken,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetPolicyAsync (attestationType As AttestationType, policyToSet As AttestationToken, Optional cancellationToken As CancellationToken = Nothing) As Task(Of AttestationResponse(Of PolicyResult))" />
      <MemberSignature Language="F#" Value="abstract member SetPolicyAsync : Azure.Security.Attestation.Models.AttestationType * Azure.Security.Attestation.AttestationToken * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Security.Attestation.AttestationResponse&lt;Azure.Security.Attestation.Models.PolicyResult&gt;&gt;&#xA;override this.SetPolicyAsync : Azure.Security.Attestation.Models.AttestationType * Azure.Security.Attestation.AttestationToken * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Security.Attestation.AttestationResponse&lt;Azure.Security.Attestation.Models.PolicyResult&gt;&gt;" Usage="attestationAdministrationClient.SetPolicyAsync (attestationType, policyToSet, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Security.Attestation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Security.Attestation.AttestationResponse&lt;Azure.Security.Attestation.Models.PolicyResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attestationType" Type="Azure.Security.Attestation.Models.AttestationType" />
        <Parameter Name="policyToSet" Type="Azure.Security.Attestation.AttestationToken" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="attestationType">
          <see cref="T:Azure.Security.Attestation.Models.AttestationType" /> whose policy should be set.</param>
        <param name="policyToSet">
          <see cref="T:Azure.Security.Attestation.AttestationToken" /> specifying the new stored attestation policy.</param>
        <param name="cancellationToken" />
        <summary>
            Sets the attesttion policy for the specified <see cref="T:Azure.Security.Attestation.Models.AttestationType" />.
            </summary>
        <returns>An <see cref="T:Azure.Security.Attestation.AttestationResponse`1" /> with the policy for the specified attestation type.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="NfsAccessRule" FullName="Microsoft.Azure.Management.StorageCache.Models.NfsAccessRule">
  <TypeSignature Language="C#" Value="public class NfsAccessRule" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NfsAccessRule extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Management.StorageCache.Models.NfsAccessRule" />
  <TypeSignature Language="VB.NET" Value="Public Class NfsAccessRule" />
  <TypeSignature Language="F#" Value="type NfsAccessRule = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Management.StorageCache</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Rule to place restrictions on portions of the cache namespace being
            presented to clients.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NfsAccessRule ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.StorageCache.Models.NfsAccessRule.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.StorageCache</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the NfsAccessRule class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NfsAccessRule (string scope, string access, string filter = default, bool? suid = default, bool? submountAccess = default, bool? rootSquash = default, string anonymousUID = default, string anonymousGID = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string scope, string access, string filter, valuetype System.Nullable`1&lt;bool&gt; suid, valuetype System.Nullable`1&lt;bool&gt; submountAccess, valuetype System.Nullable`1&lt;bool&gt; rootSquash, string anonymousUID, string anonymousGID) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.StorageCache.Models.NfsAccessRule.#ctor(System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (scope As String, access As String, Optional filter As String = Nothing, Optional suid As Nullable(Of Boolean) = Nothing, Optional submountAccess As Nullable(Of Boolean) = Nothing, Optional rootSquash As Nullable(Of Boolean) = Nothing, Optional anonymousUID As String = Nothing, Optional anonymousGID As String = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.Management.StorageCache.Models.NfsAccessRule : string * string * string * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * string * string -&gt; Microsoft.Azure.Management.StorageCache.Models.NfsAccessRule" Usage="new Microsoft.Azure.Management.StorageCache.Models.NfsAccessRule (scope, access, filter, suid, submountAccess, rootSquash, anonymousUID, anonymousGID)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.StorageCache</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scope" Type="System.String" />
        <Parameter Name="access" Type="System.String" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="suid" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="submountAccess" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="rootSquash" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="anonymousUID" Type="System.String" />
        <Parameter Name="anonymousGID" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="scope">Scope for this rule. The scope and filter
            determine which clients match the rule. Possible values include:
            'default', 'network', 'host'</param>
        <param name="access">Access allowed by this rule. Possible values
            include: 'no', 'ro', 'rw'</param>
        <param name="filter">Filter applied to the scope for this rule. The
            filter's format depends on its scope. 'default' scope matches all
            clients and has no filter value. 'network' scope takes a filter in
            CIDR format (for example, 10.99.1.0/24). 'host' takes an IP address
            or fully qualified domain name as filter. If a client does not
            match any filter rule and there is no default rule, access is
            denied.</param>
        <param name="suid">Allow SUID semantics.</param>
        <param name="submountAccess">For the default policy, allow access
            to subdirectories under the root export. If this is set to no,
            clients can only mount the path '/'. If set to yes, clients can
            mount a deeper path, like '/a/b'.</param>
        <param name="rootSquash">Map root accesses to anonymousUID and
            anonymousGID.</param>
        <param name="anonymousUID">UID value that replaces 0 when
            rootSquash is true. 65534 will be used if not provided.</param>
        <param name="anonymousGID">GID value that replaces 0 when
            rootSquash is true. This will use the value of anonymousUID if not
            provided.</param>
        <summary>
            Initializes a new instance of the NfsAccessRule class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Access">
      <MemberSignature Language="C#" Value="public string Access { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Access" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.StorageCache.Models.NfsAccessRule.Access" />
      <MemberSignature Language="VB.NET" Value="Public Property Access As String" />
      <MemberSignature Language="F#" Value="member this.Access : string with get, set" Usage="Microsoft.Azure.Management.StorageCache.Models.NfsAccessRule.Access" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.StorageCache</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="access")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="access")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets access allowed by this rule. Possible values include:
            'no', 'ro', 'rw'
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AnonymousGID">
      <MemberSignature Language="C#" Value="public string AnonymousGID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AnonymousGID" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.StorageCache.Models.NfsAccessRule.AnonymousGID" />
      <MemberSignature Language="VB.NET" Value="Public Property AnonymousGID As String" />
      <MemberSignature Language="F#" Value="member this.AnonymousGID : string with get, set" Usage="Microsoft.Azure.Management.StorageCache.Models.NfsAccessRule.AnonymousGID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.StorageCache</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="anonymousGID")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="anonymousGID")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets GID value that replaces 0 when rootSquash is true.
            This will use the value of anonymousUID if not provided.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AnonymousUID">
      <MemberSignature Language="C#" Value="public string AnonymousUID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AnonymousUID" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.StorageCache.Models.NfsAccessRule.AnonymousUID" />
      <MemberSignature Language="VB.NET" Value="Public Property AnonymousUID As String" />
      <MemberSignature Language="F#" Value="member this.AnonymousUID : string with get, set" Usage="Microsoft.Azure.Management.StorageCache.Models.NfsAccessRule.AnonymousUID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.StorageCache</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="anonymousUID")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="anonymousUID")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets UID value that replaces 0 when rootSquash is true.
            65534 will be used if not provided.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public string Filter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Filter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.StorageCache.Models.NfsAccessRule.Filter" />
      <MemberSignature Language="VB.NET" Value="Public Property Filter As String" />
      <MemberSignature Language="F#" Value="member this.Filter : string with get, set" Usage="Microsoft.Azure.Management.StorageCache.Models.NfsAccessRule.Filter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.StorageCache</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="filter")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="filter")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets filter applied to the scope for this rule. The
            filter's format depends on its scope. 'default' scope matches all
            clients and has no filter value. 'network' scope takes a filter in
            CIDR format (for example, 10.99.1.0/24). 'host' takes an IP address
            or fully qualified domain name as filter. If a client does not
            match any filter rule and there is no default rule, access is
            denied.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RootSquash">
      <MemberSignature Language="C#" Value="public bool? RootSquash { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; RootSquash" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.StorageCache.Models.NfsAccessRule.RootSquash" />
      <MemberSignature Language="VB.NET" Value="Public Property RootSquash As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.RootSquash : Nullable&lt;bool&gt; with get, set" Usage="Microsoft.Azure.Management.StorageCache.Models.NfsAccessRule.RootSquash" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.StorageCache</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="rootSquash")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="rootSquash")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets map root accesses to anonymousUID and anonymousGID.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scope">
      <MemberSignature Language="C#" Value="public string Scope { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Scope" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.StorageCache.Models.NfsAccessRule.Scope" />
      <MemberSignature Language="VB.NET" Value="Public Property Scope As String" />
      <MemberSignature Language="F#" Value="member this.Scope : string with get, set" Usage="Microsoft.Azure.Management.StorageCache.Models.NfsAccessRule.Scope" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.StorageCache</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="scope")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="scope")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets scope for this rule. The scope and filter determine
            which clients match the rule. Possible values include: 'default',
            'network', 'host'
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubmountAccess">
      <MemberSignature Language="C#" Value="public bool? SubmountAccess { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; SubmountAccess" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.StorageCache.Models.NfsAccessRule.SubmountAccess" />
      <MemberSignature Language="VB.NET" Value="Public Property SubmountAccess As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.SubmountAccess : Nullable&lt;bool&gt; with get, set" Usage="Microsoft.Azure.Management.StorageCache.Models.NfsAccessRule.SubmountAccess" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.StorageCache</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="submountAccess")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="submountAccess")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets for the default policy, allow access to subdirectories
            under the root export. If this is set to no, clients can only mount
            the path '/'. If set to yes, clients can mount a deeper path, like
            '/a/b'.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Suid">
      <MemberSignature Language="C#" Value="public bool? Suid { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; Suid" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.StorageCache.Models.NfsAccessRule.Suid" />
      <MemberSignature Language="VB.NET" Value="Public Property Suid As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.Suid : Nullable&lt;bool&gt; with get, set" Usage="Microsoft.Azure.Management.StorageCache.Models.NfsAccessRule.Suid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.StorageCache</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="suid")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="suid")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets allow SUID semantics.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public virtual void Validate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Validate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.StorageCache.Models.NfsAccessRule.Validate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Validate ()" />
      <MemberSignature Language="F#" Value="abstract member Validate : unit -&gt; unit&#xA;override this.Validate : unit -&gt; unit" Usage="nfsAccessRule.Validate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.StorageCache</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Validate the object.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
      </Docs>
    </Member>
  </Members>
</Type>

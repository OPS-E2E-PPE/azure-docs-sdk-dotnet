<Type Name="CacheUsernameDownloadSettings" FullName="Microsoft.Azure.Management.StorageCache.Models.CacheUsernameDownloadSettings">
  <TypeSignature Language="C#" Value="public class CacheUsernameDownloadSettings" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CacheUsernameDownloadSettings extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Management.StorageCache.Models.CacheUsernameDownloadSettings" />
  <TypeSignature Language="VB.NET" Value="Public Class CacheUsernameDownloadSettings" />
  <TypeSignature Language="F#" Value="type CacheUsernameDownloadSettings = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Management.StorageCache</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Settings for Extended Groups username and group download.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CacheUsernameDownloadSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.StorageCache.Models.CacheUsernameDownloadSettings.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.StorageCache</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the CacheUsernameDownloadSettings
            class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CacheUsernameDownloadSettings (bool? extendedGroups = default, string usernameSource = default, string groupFileURI = default, string userFileURI = default, string ldapServer = default, string ldapBaseDN = default, bool? encryptLdapConnection = default, bool? requireValidCertificate = default, bool? autoDownloadCertificate = default, string caCertificateURI = default, string usernameDownloaded = default, Microsoft.Azure.Management.StorageCache.Models.CacheUsernameDownloadSettingsCredentials credentials = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Nullable`1&lt;bool&gt; extendedGroups, string usernameSource, string groupFileURI, string userFileURI, string ldapServer, string ldapBaseDN, valuetype System.Nullable`1&lt;bool&gt; encryptLdapConnection, valuetype System.Nullable`1&lt;bool&gt; requireValidCertificate, valuetype System.Nullable`1&lt;bool&gt; autoDownloadCertificate, string caCertificateURI, string usernameDownloaded, class Microsoft.Azure.Management.StorageCache.Models.CacheUsernameDownloadSettingsCredentials credentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.StorageCache.Models.CacheUsernameDownloadSettings.#ctor(System.Nullable{System.Boolean},System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.String,Microsoft.Azure.Management.StorageCache.Models.CacheUsernameDownloadSettingsCredentials)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Optional extendedGroups As Nullable(Of Boolean) = Nothing, Optional usernameSource As String = Nothing, Optional groupFileURI As String = Nothing, Optional userFileURI As String = Nothing, Optional ldapServer As String = Nothing, Optional ldapBaseDN As String = Nothing, Optional encryptLdapConnection As Nullable(Of Boolean) = Nothing, Optional requireValidCertificate As Nullable(Of Boolean) = Nothing, Optional autoDownloadCertificate As Nullable(Of Boolean) = Nothing, Optional caCertificateURI As String = Nothing, Optional usernameDownloaded As String = Nothing, Optional credentials As CacheUsernameDownloadSettingsCredentials = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.Management.StorageCache.Models.CacheUsernameDownloadSettings : Nullable&lt;bool&gt; * string * string * string * string * string * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * string * string * Microsoft.Azure.Management.StorageCache.Models.CacheUsernameDownloadSettingsCredentials -&gt; Microsoft.Azure.Management.StorageCache.Models.CacheUsernameDownloadSettings" Usage="new Microsoft.Azure.Management.StorageCache.Models.CacheUsernameDownloadSettings (extendedGroups, usernameSource, groupFileURI, userFileURI, ldapServer, ldapBaseDN, encryptLdapConnection, requireValidCertificate, autoDownloadCertificate, caCertificateURI, usernameDownloaded, credentials)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.StorageCache</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="extendedGroups" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="usernameSource" Type="System.String" />
        <Parameter Name="groupFileURI" Type="System.String" />
        <Parameter Name="userFileURI" Type="System.String" />
        <Parameter Name="ldapServer" Type="System.String" />
        <Parameter Name="ldapBaseDN" Type="System.String" />
        <Parameter Name="encryptLdapConnection" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="requireValidCertificate" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="autoDownloadCertificate" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="caCertificateURI" Type="System.String" />
        <Parameter Name="usernameDownloaded" Type="System.String" />
        <Parameter Name="credentials" Type="Microsoft.Azure.Management.StorageCache.Models.CacheUsernameDownloadSettingsCredentials" />
      </Parameters>
      <Docs>
        <param name="extendedGroups">Whether or not Extended Groups is
            enabled.</param>
        <param name="usernameSource">This setting determines how the cache
            gets username and group names for clients. Possible values include:
            'AD', 'LDAP', 'File', 'None'</param>
        <param name="groupFileURI">The URI of the file containing group
            information (in /etc/group file format). This field must be
            populated when 'usernameSource' is set to 'File'.</param>
        <param name="userFileURI">The URI of the file containing user
            information (in /etc/passwd file format). This field must be
            populated when 'usernameSource' is set to 'File'.</param>
        <param name="ldapServer">The fully qualified domain name or IP
            address of the LDAP server to use.</param>
        <param name="ldapBaseDN">The base distinguished name for the LDAP
            domain.</param>
        <param name="encryptLdapConnection">Whether or not the LDAP
            connection should be encrypted.</param>
        <param name="requireValidCertificate">Determines if the
            certificates must be validated by a certificate authority. When
            true, caCertificateURI must be provided.</param>
        <param name="autoDownloadCertificate">Determines if the certificate
            should be automatically downloaded. This applies to
            'caCertificateURI' only if 'requireValidCertificate' is
            true.</param>
        <param name="caCertificateURI">The URI of the CA certificate to
            validate the LDAP secure connection. This field must be populated
            when 'requireValidCertificate' is set to true.</param>
        <param name="usernameDownloaded">Indicates whether or not the HPC
            Cache has performed the username download successfully. Possible
            values include: 'Yes', 'No', 'Error'</param>
        <param name="credentials">When present, these are the credentials
            for the secure LDAP connection.</param>
        <summary>
            Initializes a new instance of the CacheUsernameDownloadSettings
            class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoDownloadCertificate">
      <MemberSignature Language="C#" Value="public bool? AutoDownloadCertificate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; AutoDownloadCertificate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.StorageCache.Models.CacheUsernameDownloadSettings.AutoDownloadCertificate" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoDownloadCertificate As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.AutoDownloadCertificate : Nullable&lt;bool&gt; with get, set" Usage="Microsoft.Azure.Management.StorageCache.Models.CacheUsernameDownloadSettings.AutoDownloadCertificate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.StorageCache</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="autoDownloadCertificate")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="autoDownloadCertificate")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets determines if the certificate should be automatically
            downloaded. This applies to 'caCertificateURI' only if
            'requireValidCertificate' is true.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CaCertificateURI">
      <MemberSignature Language="C#" Value="public string CaCertificateURI { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CaCertificateURI" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.StorageCache.Models.CacheUsernameDownloadSettings.CaCertificateURI" />
      <MemberSignature Language="VB.NET" Value="Public Property CaCertificateURI As String" />
      <MemberSignature Language="F#" Value="member this.CaCertificateURI : string with get, set" Usage="Microsoft.Azure.Management.StorageCache.Models.CacheUsernameDownloadSettings.CaCertificateURI" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.StorageCache</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="caCertificateURI")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="caCertificateURI")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the URI of the CA certificate to validate the LDAP
            secure connection. This field must be populated when
            'requireValidCertificate' is set to true.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Credentials">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.StorageCache.Models.CacheUsernameDownloadSettingsCredentials Credentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Azure.Management.StorageCache.Models.CacheUsernameDownloadSettingsCredentials Credentials" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.StorageCache.Models.CacheUsernameDownloadSettings.Credentials" />
      <MemberSignature Language="VB.NET" Value="Public Property Credentials As CacheUsernameDownloadSettingsCredentials" />
      <MemberSignature Language="F#" Value="member this.Credentials : Microsoft.Azure.Management.StorageCache.Models.CacheUsernameDownloadSettingsCredentials with get, set" Usage="Microsoft.Azure.Management.StorageCache.Models.CacheUsernameDownloadSettings.Credentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.StorageCache</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="credentials")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="credentials")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.StorageCache.Models.CacheUsernameDownloadSettingsCredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets when present, these are the credentials for the secure
            LDAP connection.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EncryptLdapConnection">
      <MemberSignature Language="C#" Value="public bool? EncryptLdapConnection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; EncryptLdapConnection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.StorageCache.Models.CacheUsernameDownloadSettings.EncryptLdapConnection" />
      <MemberSignature Language="VB.NET" Value="Public Property EncryptLdapConnection As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.EncryptLdapConnection : Nullable&lt;bool&gt; with get, set" Usage="Microsoft.Azure.Management.StorageCache.Models.CacheUsernameDownloadSettings.EncryptLdapConnection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.StorageCache</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="encryptLdapConnection")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="encryptLdapConnection")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets whether or not the LDAP connection should be
            encrypted.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtendedGroups">
      <MemberSignature Language="C#" Value="public bool? ExtendedGroups { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; ExtendedGroups" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.StorageCache.Models.CacheUsernameDownloadSettings.ExtendedGroups" />
      <MemberSignature Language="VB.NET" Value="Public Property ExtendedGroups As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.ExtendedGroups : Nullable&lt;bool&gt; with get, set" Usage="Microsoft.Azure.Management.StorageCache.Models.CacheUsernameDownloadSettings.ExtendedGroups" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.StorageCache</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="extendedGroups")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="extendedGroups")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets whether or not Extended Groups is enabled.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupFileURI">
      <MemberSignature Language="C#" Value="public string GroupFileURI { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string GroupFileURI" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.StorageCache.Models.CacheUsernameDownloadSettings.GroupFileURI" />
      <MemberSignature Language="VB.NET" Value="Public Property GroupFileURI As String" />
      <MemberSignature Language="F#" Value="member this.GroupFileURI : string with get, set" Usage="Microsoft.Azure.Management.StorageCache.Models.CacheUsernameDownloadSettings.GroupFileURI" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.StorageCache</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="groupFileURI")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="groupFileURI")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the URI of the file containing group information (in
            /etc/group file format). This field must be populated when
            'usernameSource' is set to 'File'.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LdapBaseDN">
      <MemberSignature Language="C#" Value="public string LdapBaseDN { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LdapBaseDN" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.StorageCache.Models.CacheUsernameDownloadSettings.LdapBaseDN" />
      <MemberSignature Language="VB.NET" Value="Public Property LdapBaseDN As String" />
      <MemberSignature Language="F#" Value="member this.LdapBaseDN : string with get, set" Usage="Microsoft.Azure.Management.StorageCache.Models.CacheUsernameDownloadSettings.LdapBaseDN" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.StorageCache</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="ldapBaseDN")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="ldapBaseDN")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the base distinguished name for the LDAP domain.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LdapServer">
      <MemberSignature Language="C#" Value="public string LdapServer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LdapServer" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.StorageCache.Models.CacheUsernameDownloadSettings.LdapServer" />
      <MemberSignature Language="VB.NET" Value="Public Property LdapServer As String" />
      <MemberSignature Language="F#" Value="member this.LdapServer : string with get, set" Usage="Microsoft.Azure.Management.StorageCache.Models.CacheUsernameDownloadSettings.LdapServer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.StorageCache</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="ldapServer")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="ldapServer")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the fully qualified domain name or IP address of the
            LDAP server to use.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequireValidCertificate">
      <MemberSignature Language="C#" Value="public bool? RequireValidCertificate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; RequireValidCertificate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.StorageCache.Models.CacheUsernameDownloadSettings.RequireValidCertificate" />
      <MemberSignature Language="VB.NET" Value="Public Property RequireValidCertificate As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.RequireValidCertificate : Nullable&lt;bool&gt; with get, set" Usage="Microsoft.Azure.Management.StorageCache.Models.CacheUsernameDownloadSettings.RequireValidCertificate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.StorageCache</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="requireValidCertificate")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="requireValidCertificate")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets determines if the certificates must be validated by a
            certificate authority. When true, caCertificateURI must be
            provided.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserFileURI">
      <MemberSignature Language="C#" Value="public string UserFileURI { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserFileURI" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.StorageCache.Models.CacheUsernameDownloadSettings.UserFileURI" />
      <MemberSignature Language="VB.NET" Value="Public Property UserFileURI As String" />
      <MemberSignature Language="F#" Value="member this.UserFileURI : string with get, set" Usage="Microsoft.Azure.Management.StorageCache.Models.CacheUsernameDownloadSettings.UserFileURI" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.StorageCache</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="userFileURI")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="userFileURI")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the URI of the file containing user information (in
            /etc/passwd file format). This field must be populated when
            'usernameSource' is set to 'File'.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UsernameDownloaded">
      <MemberSignature Language="C#" Value="public string UsernameDownloaded { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UsernameDownloaded" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.StorageCache.Models.CacheUsernameDownloadSettings.UsernameDownloaded" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UsernameDownloaded As String" />
      <MemberSignature Language="F#" Value="member this.UsernameDownloaded : string" Usage="Microsoft.Azure.Management.StorageCache.Models.CacheUsernameDownloadSettings.UsernameDownloaded" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.StorageCache</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="usernameDownloaded")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="usernameDownloaded")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets indicates whether or not the HPC Cache has performed the
            username download successfully. Possible values include: 'Yes',
            'No', 'Error'
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UsernameSource">
      <MemberSignature Language="C#" Value="public string UsernameSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UsernameSource" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.StorageCache.Models.CacheUsernameDownloadSettings.UsernameSource" />
      <MemberSignature Language="VB.NET" Value="Public Property UsernameSource As String" />
      <MemberSignature Language="F#" Value="member this.UsernameSource : string with get, set" Usage="Microsoft.Azure.Management.StorageCache.Models.CacheUsernameDownloadSettings.UsernameSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.StorageCache</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="usernameSource")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="usernameSource")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets this setting determines how the cache gets username
            and group names for clients. Possible values include: 'AD', 'LDAP',
            'File', 'None'
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

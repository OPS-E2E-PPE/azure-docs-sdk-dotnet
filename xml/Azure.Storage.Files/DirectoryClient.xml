<Type Name="DirectoryClient" FullName="Azure.Storage.Files.DirectoryClient">
  <TypeSignature Language="C#" Value="public class DirectoryClient" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DirectoryClient extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Storage.Files.DirectoryClient" />
  <TypeSignature Language="VB.NET" Value="Public Class DirectoryClient" />
  <TypeSignature Language="F#" Value="type DirectoryClient = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Storage.Files</AssemblyName>
    <AssemblyVersion>12.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            A DirectoryClient represents a URI to the Azure Storage File service allowing you to manipulate a directory.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DirectoryClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DirectoryClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Files.DirectoryClient" />
            class for mocking.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DirectoryClient (Uri directoryUri, Azure.Storage.Files.FileClientOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri directoryUri, class Azure.Storage.Files.FileClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DirectoryClient.#ctor(System.Uri,Azure.Storage.Files.FileClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (directoryUri As Uri, Optional options As FileClientOptions = null)" />
      <MemberSignature Language="F#" Value="new Azure.Storage.Files.DirectoryClient : Uri * Azure.Storage.Files.FileClientOptions -&gt; Azure.Storage.Files.DirectoryClient" Usage="new Azure.Storage.Files.DirectoryClient (directoryUri, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="directoryUri" Type="System.Uri" />
        <Parameter Name="options" Type="Azure.Storage.Files.FileClientOptions" />
      </Parameters>
      <Docs>
        <param name="directoryUri">
            A <see cref="P:Azure.Storage.Files.DirectoryClient.Uri" /> referencing the directory that includes the
            name of the account, the name of the share, and the path of the
            directory.
            </param>
        <param name="options">
            Optional <see cref="T:Azure.Storage.Files.FileClientOptions" /> that define the transport
            pipeline policies for authentication, retries, etc., that are
            applied to every request.
            </param>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Files.DirectoryClient" />
            class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DirectoryClient (string connectionString, string shareName, string directoryPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString, string shareName, string directoryPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DirectoryClient.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String, shareName As String, directoryPath As String)" />
      <MemberSignature Language="F#" Value="new Azure.Storage.Files.DirectoryClient : string * string * string -&gt; Azure.Storage.Files.DirectoryClient" Usage="new Azure.Storage.Files.DirectoryClient (connectionString, shareName, directoryPath)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="shareName" Type="System.String" />
        <Parameter Name="directoryPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">
             A connection string includes the authentication information
             required for your application to access data in an Azure Storage
             account at runtime.
            
             For more information, <see href="https://docs.microsoft.com/en-us/azure/storage/common/storage-configure-connection-string" />.
             </param>
        <param name="shareName">
             The name of the share in the storage account to reference.
             </param>
        <param name="directoryPath">
             The path of the directory in the storage account to reference.
             </param>
        <summary>
             Initializes a new instance of the <see cref="T:Azure.Storage.Files.DirectoryClient" /> class.
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DirectoryClient (Uri directoryUri, Azure.Storage.StorageSharedKeyCredential credential, Azure.Storage.Files.FileClientOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri directoryUri, class Azure.Storage.StorageSharedKeyCredential credential, class Azure.Storage.Files.FileClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DirectoryClient.#ctor(System.Uri,Azure.Storage.StorageSharedKeyCredential,Azure.Storage.Files.FileClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (directoryUri As Uri, credential As StorageSharedKeyCredential, Optional options As FileClientOptions = null)" />
      <MemberSignature Language="F#" Value="new Azure.Storage.Files.DirectoryClient : Uri * Azure.Storage.StorageSharedKeyCredential * Azure.Storage.Files.FileClientOptions -&gt; Azure.Storage.Files.DirectoryClient" Usage="new Azure.Storage.Files.DirectoryClient (directoryUri, credential, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="directoryUri" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.Storage.StorageSharedKeyCredential" />
        <Parameter Name="options" Type="Azure.Storage.Files.FileClientOptions" />
      </Parameters>
      <Docs>
        <param name="directoryUri">
            A <see cref="P:Azure.Storage.Files.DirectoryClient.Uri" /> referencing the directory that includes the
            name of the account, the name of the share, and the path of the
            directory.
            </param>
        <param name="credential">
            The shared key credential used to sign requests.
            </param>
        <param name="options">
            Optional client options that define the transport pipeline
            policies for authentication, retries, etc., that are applied to
            every request.
            </param>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Files.DirectoryClient" />
            class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DirectoryClient (string connectionString, string shareName, string directoryPath, Azure.Storage.Files.FileClientOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString, string shareName, string directoryPath, class Azure.Storage.Files.FileClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DirectoryClient.#ctor(System.String,System.String,System.String,Azure.Storage.Files.FileClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String, shareName As String, directoryPath As String, options As FileClientOptions)" />
      <MemberSignature Language="F#" Value="new Azure.Storage.Files.DirectoryClient : string * string * string * Azure.Storage.Files.FileClientOptions -&gt; Azure.Storage.Files.DirectoryClient" Usage="new Azure.Storage.Files.DirectoryClient (connectionString, shareName, directoryPath, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="shareName" Type="System.String" />
        <Parameter Name="directoryPath" Type="System.String" />
        <Parameter Name="options" Type="Azure.Storage.Files.FileClientOptions" />
      </Parameters>
      <Docs>
        <param name="connectionString">
             A connection string includes the authentication information
             required for your application to access data in an Azure Storage
             account at runtime.
            
             For more information, <see href="https://docs.microsoft.com/en-us/azure/storage/common/storage-configure-connection-string" />.
             </param>
        <param name="shareName">
             The name of the share in the storage account to reference.
             </param>
        <param name="directoryPath">
             The path of the directory in the storage account to reference.
             </param>
        <param name="options">
             Optional <see cref="T:Azure.Storage.Files.FileClientOptions" /> that define the transport
             pipeline policies for authentication, retries, etc., that are
             applied to every request.
             </param>
        <summary>
             Initializes a new instance of the <see cref="T:Azure.Storage.Files.DirectoryClient" /> class.
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Files.Models.StorageDirectoryInfo&gt; Create (System.Collections.Generic.IDictionary&lt;string,string&gt; metadata = null, Nullable&lt;Azure.Storage.Files.Models.FileSmbProperties&gt; smbProperties = null, string filePermission = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Azure.Response`1&lt;class Azure.Storage.Files.Models.StorageDirectoryInfo&gt; Create(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; metadata, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Files.Models.FileSmbProperties&gt; smbProperties, string filePermission, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DirectoryClient.Create(System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{Azure.Storage.Files.Models.FileSmbProperties},System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member Create : System.Collections.Generic.IDictionary&lt;string, string&gt; * Nullable&lt;Azure.Storage.Files.Models.FileSmbProperties&gt; * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.Models.StorageDirectoryInfo&gt;&#xA;override this.Create : System.Collections.Generic.IDictionary&lt;string, string&gt; * Nullable&lt;Azure.Storage.Files.Models.FileSmbProperties&gt; * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.Models.StorageDirectoryInfo&gt;" Usage="directoryClient.Create (metadata, smbProperties, filePermission, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Files.Models.StorageDirectoryInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="smbProperties" Type="System.Nullable&lt;Azure.Storage.Files.Models.FileSmbProperties&gt;" />
        <Parameter Name="filePermission" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="metadata">
             Optional custom metadata to set for this directory.
             </param>
        <param name="smbProperties">
             Optional SMB properties to set for the directory.
             </param>
        <param name="filePermission">
             Optional file permission to set on the directory.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.DirectoryClient.Create(System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{Azure.Storage.Files.Models.FileSmbProperties},System.String,System.Threading.CancellationToken)" /> operation creates a new directory
             at the specified <see cref="P:Azure.Storage.Files.DirectoryClient.Uri" />.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/create-directory" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the newly
             created directory.
             </returns>
        <remarks>
             A <see cref="T:Azure.Storage.StorageRequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Models.StorageDirectoryInfo&gt;&gt; CreateAsync (System.Collections.Generic.IDictionary&lt;string,string&gt; metadata = null, Nullable&lt;Azure.Storage.Files.Models.FileSmbProperties&gt; smbProperties = null, string filePermission = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;valuetype Azure.Response`1&lt;class Azure.Storage.Files.Models.StorageDirectoryInfo&gt;&gt; CreateAsync(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; metadata, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Files.Models.FileSmbProperties&gt; smbProperties, string filePermission, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DirectoryClient.CreateAsync(System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{Azure.Storage.Files.Models.FileSmbProperties},System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member CreateAsync : System.Collections.Generic.IDictionary&lt;string, string&gt; * Nullable&lt;Azure.Storage.Files.Models.FileSmbProperties&gt; * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Models.StorageDirectoryInfo&gt;&gt;&#xA;override this.CreateAsync : System.Collections.Generic.IDictionary&lt;string, string&gt; * Nullable&lt;Azure.Storage.Files.Models.FileSmbProperties&gt; * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Models.StorageDirectoryInfo&gt;&gt;" Usage="directoryClient.CreateAsync (metadata, smbProperties, filePermission, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Models.StorageDirectoryInfo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="smbProperties" Type="System.Nullable&lt;Azure.Storage.Files.Models.FileSmbProperties&gt;" />
        <Parameter Name="filePermission" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="metadata">
             Optional custom metadata to set for this directory.
             </param>
        <param name="smbProperties">
             Optional SMB properties to set for the directory.
             </param>
        <param name="filePermission">
             Optional file permission to set on the directory.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.DirectoryClient.CreateAsync(System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{Azure.Storage.Files.Models.FileSmbProperties},System.String,System.Threading.CancellationToken)" /> operation creates a new directory
             at the specified <see cref="P:Azure.Storage.Files.DirectoryClient.Uri" />.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/create-directory" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the newly
             created directory.
             </returns>
        <remarks>
             A <see cref="T:Azure.Storage.StorageRequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFile">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Files.FileClient&gt; CreateFile (string fileName, long maxSize, Nullable&lt;Azure.Storage.Files.Models.FileHttpHeaders&gt; httpHeaders = null, System.Collections.Generic.IDictionary&lt;string,string&gt; metadata = null, Nullable&lt;Azure.Storage.Files.Models.FileSmbProperties&gt; smbProperties = null, string filePermission = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Azure.Response`1&lt;class Azure.Storage.Files.FileClient&gt; CreateFile(string fileName, int64 maxSize, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Files.Models.FileHttpHeaders&gt; httpHeaders, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; metadata, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Files.Models.FileSmbProperties&gt; smbProperties, string filePermission, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DirectoryClient.CreateFile(System.String,System.Int64,System.Nullable{Azure.Storage.Files.Models.FileHttpHeaders},System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{Azure.Storage.Files.Models.FileSmbProperties},System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member CreateFile : string * int64 * Nullable&lt;Azure.Storage.Files.Models.FileHttpHeaders&gt; * System.Collections.Generic.IDictionary&lt;string, string&gt; * Nullable&lt;Azure.Storage.Files.Models.FileSmbProperties&gt; * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.FileClient&gt;&#xA;override this.CreateFile : string * int64 * Nullable&lt;Azure.Storage.Files.Models.FileHttpHeaders&gt; * System.Collections.Generic.IDictionary&lt;string, string&gt; * Nullable&lt;Azure.Storage.Files.Models.FileSmbProperties&gt; * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.FileClient&gt;" Usage="directoryClient.CreateFile (fileName, maxSize, httpHeaders, metadata, smbProperties, filePermission, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Azure.Core.ForwardsClientCalls</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Files.FileClient&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="maxSize" Type="System.Int64" />
        <Parameter Name="httpHeaders" Type="System.Nullable&lt;Azure.Storage.Files.Models.FileHttpHeaders&gt;" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="smbProperties" Type="System.Nullable&lt;Azure.Storage.Files.Models.FileSmbProperties&gt;" />
        <Parameter Name="filePermission" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="fileName">The name of the file.</param>
        <param name="maxSize">
             Required. Specifies the maximum size for the file.
             </param>
        <param name="httpHeaders">
             Optional standard HTTP header properties that can be set for the file.
             </param>
        <param name="metadata">
             Optional custom metadata to set for the file.
             </param>
        <param name="smbProperties">
             Optional SMB properties to set for the file.
             </param>
        <param name="filePermission">
             Optional file permission to set for the file.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             Creates a new file or replaces an existing file.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/create-file" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> referencing the file.
             </returns>
        <remarks>
             This method only initializes the file.
             To add content, use <see cref="M:Azure.Storage.Files.FileClient.UploadRangeAsync(Azure.Storage.Files.Models.FileRangeWriteType,Azure.Core.Http.HttpRange,System.IO.Stream,System.Byte[],System.IProgress{Azure.Storage.Common.StorageProgress},System.Threading.CancellationToken)" />.
             </remarks>
        <remarks>
             A <see cref="T:Azure.Storage.StorageRequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFileAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.FileClient&gt;&gt; CreateFileAsync (string fileName, long maxSize, Nullable&lt;Azure.Storage.Files.Models.FileHttpHeaders&gt; httpHeaders = null, System.Collections.Generic.IDictionary&lt;string,string&gt; metadata = null, Nullable&lt;Azure.Storage.Files.Models.FileSmbProperties&gt; smbProperties = null, string filePermission = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;valuetype Azure.Response`1&lt;class Azure.Storage.Files.FileClient&gt;&gt; CreateFileAsync(string fileName, int64 maxSize, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Files.Models.FileHttpHeaders&gt; httpHeaders, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; metadata, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Files.Models.FileSmbProperties&gt; smbProperties, string filePermission, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DirectoryClient.CreateFileAsync(System.String,System.Int64,System.Nullable{Azure.Storage.Files.Models.FileHttpHeaders},System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{Azure.Storage.Files.Models.FileSmbProperties},System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member CreateFileAsync : string * int64 * Nullable&lt;Azure.Storage.Files.Models.FileHttpHeaders&gt; * System.Collections.Generic.IDictionary&lt;string, string&gt; * Nullable&lt;Azure.Storage.Files.Models.FileSmbProperties&gt; * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.FileClient&gt;&gt;&#xA;override this.CreateFileAsync : string * int64 * Nullable&lt;Azure.Storage.Files.Models.FileHttpHeaders&gt; * System.Collections.Generic.IDictionary&lt;string, string&gt; * Nullable&lt;Azure.Storage.Files.Models.FileSmbProperties&gt; * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.FileClient&gt;&gt;" Usage="directoryClient.CreateFileAsync (fileName, maxSize, httpHeaders, metadata, smbProperties, filePermission, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Azure.Core.ForwardsClientCalls</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.FileClient&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="maxSize" Type="System.Int64" />
        <Parameter Name="httpHeaders" Type="System.Nullable&lt;Azure.Storage.Files.Models.FileHttpHeaders&gt;" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="smbProperties" Type="System.Nullable&lt;Azure.Storage.Files.Models.FileSmbProperties&gt;" />
        <Parameter Name="filePermission" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="fileName">The name of the file.</param>
        <param name="maxSize">
             Required. Specifies the maximum size for the file.
             </param>
        <param name="httpHeaders">
             Optional standard HTTP header properties that can be set for the file.
             </param>
        <param name="metadata">
             Optional custom metadata to set for the file.
             </param>
        <param name="smbProperties">
             Optional SMB properties to set for the file.
             </param>
        <param name="filePermission">
             Optional file permission to set for the file.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             Creates a new file or replaces an existing file.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/create-file" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> referencing the file.
             </returns>
        <remarks>
             This method only initializes the file.
             To add content, use <see cref="M:Azure.Storage.Files.FileClient.UploadRangeAsync(Azure.Storage.Files.Models.FileRangeWriteType,Azure.Core.Http.HttpRange,System.IO.Stream,System.Byte[],System.IProgress{Azure.Storage.Common.StorageProgress},System.Threading.CancellationToken)" />.
             </remarks>
        <remarks>
             A <see cref="T:Azure.Storage.StorageRequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSubdirectory">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Files.DirectoryClient&gt; CreateSubdirectory (string subdirectoryName, System.Collections.Generic.IDictionary&lt;string,string&gt; metadata = null, Nullable&lt;Azure.Storage.Files.Models.FileSmbProperties&gt; smbProperties = null, string filePermission = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Azure.Response`1&lt;class Azure.Storage.Files.DirectoryClient&gt; CreateSubdirectory(string subdirectoryName, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; metadata, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Files.Models.FileSmbProperties&gt; smbProperties, string filePermission, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DirectoryClient.CreateSubdirectory(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{Azure.Storage.Files.Models.FileSmbProperties},System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member CreateSubdirectory : string * System.Collections.Generic.IDictionary&lt;string, string&gt; * Nullable&lt;Azure.Storage.Files.Models.FileSmbProperties&gt; * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.DirectoryClient&gt;&#xA;override this.CreateSubdirectory : string * System.Collections.Generic.IDictionary&lt;string, string&gt; * Nullable&lt;Azure.Storage.Files.Models.FileSmbProperties&gt; * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.DirectoryClient&gt;" Usage="directoryClient.CreateSubdirectory (subdirectoryName, metadata, smbProperties, filePermission, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Azure.Core.ForwardsClientCalls</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Files.DirectoryClient&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subdirectoryName" Type="System.String" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="smbProperties" Type="System.Nullable&lt;Azure.Storage.Files.Models.FileSmbProperties&gt;" />
        <Parameter Name="filePermission" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subdirectoryName">The name of the subdirectory.</param>
        <param name="metadata">
             Optional custom metadata to set for this directory.
             </param>
        <param name="smbProperties">
             Optional SMB properties to set for the subdirectory.
             </param>
        <param name="filePermission">
             Optional file permission to set for the subdirectory.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.DirectoryClient.CreateSubdirectory(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{Azure.Storage.Files.Models.FileSmbProperties},System.String,System.Threading.CancellationToken)" /> operation creates a new
             subdirectory under this directory.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/create-directory" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> referencing the
             newly created directory.
             </returns>
        <remarks>
             A <see cref="T:Azure.Storage.StorageRequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSubdirectoryAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DirectoryClient&gt;&gt; CreateSubdirectoryAsync (string subdirectoryName, System.Collections.Generic.IDictionary&lt;string,string&gt; metadata = null, Nullable&lt;Azure.Storage.Files.Models.FileSmbProperties&gt; smbProperties = null, string filePermission = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;valuetype Azure.Response`1&lt;class Azure.Storage.Files.DirectoryClient&gt;&gt; CreateSubdirectoryAsync(string subdirectoryName, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; metadata, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Files.Models.FileSmbProperties&gt; smbProperties, string filePermission, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DirectoryClient.CreateSubdirectoryAsync(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{Azure.Storage.Files.Models.FileSmbProperties},System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member CreateSubdirectoryAsync : string * System.Collections.Generic.IDictionary&lt;string, string&gt; * Nullable&lt;Azure.Storage.Files.Models.FileSmbProperties&gt; * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DirectoryClient&gt;&gt;&#xA;override this.CreateSubdirectoryAsync : string * System.Collections.Generic.IDictionary&lt;string, string&gt; * Nullable&lt;Azure.Storage.Files.Models.FileSmbProperties&gt; * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DirectoryClient&gt;&gt;" Usage="directoryClient.CreateSubdirectoryAsync (subdirectoryName, metadata, smbProperties, filePermission, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Azure.Core.ForwardsClientCalls</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.DirectoryClient&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subdirectoryName" Type="System.String" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="smbProperties" Type="System.Nullable&lt;Azure.Storage.Files.Models.FileSmbProperties&gt;" />
        <Parameter Name="filePermission" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subdirectoryName">The name of the subdirectory.</param>
        <param name="metadata">
             Optional custom metadata to set for the subdirectory.
             </param>
        <param name="smbProperties">
             Optional SMB properties to set for the subdirectory.
             </param>
        <param name="filePermission">
             Optional file permission to set for the subdirectory.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.DirectoryClient.CreateSubdirectoryAsync(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{Azure.Storage.Files.Models.FileSmbProperties},System.String,System.Threading.CancellationToken)" /> operation creates a new
             subdirectory under this directory.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/create-directory" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> referencing the
             newly created directory.
             </returns>
        <remarks>
             A <see cref="T:Azure.Storage.StorageRequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public virtual Azure.Response Delete (System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response Delete(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DirectoryClient.Delete(System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member Delete : System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.Delete : System.Threading.CancellationToken -&gt; Azure.Response" Usage="directoryClient.Delete cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.DirectoryClient.Delete(System.Threading.CancellationToken)" /> operation removes the specified empty directory.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/delete-directory" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response" /> if successful.
             </returns>
        <remarks>
             Note that the directory must be empty before it can be deleted.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DeleteAsync (System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeleteAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DirectoryClient.DeleteAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member DeleteAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DeleteAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="directoryClient.DeleteAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.DirectoryClient.DeleteAsync(System.Threading.CancellationToken)" /> operation removes the specified empty directory.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/delete-directory" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response" /> if successful.
             </returns>
        <remarks>
             Note that the directory must be empty before it can be deleted.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteFile">
      <MemberSignature Language="C#" Value="public virtual Azure.Response DeleteFile (string fileName, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response DeleteFile(string fileName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DirectoryClient.DeleteFile(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member DeleteFile : string * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.DeleteFile : string * System.Threading.CancellationToken -&gt; Azure.Response" Usage="directoryClient.DeleteFile (fileName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Azure.Core.ForwardsClientCalls</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="fileName">The name of the file.</param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.DirectoryClient.DeleteFile(System.String,System.Threading.CancellationToken)" /> operation immediately removes
             the file from the storage account.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/delete-file2" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response" /> on successfully deleting.
             </returns>
        <remarks>
             A <see cref="T:Azure.Storage.StorageRequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteFileAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DeleteFileAsync (string fileName, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeleteFileAsync(string fileName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DirectoryClient.DeleteFileAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member DeleteFileAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DeleteFileAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="directoryClient.DeleteFileAsync (fileName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Azure.Core.ForwardsClientCalls</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="fileName">The name of the file.</param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.DirectoryClient.DeleteFileAsync(System.String,System.Threading.CancellationToken)" /> operation immediately removes
             the file from the storage account.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/delete-file2" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response" /> on successfully deleting.
             </returns>
        <remarks>
             A <see cref="T:Azure.Storage.StorageRequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteSubdirectory">
      <MemberSignature Language="C#" Value="public virtual Azure.Response DeleteSubdirectory (string subdirectoryName, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response DeleteSubdirectory(string subdirectoryName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DirectoryClient.DeleteSubdirectory(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member DeleteSubdirectory : string * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.DeleteSubdirectory : string * System.Threading.CancellationToken -&gt; Azure.Response" Usage="directoryClient.DeleteSubdirectory (subdirectoryName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Azure.Core.ForwardsClientCalls</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subdirectoryName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subdirectoryName">The name of the subdirectory.</param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.DirectoryClient.DeleteSubdirectory(System.String,System.Threading.CancellationToken)" /> operation removes the
             specified empty subdirectory.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/delete-directory" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response" /> if successful.
             </returns>
        <remarks>
             Note that the directory must be empty before it can be deleted.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteSubdirectoryAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DeleteSubdirectoryAsync (string subdirectoryName, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeleteSubdirectoryAsync(string subdirectoryName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DirectoryClient.DeleteSubdirectoryAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member DeleteSubdirectoryAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DeleteSubdirectoryAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="directoryClient.DeleteSubdirectoryAsync (subdirectoryName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Azure.Core.ForwardsClientCalls</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subdirectoryName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subdirectoryName">The name of the subdirectory.</param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.DirectoryClient.DeleteSubdirectoryAsync(System.String,System.Threading.CancellationToken)" /> operation removes the
             specified empty subdirectory.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/delete-directory" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response" /> if successful.
             </returns>
        <remarks>
             Note that the directory must be empty before it can be deleted.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForceCloseHandles">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Files.Models.StorageClosedHandlesSegment&gt; ForceCloseHandles (string handleId = &quot;*&quot;, string marker = null, Nullable&lt;bool&gt; recursive = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Azure.Response`1&lt;class Azure.Storage.Files.Models.StorageClosedHandlesSegment&gt; ForceCloseHandles(string handleId, string marker, valuetype System.Nullable`1&lt;bool&gt; recursive, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DirectoryClient.ForceCloseHandles(System.String,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member ForceCloseHandles : string * string * Nullable&lt;bool&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.Models.StorageClosedHandlesSegment&gt;&#xA;override this.ForceCloseHandles : string * string * Nullable&lt;bool&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.Models.StorageClosedHandlesSegment&gt;" Usage="directoryClient.ForceCloseHandles (handleId, marker, recursive, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Files.Models.StorageClosedHandlesSegment&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handleId" Type="System.String" />
        <Parameter Name="marker" Type="System.String" />
        <Parameter Name="recursive" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="handleId">
             Optional. Specifies the handle ID to be closed. If not specified, or if equal to "*", will close all handles.
             </param>
        <param name="marker">
             An optional string value that identifies the segment of the handles
             to be closed with the next call to <see cref="M:Azure.Storage.Files.DirectoryClient.ForceCloseHandles(System.String,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)" />.  The
             operation returns a non-empty <see cref="P:Azure.Storage.Files.Models.StorageClosedHandlesSegment.Marker" />
             if the operation did not return all items remaining to be
             closed with the current segment.  The NextMarker value can
             be used as the value for the <paramref name="marker" /> parameter
             in a subsequent call to request the closure of the next segment of handles.
             </param>
        <param name="recursive">
             Optional. A boolean value that specifies if the operation should also apply to the files and subdirectories of the directory specified.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.DirectoryClient.ForceCloseHandles(System.String,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)" /> operation closes a handle or handles opened on a directory
             or a file at the service. It supports closing a single handle specified by <paramref name="handleId" /> on a file or
             directory or closing all handles opened on that resource. It optionally supports recursively closing
             handles on subresources when the resource is a directory.
            
             This API is intended to be used alongside <see cref="M:Azure.Storage.Files.DirectoryClient.GetHandles(System.Nullable{System.Boolean},System.Threading.CancellationToken)" /> to force close handles that
             block operations, such as renaming a directory. These handles may have leaked or been lost track of by
             SMB clients. The API has client-side impact on the handle being closed, including user visible
             errors due to failed attempts to read or write files. This API is not intended for use as a replacement
             or alternative for SMB close.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/force-close-handles" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing a
             segment of the handles closed.
             </returns>
        <remarks>
             A <see cref="T:Azure.Storage.StorageRequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForceCloseHandlesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Models.StorageClosedHandlesSegment&gt;&gt; ForceCloseHandlesAsync (string handleId = &quot;*&quot;, string marker = null, Nullable&lt;bool&gt; recursive = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;valuetype Azure.Response`1&lt;class Azure.Storage.Files.Models.StorageClosedHandlesSegment&gt;&gt; ForceCloseHandlesAsync(string handleId, string marker, valuetype System.Nullable`1&lt;bool&gt; recursive, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DirectoryClient.ForceCloseHandlesAsync(System.String,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member ForceCloseHandlesAsync : string * string * Nullable&lt;bool&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Models.StorageClosedHandlesSegment&gt;&gt;&#xA;override this.ForceCloseHandlesAsync : string * string * Nullable&lt;bool&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Models.StorageClosedHandlesSegment&gt;&gt;" Usage="directoryClient.ForceCloseHandlesAsync (handleId, marker, recursive, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Models.StorageClosedHandlesSegment&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handleId" Type="System.String" />
        <Parameter Name="marker" Type="System.String" />
        <Parameter Name="recursive" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="handleId">
             Optional. Specifies the handle ID to be closed. If not specified, or if equal to "*", will close all handles.
             </param>
        <param name="marker">
             An optional string value that identifies the segment of the handles
             to be closed with the next call to <see cref="M:Azure.Storage.Files.DirectoryClient.ForceCloseHandlesAsync(System.String,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)" />.  The
             operation returns a non-empty <see cref="P:Azure.Storage.Files.Models.StorageClosedHandlesSegment.Marker" />
             if the operation did not return all items remaining to be
             closed with the current segment.  The NextMarker value can
             be used as the value for the <paramref name="marker" /> parameter
             in a subsequent call to request the closure of the next segment of handles.
             </param>
        <param name="recursive">
             Optional. A boolean value that specifies if the operation should also apply to the files and subdirectories of the directory specified.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.DirectoryClient.ForceCloseHandlesAsync(System.String,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)" /> operation closes a handle or handles opened on a directory
             or a file at the service. It supports closing a single handle specified by <paramref name="handleId" /> on a file or
             directory or closing all handles opened on that resource. It optionally supports recursively closing
             handles on subresources when the resource is a directory.
            
             This API is intended to be used alongside <see cref="M:Azure.Storage.Files.DirectoryClient.GetHandlesAsync(System.Nullable{System.Boolean},System.Threading.CancellationToken)" /> to force close handles that
             block operations, such as renaming a directory. These handles may have leaked or been lost track of by
             SMB clients. The API has client-side impact on the handle being closed, including user visible
             errors due to failed attempts to read or write files. This API is not intended for use as a replacement
             or alternative for SMB close.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/force-close-handles" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing a
             segment of the handles closed.
             </returns>
        <remarks>
             A <see cref="T:Azure.Storage.StorageRequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFileClient">
      <MemberSignature Language="C#" Value="public virtual Azure.Storage.Files.FileClient GetFileClient (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Storage.Files.FileClient GetFileClient(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DirectoryClient.GetFileClient(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFileClient (fileName As String) As FileClient" />
      <MemberSignature Language="F#" Value="abstract member GetFileClient : string -&gt; Azure.Storage.Files.FileClient&#xA;override this.GetFileClient : string -&gt; Azure.Storage.Files.FileClient" Usage="directoryClient.GetFileClient fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Storage.Files.FileClient</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">The name of the file.</param>
        <summary>
            Creates a new <see cref="T:Azure.Storage.Files.FileClient" /> object by appending
            <paramref name="fileName" /> to the end of <see cref="P:Azure.Storage.Files.DirectoryClient.Uri" />.  The
            new <see cref="T:Azure.Storage.Files.FileClient" /> uses the same request policy
            pipeline as the <see cref="T:Azure.Storage.Files.DirectoryClient" />.
            </summary>
        <returns>A new <see cref="T:Azure.Storage.Files.FileClient" /> instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFilesAndDirectories">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;Azure.Response&lt;Azure.Storage.Files.Models.StorageFileItem&gt;&gt; GetFilesAndDirectories (Nullable&lt;Azure.Storage.Files.Models.GetFilesAndDirectoriesOptions&gt; options = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;valuetype Azure.Response`1&lt;class Azure.Storage.Files.Models.StorageFileItem&gt;&gt; GetFilesAndDirectories(valuetype System.Nullable`1&lt;valuetype Azure.Storage.Files.Models.GetFilesAndDirectoriesOptions&gt; options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DirectoryClient.GetFilesAndDirectories(System.Nullable{Azure.Storage.Files.Models.GetFilesAndDirectoriesOptions},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetFilesAndDirectories : Nullable&lt;Azure.Storage.Files.Models.GetFilesAndDirectoriesOptions&gt; * System.Threading.CancellationToken -&gt; seq&lt;Azure.Response&lt;Azure.Storage.Files.Models.StorageFileItem&gt;&gt;&#xA;override this.GetFilesAndDirectories : Nullable&lt;Azure.Storage.Files.Models.GetFilesAndDirectoriesOptions&gt; * System.Threading.CancellationToken -&gt; seq&lt;Azure.Response&lt;Azure.Storage.Files.Models.StorageFileItem&gt;&gt;" Usage="directoryClient.GetFilesAndDirectories (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Azure.Response&lt;Azure.Storage.Files.Models.StorageFileItem&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.Nullable&lt;Azure.Storage.Files.Models.GetFilesAndDirectoriesOptions&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options">
             Specifies options for listing, filtering, and shaping the items.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.DirectoryClient.GetFilesAndDirectories(System.Nullable{Azure.Storage.Files.Models.GetFilesAndDirectoriesOptions},System.Threading.CancellationToken)" /> operation returns an async
             sequence of files and subdirectories in this directory.
             Enumerating the files and directories may make multiple requests
             to the service while fetching all the values.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/list-directories-and-files" />.
             </summary>
        <returns>
             An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:Azure.Response`1" />
             describing  the items in the directory.
             </returns>
        <remarks>
             A <see cref="T:Azure.Storage.StorageRequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFilesAndDirectoriesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncCollection&lt;Azure.Storage.Files.Models.StorageFileItem&gt; GetFilesAndDirectoriesAsync (Nullable&lt;Azure.Storage.Files.Models.GetFilesAndDirectoriesOptions&gt; options = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncCollection`1&lt;class Azure.Storage.Files.Models.StorageFileItem&gt; GetFilesAndDirectoriesAsync(valuetype System.Nullable`1&lt;valuetype Azure.Storage.Files.Models.GetFilesAndDirectoriesOptions&gt; options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DirectoryClient.GetFilesAndDirectoriesAsync(System.Nullable{Azure.Storage.Files.Models.GetFilesAndDirectoriesOptions},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetFilesAndDirectoriesAsync : Nullable&lt;Azure.Storage.Files.Models.GetFilesAndDirectoriesOptions&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncCollection&lt;Azure.Storage.Files.Models.StorageFileItem&gt;&#xA;override this.GetFilesAndDirectoriesAsync : Nullable&lt;Azure.Storage.Files.Models.GetFilesAndDirectoriesOptions&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncCollection&lt;Azure.Storage.Files.Models.StorageFileItem&gt;" Usage="directoryClient.GetFilesAndDirectoriesAsync (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncCollection&lt;Azure.Storage.Files.Models.StorageFileItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.Nullable&lt;Azure.Storage.Files.Models.GetFilesAndDirectoriesOptions&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options">
             Specifies options for listing, filtering, and shaping the items.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.DirectoryClient.GetFilesAndDirectoriesAsync(System.Nullable{Azure.Storage.Files.Models.GetFilesAndDirectoriesOptions},System.Threading.CancellationToken)" /> operation returns an
             async collection of files and subdirectories in this directory.
             Enumerating the files and directories may make multiple requests
             to the service while fetching all the values.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/list-directories-and-files" />.
             </summary>
        <returns>
             A <see cref="T:Azure.AsyncCollection`1" /> describing the
             items in the directory.
             </returns>
        <remarks>
             A <see cref="T:Azure.Storage.StorageRequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHandles">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;Azure.Response&lt;Azure.Storage.Files.Models.StorageHandle&gt;&gt; GetHandles (Nullable&lt;bool&gt; recursive = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;valuetype Azure.Response`1&lt;class Azure.Storage.Files.Models.StorageHandle&gt;&gt; GetHandles(valuetype System.Nullable`1&lt;bool&gt; recursive, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DirectoryClient.GetHandles(System.Nullable{System.Boolean},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetHandles : Nullable&lt;bool&gt; * System.Threading.CancellationToken -&gt; seq&lt;Azure.Response&lt;Azure.Storage.Files.Models.StorageHandle&gt;&gt;&#xA;override this.GetHandles : Nullable&lt;bool&gt; * System.Threading.CancellationToken -&gt; seq&lt;Azure.Response&lt;Azure.Storage.Files.Models.StorageHandle&gt;&gt;" Usage="directoryClient.GetHandles (recursive, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Azure.Response&lt;Azure.Storage.Files.Models.StorageHandle&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recursive" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="recursive">
             Optional. A boolean value that specifies if the operation should also apply to the files and subdirectories of the directory specified.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.DirectoryClient.GetHandles(System.Nullable{System.Boolean},System.Threading.CancellationToken)" /> operation returns an async sequence
             of the open handles on a directory or a file.  Enumerating the
             handles may make multiple requests to the service while fetching
             all the values.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/list-handles" />.
             </summary>
        <returns>
             An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:Azure.Response`1" />
             describing the handles in the directory.
             </returns>
        <remarks>
             A <see cref="T:Azure.Storage.StorageRequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHandlesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncCollection&lt;Azure.Storage.Files.Models.StorageHandle&gt; GetHandlesAsync (Nullable&lt;bool&gt; recursive = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncCollection`1&lt;class Azure.Storage.Files.Models.StorageHandle&gt; GetHandlesAsync(valuetype System.Nullable`1&lt;bool&gt; recursive, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DirectoryClient.GetHandlesAsync(System.Nullable{System.Boolean},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetHandlesAsync : Nullable&lt;bool&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncCollection&lt;Azure.Storage.Files.Models.StorageHandle&gt;&#xA;override this.GetHandlesAsync : Nullable&lt;bool&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncCollection&lt;Azure.Storage.Files.Models.StorageHandle&gt;" Usage="directoryClient.GetHandlesAsync (recursive, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncCollection&lt;Azure.Storage.Files.Models.StorageHandle&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recursive" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="recursive">
             Optional. A boolean value that specifies if the operation should also apply to the files and subdirectories of the directory specified.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.DirectoryClient.GetHandlesAsync(System.Nullable{System.Boolean},System.Threading.CancellationToken)" /> operation returns an async
             sequence of the open handles on a directory or a file.
             Enumerating the handles may make multiple requests to the service
             while fetching all the values.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/list-handles" />.
             </summary>
        <returns>
             A <see cref="T:Azure.AsyncCollection`1" /> describing the
             handles on the directory.
             </returns>
        <remarks>
             A <see cref="T:Azure.Storage.StorageRequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Files.Models.StorageDirectoryProperties&gt; GetProperties (string shareSnapshot = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Azure.Response`1&lt;class Azure.Storage.Files.Models.StorageDirectoryProperties&gt; GetProperties(string shareSnapshot, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DirectoryClient.GetProperties(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetProperties : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.Models.StorageDirectoryProperties&gt;&#xA;override this.GetProperties : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.Models.StorageDirectoryProperties&gt;" Usage="directoryClient.GetProperties (shareSnapshot, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Files.Models.StorageDirectoryProperties&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shareSnapshot" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="shareSnapshot">
             Optionally specifies the share snapshot to retrieve the directory properties
             from. For more information on working with share snapshots, see
             <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/snapshot-share" />.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.DirectoryClient.GetProperties(System.String,System.Threading.CancellationToken)" /> operation returns all
             user-defined metadata and system properties for the specified
             directory. The data returned does not include the directory's
             list of subdirectories or files.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/get-directory-properties" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             directory and its properties.
             </returns>
        <remarks>
             A <see cref="T:Azure.Storage.StorageRequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertiesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Models.StorageDirectoryProperties&gt;&gt; GetPropertiesAsync (string shareSnapshot = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;valuetype Azure.Response`1&lt;class Azure.Storage.Files.Models.StorageDirectoryProperties&gt;&gt; GetPropertiesAsync(string shareSnapshot, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DirectoryClient.GetPropertiesAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetPropertiesAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Models.StorageDirectoryProperties&gt;&gt;&#xA;override this.GetPropertiesAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Models.StorageDirectoryProperties&gt;&gt;" Usage="directoryClient.GetPropertiesAsync (shareSnapshot, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Models.StorageDirectoryProperties&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shareSnapshot" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="shareSnapshot">
             Optionally specifies the share snapshot to retrieve the directory properties
             from. For more information on working with share snapshots, see
             <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/snapshot-share" />.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.DirectoryClient.GetPropertiesAsync(System.String,System.Threading.CancellationToken)" /> operation returns all
             user-defined metadata and system properties for the specified
             directory. The data returned does not include the directory's
             list of subdirectories or files.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/get-directory-properties" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             directory and its properties.
             </returns>
        <remarks>
             A <see cref="T:Azure.Storage.StorageRequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSubdirectoryClient">
      <MemberSignature Language="C#" Value="public virtual Azure.Storage.Files.DirectoryClient GetSubdirectoryClient (string subdirectoryName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Storage.Files.DirectoryClient GetSubdirectoryClient(string subdirectoryName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DirectoryClient.GetSubdirectoryClient(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSubdirectoryClient (subdirectoryName As String) As DirectoryClient" />
      <MemberSignature Language="F#" Value="abstract member GetSubdirectoryClient : string -&gt; Azure.Storage.Files.DirectoryClient&#xA;override this.GetSubdirectoryClient : string -&gt; Azure.Storage.Files.DirectoryClient" Usage="directoryClient.GetSubdirectoryClient subdirectoryName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Storage.Files.DirectoryClient</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subdirectoryName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subdirectoryName">The name of the subdirectory.</param>
        <summary>
            Creates a new <see cref="T:Azure.Storage.Files.DirectoryClient" /> object by appending
            <paramref name="subdirectoryName" /> to the end of <see cref="P:Azure.Storage.Files.DirectoryClient.Uri" />.
            The new <see cref="T:Azure.Storage.Files.DirectoryClient" /> uses the same request policy
            pipeline as the <see cref="T:Azure.Storage.Files.DirectoryClient" />.
            </summary>
        <returns>A new <see cref="T:Azure.Storage.Files.DirectoryClient" /> instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Pipeline">
      <MemberSignature Language="C#" Value="protected virtual Azure.Core.Pipeline.HttpPipeline Pipeline { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Core.Pipeline.HttpPipeline Pipeline" />
      <MemberSignature Language="DocId" Value="P:Azure.Storage.Files.DirectoryClient.Pipeline" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property Pipeline As HttpPipeline" />
      <MemberSignature Language="F#" Value="member this.Pipeline : Azure.Core.Pipeline.HttpPipeline" Usage="Azure.Storage.Files.DirectoryClient.Pipeline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.Pipeline.HttpPipeline</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the <see cref="T:Azure.Core.Pipeline.HttpPipeline" /> transport pipeline used to send
            every request.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetHttpHeaders">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Files.Models.StorageDirectoryInfo&gt; SetHttpHeaders (Nullable&lt;Azure.Storage.Files.Models.FileSmbProperties&gt; smbProperties = null, string filePermission = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Azure.Response`1&lt;class Azure.Storage.Files.Models.StorageDirectoryInfo&gt; SetHttpHeaders(valuetype System.Nullable`1&lt;valuetype Azure.Storage.Files.Models.FileSmbProperties&gt; smbProperties, string filePermission, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DirectoryClient.SetHttpHeaders(System.Nullable{Azure.Storage.Files.Models.FileSmbProperties},System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member SetHttpHeaders : Nullable&lt;Azure.Storage.Files.Models.FileSmbProperties&gt; * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.Models.StorageDirectoryInfo&gt;&#xA;override this.SetHttpHeaders : Nullable&lt;Azure.Storage.Files.Models.FileSmbProperties&gt; * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.Models.StorageDirectoryInfo&gt;" Usage="directoryClient.SetHttpHeaders (smbProperties, filePermission, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Files.Models.StorageDirectoryInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="smbProperties" Type="System.Nullable&lt;Azure.Storage.Files.Models.FileSmbProperties&gt;" />
        <Parameter Name="filePermission" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="smbProperties">
             Optional SMB properties to set for the directory.
             </param>
        <param name="filePermission">
             Optional file permission to set for the directory.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.DirectoryClient.SetHttpHeaders(System.Nullable{Azure.Storage.Files.Models.FileSmbProperties},System.String,System.Threading.CancellationToken)" /> operation sets system
             properties on the directory.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/set-directory-properties" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             state of the file.
             </returns>
        <remarks>
             A <see cref="T:Azure.Storage.StorageRequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetHttpHeadersAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Models.StorageDirectoryInfo&gt;&gt; SetHttpHeadersAsync (Nullable&lt;Azure.Storage.Files.Models.FileSmbProperties&gt; smbProperties = null, string filePermission = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;valuetype Azure.Response`1&lt;class Azure.Storage.Files.Models.StorageDirectoryInfo&gt;&gt; SetHttpHeadersAsync(valuetype System.Nullable`1&lt;valuetype Azure.Storage.Files.Models.FileSmbProperties&gt; smbProperties, string filePermission, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DirectoryClient.SetHttpHeadersAsync(System.Nullable{Azure.Storage.Files.Models.FileSmbProperties},System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member SetHttpHeadersAsync : Nullable&lt;Azure.Storage.Files.Models.FileSmbProperties&gt; * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Models.StorageDirectoryInfo&gt;&gt;&#xA;override this.SetHttpHeadersAsync : Nullable&lt;Azure.Storage.Files.Models.FileSmbProperties&gt; * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Models.StorageDirectoryInfo&gt;&gt;" Usage="directoryClient.SetHttpHeadersAsync (smbProperties, filePermission, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Models.StorageDirectoryInfo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="smbProperties" Type="System.Nullable&lt;Azure.Storage.Files.Models.FileSmbProperties&gt;" />
        <Parameter Name="filePermission" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="smbProperties">
             Optional SMB properties to set for the directory.
             </param>
        <param name="filePermission">
             Optional file permission to set for the directory.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.DirectoryClient.SetHttpHeadersAsync(System.Nullable{Azure.Storage.Files.Models.FileSmbProperties},System.String,System.Threading.CancellationToken)" /> operation sets system
             properties on the directory.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/set-directory-properties" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             state of the file.
             </returns>
        <remarks>
             A <see cref="T:Azure.Storage.StorageRequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMetadata">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Files.Models.StorageDirectoryInfo&gt; SetMetadata (System.Collections.Generic.IDictionary&lt;string,string&gt; metadata, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Azure.Response`1&lt;class Azure.Storage.Files.Models.StorageDirectoryInfo&gt; SetMetadata(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; metadata, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DirectoryClient.SetMetadata(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member SetMetadata : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.Models.StorageDirectoryInfo&gt;&#xA;override this.SetMetadata : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.Models.StorageDirectoryInfo&gt;" Usage="directoryClient.SetMetadata (metadata, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Files.Models.StorageDirectoryInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="metadata">
             Custom metadata to set for this directory.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.DirectoryClient.SetMetadata(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" /> operation sets one or more
             user-defined name-value pairs for the specified directory.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/set-directory-metadata" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> if successful.
             </returns>
        <remarks>
             A <see cref="T:Azure.Storage.StorageRequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMetadataAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Models.StorageDirectoryInfo&gt;&gt; SetMetadataAsync (System.Collections.Generic.IDictionary&lt;string,string&gt; metadata, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;valuetype Azure.Response`1&lt;class Azure.Storage.Files.Models.StorageDirectoryInfo&gt;&gt; SetMetadataAsync(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; metadata, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.DirectoryClient.SetMetadataAsync(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member SetMetadataAsync : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Models.StorageDirectoryInfo&gt;&gt;&#xA;override this.SetMetadataAsync : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Models.StorageDirectoryInfo&gt;&gt;" Usage="directoryClient.SetMetadataAsync (metadata, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Models.StorageDirectoryInfo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="metadata">
             Custom metadata to set for this directory.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.DirectoryClient.SetMetadataAsync(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" /> operation sets one or more
             user-defined name-value pairs for the specified directory.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/set-directory-metadata" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> if successful.
             </returns>
        <remarks>
             A <see cref="T:Azure.Storage.StorageRequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="Uri">
      <MemberSignature Language="C#" Value="public virtual Uri Uri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Uri" />
      <MemberSignature Language="DocId" Value="P:Azure.Storage.Files.DirectoryClient.Uri" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Uri As Uri" />
      <MemberSignature Language="F#" Value="member this.Uri : Uri" Usage="Azure.Storage.Files.DirectoryClient.Uri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the directory's primary <see cref="P:Azure.Storage.Files.DirectoryClient.Uri" /> endpoint.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

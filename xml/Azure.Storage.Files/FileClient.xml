<Type Name="FileClient" FullName="Azure.Storage.Files.FileClient">
  <TypeSignature Language="C#" Value="public class FileClient" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FileClient extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Storage.Files.FileClient" />
  <TypeSignature Language="VB.NET" Value="Public Class FileClient" />
  <TypeSignature Language="F#" Value="type FileClient = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Storage.Files</AssemblyName>
    <AssemblyVersion>12.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            The <see cref="T:Azure.Storage.Files.FileClient" /> allows you to manipulate Azure Storage files.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected FileClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.FileClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Files.FileClient" />
            class for mocking.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileClient (Uri fileUri, Azure.Storage.Files.FileClientOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri fileUri, class Azure.Storage.Files.FileClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.FileClient.#ctor(System.Uri,Azure.Storage.Files.FileClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileUri As Uri, Optional options As FileClientOptions = null)" />
      <MemberSignature Language="F#" Value="new Azure.Storage.Files.FileClient : Uri * Azure.Storage.Files.FileClientOptions -&gt; Azure.Storage.Files.FileClient" Usage="new Azure.Storage.Files.FileClient (fileUri, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileUri" Type="System.Uri" />
        <Parameter Name="options" Type="Azure.Storage.Files.FileClientOptions" />
      </Parameters>
      <Docs>
        <param name="fileUri">
            A <see cref="P:Azure.Storage.Files.FileClient.Uri" /> referencing the file that includes the
            name of the account, the name of the share, and the path of the
            file.
            </param>
        <param name="options">
            Optional <see cref="T:Azure.Storage.Files.FileClientOptions" /> that define the transport
            pipeline policies for authentication, retries, etc., that are
            applied to every request.
            </param>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Files.FileClient" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileClient (string connectionString, string shareName, string filePath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString, string shareName, string filePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.FileClient.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String, shareName As String, filePath As String)" />
      <MemberSignature Language="F#" Value="new Azure.Storage.Files.FileClient : string * string * string -&gt; Azure.Storage.Files.FileClient" Usage="new Azure.Storage.Files.FileClient (connectionString, shareName, filePath)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="shareName" Type="System.String" />
        <Parameter Name="filePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">
             A connection string includes the authentication information
             required for your application to access data in an Azure Storage
             account at runtime.
            
             For more information, <see href="https://docs.microsoft.com/en-us/azure/storage/common/storage-configure-connection-string" />.
             </param>
        <param name="shareName">
             The name of the share in the storage account to reference.
             </param>
        <param name="filePath">
             The path of the file in the storage account to reference.
             </param>
        <summary>
             Initializes a new instance of the <see cref="T:Azure.Storage.Files.FileClient" /> class.
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileClient (Uri fileUri, Azure.Storage.StorageSharedKeyCredential credential, Azure.Storage.Files.FileClientOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri fileUri, class Azure.Storage.StorageSharedKeyCredential credential, class Azure.Storage.Files.FileClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.FileClient.#ctor(System.Uri,Azure.Storage.StorageSharedKeyCredential,Azure.Storage.Files.FileClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileUri As Uri, credential As StorageSharedKeyCredential, Optional options As FileClientOptions = null)" />
      <MemberSignature Language="F#" Value="new Azure.Storage.Files.FileClient : Uri * Azure.Storage.StorageSharedKeyCredential * Azure.Storage.Files.FileClientOptions -&gt; Azure.Storage.Files.FileClient" Usage="new Azure.Storage.Files.FileClient (fileUri, credential, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileUri" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.Storage.StorageSharedKeyCredential" />
        <Parameter Name="options" Type="Azure.Storage.Files.FileClientOptions" />
      </Parameters>
      <Docs>
        <param name="fileUri">
            A <see cref="P:Azure.Storage.Files.FileClient.Uri" /> referencing the file that includes the
            name of the account, the name of the share, and the path of the
            file.
            </param>
        <param name="credential">
            The shared key credential used to sign requests.
            </param>
        <param name="options">
            Optional <see cref="T:Azure.Storage.Files.FileClientOptions" /> that define the transport
            pipeline policies for authentication, retries, etc., that are
            applied to every request.
            </param>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Files.FileClient" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileClient (string connectionString, string shareName, string filePath, Azure.Storage.Files.FileClientOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString, string shareName, string filePath, class Azure.Storage.Files.FileClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.FileClient.#ctor(System.String,System.String,System.String,Azure.Storage.Files.FileClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String, shareName As String, filePath As String, options As FileClientOptions)" />
      <MemberSignature Language="F#" Value="new Azure.Storage.Files.FileClient : string * string * string * Azure.Storage.Files.FileClientOptions -&gt; Azure.Storage.Files.FileClient" Usage="new Azure.Storage.Files.FileClient (connectionString, shareName, filePath, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="shareName" Type="System.String" />
        <Parameter Name="filePath" Type="System.String" />
        <Parameter Name="options" Type="Azure.Storage.Files.FileClientOptions" />
      </Parameters>
      <Docs>
        <param name="connectionString">
             A connection string includes the authentication information
             required for your application to access data in an Azure Storage
             account at runtime.
            
             For more information, <see href="https://docs.microsoft.com/en-us/azure/storage/common/storage-configure-connection-string" />.
             </param>
        <param name="shareName">
             The name of the share in the storage account to reference.
             </param>
        <param name="filePath">
             The path of the file in the storage account to reference.
             </param>
        <param name="options">
             Optional <see cref="T:Azure.Storage.Files.FileClientOptions" /> that define the transport
             pipeline policies for authentication, retries, etc., that are
             applied to every request.
             </param>
        <summary>
             Initializes a new instance of the <see cref="T:Azure.Storage.Files.FileClient" /> class.
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AbortCopy">
      <MemberSignature Language="C#" Value="public virtual Azure.Response AbortCopy (string copyId, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response AbortCopy(string copyId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.FileClient.AbortCopy(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member AbortCopy : string * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.AbortCopy : string * System.Threading.CancellationToken -&gt; Azure.Response" Usage="fileClient.AbortCopy (copyId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="copyId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="copyId">
             String identifier for the copy operation.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             Attempts to cancel a pending copy that was previously started and leaves a destination file with zero length and full metadata.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/abort-copy-file" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response" /> on successfully aborting.
             </returns>
        <remarks>
             A <see cref="T:Azure.Storage.StorageRequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="AbortCopyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; AbortCopyAsync (string copyId, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; AbortCopyAsync(string copyId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.FileClient.AbortCopyAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member AbortCopyAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.AbortCopyAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="fileClient.AbortCopyAsync (copyId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="copyId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="copyId">
             String identifier for the copy operation.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             Attempts to cancel a pending copy that was previously started and leaves a destination file with zero length and full metadata.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/abort-copy-file" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response" /> on successfully aborting.
             </returns>
        <remarks>
             A <see cref="T:Azure.Storage.StorageRequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="AccountName">
      <MemberSignature Language="C#" Value="public virtual string AccountName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AccountName" />
      <MemberSignature Language="DocId" Value="P:Azure.Storage.Files.FileClient.AccountName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AccountName As String" />
      <MemberSignature Language="F#" Value="member this.AccountName : string" Usage="Azure.Storage.Files.FileClient.AccountName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the Storage account name corresponding to the file client.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Files.Models.StorageFileInfo&gt; Create (long maxSize, Nullable&lt;Azure.Storage.Files.Models.FileHttpHeaders&gt; httpHeaders = null, System.Collections.Generic.IDictionary&lt;string,string&gt; metadata = null, Nullable&lt;Azure.Storage.Files.Models.FileSmbProperties&gt; smbProperties = null, string filePermission = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Storage.Files.Models.StorageFileInfo&gt; Create(int64 maxSize, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Files.Models.FileHttpHeaders&gt; httpHeaders, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; metadata, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Files.Models.FileSmbProperties&gt; smbProperties, string filePermission, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.FileClient.Create(System.Int64,System.Nullable{Azure.Storage.Files.Models.FileHttpHeaders},System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{Azure.Storage.Files.Models.FileSmbProperties},System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member Create : int64 * Nullable&lt;Azure.Storage.Files.Models.FileHttpHeaders&gt; * System.Collections.Generic.IDictionary&lt;string, string&gt; * Nullable&lt;Azure.Storage.Files.Models.FileSmbProperties&gt; * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.Models.StorageFileInfo&gt;&#xA;override this.Create : int64 * Nullable&lt;Azure.Storage.Files.Models.FileHttpHeaders&gt; * System.Collections.Generic.IDictionary&lt;string, string&gt; * Nullable&lt;Azure.Storage.Files.Models.FileSmbProperties&gt; * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.Models.StorageFileInfo&gt;" Usage="fileClient.Create (maxSize, httpHeaders, metadata, smbProperties, filePermission, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Files.Models.StorageFileInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="maxSize" Type="System.Int64" />
        <Parameter Name="httpHeaders" Type="System.Nullable&lt;Azure.Storage.Files.Models.FileHttpHeaders&gt;" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="smbProperties" Type="System.Nullable&lt;Azure.Storage.Files.Models.FileSmbProperties&gt;" />
        <Parameter Name="filePermission" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="maxSize">
             Required. Specifies the maximum size for the file.
             </param>
        <param name="httpHeaders">
             Optional standard HTTP header properties that can be set for the file.
             </param>
        <param name="metadata">
             Optional custom metadata to set for the file.
             </param>
        <param name="smbProperties">
             Optional SMB properties to set for the file.
             </param>
        <param name="filePermission">
             Optional file permission to set for the file.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             Creates a new file or replaces an existing file.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/create-file" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             state of the file.
             </returns>
        <remarks>
             This method only initializes the file.
             To add content, use <see cref="M:Azure.Storage.Files.FileClient.UploadRange(Azure.Storage.Files.Models.FileRangeWriteType,Azure.HttpRange,System.IO.Stream,System.Byte[],System.IProgress{Azure.Storage.Common.StorageProgress},System.Threading.CancellationToken)" />.
             </remarks>
        <remarks>
             A <see cref="T:Azure.Storage.StorageRequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Models.StorageFileInfo&gt;&gt; CreateAsync (long maxSize, Nullable&lt;Azure.Storage.Files.Models.FileHttpHeaders&gt; httpHeaders = null, System.Collections.Generic.IDictionary&lt;string,string&gt; metadata = null, Nullable&lt;Azure.Storage.Files.Models.FileSmbProperties&gt; smbProperties = null, string filePermission = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Storage.Files.Models.StorageFileInfo&gt;&gt; CreateAsync(int64 maxSize, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Files.Models.FileHttpHeaders&gt; httpHeaders, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; metadata, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Files.Models.FileSmbProperties&gt; smbProperties, string filePermission, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.FileClient.CreateAsync(System.Int64,System.Nullable{Azure.Storage.Files.Models.FileHttpHeaders},System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{Azure.Storage.Files.Models.FileSmbProperties},System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member CreateAsync : int64 * Nullable&lt;Azure.Storage.Files.Models.FileHttpHeaders&gt; * System.Collections.Generic.IDictionary&lt;string, string&gt; * Nullable&lt;Azure.Storage.Files.Models.FileSmbProperties&gt; * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Models.StorageFileInfo&gt;&gt;&#xA;override this.CreateAsync : int64 * Nullable&lt;Azure.Storage.Files.Models.FileHttpHeaders&gt; * System.Collections.Generic.IDictionary&lt;string, string&gt; * Nullable&lt;Azure.Storage.Files.Models.FileSmbProperties&gt; * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Models.StorageFileInfo&gt;&gt;" Usage="fileClient.CreateAsync (maxSize, httpHeaders, metadata, smbProperties, filePermission, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Models.StorageFileInfo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="maxSize" Type="System.Int64" />
        <Parameter Name="httpHeaders" Type="System.Nullable&lt;Azure.Storage.Files.Models.FileHttpHeaders&gt;" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="smbProperties" Type="System.Nullable&lt;Azure.Storage.Files.Models.FileSmbProperties&gt;" />
        <Parameter Name="filePermission" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="maxSize">
             Required. Specifies the maximum size for the file.
             </param>
        <param name="httpHeaders">
             Optional standard HTTP header properties that can be set for the file.
             </param>
        <param name="metadata">
             Optional custom metadata to set for the file.
             </param>
        <param name="smbProperties">
             Optional SMB properties to set for the file.
             </param>
        <param name="filePermission">
             Optional file permission to set for the file.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             Creates a new file or replaces an existing file.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/create-file" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             state of the file.
             </returns>
        <remarks>
             This method only initializes the file.
             To add content, use <see cref="M:Azure.Storage.Files.FileClient.UploadRangeAsync(Azure.Storage.Files.Models.FileRangeWriteType,Azure.HttpRange,System.IO.Stream,System.Byte[],System.IProgress{Azure.Storage.Common.StorageProgress},System.Threading.CancellationToken)" />.
             </remarks>
        <remarks>
             A <see cref="T:Azure.Storage.StorageRequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public virtual Azure.Response Delete (System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response Delete(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.FileClient.Delete(System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member Delete : System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.Delete : System.Threading.CancellationToken -&gt; Azure.Response" Usage="fileClient.Delete cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.FileClient.Delete(System.Threading.CancellationToken)" /> operation immediately removes the file from the storage account.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/delete-file2" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response" /> on successfully deleting.
             </returns>
        <remarks>
             A <see cref="T:Azure.Storage.StorageRequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DeleteAsync (System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeleteAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.FileClient.DeleteAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member DeleteAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DeleteAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="fileClient.DeleteAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.FileClient.DeleteAsync(System.Threading.CancellationToken)" /> operation immediately removes the file from the storage account.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/delete-file2" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response" /> on successfully deleting.
             </returns>
        <remarks>
             A <see cref="T:Azure.Storage.StorageRequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="Download">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Files.Models.StorageFileDownloadInfo&gt; Download (Azure.HttpRange range = null, bool rangeGetContentHash = false, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Storage.Files.Models.StorageFileDownloadInfo&gt; Download(valuetype Azure.HttpRange range, bool rangeGetContentHash, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.FileClient.Download(Azure.HttpRange,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member Download : Azure.HttpRange * bool * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.Models.StorageFileDownloadInfo&gt;&#xA;override this.Download : Azure.HttpRange * bool * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.Models.StorageFileDownloadInfo&gt;" Usage="fileClient.Download (range, rangeGetContentHash, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Files.Models.StorageFileDownloadInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="range" Type="Azure.HttpRange" />
        <Parameter Name="rangeGetContentHash" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="range">
             Optional. Only download the bytes of the file in the specified
             range.  If not provided, download the entire file.
             </param>
        <param name="rangeGetContentHash">
             When set to true and specified together with the <paramref name="range" />,
             the service returns the MD5 hash for the range, as long as the
             range is less than or equal to 4 MB in size.  If this value is
             specified without <paramref name="range" /> or set to true when the
             range exceeds 4 MB in size, a <see cref="T:Azure.Storage.StorageRequestFailedException" />
             is thrown.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.FileClient.Download(Azure.HttpRange,System.Boolean,System.Threading.CancellationToken)" /> operation reads or downloads a file from the system, including its metadata and properties.
            
             For more information <see href="https://docs.microsoft.com/rest/api/storageservices/get-file" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             downloaded file.  <see cref="P:Azure.Storage.Files.Models.StorageFileDownloadInfo.Content" /> contains
             the file's data.
             </returns>
        <remarks>
             A <see cref="T:Azure.Storage.StorageRequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="DownloadAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Models.StorageFileDownloadInfo&gt;&gt; DownloadAsync (Azure.HttpRange range = null, bool rangeGetContentHash = false, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Storage.Files.Models.StorageFileDownloadInfo&gt;&gt; DownloadAsync(valuetype Azure.HttpRange range, bool rangeGetContentHash, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.FileClient.DownloadAsync(Azure.HttpRange,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member DownloadAsync : Azure.HttpRange * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Models.StorageFileDownloadInfo&gt;&gt;&#xA;override this.DownloadAsync : Azure.HttpRange * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Models.StorageFileDownloadInfo&gt;&gt;" Usage="fileClient.DownloadAsync (range, rangeGetContentHash, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Models.StorageFileDownloadInfo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="range" Type="Azure.HttpRange" />
        <Parameter Name="rangeGetContentHash" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="range">
             Optional. Only download the bytes of the file in the specified
             range.  If not provided, download the entire file.
             </param>
        <param name="rangeGetContentHash">
             When set to true and specified together with the <paramref name="range" />,
             the service returns the MD5 hash for the range, as long as the
             range is less than or equal to 4 MB in size.  If this value is
             specified without <paramref name="range" /> or set to true when the
             range exceeds 4 MB in size, a <see cref="T:Azure.Storage.StorageRequestFailedException" />
             is thrown.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.FileClient.DownloadAsync(Azure.HttpRange,System.Boolean,System.Threading.CancellationToken)" /> operation reads or downloads a file from the system, including its metadata and properties.
            
             For more information <see href="https://docs.microsoft.com/rest/api/storageservices/get-file" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             downloaded file.  <see cref="P:Azure.Storage.Files.Models.StorageFileDownloadInfo.Content" /> contains
             the file's data.
             </returns>
        <remarks>
             A <see cref="T:Azure.Storage.StorageRequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForceCloseHandles">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Files.Models.StorageClosedHandlesSegment&gt; ForceCloseHandles (string handleId = &quot;*&quot;, string marker = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Storage.Files.Models.StorageClosedHandlesSegment&gt; ForceCloseHandles(string handleId, string marker, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.FileClient.ForceCloseHandles(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member ForceCloseHandles : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.Models.StorageClosedHandlesSegment&gt;&#xA;override this.ForceCloseHandles : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.Models.StorageClosedHandlesSegment&gt;" Usage="fileClient.ForceCloseHandles (handleId, marker, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Files.Models.StorageClosedHandlesSegment&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handleId" Type="System.String" />
        <Parameter Name="marker" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="handleId">
             Optional. Specifies the handle ID to be closed. If not specified, or if equal to "*", will close all handles.
             </param>
        <param name="marker">
             An optional string value that identifies the segment of the handles
             to be closed with the next call to <see cref="M:Azure.Storage.Files.FileClient.ForceCloseHandles(System.String,System.String,System.Threading.CancellationToken)" />.  The
             operation returns a non-empty <see cref="P:Azure.Storage.Files.Models.StorageClosedHandlesSegment.Marker" />
             if the operation did not return all items remaining to be
             closed with the current segment.  The NextMarker value can
             be used as the value for the <paramref name="marker" /> parameter
             in a subsequent call to request the closure of the next segment of handles.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.FileClient.ForceCloseHandles(System.String,System.String,System.Threading.CancellationToken)" /> operation closes a handle or handles opened on a file
             at the service. It supports closing a single handle specified by <paramref name="handleId" /> or
             or closing all handles opened on that resource.
            
             This API is intended to be used alongside <see cref="M:Azure.Storage.Files.FileClient.GetHandlesAsync(System.Threading.CancellationToken)" /> to force close handles that
             block operations. These handles may have leaked or been lost track of by
             SMB clients. The API has client-side impact on the handle being closed, including user visible
             errors due to failed attempts to read or write files. This API is not intended for use as a replacement
             or alternative for SMB close.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/force-close-handles" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing a
             segment of the handles closed.
             </returns>
        <remarks>
             A <see cref="T:Azure.Storage.StorageRequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForceCloseHandlesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Models.StorageClosedHandlesSegment&gt;&gt; ForceCloseHandlesAsync (string handleId = &quot;*&quot;, string marker = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Storage.Files.Models.StorageClosedHandlesSegment&gt;&gt; ForceCloseHandlesAsync(string handleId, string marker, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.FileClient.ForceCloseHandlesAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member ForceCloseHandlesAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Models.StorageClosedHandlesSegment&gt;&gt;&#xA;override this.ForceCloseHandlesAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Models.StorageClosedHandlesSegment&gt;&gt;" Usage="fileClient.ForceCloseHandlesAsync (handleId, marker, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Models.StorageClosedHandlesSegment&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handleId" Type="System.String" />
        <Parameter Name="marker" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="handleId">
             Optional. Specifies the handle ID to be closed. If not specified, or if equal to "*", will close all handles.
             </param>
        <param name="marker">
             An optional string value that identifies the segment of the handles
             to be closed with the next call to <see cref="M:Azure.Storage.Files.FileClient.ForceCloseHandlesAsync(System.String,System.String,System.Threading.CancellationToken)" />.  The
             operation returns a non-empty <see cref="P:Azure.Storage.Files.Models.StorageClosedHandlesSegment.Marker" />
             if the operation did not return all items remaining to be
             closed with the current segment.  The NextMarker value can
             be used as the value for the <paramref name="marker" /> parameter
             in a subsequent call to request the closure of the next segment of handles.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.FileClient.ForceCloseHandlesAsync(System.String,System.String,System.Threading.CancellationToken)" /> operation closes a handle or handles opened on a file
             at the service. It supports closing a single handle specified by <paramref name="handleId" /> or
             or closing all handles opened on that resource.
            
             This API is intended to be used alongside <see cref="M:Azure.Storage.Files.FileClient.GetHandlesAsync(System.Threading.CancellationToken)" /> to force close handles that
             block operations. These handles may have leaked or been lost track of by
             SMB clients. The API has client-side impact on the handle being closed, including user visible
             errors due to failed attempts to read or write files. This API is not intended for use as a replacement
             or alternative for SMB close.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/force-close-handles" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing a
             segment of the handles closed.
             </returns>
        <remarks>
             A <see cref="T:Azure.Storage.StorageRequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHandles">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.Storage.Files.Models.StorageHandle&gt; GetHandles (System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.Storage.Files.Models.StorageHandle&gt; GetHandles(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.FileClient.GetHandles(System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetHandles : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.Storage.Files.Models.StorageHandle&gt;&#xA;override this.GetHandles : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.Storage.Files.Models.StorageHandle&gt;" Usage="fileClient.GetHandles cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.Storage.Files.Models.StorageHandle&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.FileClient.GetHandles(System.Threading.CancellationToken)" /> operation returns an async sequence
             of the open handles on a directory or a file.  Enumerating the
             handles may make multiple requests to the service while fetching
             all the values.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/list-handles" />.
             </summary>
        <returns>
             An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:Azure.Response`1" />
             describing the handles in the directory.
             </returns>
        <remarks>
             A <see cref="T:Azure.Storage.StorageRequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHandlesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncCollection&lt;Azure.Storage.Files.Models.StorageHandle&gt; GetHandlesAsync (System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncCollection`1&lt;class Azure.Storage.Files.Models.StorageHandle&gt; GetHandlesAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.FileClient.GetHandlesAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetHandlesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncCollection&lt;Azure.Storage.Files.Models.StorageHandle&gt;&#xA;override this.GetHandlesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncCollection&lt;Azure.Storage.Files.Models.StorageHandle&gt;" Usage="fileClient.GetHandlesAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncCollection&lt;Azure.Storage.Files.Models.StorageHandle&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.FileClient.GetHandlesAsync(System.Threading.CancellationToken)" /> operation returns an async
             sequence of the open handles on a directory or a file.
             Enumerating the handles may make multiple requests to the service
             while fetching all the values.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/list-handles" />.
             </summary>
        <returns>
             A <see cref="T:Azure.AsyncCollection`1" /> describing the
             handles on the file.
             </returns>
        <remarks>
             A <see cref="T:Azure.Storage.StorageRequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Files.Models.StorageFileProperties&gt; GetProperties (string shareSnapshot = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Storage.Files.Models.StorageFileProperties&gt; GetProperties(string shareSnapshot, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.FileClient.GetProperties(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetProperties : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.Models.StorageFileProperties&gt;&#xA;override this.GetProperties : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.Models.StorageFileProperties&gt;" Usage="fileClient.GetProperties (shareSnapshot, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Files.Models.StorageFileProperties&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shareSnapshot" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="shareSnapshot">
             Optional. The snapshot identifier.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.FileClient.GetProperties(System.String,System.Threading.CancellationToken)" /> operation returns all
             user-defined metadata, standard HTTP properties, and system
             properties for the file. It does not return the content of the
             file.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/get-file-properties" /></summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             file's properties.
             </returns>
        <remarks>
             A <see cref="T:Azure.Storage.StorageRequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertiesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Models.StorageFileProperties&gt;&gt; GetPropertiesAsync (string shareSnapshot = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Storage.Files.Models.StorageFileProperties&gt;&gt; GetPropertiesAsync(string shareSnapshot, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.FileClient.GetPropertiesAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetPropertiesAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Models.StorageFileProperties&gt;&gt;&#xA;override this.GetPropertiesAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Models.StorageFileProperties&gt;&gt;" Usage="fileClient.GetPropertiesAsync (shareSnapshot, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Models.StorageFileProperties&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shareSnapshot" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="shareSnapshot">
             Optional. The snapshot identifier.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.FileClient.GetPropertiesAsync(System.String,System.Threading.CancellationToken)" /> operation returns all
             user-defined metadata, standard HTTP properties, and system
             properties for the file. It does not return the content of the
             file.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/get-file-properties" /></summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             file's properties.
             </returns>
        <remarks>
             A <see cref="T:Azure.Storage.StorageRequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRangeList">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Files.Models.StorageFileRangeInfo&gt; GetRangeList (Azure.HttpRange range, string shareSnapshot = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Storage.Files.Models.StorageFileRangeInfo&gt; GetRangeList(valuetype Azure.HttpRange range, string shareSnapshot, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.FileClient.GetRangeList(Azure.HttpRange,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetRangeList : Azure.HttpRange * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.Models.StorageFileRangeInfo&gt;&#xA;override this.GetRangeList : Azure.HttpRange * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.Models.StorageFileRangeInfo&gt;" Usage="fileClient.GetRangeList (range, shareSnapshot, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Files.Models.StorageFileRangeInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="range" Type="Azure.HttpRange" />
        <Parameter Name="shareSnapshot" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="range">
             Optional. Specifies the range of bytes over which to list ranges, inclusively. If omitted, then all ranges for the file are returned.
             </param>
        <param name="shareSnapshot">
             Optional. Specifies the share snapshot to query.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             Returns the list of valid ranges for a file.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/list-ranges" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             valid ranges for this file.
             </returns>
        <remarks>
             A <see cref="T:Azure.Storage.StorageRequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRangeListAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Models.StorageFileRangeInfo&gt;&gt; GetRangeListAsync (Azure.HttpRange range, string shareSnapshot = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Storage.Files.Models.StorageFileRangeInfo&gt;&gt; GetRangeListAsync(valuetype Azure.HttpRange range, string shareSnapshot, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.FileClient.GetRangeListAsync(Azure.HttpRange,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetRangeListAsync : Azure.HttpRange * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Models.StorageFileRangeInfo&gt;&gt;&#xA;override this.GetRangeListAsync : Azure.HttpRange * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Models.StorageFileRangeInfo&gt;&gt;" Usage="fileClient.GetRangeListAsync (range, shareSnapshot, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Models.StorageFileRangeInfo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="range" Type="Azure.HttpRange" />
        <Parameter Name="shareSnapshot" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="range">
             Optional. Specifies the range of bytes over which to list ranges, inclusively. If omitted, then all ranges for the file are returned.
             </param>
        <param name="shareSnapshot">
             Optional. Specifies the share snapshot to query.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             Returns the list of valid ranges for a file.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/list-ranges" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             valid ranges for this file.
             </returns>
        <remarks>
             A <see cref="T:Azure.Storage.StorageRequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Azure.Storage.Files.FileClient.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Name As String" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="Azure.Storage.Files.FileClient.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the name of the file.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetHttpHeaders">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Files.Models.StorageFileInfo&gt; SetHttpHeaders (Nullable&lt;long&gt; newSize = null, Nullable&lt;Azure.Storage.Files.Models.FileHttpHeaders&gt; httpHeaders = null, Nullable&lt;Azure.Storage.Files.Models.FileSmbProperties&gt; smbProperties = null, string filePermission = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Storage.Files.Models.StorageFileInfo&gt; SetHttpHeaders(valuetype System.Nullable`1&lt;int64&gt; newSize, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Files.Models.FileHttpHeaders&gt; httpHeaders, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Files.Models.FileSmbProperties&gt; smbProperties, string filePermission, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.FileClient.SetHttpHeaders(System.Nullable{System.Int64},System.Nullable{Azure.Storage.Files.Models.FileHttpHeaders},System.Nullable{Azure.Storage.Files.Models.FileSmbProperties},System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member SetHttpHeaders : Nullable&lt;int64&gt; * Nullable&lt;Azure.Storage.Files.Models.FileHttpHeaders&gt; * Nullable&lt;Azure.Storage.Files.Models.FileSmbProperties&gt; * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.Models.StorageFileInfo&gt;&#xA;override this.SetHttpHeaders : Nullable&lt;int64&gt; * Nullable&lt;Azure.Storage.Files.Models.FileHttpHeaders&gt; * Nullable&lt;Azure.Storage.Files.Models.FileSmbProperties&gt; * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.Models.StorageFileInfo&gt;" Usage="fileClient.SetHttpHeaders (newSize, httpHeaders, smbProperties, filePermission, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Files.Models.StorageFileInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newSize" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="httpHeaders" Type="System.Nullable&lt;Azure.Storage.Files.Models.FileHttpHeaders&gt;" />
        <Parameter Name="smbProperties" Type="System.Nullable&lt;Azure.Storage.Files.Models.FileSmbProperties&gt;" />
        <Parameter Name="filePermission" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="newSize">
             Optional. Resizes a file to the specified size.
             If the specified byte value is less than the current size
             of the file, then all ranges above the specified byte value
             are cleared.
             </param>
        <param name="httpHeaders">
             Optional. The standard HTTP header system properties to set.  If not specified, existing values will be cleared.
             </param>
        <param name="smbProperties">
             Optional SMB properties to set for the file.
             </param>
        <param name="filePermission">
             Optional file permission to set for the file.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.FileClient.SetHttpHeaders(System.Nullable{System.Int64},System.Nullable{Azure.Storage.Files.Models.FileHttpHeaders},System.Nullable{Azure.Storage.Files.Models.FileSmbProperties},System.String,System.Threading.CancellationToken)" /> operation sets system
             properties on the file.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/set-file-properties" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             state of the file.
             </returns>
        <remarks>
             A <see cref="T:Azure.Storage.StorageRequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetHttpHeadersAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Models.StorageFileInfo&gt;&gt; SetHttpHeadersAsync (Nullable&lt;long&gt; newSize = null, Nullable&lt;Azure.Storage.Files.Models.FileHttpHeaders&gt; httpHeaders = null, Nullable&lt;Azure.Storage.Files.Models.FileSmbProperties&gt; smbProperties = null, string filePermission = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Storage.Files.Models.StorageFileInfo&gt;&gt; SetHttpHeadersAsync(valuetype System.Nullable`1&lt;int64&gt; newSize, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Files.Models.FileHttpHeaders&gt; httpHeaders, valuetype System.Nullable`1&lt;valuetype Azure.Storage.Files.Models.FileSmbProperties&gt; smbProperties, string filePermission, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.FileClient.SetHttpHeadersAsync(System.Nullable{System.Int64},System.Nullable{Azure.Storage.Files.Models.FileHttpHeaders},System.Nullable{Azure.Storage.Files.Models.FileSmbProperties},System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member SetHttpHeadersAsync : Nullable&lt;int64&gt; * Nullable&lt;Azure.Storage.Files.Models.FileHttpHeaders&gt; * Nullable&lt;Azure.Storage.Files.Models.FileSmbProperties&gt; * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Models.StorageFileInfo&gt;&gt;&#xA;override this.SetHttpHeadersAsync : Nullable&lt;int64&gt; * Nullable&lt;Azure.Storage.Files.Models.FileHttpHeaders&gt; * Nullable&lt;Azure.Storage.Files.Models.FileSmbProperties&gt; * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Models.StorageFileInfo&gt;&gt;" Usage="fileClient.SetHttpHeadersAsync (newSize, httpHeaders, smbProperties, filePermission, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Models.StorageFileInfo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newSize" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="httpHeaders" Type="System.Nullable&lt;Azure.Storage.Files.Models.FileHttpHeaders&gt;" />
        <Parameter Name="smbProperties" Type="System.Nullable&lt;Azure.Storage.Files.Models.FileSmbProperties&gt;" />
        <Parameter Name="filePermission" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="newSize">
             Optional. Resizes a file to the specified size.
             If the specified byte value is less than the current size
             of the file, then all ranges above the specified byte value
             are cleared.
             </param>
        <param name="httpHeaders">
             Optional. The standard HTTP header system properties to set.  If not specified, existing values will be cleared.
             </param>
        <param name="smbProperties">
             Optional SMB properties to set for the file.
             </param>
        <param name="filePermission">
             Optional file permission to set for the file.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.FileClient.SetHttpHeadersAsync(System.Nullable{System.Int64},System.Nullable{Azure.Storage.Files.Models.FileHttpHeaders},System.Nullable{Azure.Storage.Files.Models.FileSmbProperties},System.String,System.Threading.CancellationToken)" /> operation sets system
             properties on the file.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/set-file-properties" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             state of the file.
             </returns>
        <remarks>
             A <see cref="T:Azure.Storage.StorageRequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMetadata">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Files.Models.StorageFileInfo&gt; SetMetadata (System.Collections.Generic.IDictionary&lt;string,string&gt; metadata, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Storage.Files.Models.StorageFileInfo&gt; SetMetadata(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; metadata, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.FileClient.SetMetadata(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member SetMetadata : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.Models.StorageFileInfo&gt;&#xA;override this.SetMetadata : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.Models.StorageFileInfo&gt;" Usage="fileClient.SetMetadata (metadata, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Files.Models.StorageFileInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="metadata">
             Custom metadata to set for this file.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.FileClient.SetMetadata(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" /> operation sets user-defined
             metadata for the specified file as one or more name-value pairs.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/set-file-metadata" /></summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the updated
             file.
             </returns>
        <remarks>
             A <see cref="T:Azure.Storage.StorageRequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMetadataAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Models.StorageFileInfo&gt;&gt; SetMetadataAsync (System.Collections.Generic.IDictionary&lt;string,string&gt; metadata, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Storage.Files.Models.StorageFileInfo&gt;&gt; SetMetadataAsync(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; metadata, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.FileClient.SetMetadataAsync(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member SetMetadataAsync : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Models.StorageFileInfo&gt;&gt;&#xA;override this.SetMetadataAsync : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Models.StorageFileInfo&gt;&gt;" Usage="fileClient.SetMetadataAsync (metadata, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Models.StorageFileInfo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="metadata">
             Custom metadata to set for this file.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.FileClient.SetMetadataAsync(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" /> operation sets user-defined
             metadata for the specified file as one or more name-value pairs.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/set-file-metadata" /></summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the updated
             file.
             </returns>
        <remarks>
             A <see cref="T:Azure.Storage.StorageRequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShareName">
      <MemberSignature Language="C#" Value="public virtual string ShareName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ShareName" />
      <MemberSignature Language="DocId" Value="P:Azure.Storage.Files.FileClient.ShareName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ShareName As String" />
      <MemberSignature Language="F#" Value="member this.ShareName : string" Usage="Azure.Storage.Files.FileClient.ShareName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the share name corresponding to the file client.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartCopy">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Files.Models.StorageFileCopyInfo&gt; StartCopy (Uri sourceUri, System.Collections.Generic.IDictionary&lt;string,string&gt; metadata = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Storage.Files.Models.StorageFileCopyInfo&gt; StartCopy(class System.Uri sourceUri, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; metadata, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.FileClient.StartCopy(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member StartCopy : Uri * System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.Models.StorageFileCopyInfo&gt;&#xA;override this.StartCopy : Uri * System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.Models.StorageFileCopyInfo&gt;" Usage="fileClient.StartCopy (sourceUri, metadata, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Files.Models.StorageFileCopyInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceUri" Type="System.Uri" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sourceUri">
             Required. Specifies the URL of the source file or blob.
             </param>
        <param name="metadata">
             Optional custom metadata to set for the file.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             Copies a blob or file to a destination file within the storage account.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/copy-file" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             state of the file copy.
             </returns>
        <remarks>
             A <see cref="T:Azure.Storage.StorageRequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartCopyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Models.StorageFileCopyInfo&gt;&gt; StartCopyAsync (Uri sourceUri, System.Collections.Generic.IDictionary&lt;string,string&gt; metadata = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Storage.Files.Models.StorageFileCopyInfo&gt;&gt; StartCopyAsync(class System.Uri sourceUri, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; metadata, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.FileClient.StartCopyAsync(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member StartCopyAsync : Uri * System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Models.StorageFileCopyInfo&gt;&gt;&#xA;override this.StartCopyAsync : Uri * System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Models.StorageFileCopyInfo&gt;&gt;" Usage="fileClient.StartCopyAsync (sourceUri, metadata, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Models.StorageFileCopyInfo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceUri" Type="System.Uri" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sourceUri">
             Required. Specifies the URL of the source file or blob.
             </param>
        <param name="metadata">
             Optional custom metadata to set for the file.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             Copies a blob or file to a destination file within the storage account.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/copy-file" />.
             </summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             state of the file copy.
             </returns>
        <remarks>
             A <see cref="T:Azure.Storage.StorageRequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="Upload">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Files.Models.StorageFileUploadInfo&gt; Upload (System.IO.Stream content, IProgress&lt;Azure.Storage.Common.StorageProgress&gt; progressHandler = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Storage.Files.Models.StorageFileUploadInfo&gt; Upload(class System.IO.Stream content, class System.IProgress`1&lt;class Azure.Storage.Common.StorageProgress&gt; progressHandler, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.FileClient.Upload(System.IO.Stream,System.IProgress{Azure.Storage.Common.StorageProgress},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member Upload : System.IO.Stream * IProgress&lt;Azure.Storage.Common.StorageProgress&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.Models.StorageFileUploadInfo&gt;&#xA;override this.Upload : System.IO.Stream * IProgress&lt;Azure.Storage.Common.StorageProgress&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.Models.StorageFileUploadInfo&gt;" Usage="fileClient.Upload (content, progressHandler, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Azure.Core.ForwardsClientCalls</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Files.Models.StorageFileUploadInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="System.IO.Stream" />
        <Parameter Name="progressHandler" Type="System.IProgress&lt;Azure.Storage.Common.StorageProgress&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content">
             A <see cref="T:System.IO.Stream" /> containing the content of the file to upload.
             </param>
        <param name="progressHandler">
             Optional <see cref="T:System.IProgress`1" /> to provide
             progress updates about data transfers.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications
             that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.FileClient.Upload(System.IO.Stream,System.IProgress{Azure.Storage.Common.StorageProgress},System.Threading.CancellationToken)" /> operation writes <paramref name="content" />
             to a file.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/put-range" /></summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             state of the file.
             </returns>
        <remarks>
             A <see cref="T:Azure.Storage.StorageRequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Models.StorageFileUploadInfo&gt;&gt; UploadAsync (System.IO.Stream content, IProgress&lt;Azure.Storage.Common.StorageProgress&gt; progressHandler = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Storage.Files.Models.StorageFileUploadInfo&gt;&gt; UploadAsync(class System.IO.Stream content, class System.IProgress`1&lt;class Azure.Storage.Common.StorageProgress&gt; progressHandler, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.FileClient.UploadAsync(System.IO.Stream,System.IProgress{Azure.Storage.Common.StorageProgress},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member UploadAsync : System.IO.Stream * IProgress&lt;Azure.Storage.Common.StorageProgress&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Models.StorageFileUploadInfo&gt;&gt;&#xA;override this.UploadAsync : System.IO.Stream * IProgress&lt;Azure.Storage.Common.StorageProgress&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Models.StorageFileUploadInfo&gt;&gt;" Usage="fileClient.UploadAsync (content, progressHandler, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Azure.Core.ForwardsClientCalls</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Models.StorageFileUploadInfo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="System.IO.Stream" />
        <Parameter Name="progressHandler" Type="System.IProgress&lt;Azure.Storage.Common.StorageProgress&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content">
             A <see cref="T:System.IO.Stream" /> containing the content of the file to upload.
             </param>
        <param name="progressHandler">
             Optional <see cref="T:System.IProgress`1" /> to provide
             progress updates about data transfers.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications
             that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.FileClient.UploadAsync(System.IO.Stream,System.IProgress{Azure.Storage.Common.StorageProgress},System.Threading.CancellationToken)" /> operation writes
             <paramref name="content" /> to a file.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/put-range" /></summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             state of the file.
             </returns>
        <remarks>
             A <see cref="T:Azure.Storage.StorageRequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadRange">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Files.Models.StorageFileUploadInfo&gt; UploadRange (Azure.Storage.Files.Models.FileRangeWriteType writeType, Azure.HttpRange range, System.IO.Stream content, byte[] transactionalContentHash = null, IProgress&lt;Azure.Storage.Common.StorageProgress&gt; progressHandler = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Storage.Files.Models.StorageFileUploadInfo&gt; UploadRange(valuetype Azure.Storage.Files.Models.FileRangeWriteType writeType, valuetype Azure.HttpRange range, class System.IO.Stream content, unsigned int8[] transactionalContentHash, class System.IProgress`1&lt;class Azure.Storage.Common.StorageProgress&gt; progressHandler, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.FileClient.UploadRange(Azure.Storage.Files.Models.FileRangeWriteType,Azure.HttpRange,System.IO.Stream,System.Byte[],System.IProgress{Azure.Storage.Common.StorageProgress},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member UploadRange : Azure.Storage.Files.Models.FileRangeWriteType * Azure.HttpRange * System.IO.Stream * byte[] * IProgress&lt;Azure.Storage.Common.StorageProgress&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.Models.StorageFileUploadInfo&gt;&#xA;override this.UploadRange : Azure.Storage.Files.Models.FileRangeWriteType * Azure.HttpRange * System.IO.Stream * byte[] * IProgress&lt;Azure.Storage.Common.StorageProgress&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.Models.StorageFileUploadInfo&gt;" Usage="fileClient.UploadRange (writeType, range, content, transactionalContentHash, progressHandler, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Files.Models.StorageFileUploadInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writeType" Type="Azure.Storage.Files.Models.FileRangeWriteType" />
        <Parameter Name="range" Type="Azure.HttpRange" />
        <Parameter Name="content" Type="System.IO.Stream" />
        <Parameter Name="transactionalContentHash" Type="System.Byte[]" />
        <Parameter Name="progressHandler" Type="System.IProgress&lt;Azure.Storage.Common.StorageProgress&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="writeType">Required. Specifies whether to update or clear the range.
             </param>
        <param name="range">
             Specifies the range of bytes to be written. Both the start and end of the range must be specified.
             </param>
        <param name="content">
             A <see cref="T:System.IO.Stream" /> containing the content of the range to upload.
             </param>
        <param name="transactionalContentHash">
             Optional MD5 hash of the range content.  Must not be used when <paramref name="writeType" /> is set to <see cref="F:Azure.Storage.Files.Models.FileRangeWriteType.Clear" />.
            
             This hash is used to verify the integrity of the range during transport. When this hash
             is specified, the storage service compares the hash of the content
             that has arrived with this value.  Note that this MD5 hash is not
             stored with the file.  If the two hashes do not match, the
             operation will fail with a <see cref="T:Azure.Storage.StorageRequestFailedException" />.
             </param>
        <param name="progressHandler">
             Optional <see cref="T:System.IProgress`1" /> to provide
             progress updates about data transfers.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.FileClient.UploadRange(Azure.Storage.Files.Models.FileRangeWriteType,Azure.HttpRange,System.IO.Stream,System.Byte[],System.IProgress{Azure.Storage.Common.StorageProgress},System.Threading.CancellationToken)" /> operation writes
             <paramref name="content" /> to a <paramref name="range" /> of a file.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/put-range" /></summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             state of the file.
             </returns>
        <remarks>
             A <see cref="T:Azure.Storage.StorageRequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadRangeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Models.StorageFileUploadInfo&gt;&gt; UploadRangeAsync (Azure.Storage.Files.Models.FileRangeWriteType writeType, Azure.HttpRange range, System.IO.Stream content, byte[] transactionalContentHash = null, IProgress&lt;Azure.Storage.Common.StorageProgress&gt; progressHandler = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Storage.Files.Models.StorageFileUploadInfo&gt;&gt; UploadRangeAsync(valuetype Azure.Storage.Files.Models.FileRangeWriteType writeType, valuetype Azure.HttpRange range, class System.IO.Stream content, unsigned int8[] transactionalContentHash, class System.IProgress`1&lt;class Azure.Storage.Common.StorageProgress&gt; progressHandler, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.FileClient.UploadRangeAsync(Azure.Storage.Files.Models.FileRangeWriteType,Azure.HttpRange,System.IO.Stream,System.Byte[],System.IProgress{Azure.Storage.Common.StorageProgress},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member UploadRangeAsync : Azure.Storage.Files.Models.FileRangeWriteType * Azure.HttpRange * System.IO.Stream * byte[] * IProgress&lt;Azure.Storage.Common.StorageProgress&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Models.StorageFileUploadInfo&gt;&gt;&#xA;override this.UploadRangeAsync : Azure.Storage.Files.Models.FileRangeWriteType * Azure.HttpRange * System.IO.Stream * byte[] * IProgress&lt;Azure.Storage.Common.StorageProgress&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Models.StorageFileUploadInfo&gt;&gt;" Usage="fileClient.UploadRangeAsync (writeType, range, content, transactionalContentHash, progressHandler, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Models.StorageFileUploadInfo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writeType" Type="Azure.Storage.Files.Models.FileRangeWriteType" />
        <Parameter Name="range" Type="Azure.HttpRange" />
        <Parameter Name="content" Type="System.IO.Stream" />
        <Parameter Name="transactionalContentHash" Type="System.Byte[]" />
        <Parameter Name="progressHandler" Type="System.IProgress&lt;Azure.Storage.Common.StorageProgress&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="writeType">Required. Specifies whether to update or clear the range.
             </param>
        <param name="range">
             Specifies the range of bytes to be written. Both the start and end of the range must be specified.
             </param>
        <param name="content">
             A <see cref="T:System.IO.Stream" /> containing the content of the range to upload.
             </param>
        <param name="transactionalContentHash">
             Optional MD5 hash of the range content.  Must not be used when <paramref name="writeType" /> is set to <see cref="F:Azure.Storage.Files.Models.FileRangeWriteType.Clear" />.
            
             This hash is used to verify the integrity of the range during transport. When this hash
             is specified, the storage service compares the hash of the content
             that has arrived with this value.  Note that this MD5 hash is not
             stored with the file.  If the two hashes do not match, the
             operation will fail with a <see cref="T:Azure.Storage.StorageRequestFailedException" />.
             </param>
        <param name="progressHandler">
             Optional <see cref="T:System.IProgress`1" /> to provide
             progress updates about data transfers.
             </param>
        <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
        <summary>
             The <see cref="M:Azure.Storage.Files.FileClient.UploadRangeAsync(Azure.Storage.Files.Models.FileRangeWriteType,Azure.HttpRange,System.IO.Stream,System.Byte[],System.IProgress{Azure.Storage.Common.StorageProgress},System.Threading.CancellationToken)" /> operation writes
             <paramref name="content" /> to a <paramref name="range" /> of a file.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/put-range" /></summary>
        <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             state of the file.
             </returns>
        <remarks>
             A <see cref="T:Azure.Storage.StorageRequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadRangeFromUri">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Storage.Files.Models.StorageFileUploadInfo&gt; UploadRangeFromUri (Uri sourceUri, Azure.HttpRange range, Azure.HttpRange sourceRange, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Storage.Files.Models.StorageFileUploadInfo&gt; UploadRangeFromUri(class System.Uri sourceUri, valuetype Azure.HttpRange range, valuetype Azure.HttpRange sourceRange, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.FileClient.UploadRangeFromUri(System.Uri,Azure.HttpRange,Azure.HttpRange,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member UploadRangeFromUri : Uri * Azure.HttpRange * Azure.HttpRange * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.Models.StorageFileUploadInfo&gt;&#xA;override this.UploadRangeFromUri : Uri * Azure.HttpRange * Azure.HttpRange * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Storage.Files.Models.StorageFileUploadInfo&gt;" Usage="fileClient.UploadRangeFromUri (sourceUri, range, sourceRange, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Storage.Files.Models.StorageFileUploadInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceUri" Type="System.Uri" />
        <Parameter Name="range" Type="Azure.HttpRange" />
        <Parameter Name="sourceRange" Type="Azure.HttpRange" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sourceUri">
            Required. Specifies the URL of the source file, up to 2 KB in length.
            If source is an Azure blob or Azure file, it must either be public or must be authenticated via a
            shared access signature. If the source is public, no authentication is required to perform the operation.
            </param>
        <param name="range">
            Specifies the range of bytes to be written. Both the start and end of the range must be specified.
            </param>
        <param name="sourceRange">
            Specifies the range of bytes to be written from. Both the start and end of the range must be specified.
            </param>
        <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
            notifications that the operation should be cancelled.
            </param>
        <summary>
            The <see cref="M:Azure.Storage.Files.FileClient.UploadRangeFromUri(System.Uri,Azure.HttpRange,Azure.HttpRange,System.Threading.CancellationToken)" /> operation writes a range from an Azure File to another Azure file.
            This API is supported only for version 2019-02-02 and higher.
            </summary>
        <returns>
            A <see cref="T:Azure.Response`1" /> describing the
            state of the file.
            </returns>
        <remarks>
            A <see cref="T:Azure.Storage.StorageRequestFailedException" /> will be thrown if
            a failure occurs.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadRangeFromUriAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Models.StorageFileUploadInfo&gt;&gt; UploadRangeFromUriAsync (Uri sourceUri, Azure.HttpRange range, Azure.HttpRange sourceRange, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Storage.Files.Models.StorageFileUploadInfo&gt;&gt; UploadRangeFromUriAsync(class System.Uri sourceUri, valuetype Azure.HttpRange range, valuetype Azure.HttpRange sourceRange, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.FileClient.UploadRangeFromUriAsync(System.Uri,Azure.HttpRange,Azure.HttpRange,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member UploadRangeFromUriAsync : Uri * Azure.HttpRange * Azure.HttpRange * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Models.StorageFileUploadInfo&gt;&gt;&#xA;override this.UploadRangeFromUriAsync : Uri * Azure.HttpRange * Azure.HttpRange * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Models.StorageFileUploadInfo&gt;&gt;" Usage="fileClient.UploadRangeFromUriAsync (sourceUri, range, sourceRange, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Storage.Files.Models.StorageFileUploadInfo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceUri" Type="System.Uri" />
        <Parameter Name="range" Type="Azure.HttpRange" />
        <Parameter Name="sourceRange" Type="Azure.HttpRange" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sourceUri">
            Required. Specifies the URL of the source file, up to 2 KB in length.
            If source is an Azure blob or Azure file, it must either be public or must be authenticated via a
            shared access signature. If the source is public, no authentication is required to perform the operation.
            </param>
        <param name="range">
            Specifies the range of bytes to be written. Both the start and end of the range must be specified.
            </param>
        <param name="sourceRange">
            Specifies the range of bytes to be written from. Both the start and end of the range must be specified.
            </param>
        <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
            notifications that the operation should be cancelled.
            </param>
        <summary>
            The <see cref="M:Azure.Storage.Files.FileClient.UploadRangeFromUriAsync(System.Uri,Azure.HttpRange,Azure.HttpRange,System.Threading.CancellationToken)" /> operation writes a range from an Azure File to another Azure file.
            This API is supported only for version 2019-02-02 and higher.
            </summary>
        <returns>
            A <see cref="T:Azure.Response`1" /> describing the
            state of the file.
            </returns>
        <remarks>
            A <see cref="T:Azure.Storage.StorageRequestFailedException" /> will be thrown if
            a failure occurs.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Uri">
      <MemberSignature Language="C#" Value="public virtual Uri Uri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Uri" />
      <MemberSignature Language="DocId" Value="P:Azure.Storage.Files.FileClient.Uri" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Uri As Uri" />
      <MemberSignature Language="F#" Value="member this.Uri : Uri" Usage="Azure.Storage.Files.FileClient.Uri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the directory's primary <see cref="P:Azure.Storage.Files.FileClient.Uri" /> endpoint.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithSnapshot">
      <MemberSignature Language="C#" Value="public virtual Azure.Storage.Files.FileClient WithSnapshot (string shareSnapshot);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Storage.Files.FileClient WithSnapshot(string shareSnapshot) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Storage.Files.FileClient.WithSnapshot(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WithSnapshot (shareSnapshot As String) As FileClient" />
      <MemberSignature Language="F#" Value="abstract member WithSnapshot : string -&gt; Azure.Storage.Files.FileClient&#xA;override this.WithSnapshot : string -&gt; Azure.Storage.Files.FileClient" Usage="fileClient.WithSnapshot shareSnapshot" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.Files</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Storage.Files.FileClient</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shareSnapshot" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="shareSnapshot">
             The snapshot identifier.
             </param>
        <summary>
             Initializes a new instance of the <see cref="T:Azure.Storage.Files.FileClient" />
             class with an identical <see cref="P:Azure.Storage.Files.FileClient.Uri" /> source but the specified
             <paramref name="shareSnapshot" /> timestamp.
            
             For more information, see <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/snapshot-share" />.
             </summary>
        <returns>
             A new <see cref="T:Azure.Storage.Files.FileClient" /> instance.
             </returns>
        <remarks>
             Pass null or empty string to remove the snapshot returning a URL to the base file.
             </remarks>
      </Docs>
    </Member>
  </Members>
</Type>

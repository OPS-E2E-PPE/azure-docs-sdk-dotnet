<Type Name="UserTokenProvider" FullName="Microsoft.Rest.Azure.Authentication.UserTokenProvider">
  <TypeSignature Language="C#" Value="public class UserTokenProvider : Microsoft.Rest.ITokenProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UserTokenProvider extends System.Object implements class Microsoft.Rest.ITokenProvider" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Rest.Azure.Authentication.UserTokenProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class UserTokenProvider&#xA;Implements ITokenProvider" />
  <TypeSignature Language="F#" Value="type UserTokenProvider = class&#xA;    interface ITokenProvider" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Rest.ClientRuntime.Azure.Authentication</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Rest.ITokenProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Provides tokens for Azure Active Directory Microsoft Id and Organization Id users.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UserTokenProvider (Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext context, string clientId, Uri tokenAudience, Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier userId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext context, string clientId, class System.Uri tokenAudience, class Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier userId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Rest.Azure.Authentication.UserTokenProvider.#ctor(Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext,System.String,System.Uri,Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (context As AuthenticationContext, clientId As String, tokenAudience As Uri, userId As UserIdentifier)" />
      <MemberSignature Language="F#" Value="new Microsoft.Rest.Azure.Authentication.UserTokenProvider : Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext * string * Uri * Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier -&gt; Microsoft.Rest.Azure.Authentication.UserTokenProvider" Usage="new Microsoft.Rest.Azure.Authentication.UserTokenProvider (context, clientId, tokenAudience, userId)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Rest.ClientRuntime.Azure.Authentication</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext" />
        <Parameter Name="clientId" Type="System.String" />
        <Parameter Name="tokenAudience" Type="System.Uri" />
        <Parameter Name="userId" Type="Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier" />
      </Parameters>
      <Docs>
        <param name="context">The active directory authentication context to use for retrieving tokens.</param>
        <param name="clientId">The active directory client Id to match when retrieving tokens.</param>
        <param name="tokenAudience">The audience to match when retrieving tokens.</param>
        <param name="userId">The user id to match when retrieving tokens.</param>
        <summary>
            Create a token provider which can provide user tokens in the given context.  The user must have previously authenticated in the given context. 
            Tokens are retrieved from the token cache.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommonTenantId">
      <MemberSignature Language="C#" Value="public const string CommonTenantId;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string CommonTenantId" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Rest.Azure.Authentication.UserTokenProvider.CommonTenantId" />
      <MemberSignature Language="VB.NET" Value="Public Const CommonTenantId As String " />
      <MemberSignature Language="F#" Value="val mutable CommonTenantId : string" Usage="Microsoft.Rest.Azure.Authentication.UserTokenProvider.CommonTenantId" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Rest.ClientRuntime.Azure.Authentication</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The id of the active directory common tenant.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateCredentialsFromCache">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Rest.ServiceClientCredentials&gt; CreateCredentialsFromCache (string clientId, string domain, string username);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.ServiceClientCredentials&gt; CreateCredentialsFromCache(string clientId, string domain, string username) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Rest.Azure.Authentication.UserTokenProvider.CreateCredentialsFromCache(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateCredentialsFromCache (clientId As String, domain As String, username As String) As Task(Of ServiceClientCredentials)" />
      <MemberSignature Language="F#" Value="static member CreateCredentialsFromCache : string * string * string -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.ServiceClientCredentials&gt;" Usage="Microsoft.Rest.Azure.Authentication.UserTokenProvider.CreateCredentialsFromCache (clientId, domain, username)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Rest.ClientRuntime.Azure.Authentication</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.ServiceClientCredentials&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clientId" Type="System.String" />
        <Parameter Name="domain" Type="System.String" />
        <Parameter Name="username" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="clientId">The clientId to match when retrieving authentication tokens.</param>
        <param name="domain">The active directory domain or tenant id to match when retrieving authentication tokens.</param>
        <param name="username">The account username to match when retrieving authentication tokens.</param>
        <summary>
            Create service client credentials using information cached from a previous login to azure resource manager using the default token cache. 
            Parameters are used to match existing tokens.
            </summary>
        <returns>A ServiceClientCredentials object that can be used to authenticate http requests using the retrieved credentials. If no 
            credentials can be retrieved, an authentication exception is thrown.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateCredentialsFromCache">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Rest.ServiceClientCredentials&gt; CreateCredentialsFromCache (string clientId, string domain, string username, Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache cache);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.ServiceClientCredentials&gt; CreateCredentialsFromCache(string clientId, string domain, string username, class Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache cache) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Rest.Azure.Authentication.UserTokenProvider.CreateCredentialsFromCache(System.String,System.String,System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateCredentialsFromCache (clientId As String, domain As String, username As String, cache As TokenCache) As Task(Of ServiceClientCredentials)" />
      <MemberSignature Language="F#" Value="static member CreateCredentialsFromCache : string * string * string * Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.ServiceClientCredentials&gt;" Usage="Microsoft.Rest.Azure.Authentication.UserTokenProvider.CreateCredentialsFromCache (clientId, domain, username, cache)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Rest.ClientRuntime.Azure.Authentication</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.ServiceClientCredentials&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clientId" Type="System.String" />
        <Parameter Name="domain" Type="System.String" />
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="cache" Type="Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache" />
      </Parameters>
      <Docs>
        <param name="clientId">The clientId to match when retrieving authentication tokens.</param>
        <param name="domain">The active directory domain or tenant id to match when retrieving authentication tokens.</param>
        <param name="username">The account username to match when retrieving authentication tokens.</param>
        <param name="cache">The token cache to target when retrieving tokens.</param>
        <summary>
            Create service client credentials using information cached from a previous login to azure resource manager. Parameters are used to match 
            existing tokens.
            </summary>
        <returns>A ServiceClientCredentials object that can be used to authenticate http requests using the retrieved credentials. If no 
            credentials can be retrieved, an authentication exception is thrown.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateCredentialsFromCache">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Rest.ServiceClientCredentials&gt; CreateCredentialsFromCache (string clientId, string domain, string username, Microsoft.Rest.Azure.Authentication.ActiveDirectoryServiceSettings serviceSettings);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.ServiceClientCredentials&gt; CreateCredentialsFromCache(string clientId, string domain, string username, class Microsoft.Rest.Azure.Authentication.ActiveDirectoryServiceSettings serviceSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Rest.Azure.Authentication.UserTokenProvider.CreateCredentialsFromCache(System.String,System.String,System.String,Microsoft.Rest.Azure.Authentication.ActiveDirectoryServiceSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateCredentialsFromCache (clientId As String, domain As String, username As String, serviceSettings As ActiveDirectoryServiceSettings) As Task(Of ServiceClientCredentials)" />
      <MemberSignature Language="F#" Value="static member CreateCredentialsFromCache : string * string * string * Microsoft.Rest.Azure.Authentication.ActiveDirectoryServiceSettings -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.ServiceClientCredentials&gt;" Usage="Microsoft.Rest.Azure.Authentication.UserTokenProvider.CreateCredentialsFromCache (clientId, domain, username, serviceSettings)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Rest.ClientRuntime.Azure.Authentication</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.ServiceClientCredentials&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clientId" Type="System.String" />
        <Parameter Name="domain" Type="System.String" />
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="serviceSettings" Type="Microsoft.Rest.Azure.Authentication.ActiveDirectoryServiceSettings" />
      </Parameters>
      <Docs>
        <param name="clientId">The clientId to match when retrieving authentication tokens.</param>
        <param name="domain">The active directory domain or tenant id to match when retrieving authentication tokens.</param>
        <param name="username">The account username to match when retrieving authentication tokens.</param>
        <param name="serviceSettings">The active directory service settings, including token authority and audience to match when retrieving tokens.</param>
        <summary>
            Create service client credentials using information cached from a previous login in the default token cache. Parameters are used to match 
            existing tokens.
            </summary>
        <returns>A ServiceClientCredentials object that can be used to authenticate http requests using the retrieved credentials. If no 
            credentials can be retrieved, an authentication exception is thrown.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateCredentialsFromCache">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Rest.ServiceClientCredentials&gt; CreateCredentialsFromCache (string clientId, string domain, string username, Microsoft.Rest.Azure.Authentication.ActiveDirectoryServiceSettings serviceSettings, Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache cache);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.ServiceClientCredentials&gt; CreateCredentialsFromCache(string clientId, string domain, string username, class Microsoft.Rest.Azure.Authentication.ActiveDirectoryServiceSettings serviceSettings, class Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache cache) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Rest.Azure.Authentication.UserTokenProvider.CreateCredentialsFromCache(System.String,System.String,System.String,Microsoft.Rest.Azure.Authentication.ActiveDirectoryServiceSettings,Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateCredentialsFromCache (clientId As String, domain As String, username As String, serviceSettings As ActiveDirectoryServiceSettings, cache As TokenCache) As Task(Of ServiceClientCredentials)" />
      <MemberSignature Language="F#" Value="static member CreateCredentialsFromCache : string * string * string * Microsoft.Rest.Azure.Authentication.ActiveDirectoryServiceSettings * Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.ServiceClientCredentials&gt;" Usage="Microsoft.Rest.Azure.Authentication.UserTokenProvider.CreateCredentialsFromCache (clientId, domain, username, serviceSettings, cache)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Rest.ClientRuntime.Azure.Authentication</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.ServiceClientCredentials&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clientId" Type="System.String" />
        <Parameter Name="domain" Type="System.String" />
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="serviceSettings" Type="Microsoft.Rest.Azure.Authentication.ActiveDirectoryServiceSettings" />
        <Parameter Name="cache" Type="Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache" />
      </Parameters>
      <Docs>
        <param name="clientId">The clientId to match when retrieving authentication tokens.</param>
        <param name="domain">The active directory domain or tenant id to match when retrieving authentication tokens.</param>
        <param name="username">The account username to match when retrieving authentication tokens.</param>
        <param name="serviceSettings">The active directory service settings, including token authority and audience to match when retrieving tokens.</param>
        <param name="cache">The token cache to target when retrieving tokens.</param>
        <summary>
            Create service client credentials using information cached from a previous login. Parameters are used to match existing tokens.
            </summary>
        <returns>A ServiceClientCredentials object that can be used to authenticate http requests using the retrieved credentials. If no 
            credentials can be retrieved, an authentication exception is thrown.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAuthenticationHeaderAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Net.Http.Headers.AuthenticationHeaderValue&gt; GetAuthenticationHeaderAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.Headers.AuthenticationHeaderValue&gt; GetAuthenticationHeaderAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Rest.Azure.Authentication.UserTokenProvider.GetAuthenticationHeaderAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetAuthenticationHeaderAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.Headers.AuthenticationHeaderValue&gt;&#xA;override this.GetAuthenticationHeaderAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.Headers.AuthenticationHeaderValue&gt;" Usage="userTokenProvider.GetAuthenticationHeaderAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Rest.ITokenProvider.GetAuthenticationHeaderAsync(System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Rest.ClientRuntime.Azure.Authentication</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.Headers.AuthenticationHeaderValue&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">To be added.</param>
        <summary>
            Gets an access token from the token cache or from AD authentication endpoint.  Will attempt to 
            refresh the access token if it has expired.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoginByDeviceCodeAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Rest.ServiceClientCredentials&gt; LoginByDeviceCodeAsync (string clientId, Func&lt;Microsoft.IdentityModel.Clients.ActiveDirectory.DeviceCodeResult,bool&gt; deviceCodeHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.ServiceClientCredentials&gt; LoginByDeviceCodeAsync(string clientId, class System.Func`2&lt;class Microsoft.IdentityModel.Clients.ActiveDirectory.DeviceCodeResult, bool&gt; deviceCodeHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Rest.Azure.Authentication.UserTokenProvider.LoginByDeviceCodeAsync(System.String,System.Func{Microsoft.IdentityModel.Clients.ActiveDirectory.DeviceCodeResult,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LoginByDeviceCodeAsync (clientId As String, deviceCodeHandler As Func(Of DeviceCodeResult, Boolean)) As Task(Of ServiceClientCredentials)" />
      <MemberSignature Language="F#" Value="static member LoginByDeviceCodeAsync : string * Func&lt;Microsoft.IdentityModel.Clients.ActiveDirectory.DeviceCodeResult, bool&gt; -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.ServiceClientCredentials&gt;" Usage="Microsoft.Rest.Azure.Authentication.UserTokenProvider.LoginByDeviceCodeAsync (clientId, deviceCodeHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Rest.ClientRuntime.Azure.Authentication</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.ServiceClientCredentials&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clientId" Type="System.String" />
        <Parameter Name="deviceCodeHandler" Type="System.Func&lt;Microsoft.IdentityModel.Clients.ActiveDirectory.DeviceCodeResult,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="clientId">The active directory client id for this application.</param>
        <param name="deviceCodeHandler">User provided callback to display device code request. if returns false no token will be acquired.</param>
        <summary>
            Log in to azure active directory using device code authentication.
            </summary>
        <returns>A ServiceClientCredentials object that can be used to authenticate http requests using the given credentials.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoginByDeviceCodeAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Rest.ServiceClientCredentials&gt; LoginByDeviceCodeAsync (string clientId, string domain, Func&lt;Microsoft.IdentityModel.Clients.ActiveDirectory.DeviceCodeResult,bool&gt; deviceCodeHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.ServiceClientCredentials&gt; LoginByDeviceCodeAsync(string clientId, string domain, class System.Func`2&lt;class Microsoft.IdentityModel.Clients.ActiveDirectory.DeviceCodeResult, bool&gt; deviceCodeHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Rest.Azure.Authentication.UserTokenProvider.LoginByDeviceCodeAsync(System.String,System.String,System.Func{Microsoft.IdentityModel.Clients.ActiveDirectory.DeviceCodeResult,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LoginByDeviceCodeAsync (clientId As String, domain As String, deviceCodeHandler As Func(Of DeviceCodeResult, Boolean)) As Task(Of ServiceClientCredentials)" />
      <MemberSignature Language="F#" Value="static member LoginByDeviceCodeAsync : string * string * Func&lt;Microsoft.IdentityModel.Clients.ActiveDirectory.DeviceCodeResult, bool&gt; -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.ServiceClientCredentials&gt;" Usage="Microsoft.Rest.Azure.Authentication.UserTokenProvider.LoginByDeviceCodeAsync (clientId, domain, deviceCodeHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Rest.ClientRuntime.Azure.Authentication</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.ServiceClientCredentials&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clientId" Type="System.String" />
        <Parameter Name="domain" Type="System.String" />
        <Parameter Name="deviceCodeHandler" Type="System.Func&lt;Microsoft.IdentityModel.Clients.ActiveDirectory.DeviceCodeResult,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="clientId">The active directory client id for this application.</param>
        <param name="domain">The active directory domain or tenant id to authenticate with.</param>
        <param name="deviceCodeHandler">User provided callback to display device code request. if returns false no token will be acquired.</param>
        <summary>
            Log in to azure active directory using device code authentication.
            </summary>
        <returns>A ServiceClientCredentials object that can be used to authenticate http requests using the given credentials.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoginByDeviceCodeAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Rest.ServiceClientCredentials&gt; LoginByDeviceCodeAsync (string clientId, string domain, Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache cache, Func&lt;Microsoft.IdentityModel.Clients.ActiveDirectory.DeviceCodeResult,bool&gt; deviceCodeHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.ServiceClientCredentials&gt; LoginByDeviceCodeAsync(string clientId, string domain, class Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache cache, class System.Func`2&lt;class Microsoft.IdentityModel.Clients.ActiveDirectory.DeviceCodeResult, bool&gt; deviceCodeHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Rest.Azure.Authentication.UserTokenProvider.LoginByDeviceCodeAsync(System.String,System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache,System.Func{Microsoft.IdentityModel.Clients.ActiveDirectory.DeviceCodeResult,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LoginByDeviceCodeAsync (clientId As String, domain As String, cache As TokenCache, deviceCodeHandler As Func(Of DeviceCodeResult, Boolean)) As Task(Of ServiceClientCredentials)" />
      <MemberSignature Language="F#" Value="static member LoginByDeviceCodeAsync : string * string * Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache * Func&lt;Microsoft.IdentityModel.Clients.ActiveDirectory.DeviceCodeResult, bool&gt; -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.ServiceClientCredentials&gt;" Usage="Microsoft.Rest.Azure.Authentication.UserTokenProvider.LoginByDeviceCodeAsync (clientId, domain, cache, deviceCodeHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Rest.ClientRuntime.Azure.Authentication</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.ServiceClientCredentials&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clientId" Type="System.String" />
        <Parameter Name="domain" Type="System.String" />
        <Parameter Name="cache" Type="Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache" />
        <Parameter Name="deviceCodeHandler" Type="System.Func&lt;Microsoft.IdentityModel.Clients.ActiveDirectory.DeviceCodeResult,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="clientId">The active directory client id for this application.</param>
        <param name="domain">The active directory domain or tenant id to authenticate with.</param>
        <param name="cache">The token cache to target during authentication.</param>
        <param name="deviceCodeHandler">User provided callback to display device code request. if returns false no token will be acquired.</param>
        <summary>
            Log in to azure active directory using device code authentication.
            </summary>
        <returns>A ServiceClientCredentials object that can be used to authenticate http requests using the given credentials.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoginByDeviceCodeAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Rest.ServiceClientCredentials&gt; LoginByDeviceCodeAsync (string clientId, string domain, Microsoft.Rest.Azure.Authentication.ActiveDirectoryServiceSettings serviceSettings, Func&lt;Microsoft.IdentityModel.Clients.ActiveDirectory.DeviceCodeResult,bool&gt; deviceCodeHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.ServiceClientCredentials&gt; LoginByDeviceCodeAsync(string clientId, string domain, class Microsoft.Rest.Azure.Authentication.ActiveDirectoryServiceSettings serviceSettings, class System.Func`2&lt;class Microsoft.IdentityModel.Clients.ActiveDirectory.DeviceCodeResult, bool&gt; deviceCodeHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Rest.Azure.Authentication.UserTokenProvider.LoginByDeviceCodeAsync(System.String,System.String,Microsoft.Rest.Azure.Authentication.ActiveDirectoryServiceSettings,System.Func{Microsoft.IdentityModel.Clients.ActiveDirectory.DeviceCodeResult,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LoginByDeviceCodeAsync (clientId As String, domain As String, serviceSettings As ActiveDirectoryServiceSettings, deviceCodeHandler As Func(Of DeviceCodeResult, Boolean)) As Task(Of ServiceClientCredentials)" />
      <MemberSignature Language="F#" Value="static member LoginByDeviceCodeAsync : string * string * Microsoft.Rest.Azure.Authentication.ActiveDirectoryServiceSettings * Func&lt;Microsoft.IdentityModel.Clients.ActiveDirectory.DeviceCodeResult, bool&gt; -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.ServiceClientCredentials&gt;" Usage="Microsoft.Rest.Azure.Authentication.UserTokenProvider.LoginByDeviceCodeAsync (clientId, domain, serviceSettings, deviceCodeHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Rest.ClientRuntime.Azure.Authentication</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.ServiceClientCredentials&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clientId" Type="System.String" />
        <Parameter Name="domain" Type="System.String" />
        <Parameter Name="serviceSettings" Type="Microsoft.Rest.Azure.Authentication.ActiveDirectoryServiceSettings" />
        <Parameter Name="deviceCodeHandler" Type="System.Func&lt;Microsoft.IdentityModel.Clients.ActiveDirectory.DeviceCodeResult,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="clientId">The active directory client id for this application.</param>
        <param name="domain">The active directory domain or tenant id to authenticate with.</param>
        <param name="serviceSettings">The active directory service details, including authentication endpoints and the intended token audience.</param>
        <param name="deviceCodeHandler">User provided callback to display device code request. if returns false no token will be acquired.</param>
        <summary>
            Log in to azure active directory using device code authentication.
            </summary>
        <returns>A ServiceClientCredentials object that can be used to authenticate http requests using the given credentials.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoginByDeviceCodeAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Rest.ServiceClientCredentials&gt; LoginByDeviceCodeAsync (string clientId, string domain, Microsoft.Rest.Azure.Authentication.ActiveDirectoryServiceSettings serviceSettings, Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache cache, Func&lt;Microsoft.IdentityModel.Clients.ActiveDirectory.DeviceCodeResult,bool&gt; deviceCodeHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.ServiceClientCredentials&gt; LoginByDeviceCodeAsync(string clientId, string domain, class Microsoft.Rest.Azure.Authentication.ActiveDirectoryServiceSettings serviceSettings, class Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache cache, class System.Func`2&lt;class Microsoft.IdentityModel.Clients.ActiveDirectory.DeviceCodeResult, bool&gt; deviceCodeHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Rest.Azure.Authentication.UserTokenProvider.LoginByDeviceCodeAsync(System.String,System.String,Microsoft.Rest.Azure.Authentication.ActiveDirectoryServiceSettings,Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache,System.Func{Microsoft.IdentityModel.Clients.ActiveDirectory.DeviceCodeResult,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LoginByDeviceCodeAsync (clientId As String, domain As String, serviceSettings As ActiveDirectoryServiceSettings, cache As TokenCache, deviceCodeHandler As Func(Of DeviceCodeResult, Boolean)) As Task(Of ServiceClientCredentials)" />
      <MemberSignature Language="F#" Value="static member LoginByDeviceCodeAsync : string * string * Microsoft.Rest.Azure.Authentication.ActiveDirectoryServiceSettings * Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache * Func&lt;Microsoft.IdentityModel.Clients.ActiveDirectory.DeviceCodeResult, bool&gt; -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.ServiceClientCredentials&gt;" Usage="Microsoft.Rest.Azure.Authentication.UserTokenProvider.LoginByDeviceCodeAsync (clientId, domain, serviceSettings, cache, deviceCodeHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Rest.ClientRuntime.Azure.Authentication</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.ServiceClientCredentials&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clientId" Type="System.String" />
        <Parameter Name="domain" Type="System.String" />
        <Parameter Name="serviceSettings" Type="Microsoft.Rest.Azure.Authentication.ActiveDirectoryServiceSettings" />
        <Parameter Name="cache" Type="Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache" />
        <Parameter Name="deviceCodeHandler" Type="System.Func&lt;Microsoft.IdentityModel.Clients.ActiveDirectory.DeviceCodeResult,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="clientId">The active directory client id for this application.</param>
        <param name="domain">The active directory domain or tenant id to authenticate with.</param>
        <param name="serviceSettings">The active directory service details, including authentication endpoints and the intended token audience.</param>
        <param name="cache">The token cache to target during authentication.</param>
        <param name="deviceCodeHandler">User provided callback to display device code request. if returns false no token will be acquired.</param>
        <summary>
            Log in to azure active directory using device code authentication.
            </summary>
        <returns>A ServiceClientCredentials object that can be used to authenticate http requests using the given credentials.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
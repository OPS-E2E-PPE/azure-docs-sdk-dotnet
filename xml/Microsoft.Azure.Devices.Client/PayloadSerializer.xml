<Type Name="PayloadSerializer" FullName="Microsoft.Azure.Devices.Client.PayloadSerializer">
  <TypeSignature Language="C#" Value="public abstract class PayloadSerializer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit PayloadSerializer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Devices.Client.PayloadSerializer" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PayloadSerializer" />
  <TypeSignature Language="F#" Value="type PayloadSerializer = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Devices.Client</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Provides the serialization for a specified convention.
            </summary>
    <remarks>
            The serializer is responsible for converting all objects into the correct format for the <see cref="T:Microsoft.Azure.Devices.Client.PayloadConvention" /> that uses it.
            <para>
            By default there are implementions the <see cref="T:Microsoft.Azure.Devices.Client.NewtonsoftJsonPayloadSerializer" /> class that uses <see cref="T:Newtonsoft.Json.JsonConvert" />
            to handle the serialization for the <see cref="T:Microsoft.Azure.Devices.Client.DefaultPayloadConvention" /> class.
            </para></remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PayloadSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Devices.Client.PayloadSerializer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Devices.Client</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentType">
      <MemberSignature Language="C#" Value="public abstract string ContentType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContentType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Devices.Client.PayloadSerializer.ContentType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property ContentType As String" />
      <MemberSignature Language="F#" Value="member this.ContentType : string" Usage="Microsoft.Azure.Devices.Client.PayloadSerializer.ContentType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Devices.Client</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Used to specify what type of content will be in the payload.
            </summary>
        <value>A string representing the content type to use when sending a payload.</value>
        <remarks>
            This can be free-form but should adhere to standard <see href="https://docs.w3cub.com/http/basics_of_http/mime_types.html">MIME types</see>,
            for example: "application/json".
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFromJsonObject&lt;T&gt;">
      <MemberSignature Language="C#" Value="public abstract T ConvertFromJsonObject&lt;T&gt; (object jsonObjectToConvert);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !!T ConvertFromJsonObject&lt;T&gt;(object jsonObjectToConvert) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Devices.Client.PayloadSerializer.ConvertFromJsonObject``1(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ConvertFromJsonObject(Of T) (jsonObjectToConvert As Object) As T" />
      <MemberSignature Language="F#" Value="abstract member ConvertFromJsonObject : obj -&gt; 'T" Usage="payloadSerializer.ConvertFromJsonObject jsonObjectToConvert" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Devices.Client</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="jsonObjectToConvert" Type="System.Object" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type to convert to.</typeparam>
        <param name="jsonObjectToConvert">The object to convert.</param>
        <summary>
            Converts the JSON object using the serializer.
            </summary>
        <returns>A converted object</returns>
        <remarks>
            This class is used to attempt to convert from the native serializer type
            (for example, JObject or JsonElement) to the desired type.
            When implementing this, be aware of what type the serializer will use for anonymous types.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeserializeToType&lt;T&gt;">
      <MemberSignature Language="C#" Value="public abstract T DeserializeToType&lt;T&gt; (string stringToDeserialize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !!T DeserializeToType&lt;T&gt;(string stringToDeserialize) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Devices.Client.PayloadSerializer.DeserializeToType``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function DeserializeToType(Of T) (stringToDeserialize As String) As T" />
      <MemberSignature Language="F#" Value="abstract member DeserializeToType : string -&gt; 'T" Usage="payloadSerializer.DeserializeToType stringToDeserialize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Devices.Client</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="stringToDeserialize" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type to return.</typeparam>
        <param name="stringToDeserialize">The string to deserialize.</param>
        <summary>
            Convert the serialized string to an object.
            </summary>
        <returns>A fully deserialized type.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializeToString">
      <MemberSignature Language="C#" Value="public abstract string SerializeToString (object objectToSerialize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string SerializeToString(object objectToSerialize) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Devices.Client.PayloadSerializer.SerializeToString(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function SerializeToString (objectToSerialize As Object) As String" />
      <MemberSignature Language="F#" Value="abstract member SerializeToString : obj -&gt; string" Usage="payloadSerializer.SerializeToString objectToSerialize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Devices.Client</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectToSerialize" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="objectToSerialize">Object to serialize.</param>
        <summary>
            Serialize the specified object to a string.
            </summary>
        <returns>A serialized string of the object.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

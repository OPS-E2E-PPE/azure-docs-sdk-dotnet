<Type Name="IotHubModuleClient" FullName="Microsoft.Azure.Devices.Client.IotHubModuleClient">
  <TypeSignature Language="C#" Value="public class IotHubModuleClient : Microsoft.Azure.Devices.Client.IotHubBaseClient" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit IotHubModuleClient extends Microsoft.Azure.Devices.Client.IotHubBaseClient" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Devices.Client.IotHubModuleClient" />
  <TypeSignature Language="VB.NET" Value="Public Class IotHubModuleClient&#xA;Inherits IotHubBaseClient" />
  <TypeSignature Language="F#" Value="type IotHubModuleClient = class&#xA;    inherit IotHubBaseClient" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Devices.Client</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Azure.Devices.Client.IotHubBaseClient</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Contains methods that a module can use to send messages to and receive from the service and interact with module twins.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IotHubModuleClient (string connectionString, Microsoft.Azure.Devices.Client.IotHubClientOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString, class Microsoft.Azure.Devices.Client.IotHubClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Devices.Client.IotHubModuleClient.#ctor(System.String,Microsoft.Azure.Devices.Client.IotHubClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String, Optional options As IotHubClientOptions = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.Devices.Client.IotHubModuleClient : string * Microsoft.Azure.Devices.Client.IotHubClientOptions -&gt; Microsoft.Azure.Devices.Client.IotHubModuleClient" Usage="new Microsoft.Azure.Devices.Client.IotHubModuleClient (connectionString, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Devices.Client</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="options" Type="Microsoft.Azure.Devices.Client.IotHubClientOptions" />
      </Parameters>
      <Docs>
        <param name="connectionString">The connection string based on shared access key used in API calls which allows the module to communicate with IoT Hub.</param>
        <param name="options">The options that allow configuration of the module client instance during initialization.</param>
        <summary>
            Creates a disposable <c>IotHubModuleClient</c> from the specified connection string.
            </summary>
        <returns>A disposable client instance.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Either <paramref name="connectionString" /> is null,
            or the IoT hub host name, device Id or module Id in the connection string is null.</exception>
        <exception cref="T:System.ArgumentException">Neither shared access key nor shared access signature were presented for authentication.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IotHubModuleClient (string hostName, Microsoft.Azure.Devices.Client.IAuthenticationMethod authenticationMethod, Microsoft.Azure.Devices.Client.IotHubClientOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string hostName, class Microsoft.Azure.Devices.Client.IAuthenticationMethod authenticationMethod, class Microsoft.Azure.Devices.Client.IotHubClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Devices.Client.IotHubModuleClient.#ctor(System.String,Microsoft.Azure.Devices.Client.IAuthenticationMethod,Microsoft.Azure.Devices.Client.IotHubClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (hostName As String, authenticationMethod As IAuthenticationMethod, Optional options As IotHubClientOptions = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.Devices.Client.IotHubModuleClient : string * Microsoft.Azure.Devices.Client.IAuthenticationMethod * Microsoft.Azure.Devices.Client.IotHubClientOptions -&gt; Microsoft.Azure.Devices.Client.IotHubModuleClient" Usage="new Microsoft.Azure.Devices.Client.IotHubModuleClient (hostName, authenticationMethod, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Devices.Client</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="hostName" Type="System.String" />
        <Parameter Name="authenticationMethod" Type="Microsoft.Azure.Devices.Client.IAuthenticationMethod" />
        <Parameter Name="options" Type="Microsoft.Azure.Devices.Client.IotHubClientOptions" />
      </Parameters>
      <Docs>
        <param name="hostName">The fully-qualified DNS host name of IoT hub.</param>
        <param name="authenticationMethod">
            The authentication method that is used. It includes <see cref="T:Microsoft.Azure.Devices.Client.ClientAuthenticationWithSharedAccessKeyRefresh" />, <see cref="T:Microsoft.Azure.Devices.Client.ClientAuthenticationWithSharedAccessSignature" />,
            <see cref="T:Microsoft.Azure.Devices.Client.ClientAuthenticationWithX509Certificate" /> or <see cref="T:Microsoft.Azure.Devices.Client.HsmAuthentication.EdgeModuleAuthenticationWithHsm" />.
            </param>
        <param name="options">The options that allow configuration of the module client instance during initialization.</param>
        <summary>
            Creates a disposable <c>IotHubModuleClient</c> from the specified parameters.
            </summary>
        <returns>A disposable <c>IotHubModuleClient</c> instance.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="hostName" />, device Id, module Id or <paramref name="authenticationMethod" /> is null.</exception>
        <exception cref="T:System.ArgumentException">Either shared access key or shared access signature where presented together with X509 certificates for authentication.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateFromEnvironmentAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.Client.IotHubModuleClient&gt; CreateFromEnvironmentAsync (Microsoft.Azure.Devices.Client.IotHubClientOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Devices.Client.IotHubModuleClient&gt; CreateFromEnvironmentAsync(class Microsoft.Azure.Devices.Client.IotHubClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Devices.Client.IotHubModuleClient.CreateFromEnvironmentAsync(Microsoft.Azure.Devices.Client.IotHubClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromEnvironmentAsync (Optional options As IotHubClientOptions = Nothing) As Task(Of IotHubModuleClient)" />
      <MemberSignature Language="F#" Value="static member CreateFromEnvironmentAsync : Microsoft.Azure.Devices.Client.IotHubClientOptions -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.Client.IotHubModuleClient&gt;" Usage="Microsoft.Azure.Devices.Client.IotHubModuleClient.CreateFromEnvironmentAsync options" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Devices.Client</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.Client.IotHubModuleClient&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Microsoft.Azure.Devices.Client.IotHubClientOptions" />
      </Parameters>
      <Docs>
        <param name="options">The options that allow configuration of the module client instance during initialization.</param>
        <summary>
            Creates a disposable <c>IotHubModuleClient</c> instance in an IoT Edge deployment based on environment variables.
            </summary>
        <returns>A disposable client instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Devices.Client.IotHubModuleClient.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="iotHubModuleClient.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Devices.Client</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="InvokeMethodAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.Client.DirectMethodResponse&gt; InvokeMethodAsync (string deviceId, Microsoft.Azure.Devices.Client.DirectMethodRequest methodRequest, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Devices.Client.DirectMethodResponse&gt; InvokeMethodAsync(string deviceId, class Microsoft.Azure.Devices.Client.DirectMethodRequest methodRequest, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Devices.Client.IotHubModuleClient.InvokeMethodAsync(System.String,Microsoft.Azure.Devices.Client.DirectMethodRequest,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function InvokeMethodAsync (deviceId As String, methodRequest As DirectMethodRequest, Optional cancellationToken As CancellationToken = Nothing) As Task(Of DirectMethodResponse)" />
      <MemberSignature Language="F#" Value="member this.InvokeMethodAsync : string * Microsoft.Azure.Devices.Client.DirectMethodRequest * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.Client.DirectMethodResponse&gt;" Usage="iotHubModuleClient.InvokeMethodAsync (deviceId, methodRequest, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Devices.Client</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.Client.DirectMethodResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deviceId" Type="System.String" />
        <Parameter Name="methodRequest" Type="Microsoft.Azure.Devices.Client.DirectMethodRequest" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="deviceId">The unique identifier of the edge device to invoke the method on.</param>
        <param name="methodRequest">The details of the method to invoke.</param>
        <param name="cancellationToken">A cancellation token to cancel the operation.</param>
        <summary>
            Interactively invokes a method from an edge module to an edge device.
            Both the edge module and the edge device need to be connected to the same edge hub.
            IotHubModuleClient instance must be opened already.
            </summary>
        <returns>The result of the method invocation.</returns>
        <remarks>
            This API call is relevant only for IoT Edge modules.
            </remarks>
        <exception cref="T:System.InvalidOperationException">Thrown if IotHubModuleClient instance is not opened already.</exception>
        <exception cref="T:System.OperationCanceledException">Thrown when the operation has been canceled.</exception>
      </Docs>
    </Member>
    <Member MemberName="InvokeMethodAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.Client.DirectMethodResponse&gt; InvokeMethodAsync (string deviceId, string moduleId, Microsoft.Azure.Devices.Client.DirectMethodRequest methodRequest, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Devices.Client.DirectMethodResponse&gt; InvokeMethodAsync(string deviceId, string moduleId, class Microsoft.Azure.Devices.Client.DirectMethodRequest methodRequest, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Devices.Client.IotHubModuleClient.InvokeMethodAsync(System.String,System.String,Microsoft.Azure.Devices.Client.DirectMethodRequest,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function InvokeMethodAsync (deviceId As String, moduleId As String, methodRequest As DirectMethodRequest, Optional cancellationToken As CancellationToken = Nothing) As Task(Of DirectMethodResponse)" />
      <MemberSignature Language="F#" Value="member this.InvokeMethodAsync : string * string * Microsoft.Azure.Devices.Client.DirectMethodRequest * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.Client.DirectMethodResponse&gt;" Usage="iotHubModuleClient.InvokeMethodAsync (deviceId, moduleId, methodRequest, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Devices.Client</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.Client.DirectMethodResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deviceId" Type="System.String" />
        <Parameter Name="moduleId" Type="System.String" />
        <Parameter Name="methodRequest" Type="Microsoft.Azure.Devices.Client.DirectMethodRequest" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="deviceId">The unique identifier of the device.</param>
        <param name="moduleId">The unique identifier of the edge module to invoke the method on.</param>
        <param name="methodRequest">The details of the method to invoke.</param>
        <param name="cancellationToken">A cancellation token to cancel the operation.</param>
        <summary>
            Interactively invokes a method from an edge module to a different edge module.
            Both of the edge modules need to be connected to the same edge hub.
            IotHubModuleClient instance must be opened already.
            </summary>
        <returns>The result of the method invocation.</returns>
        <remarks>
            This API call is relevant only for IoT Edge modules.
            </remarks>
        <exception cref="T:System.InvalidOperationException">Thrown if IotHubModuleClient instance is not opened already.</exception>
        <exception cref="T:System.OperationCanceledException">Thrown when the operation has been canceled.</exception>
      </Docs>
    </Member>
    <Member MemberName="SendTelemetryAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task SendTelemetryAsync (string outputName, Microsoft.Azure.Devices.Client.TelemetryMessage message, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task SendTelemetryAsync(string outputName, class Microsoft.Azure.Devices.Client.TelemetryMessage message, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Devices.Client.IotHubModuleClient.SendTelemetryAsync(System.String,Microsoft.Azure.Devices.Client.TelemetryMessage,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendTelemetryAsync (outputName As String, message As TelemetryMessage, Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="override this.SendTelemetryAsync : string * Microsoft.Azure.Devices.Client.TelemetryMessage * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="iotHubModuleClient.SendTelemetryAsync (outputName, message, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Devices.Client</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outputName" Type="System.String" />
        <Parameter Name="message" Type="Microsoft.Azure.Devices.Client.TelemetryMessage" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="outputName">The output target for sending the given message.</param>
        <param name="message">The message to send.</param>
        <param name="cancellationToken">A cancellation token to cancel the operation.</param>
        <summary>
            Sends an event to IoT hub. IotHubModuleClient instance must be opened already.
            </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            For more information on IoT Edge module routing <see href="https://docs.microsoft.com/azure/iot-edge/module-composition?view=iotedge-2018-06#declare-routes" />.
            </para>
            In case of a transient issue, retrying the operation should work. In case of a non-transient issue, inspect the error details and take steps accordingly.
            Please note that the above list is not exhaustive.
            </remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when a required parameter is null.</exception>
        <exception cref="T:System.OperationCanceledException">Thrown when the operation has been canceled.</exception>
        <exception cref="T:System.InvalidOperationException">Thrown if ModuleClient instance is not opened already.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Thrown if a socket error occurs.</exception>
        <exception cref="T:System.Net.WebSockets.WebSocketException">Thrown if an error occurs when performing an operation on a WebSocket connection.</exception>
        <exception cref="T:System.IO.IOException">Thrown if an I/O error occurs.</exception>
        <exception cref="T:Microsoft.Azure.Devices.Client.IotHubClientException">Thrown if an error occurs when communicating with IoT hub service.</exception>
      </Docs>
    </Member>
    <Member MemberName="SendTelemetryBatchAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task SendTelemetryBatchAsync (string outputName, System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Devices.Client.TelemetryMessage&gt; messages, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task SendTelemetryBatchAsync(string outputName, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Azure.Devices.Client.TelemetryMessage&gt; messages, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Devices.Client.IotHubModuleClient.SendTelemetryBatchAsync(System.String,System.Collections.Generic.IEnumerable{Microsoft.Azure.Devices.Client.TelemetryMessage},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendTelemetryBatchAsync (outputName As String, messages As IEnumerable(Of TelemetryMessage), Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="override this.SendTelemetryBatchAsync : string * seq&lt;Microsoft.Azure.Devices.Client.TelemetryMessage&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="iotHubModuleClient.SendTelemetryBatchAsync (outputName, messages, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Devices.Client</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outputName" Type="System.String" />
        <Parameter Name="messages" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Devices.Client.TelemetryMessage&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="outputName">The output target for sending the given message.</param>
        <param name="messages">A list of one or more messages to send.</param>
        <param name="cancellationToken">A cancellation token to cancel the operation.</param>
        <summary>
            Sends a batch of events to IoT hub. Use AMQP or HTTPs for a true batch operation. MQTT will just send the messages one after the other.
            IotHubModuleClient instance must be opened already.
            </summary>
        <returns>The task containing the event</returns>
        <remarks>
            For more information on IoT Edge module routing <see href="https://docs.microsoft.com/azure/iot-edge/module-composition?view=iotedge-2018-06#declare-routes" />.
            </remarks>
        <exception cref="T:System.InvalidOperationException">Thrown if IotHubModuleClient instance is not opened already.</exception>
        <exception cref="T:System.OperationCanceledException">Thrown when the operation has been canceled.</exception>
      </Docs>
    </Member>
  </Members>
</Type>

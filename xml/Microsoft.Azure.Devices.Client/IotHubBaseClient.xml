<Type Name="IotHubBaseClient" FullName="Microsoft.Azure.Devices.Client.IotHubBaseClient">
  <TypeSignature Language="C#" Value="public abstract class IotHubBaseClient : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit IotHubBaseClient extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Devices.Client.IotHubBaseClient" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class IotHubBaseClient&#xA;Implements IDisposable" />
  <TypeSignature Language="F#" Value="type IotHubBaseClient = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Devices.Client</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Contains methods that a client can use to send messages to and receive messages from the service,
            respond to direct method invocations from the service, and send and receive twin property updates.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CloseAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CloseAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CloseAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Devices.Client.IotHubBaseClient.CloseAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function CloseAsync (Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="member this.CloseAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="iotHubBaseClient.CloseAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Devices.Client</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">A cancellation token to cancel the operation.</param>
        <summary>
            Close the client instance.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            The instance can be re-opened after closing and before disposing. However, subscriptions
            to cloud to device messages/twin/methods do not persist when re-opening a client.
            </remarks>
        <exception cref="T:System.OperationCanceledException">Thrown when the operation has been canceled.</exception>
      </Docs>
    </Member>
    <Member MemberName="ConnectionStatusChangeCallback">
      <MemberSignature Language="C#" Value="public Action&lt;Microsoft.Azure.Devices.Client.ConnectionStatusInfo&gt; ConnectionStatusChangeCallback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Action`1&lt;class Microsoft.Azure.Devices.Client.ConnectionStatusInfo&gt; ConnectionStatusChangeCallback" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Devices.Client.IotHubBaseClient.ConnectionStatusChangeCallback" />
      <MemberSignature Language="VB.NET" Value="Public Property ConnectionStatusChangeCallback As Action(Of ConnectionStatusInfo)" />
      <MemberSignature Language="F#" Value="member this.ConnectionStatusChangeCallback : Action&lt;Microsoft.Azure.Devices.Client.ConnectionStatusInfo&gt; with get, set" Usage="Microsoft.Azure.Devices.Client.IotHubBaseClient.ConnectionStatusChangeCallback" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Devices.Client</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Action&lt;Microsoft.Azure.Devices.Client.ConnectionStatusInfo&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             The callback to be executed each time connection status change notification is received.
             </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <example>
             deviceClient.ConnectionStatusChangeCallback = OnConnectionStatusChanged;
             //...
            
             public void OnConnectionStatusChanged(ConnectionStatusInfo connectionStatusInfo)
             {
                 // Add connection status changed logic as needed
             }
             </example>
      </Docs>
    </Member>
    <Member MemberName="ConnectionStatusInfo">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Devices.Client.ConnectionStatusInfo ConnectionStatusInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Azure.Devices.Client.ConnectionStatusInfo ConnectionStatusInfo" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Devices.Client.IotHubBaseClient.ConnectionStatusInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConnectionStatusInfo As ConnectionStatusInfo" />
      <MemberSignature Language="F#" Value="member this.ConnectionStatusInfo : Microsoft.Azure.Devices.Client.ConnectionStatusInfo" Usage="Microsoft.Azure.Devices.Client.IotHubBaseClient.ConnectionStatusInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Devices.Client</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Devices.Client.ConnectionStatusInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The latest connection status information since the last status change.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Devices.Client.IotHubBaseClient.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="iotHubBaseClient.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Devices.Client</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Releases the unmanaged resources used by the client and optionally disposes of the managed resources.
            </summary>
        <remarks>
            The method <see cref="M:Microsoft.Azure.Devices.Client.IotHubBaseClient.CloseAsync(System.Threading.CancellationToken)" /> should be called before disposing.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Devices.Client.IotHubBaseClient.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="iotHubBaseClient.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Devices.Client</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">Setting to true will release both managed and unmanaged resources. Setting to
            false will only release the unmanaged resources.</param>
        <summary>
            Releases the unmanaged resources used by the client and allows for any derived class to override and
            provide custom implementation.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTwinPropertiesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.Client.TwinProperties&gt; GetTwinPropertiesAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Devices.Client.TwinProperties&gt; GetTwinPropertiesAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Devices.Client.IotHubBaseClient.GetTwinPropertiesAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTwinPropertiesAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of TwinProperties)" />
      <MemberSignature Language="F#" Value="member this.GetTwinPropertiesAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.Client.TwinProperties&gt;" Usage="iotHubBaseClient.GetTwinPropertiesAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Devices.Client</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.Client.TwinProperties&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">A cancellation token to cancel the operation.</param>
        <summary>
            Retrieve the twin properties for the current client.
            </summary>
        <returns>The twin object for the current client.</returns>
        <remarks>
            The client instance must be opened already.
            <para>
            This API gives you the client's view of the twin. For more information on twins in IoT hub, see <see href="https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-device-twins" />.
            </para></remarks>
        <exception cref="T:System.InvalidOperationException">Thrown if the client instance is not opened already.</exception>
        <exception cref="T:System.OperationCanceledException">Thrown when the operation has been canceled.</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task OpenAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task OpenAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Devices.Client.IotHubBaseClient.OpenAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenAsync (Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="member this.OpenAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="iotHubBaseClient.OpenAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Devices.Client</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">A cancellation token to cancel the operation.</param>
        <summary>
            Open the client instance. Must be done before any operation can begin.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            This client can be re-opened after it has been closed, but cannot be re-opened after it has
            been disposed. Subscriptions to cloud to device messages/twin/methods do not persist when
            re-opening a client.
            </remarks>
        <exception cref="T:System.OperationCanceledException">Thrown when the operation has been canceled.</exception>
      </Docs>
    </Member>
    <Member MemberName="SendTelemetryAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task SendTelemetryAsync (Microsoft.Azure.Devices.Client.TelemetryMessage message, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task SendTelemetryAsync(class Microsoft.Azure.Devices.Client.TelemetryMessage message, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Devices.Client.IotHubBaseClient.SendTelemetryAsync(Microsoft.Azure.Devices.Client.TelemetryMessage,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendTelemetryAsync (message As TelemetryMessage, Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="member this.SendTelemetryAsync : Microsoft.Azure.Devices.Client.TelemetryMessage * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="iotHubBaseClient.SendTelemetryAsync (message, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Devices.Client</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="Microsoft.Azure.Devices.Client.TelemetryMessage" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="message">The message to send.</param>
        <param name="cancellationToken">A cancellation token to cancel the operation.</param>
        <summary>
            Sends a telemetry message to IoT hub.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            The client instance must be opened already.
            <para>
            In case of a transient issue, retrying the operation should work. In case of a non-transient issue, inspect
            the error details and take steps accordingly.
            </para></remarks>
        <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="message" /> is null.</exception>
        <exception cref="T:System.OperationCanceledException">Thrown when the operation has been canceled.</exception>
        <exception cref="T:System.InvalidOperationException">Thrown if the client instance is not opened already.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Thrown if a socket error occurs.</exception>
        <exception cref="T:System.Net.WebSockets.WebSocketException">Thrown if an error occurs when performing an operation on a WebSocket connection.</exception>
        <exception cref="T:System.IO.IOException">Thrown if an I/O error occurs.</exception>
        <exception cref="T:Microsoft.Azure.Devices.Client.IotHubClientException">Thrown if an error occurs when communicating with IoT hub service.</exception>
      </Docs>
    </Member>
    <Member MemberName="SendTelemetryBatchAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task SendTelemetryBatchAsync (System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Devices.Client.TelemetryMessage&gt; messages, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task SendTelemetryBatchAsync(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Azure.Devices.Client.TelemetryMessage&gt; messages, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Devices.Client.IotHubBaseClient.SendTelemetryBatchAsync(System.Collections.Generic.IEnumerable{Microsoft.Azure.Devices.Client.TelemetryMessage},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendTelemetryBatchAsync (messages As IEnumerable(Of TelemetryMessage), Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="member this.SendTelemetryBatchAsync : seq&lt;Microsoft.Azure.Devices.Client.TelemetryMessage&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="iotHubBaseClient.SendTelemetryBatchAsync (messages, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Devices.Client</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messages" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Azure.Devices.Client.TelemetryMessage&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="messages">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> set of message objects.</param>
        <param name="cancellationToken">A cancellation token to cancel the operation.</param>
        <summary>
            Sends a batch of telemetry message to IoT hub.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            The client instance must be opened already.
            <para>
            Use AMQP for a true batch operation. MQTT will just send the messages one after the other.
            </para><para>
            For more information on IoT Edge module routing for <see cref="T:Microsoft.Azure.Devices.Client.IotHubModuleClient" /> see
            <see href="https://docs.microsoft.com/azure/iot-edge/module-composition?view=iotedge-2018-06#declare-routes" />.
            </para></remarks>
        <exception cref="T:System.InvalidOperationException">Thrown if the client instance is not opened already.</exception>
        <exception cref="T:System.OperationCanceledException">Thrown when the operation has been canceled.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetDesiredPropertyUpdateCallbackAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task SetDesiredPropertyUpdateCallbackAsync (Func&lt;Microsoft.Azure.Devices.Client.DesiredProperties,System.Threading.Tasks.Task&gt; callback, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task SetDesiredPropertyUpdateCallbackAsync(class System.Func`2&lt;class Microsoft.Azure.Devices.Client.DesiredProperties, class System.Threading.Tasks.Task&gt; callback, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Devices.Client.IotHubBaseClient.SetDesiredPropertyUpdateCallbackAsync(System.Func{Microsoft.Azure.Devices.Client.DesiredProperties,System.Threading.Tasks.Task},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetDesiredPropertyUpdateCallbackAsync (callback As Func(Of DesiredProperties, Task), Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="member this.SetDesiredPropertyUpdateCallbackAsync : Func&lt;Microsoft.Azure.Devices.Client.DesiredProperties, System.Threading.Tasks.Task&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="iotHubBaseClient.SetDesiredPropertyUpdateCallbackAsync (callback, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Devices.Client</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Func&lt;Microsoft.Azure.Devices.Client.DesiredProperties,System.Threading.Tasks.Task&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="callback">The callback to be invoked when a desired property update is received from the service.</param>
        <param name="cancellationToken">A cancellation token to cancel the operation.</param>
        <summary>
            Set a callback that will be called whenever the client receives a desired state update
            from the service. The client instance must be opened already.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            Calling this API more than once will result in the callback set last overwriting any previously set callback.
            A method callback can be unset by setting <paramref name="callback" /> to null.
             <para>
            This has the side-effect of subscribing to the PATCH topic on the service.
             </para></remarks>
        <exception cref="T:System.OperationCanceledException">Thrown when the operation has been canceled.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetDirectMethodCallbackAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task SetDirectMethodCallbackAsync (Func&lt;Microsoft.Azure.Devices.Client.DirectMethodRequest,System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.Client.DirectMethodResponse&gt;&gt; directMethodCallback, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task SetDirectMethodCallbackAsync(class System.Func`2&lt;class Microsoft.Azure.Devices.Client.DirectMethodRequest, class System.Threading.Tasks.Task`1&lt;class Microsoft.Azure.Devices.Client.DirectMethodResponse&gt;&gt; directMethodCallback, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Devices.Client.IotHubBaseClient.SetDirectMethodCallbackAsync(System.Func{Microsoft.Azure.Devices.Client.DirectMethodRequest,System.Threading.Tasks.Task{Microsoft.Azure.Devices.Client.DirectMethodResponse}},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetDirectMethodCallbackAsync (directMethodCallback As Func(Of DirectMethodRequest, Task(Of DirectMethodResponse)), Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="member this.SetDirectMethodCallbackAsync : Func&lt;Microsoft.Azure.Devices.Client.DirectMethodRequest, System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.Client.DirectMethodResponse&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="iotHubBaseClient.SetDirectMethodCallbackAsync (directMethodCallback, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Devices.Client</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directMethodCallback" Type="System.Func&lt;Microsoft.Azure.Devices.Client.DirectMethodRequest,System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.Client.DirectMethodResponse&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="directMethodCallback">The callback to be invoked when any method is invoked by the cloud service.</param>
        <param name="cancellationToken">A cancellation token to cancel the operation.</param>
        <summary>
            Sets the callback for all direct method calls from the service.
            This instance must be opened already.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            Calling this API more than once will result in the callback set last overwriting any previously set callback.
            A method callback can be unset by setting <paramref name="directMethodCallback" /> to null.
            </remarks>
        <exception cref="T:System.OperationCanceledException">Thrown when the operation has been canceled.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetIncomingMessageCallbackAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task SetIncomingMessageCallbackAsync (Func&lt;Microsoft.Azure.Devices.Client.IncomingMessage,System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.Client.MessageAcknowledgement&gt;&gt; messageCallback, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task SetIncomingMessageCallbackAsync(class System.Func`2&lt;class Microsoft.Azure.Devices.Client.IncomingMessage, class System.Threading.Tasks.Task`1&lt;valuetype Microsoft.Azure.Devices.Client.MessageAcknowledgement&gt;&gt; messageCallback, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Devices.Client.IotHubBaseClient.SetIncomingMessageCallbackAsync(System.Func{Microsoft.Azure.Devices.Client.IncomingMessage,System.Threading.Tasks.Task{Microsoft.Azure.Devices.Client.MessageAcknowledgement}},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetIncomingMessageCallbackAsync (messageCallback As Func(Of IncomingMessage, Task(Of MessageAcknowledgement)), Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="member this.SetIncomingMessageCallbackAsync : Func&lt;Microsoft.Azure.Devices.Client.IncomingMessage, System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.Client.MessageAcknowledgement&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="iotHubBaseClient.SetIncomingMessageCallbackAsync (messageCallback, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Devices.Client</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageCallback" Type="System.Func&lt;Microsoft.Azure.Devices.Client.IncomingMessage,System.Threading.Tasks.Task&lt;Microsoft.Azure.Devices.Client.MessageAcknowledgement&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="messageCallback">The callback to be invoked when a cloud-to-device message is received by the client.</param>
        <param name="cancellationToken">A cancellation token to cancel the operation.</param>
        <summary>
            Sets a callback for receiving a message from the device or module queue using a cancellation token.
            This instance must be opened already.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            Calling this API more than once will result in the callback set last overwriting any previously set callback.
            A method callback can be unset by setting <paramref name="messageCallback" /> to null.
            </remarks>
        <exception cref="T:System.InvalidOperationException">Thrown if instance is not opened already.</exception>
        <exception cref="T:System.OperationCanceledException">Thrown when the operation has been canceled.</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateReportedPropertiesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;long&gt; UpdateReportedPropertiesAsync (Microsoft.Azure.Devices.Client.ReportedProperties reportedProperties, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;int64&gt; UpdateReportedPropertiesAsync(class Microsoft.Azure.Devices.Client.ReportedProperties reportedProperties, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Devices.Client.IotHubBaseClient.UpdateReportedPropertiesAsync(Microsoft.Azure.Devices.Client.ReportedProperties,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function UpdateReportedPropertiesAsync (reportedProperties As ReportedProperties, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Long)" />
      <MemberSignature Language="F#" Value="member this.UpdateReportedPropertiesAsync : Microsoft.Azure.Devices.Client.ReportedProperties * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;int64&gt;" Usage="iotHubBaseClient.UpdateReportedPropertiesAsync (reportedProperties, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Devices.Client</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reportedProperties" Type="Microsoft.Azure.Devices.Client.ReportedProperties" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="reportedProperties">Reported properties to push</param>
        <param name="cancellationToken">A cancellation token to cancel the operation.</param>
        <summary>
            Push reported property changes up to the service.
            </summary>
        <returns>The new version of the updated twin if the update was successful.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">Thrown when the operation has been canceled.</exception>
      </Docs>
    </Member>
  </Members>
</Type>

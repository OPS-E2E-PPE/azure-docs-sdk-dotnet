<Type Name="IotHubClientMqttSettings" FullName="Microsoft.Azure.Devices.Client.IotHubClientMqttSettings">
  <TypeSignature Language="C#" Value="public sealed class IotHubClientMqttSettings : Microsoft.Azure.Devices.Client.IotHubClientTransportSettings" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit IotHubClientMqttSettings extends Microsoft.Azure.Devices.Client.IotHubClientTransportSettings" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Devices.Client.IotHubClientMqttSettings" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class IotHubClientMqttSettings&#xA;Inherits IotHubClientTransportSettings" />
  <TypeSignature Language="F#" Value="type IotHubClientMqttSettings = class&#xA;    inherit IotHubClientTransportSettings" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Devices.Client</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Azure.Devices.Client.IotHubClientTransportSettings</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Contains MQTT transport-specific settings for the device and module clients.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IotHubClientMqttSettings (Microsoft.Azure.Devices.Client.IotHubClientTransportProtocol transportProtocol = Microsoft.Azure.Devices.Client.IotHubClientTransportProtocol.Tcp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype Microsoft.Azure.Devices.Client.IotHubClientTransportProtocol transportProtocol) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Devices.Client.IotHubClientMqttSettings.#ctor(Microsoft.Azure.Devices.Client.IotHubClientTransportProtocol)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Optional transportProtocol As IotHubClientTransportProtocol = Microsoft.Azure.Devices.Client.IotHubClientTransportProtocol.Tcp)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.Devices.Client.IotHubClientMqttSettings : Microsoft.Azure.Devices.Client.IotHubClientTransportProtocol -&gt; Microsoft.Azure.Devices.Client.IotHubClientMqttSettings" Usage="new Microsoft.Azure.Devices.Client.IotHubClientMqttSettings transportProtocol" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Devices.Client</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="transportProtocol" Type="Microsoft.Azure.Devices.Client.IotHubClientTransportProtocol" />
      </Parameters>
      <Docs>
        <param name="transportProtocol">The transport protocol; defaults to TCP.</param>
        <summary>
            Creates an instance of this class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CleanSession">
      <MemberSignature Language="C#" Value="public bool CleanSession { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CleanSession" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Devices.Client.IotHubClientMqttSettings.CleanSession" />
      <MemberSignature Language="VB.NET" Value="Public Property CleanSession As Boolean" />
      <MemberSignature Language="F#" Value="member this.CleanSession : bool with get, set" Usage="Microsoft.Azure.Devices.Client.IotHubClientMqttSettings.CleanSession" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Devices.Client</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Flag to specify if a subscription should persist across different sessions. The default value is false.
            </summary>
        <value>To be added.</value>
        <remarks>
          <para>If set to false: the device will receive messages that were sent to it while it was disconnected.</para>
          <para>If set to true: the device will receive only those messages that were sent to it
            after it successfully subscribed to the device bound message topic.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IdleTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan IdleTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan IdleTimeout" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Devices.Client.IotHubClientMqttSettings.IdleTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property IdleTimeout As TimeSpan" />
      <MemberSignature Language="F#" Value="member this.IdleTimeout : TimeSpan with get, set" Usage="Microsoft.Azure.Devices.Client.IotHubClientMqttSettings.IdleTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Devices.Client</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Specify client-side heartbeat interval.
            The interval, that the client establishes with the service, for sending keep alive pings.
            </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            The default value is 2 minutes.
            </para>
          <para>
            The client will consider the connection as disconnected if the keep alive ping fails.
            Setting a very low idle timeout value can cause aggressive reconnects, and might not give the
            client enough time to establish a connection before disconnecting and reconnecting.
            </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PublishToServerQoS">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Devices.Client.QualityOfService PublishToServerQoS { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Azure.Devices.Client.QualityOfService PublishToServerQoS" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Devices.Client.IotHubClientMqttSettings.PublishToServerQoS" />
      <MemberSignature Language="VB.NET" Value="Public Property PublishToServerQoS As QualityOfService" />
      <MemberSignature Language="F#" Value="member this.PublishToServerQoS : Microsoft.Azure.Devices.Client.QualityOfService with get, set" Usage="Microsoft.Azure.Devices.Client.IotHubClientMqttSettings.PublishToServerQoS" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Devices.Client</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Devices.Client.QualityOfService</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The QoS to be used when sending packets to service.
            </summary>
        <value>To be added.</value>
        <remarks>
            The default value is <see cref="F:Microsoft.Azure.Devices.Client.QualityOfService.AtLeastOnce" />.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceivingQoS">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Devices.Client.QualityOfService ReceivingQoS { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Azure.Devices.Client.QualityOfService ReceivingQoS" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Devices.Client.IotHubClientMqttSettings.ReceivingQoS" />
      <MemberSignature Language="VB.NET" Value="Public Property ReceivingQoS As QualityOfService" />
      <MemberSignature Language="F#" Value="member this.ReceivingQoS : Microsoft.Azure.Devices.Client.QualityOfService with get, set" Usage="Microsoft.Azure.Devices.Client.IotHubClientMqttSettings.ReceivingQoS" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Devices.Client</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Devices.Client.QualityOfService</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The QoS to be used when subscribing to receive packets from the service.
            </summary>
        <value>To be added.</value>
        <remarks>
            The default value is <see cref="F:Microsoft.Azure.Devices.Client.QualityOfService.AtLeastOnce" />.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoteCertificateValidationCallback">
      <MemberSignature Language="C#" Value="public System.Net.Security.RemoteCertificateValidationCallback RemoteCertificateValidationCallback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Security.RemoteCertificateValidationCallback RemoteCertificateValidationCallback" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Devices.Client.IotHubClientMqttSettings.RemoteCertificateValidationCallback" />
      <MemberSignature Language="VB.NET" Value="Public Property RemoteCertificateValidationCallback As RemoteCertificateValidationCallback" />
      <MemberSignature Language="F#" Value="member this.RemoteCertificateValidationCallback : System.Net.Security.RemoteCertificateValidationCallback with get, set" Usage="Microsoft.Azure.Devices.Client.IotHubClientMqttSettings.RemoteCertificateValidationCallback" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Devices.Client</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Security.RemoteCertificateValidationCallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            A callback for remote certificate validation.
            </summary>
        <value>To be added.</value>
        <remarks>
            If incorrectly implemented, your device may fail to connect to IoTHub and/or be open to security vulnerabilities.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="WebSocketKeepAlive">
      <MemberSignature Language="C#" Value="public TimeSpan? WebSocketKeepAlive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; WebSocketKeepAlive" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Devices.Client.IotHubClientMqttSettings.WebSocketKeepAlive" />
      <MemberSignature Language="VB.NET" Value="Public Property WebSocketKeepAlive As Nullable(Of TimeSpan)" />
      <MemberSignature Language="F#" Value="member this.WebSocketKeepAlive : Nullable&lt;TimeSpan&gt; with get, set" Usage="Microsoft.Azure.Devices.Client.IotHubClientMqttSettings.WebSocketKeepAlive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Devices.Client</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.TimeSpan&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            A keep-alive for the transport layer in sending ping/pong control frames when using web sockets.
            </summary>
        <value>To be added.</value>
        <remarks>
            This value is different from the protocol-level keep-alive packets that are sent over the overlaying MQTT transport protocol.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="WillMessage">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Devices.Client.IWillMessage WillMessage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Azure.Devices.Client.IWillMessage WillMessage" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Devices.Client.IotHubClientMqttSettings.WillMessage" />
      <MemberSignature Language="VB.NET" Value="Public Property WillMessage As IWillMessage" />
      <MemberSignature Language="F#" Value="member this.WillMessage : Microsoft.Azure.Devices.Client.IWillMessage with get, set" Usage="Microsoft.Azure.Devices.Client.IotHubClientMqttSettings.WillMessage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Devices.Client</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Devices.Client.IWillMessage</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The configured will message that is sent to the telemetry channel on an ungraceful disconnect.
            </summary>
        <value>To be added.</value>
        <remarks>
            Setting a will message is a way for clients to notify other subscribed clients about ungraceful disconnects in an appropriate way.
            In response to the ungraceful disconnect, the service will send the last-will message to the configured telemetry channel.
            The telemetry channel can be either the default Events endpoint or a custom endpoint defined by IoT hub routing.
            For more details, refer to https://docs.microsoft.com/azure/iot-hub/iot-hub-mqtt-support#using-the-mqtt-protocol-directly-as-a-device.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>

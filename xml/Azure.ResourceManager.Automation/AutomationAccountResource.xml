<Type Name="AutomationAccountResource" FullName="Azure.ResourceManager.Automation.AutomationAccountResource">
  <TypeSignature Language="C#" Value="public class AutomationAccountResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AutomationAccountResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Automation.AutomationAccountResource" />
  <TypeSignature Language="VB.NET" Value="Public Class AutomationAccountResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type AutomationAccountResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            A Class representing an AutomationAccount along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct an <see cref="T:Azure.ResourceManager.Automation.AutomationAccountResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetAutomationAccountResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> using the GetAutomationAccount method.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AutomationAccountResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Automation.AutomationAccountResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddTag">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Automation.AutomationAccountResource&gt; AddTag (string key, string value, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Automation.AutomationAccountResource&gt; AddTag(string key, string value, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.AddTag(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddTag (key As String, value As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of AutomationAccountResource)" />
      <MemberSignature Language="F#" Value="abstract member AddTag : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.AutomationAccountResource&gt;&#xA;override this.AddTag : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.AutomationAccountResource&gt;" Usage="automationAccountResource.AddTag (key, value, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Automation.AutomationAccountResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="key"> The key for the tag. </param>
        <param name="value"> The value for the tag. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Add a tag to the current resource.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}
            Operation Id: AutomationAccount_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> or <paramref name="value" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="AddTagAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.AutomationAccountResource&gt;&gt; AddTagAsync (string key, string value, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Automation.AutomationAccountResource&gt;&gt; AddTagAsync(string key, string value, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.AddTagAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddTagAsync (key As String, value As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AutomationAccountResource))" />
      <MemberSignature Language="F#" Value="abstract member AddTagAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.AutomationAccountResource&gt;&gt;&#xA;override this.AddTagAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.AutomationAccountResource&gt;&gt;" Usage="automationAccountResource.AddTagAsync (key, value, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.AutomationAccountResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="key"> The key for the tag. </param>
        <param name="value"> The value for the tag. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Add a tag to the current resource.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}
            Operation Id: AutomationAccount_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> or <paramref name="value" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="AutomationPrivateLinkResources">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Automation.Models.AutomationPrivateLinkResource&gt; AutomationPrivateLinkResources (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Automation.Models.AutomationPrivateLinkResource&gt; AutomationPrivateLinkResources(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.AutomationPrivateLinkResources(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AutomationPrivateLinkResources (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of AutomationPrivateLinkResource)" />
      <MemberSignature Language="F#" Value="abstract member AutomationPrivateLinkResources : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Automation.Models.AutomationPrivateLinkResource&gt;&#xA;override this.AutomationPrivateLinkResources : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Automation.Models.AutomationPrivateLinkResource&gt;" Usage="automationAccountResource.AutomationPrivateLinkResources cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Automation.Models.AutomationPrivateLinkResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the private link resources that need to be created for Automation account.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/privateLinkResources
            Operation Id: PrivateLinkResources_Automation
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Automation.Models.AutomationPrivateLinkResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutomationPrivateLinkResourcesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Automation.Models.AutomationPrivateLinkResource&gt; AutomationPrivateLinkResourcesAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Automation.Models.AutomationPrivateLinkResource&gt; AutomationPrivateLinkResourcesAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.AutomationPrivateLinkResourcesAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AutomationPrivateLinkResourcesAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of AutomationPrivateLinkResource)" />
      <MemberSignature Language="F#" Value="abstract member AutomationPrivateLinkResourcesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Automation.Models.AutomationPrivateLinkResource&gt;&#xA;override this.AutomationPrivateLinkResourcesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Automation.Models.AutomationPrivateLinkResource&gt;" Usage="automationAccountResource.AutomationPrivateLinkResourcesAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Automation.Models.AutomationPrivateLinkResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the private link resources that need to be created for Automation account.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/privateLinkResources
            Operation Id: PrivateLinkResources_Automation
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Automation.Models.AutomationPrivateLinkResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertGraphRunbookContent">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Automation.Models.GraphicalRunbookContent&gt; ConvertGraphRunbookContent (Azure.ResourceManager.Automation.Models.GraphicalRunbookContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Automation.Models.GraphicalRunbookContent&gt; ConvertGraphRunbookContent(class Azure.ResourceManager.Automation.Models.GraphicalRunbookContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.ConvertGraphRunbookContent(Azure.ResourceManager.Automation.Models.GraphicalRunbookContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ConvertGraphRunbookContent (content As GraphicalRunbookContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of GraphicalRunbookContent)" />
      <MemberSignature Language="F#" Value="abstract member ConvertGraphRunbookContent : Azure.ResourceManager.Automation.Models.GraphicalRunbookContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.Models.GraphicalRunbookContent&gt;&#xA;override this.ConvertGraphRunbookContent : Azure.ResourceManager.Automation.Models.GraphicalRunbookContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.Models.GraphicalRunbookContent&gt;" Usage="automationAccountResource.ConvertGraphRunbookContent (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Automation.Models.GraphicalRunbookContent&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.Automation.Models.GraphicalRunbookContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content"> Input data describing the graphical runbook. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Post operation to serialize or deserialize GraphRunbookContent
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/convertGraphRunbookContent
            Operation Id: convertGraphRunbookContent
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertGraphRunbookContentAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.Models.GraphicalRunbookContent&gt;&gt; ConvertGraphRunbookContentAsync (Azure.ResourceManager.Automation.Models.GraphicalRunbookContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Automation.Models.GraphicalRunbookContent&gt;&gt; ConvertGraphRunbookContentAsync(class Azure.ResourceManager.Automation.Models.GraphicalRunbookContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.ConvertGraphRunbookContentAsync(Azure.ResourceManager.Automation.Models.GraphicalRunbookContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ConvertGraphRunbookContentAsync (content As GraphicalRunbookContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of GraphicalRunbookContent))" />
      <MemberSignature Language="F#" Value="abstract member ConvertGraphRunbookContentAsync : Azure.ResourceManager.Automation.Models.GraphicalRunbookContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.Models.GraphicalRunbookContent&gt;&gt;&#xA;override this.ConvertGraphRunbookContentAsync : Azure.ResourceManager.Automation.Models.GraphicalRunbookContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.Models.GraphicalRunbookContent&gt;&gt;" Usage="automationAccountResource.ConvertGraphRunbookContentAsync (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.Models.GraphicalRunbookContent&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.Automation.Models.GraphicalRunbookContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="content"> Input data describing the graphical runbook. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Post operation to serialize or deserialize GraphRunbookContent
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/convertGraphRunbookContent
            Operation Id: convertGraphRunbookContent
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateResourceIdentifier">
      <MemberSignature Language="C#" Value="public static Azure.Core.ResourceIdentifier CreateResourceIdentifier (string subscriptionId, string resourceGroupName, string automationAccountName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Core.ResourceIdentifier CreateResourceIdentifier(string subscriptionId, string resourceGroupName, string automationAccountName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.CreateResourceIdentifier(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateResourceIdentifier (subscriptionId As String, resourceGroupName As String, automationAccountName As String) As ResourceIdentifier" />
      <MemberSignature Language="F#" Value="static member CreateResourceIdentifier : string * string * string -&gt; Azure.Core.ResourceIdentifier" Usage="Azure.ResourceManager.Automation.AutomationAccountResource.CreateResourceIdentifier (subscriptionId, resourceGroupName, automationAccountName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.ResourceIdentifier</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionId" Type="System.String" />
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="automationAccountName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subscriptionId">To be added.</param>
        <param name="resourceGroupName">To be added.</param>
        <param name="automationAccountName">To be added.</param>
        <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.Automation.AutomationAccountResource" /> instance. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Automation.AutomationAccountData Data { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.Automation.AutomationAccountData Data" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Automation.AutomationAccountResource.Data" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Data As AutomationAccountData" />
      <MemberSignature Language="F#" Value="member this.Data : Azure.ResourceManager.Automation.AutomationAccountData" Usage="Azure.ResourceManager.Automation.AutomationAccountResource.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Automation.AutomationAccountData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets the data representing this Feature. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation Delete (Azure.WaitUntil waitUntil, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation Delete(valuetype Azure.WaitUntil waitUntil, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.Delete(Azure.WaitUntil,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Delete (waitUntil As WaitUntil, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation" />
      <MemberSignature Language="F#" Value="abstract member Delete : Azure.WaitUntil * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&#xA;override this.Delete : Azure.WaitUntil * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation" Usage="automationAccountResource.Delete (waitUntil, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Delete an automation account.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}
            Operation Id: AutomationAccount_Delete
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt; DeleteAsync (Azure.WaitUntil waitUntil, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation&gt; DeleteAsync(valuetype Azure.WaitUntil waitUntil, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.DeleteAsync(Azure.WaitUntil,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteAsync (waitUntil As WaitUntil, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation)" />
      <MemberSignature Language="F#" Value="abstract member DeleteAsync : Azure.WaitUntil * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;&#xA;override this.DeleteAsync : Azure.WaitUntil * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;" Usage="automationAccountResource.DeleteAsync (waitUntil, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Delete an automation account.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}
            Operation Id: AutomationAccount_Delete
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateUriWebhook">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;string&gt; GenerateUriWebhook (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;string&gt; GenerateUriWebhook(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GenerateUriWebhook(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GenerateUriWebhook (Optional cancellationToken As CancellationToken = Nothing) As Response(Of String)" />
      <MemberSignature Language="F#" Value="abstract member GenerateUriWebhook : System.Threading.CancellationToken -&gt; Azure.Response&lt;string&gt;&#xA;override this.GenerateUriWebhook : System.Threading.CancellationToken -&gt; Azure.Response&lt;string&gt;" Usage="automationAccountResource.GenerateUriWebhook cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Generates a Uri for use in creating a webhook.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/webhooks/generateUri
            Operation Id: Webhook_GenerateUri
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateUriWebhookAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;string&gt;&gt; GenerateUriWebhookAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;string&gt;&gt; GenerateUriWebhookAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GenerateUriWebhookAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GenerateUriWebhookAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of String))" />
      <MemberSignature Language="F#" Value="abstract member GenerateUriWebhookAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;string&gt;&gt;&#xA;override this.GenerateUriWebhookAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;string&gt;&gt;" Usage="automationAccountResource.GenerateUriWebhookAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Generates a Uri for use in creating a webhook.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/webhooks/generateUri
            Operation Id: Webhook_GenerateUri
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Automation.AutomationAccountResource&gt; Get (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Automation.AutomationAccountResource&gt; Get(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.Get(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Get (Optional cancellationToken As CancellationToken = Nothing) As Response(Of AutomationAccountResource)" />
      <MemberSignature Language="F#" Value="abstract member Get : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.AutomationAccountResource&gt;&#xA;override this.Get : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.AutomationAccountResource&gt;" Usage="automationAccountResource.Get cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Automation.AutomationAccountResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get information about an Automation Account.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}
            Operation Id: AutomationAccount_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAgentRegistrationInformation">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Automation.Models.AgentRegistration&gt; GetAgentRegistrationInformation (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Automation.Models.AgentRegistration&gt; GetAgentRegistrationInformation(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetAgentRegistrationInformation(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAgentRegistrationInformation (Optional cancellationToken As CancellationToken = Nothing) As Response(Of AgentRegistration)" />
      <MemberSignature Language="F#" Value="abstract member GetAgentRegistrationInformation : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.Models.AgentRegistration&gt;&#xA;override this.GetAgentRegistrationInformation : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.Models.AgentRegistration&gt;" Usage="automationAccountResource.GetAgentRegistrationInformation cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Automation.Models.AgentRegistration&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve the automation agent registration information.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/agentRegistrationInformation
            Operation Id: AgentRegistrationInformation_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAgentRegistrationInformationAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.Models.AgentRegistration&gt;&gt; GetAgentRegistrationInformationAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Automation.Models.AgentRegistration&gt;&gt; GetAgentRegistrationInformationAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetAgentRegistrationInformationAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAgentRegistrationInformationAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AgentRegistration))" />
      <MemberSignature Language="F#" Value="abstract member GetAgentRegistrationInformationAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.Models.AgentRegistration&gt;&gt;&#xA;override this.GetAgentRegistrationInformationAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.Models.AgentRegistration&gt;&gt;" Usage="automationAccountResource.GetAgentRegistrationInformationAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.Models.AgentRegistration&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve the automation agent registration information.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/agentRegistrationInformation
            Operation Id: AgentRegistrationInformation_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllNodeCountInformation">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Automation.Models.DscNodeCount&gt; GetAllNodeCountInformation (Azure.ResourceManager.Automation.Models.AutomationCountType countType, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Automation.Models.DscNodeCount&gt; GetAllNodeCountInformation(valuetype Azure.ResourceManager.Automation.Models.AutomationCountType countType, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetAllNodeCountInformation(Azure.ResourceManager.Automation.Models.AutomationCountType,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAllNodeCountInformation (countType As AutomationCountType, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of DscNodeCount)" />
      <MemberSignature Language="F#" Value="abstract member GetAllNodeCountInformation : Azure.ResourceManager.Automation.Models.AutomationCountType * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Automation.Models.DscNodeCount&gt;&#xA;override this.GetAllNodeCountInformation : Azure.ResourceManager.Automation.Models.AutomationCountType * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Automation.Models.DscNodeCount&gt;" Usage="automationAccountResource.GetAllNodeCountInformation (countType, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Automation.Models.DscNodeCount&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="countType" Type="Azure.ResourceManager.Automation.Models.AutomationCountType" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="countType"> The type of counts to retrieve. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve counts for Dsc Nodes.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/nodecounts/{countType}
            Operation Id: NodeCountInformation_Get
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Automation.Models.DscNodeCount" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllNodeCountInformation">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Automation.Models.NodeCount&gt; GetAllNodeCountInformation (Azure.ResourceManager.Automation.Models.CountType countType, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Automation.Models.NodeCount&gt; GetAllNodeCountInformation(valuetype Azure.ResourceManager.Automation.Models.CountType countType, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetAllNodeCountInformation(Azure.ResourceManager.Automation.Models.CountType,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAllNodeCountInformation (countType As CountType, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of NodeCount)" />
      <MemberSignature Language="F#" Value="abstract member GetAllNodeCountInformation : Azure.ResourceManager.Automation.Models.CountType * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Automation.Models.NodeCount&gt;&#xA;override this.GetAllNodeCountInformation : Azure.ResourceManager.Automation.Models.CountType * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Automation.Models.NodeCount&gt;" Usage="automationAccountResource.GetAllNodeCountInformation (countType, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Automation.Models.NodeCount&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="countType" Type="Azure.ResourceManager.Automation.Models.CountType" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="countType"> The type of counts to retrieve. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve counts for Dsc Nodes.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/nodecounts/{countType}
            Operation Id: NodeCountInformation_Get
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Automation.Models.NodeCount" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllNodeCountInformationAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Automation.Models.DscNodeCount&gt; GetAllNodeCountInformationAsync (Azure.ResourceManager.Automation.Models.AutomationCountType countType, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Automation.Models.DscNodeCount&gt; GetAllNodeCountInformationAsync(valuetype Azure.ResourceManager.Automation.Models.AutomationCountType countType, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetAllNodeCountInformationAsync(Azure.ResourceManager.Automation.Models.AutomationCountType,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAllNodeCountInformationAsync (countType As AutomationCountType, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of DscNodeCount)" />
      <MemberSignature Language="F#" Value="abstract member GetAllNodeCountInformationAsync : Azure.ResourceManager.Automation.Models.AutomationCountType * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Automation.Models.DscNodeCount&gt;&#xA;override this.GetAllNodeCountInformationAsync : Azure.ResourceManager.Automation.Models.AutomationCountType * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Automation.Models.DscNodeCount&gt;" Usage="automationAccountResource.GetAllNodeCountInformationAsync (countType, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Automation.Models.DscNodeCount&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="countType" Type="Azure.ResourceManager.Automation.Models.AutomationCountType" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="countType"> The type of counts to retrieve. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve counts for Dsc Nodes.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/nodecounts/{countType}
            Operation Id: NodeCountInformation_Get
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Automation.Models.DscNodeCount" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllNodeCountInformationAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Automation.Models.NodeCount&gt; GetAllNodeCountInformationAsync (Azure.ResourceManager.Automation.Models.CountType countType, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Automation.Models.NodeCount&gt; GetAllNodeCountInformationAsync(valuetype Azure.ResourceManager.Automation.Models.CountType countType, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetAllNodeCountInformationAsync(Azure.ResourceManager.Automation.Models.CountType,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAllNodeCountInformationAsync (countType As CountType, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of NodeCount)" />
      <MemberSignature Language="F#" Value="abstract member GetAllNodeCountInformationAsync : Azure.ResourceManager.Automation.Models.CountType * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Automation.Models.NodeCount&gt;&#xA;override this.GetAllNodeCountInformationAsync : Azure.ResourceManager.Automation.Models.CountType * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Automation.Models.NodeCount&gt;" Usage="automationAccountResource.GetAllNodeCountInformationAsync (countType, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Automation.Models.NodeCount&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="countType" Type="Azure.ResourceManager.Automation.Models.CountType" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="countType"> The type of counts to retrieve. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve counts for Dsc Nodes.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/nodecounts/{countType}
            Operation Id: NodeCountInformation_Get
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Automation.Models.NodeCount" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.AutomationAccountResource&gt;&gt; GetAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Automation.AutomationAccountResource&gt;&gt; GetAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AutomationAccountResource))" />
      <MemberSignature Language="F#" Value="abstract member GetAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.AutomationAccountResource&gt;&gt;&#xA;override this.GetAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.AutomationAccountResource&gt;&gt;" Usage="automationAccountResource.GetAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.AutomationAccountResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get information about an Automation Account.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}
            Operation Id: AutomationAccount_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAutomationAccountKeys">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Automation.Models.AutomationKey&gt; GetAutomationAccountKeys (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Automation.Models.AutomationKey&gt; GetAutomationAccountKeys(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetAutomationAccountKeys(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAutomationAccountKeys (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of AutomationKey)" />
      <MemberSignature Language="F#" Value="abstract member GetAutomationAccountKeys : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Automation.Models.AutomationKey&gt;&#xA;override this.GetAutomationAccountKeys : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Automation.Models.AutomationKey&gt;" Usage="automationAccountResource.GetAutomationAccountKeys cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Automation.Models.AutomationKey&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="0" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve the automation keys for an account.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/listKeys
            Operation Id: Keys_ListByAutomationAccount
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Automation.Models.AutomationKey" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAutomationAccountKeysAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Automation.Models.AutomationKey&gt; GetAutomationAccountKeysAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Automation.Models.AutomationKey&gt; GetAutomationAccountKeysAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetAutomationAccountKeysAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAutomationAccountKeysAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of AutomationKey)" />
      <MemberSignature Language="F#" Value="abstract member GetAutomationAccountKeysAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Automation.Models.AutomationKey&gt;&#xA;override this.GetAutomationAccountKeysAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Automation.Models.AutomationKey&gt;" Usage="automationAccountResource.GetAutomationAccountKeysAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Automation.Models.AutomationKey&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="0" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve the automation keys for an account.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/listKeys
            Operation Id: Keys_ListByAutomationAccount
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Automation.Models.AutomationKey" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAutomationAccountModule">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Automation.AutomationAccountModuleResource&gt; GetAutomationAccountModule (string moduleName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Automation.AutomationAccountModuleResource&gt; GetAutomationAccountModule(string moduleName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetAutomationAccountModule(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAutomationAccountModule (moduleName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of AutomationAccountModuleResource)" />
      <MemberSignature Language="F#" Value="abstract member GetAutomationAccountModule : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.AutomationAccountModuleResource&gt;&#xA;override this.GetAutomationAccountModule : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.AutomationAccountModuleResource&gt;" Usage="automationAccountResource.GetAutomationAccountModule (moduleName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Automation.AutomationAccountModuleResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="moduleName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="moduleName"> The module name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve the module identified by module name.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/modules/{moduleName}
            Operation Id: Module_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="moduleName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="moduleName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAutomationAccountModuleAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.AutomationAccountModuleResource&gt;&gt; GetAutomationAccountModuleAsync (string moduleName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Automation.AutomationAccountModuleResource&gt;&gt; GetAutomationAccountModuleAsync(string moduleName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetAutomationAccountModuleAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAutomationAccountModuleAsync (moduleName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AutomationAccountModuleResource))" />
      <MemberSignature Language="F#" Value="abstract member GetAutomationAccountModuleAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.AutomationAccountModuleResource&gt;&gt;&#xA;override this.GetAutomationAccountModuleAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.AutomationAccountModuleResource&gt;&gt;" Usage="automationAccountResource.GetAutomationAccountModuleAsync (moduleName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.AutomationAccountModuleResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="moduleName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="moduleName"> The module name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve the module identified by module name.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/modules/{moduleName}
            Operation Id: Module_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="moduleName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="moduleName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAutomationAccountModules">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Automation.AutomationAccountModuleCollection GetAutomationAccountModules ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Automation.AutomationAccountModuleCollection GetAutomationAccountModules() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetAutomationAccountModules" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAutomationAccountModules () As AutomationAccountModuleCollection" />
      <MemberSignature Language="F#" Value="abstract member GetAutomationAccountModules : unit -&gt; Azure.ResourceManager.Automation.AutomationAccountModuleCollection&#xA;override this.GetAutomationAccountModules : unit -&gt; Azure.ResourceManager.Automation.AutomationAccountModuleCollection" Usage="automationAccountResource.GetAutomationAccountModules " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Automation.AutomationAccountModuleCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of AutomationAccountModuleResources in the AutomationAccount. </summary>
        <returns> An object representing collection of AutomationAccountModuleResources and their operations over a AutomationAccountModuleResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAutomationAccountPython2Package">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Automation.AutomationAccountPython2PackageResource&gt; GetAutomationAccountPython2Package (string packageName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Automation.AutomationAccountPython2PackageResource&gt; GetAutomationAccountPython2Package(string packageName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetAutomationAccountPython2Package(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAutomationAccountPython2Package (packageName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of AutomationAccountPython2PackageResource)" />
      <MemberSignature Language="F#" Value="abstract member GetAutomationAccountPython2Package : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.AutomationAccountPython2PackageResource&gt;&#xA;override this.GetAutomationAccountPython2Package : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.AutomationAccountPython2PackageResource&gt;" Usage="automationAccountResource.GetAutomationAccountPython2Package (packageName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Automation.AutomationAccountPython2PackageResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="packageName"> The python package name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve the python 2 package identified by package name.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/python2Packages/{packageName}
            Operation Id: Python2Package_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="packageName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="packageName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAutomationAccountPython2PackageAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.AutomationAccountPython2PackageResource&gt;&gt; GetAutomationAccountPython2PackageAsync (string packageName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Automation.AutomationAccountPython2PackageResource&gt;&gt; GetAutomationAccountPython2PackageAsync(string packageName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetAutomationAccountPython2PackageAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAutomationAccountPython2PackageAsync (packageName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AutomationAccountPython2PackageResource))" />
      <MemberSignature Language="F#" Value="abstract member GetAutomationAccountPython2PackageAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.AutomationAccountPython2PackageResource&gt;&gt;&#xA;override this.GetAutomationAccountPython2PackageAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.AutomationAccountPython2PackageResource&gt;&gt;" Usage="automationAccountResource.GetAutomationAccountPython2PackageAsync (packageName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.AutomationAccountPython2PackageResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="packageName"> The python package name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve the python 2 package identified by package name.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/python2Packages/{packageName}
            Operation Id: Python2Package_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="packageName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="packageName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAutomationAccountPython2Packages">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Automation.AutomationAccountPython2PackageCollection GetAutomationAccountPython2Packages ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Automation.AutomationAccountPython2PackageCollection GetAutomationAccountPython2Packages() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetAutomationAccountPython2Packages" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAutomationAccountPython2Packages () As AutomationAccountPython2PackageCollection" />
      <MemberSignature Language="F#" Value="abstract member GetAutomationAccountPython2Packages : unit -&gt; Azure.ResourceManager.Automation.AutomationAccountPython2PackageCollection&#xA;override this.GetAutomationAccountPython2Packages : unit -&gt; Azure.ResourceManager.Automation.AutomationAccountPython2PackageCollection" Usage="automationAccountResource.GetAutomationAccountPython2Packages " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Automation.AutomationAccountPython2PackageCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of AutomationAccountPython2PackageResources in the AutomationAccount. </summary>
        <returns> An object representing collection of AutomationAccountPython2PackageResources and their operations over a AutomationAccountPython2PackageResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAutomationCertificate">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Automation.AutomationCertificateResource&gt; GetAutomationCertificate (string certificateName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Automation.AutomationCertificateResource&gt; GetAutomationCertificate(string certificateName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetAutomationCertificate(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAutomationCertificate (certificateName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of AutomationCertificateResource)" />
      <MemberSignature Language="F#" Value="abstract member GetAutomationCertificate : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.AutomationCertificateResource&gt;&#xA;override this.GetAutomationCertificate : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.AutomationCertificateResource&gt;" Usage="automationAccountResource.GetAutomationCertificate (certificateName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Automation.AutomationCertificateResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificateName" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="certificateName"> The name of certificate. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve the certificate identified by certificate name.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/certificates/{certificateName}
            Operation Id: Certificate_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="certificateName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="certificateName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAutomationCertificateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.AutomationCertificateResource&gt;&gt; GetAutomationCertificateAsync (string certificateName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Automation.AutomationCertificateResource&gt;&gt; GetAutomationCertificateAsync(string certificateName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetAutomationCertificateAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAutomationCertificateAsync (certificateName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AutomationCertificateResource))" />
      <MemberSignature Language="F#" Value="abstract member GetAutomationCertificateAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.AutomationCertificateResource&gt;&gt;&#xA;override this.GetAutomationCertificateAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.AutomationCertificateResource&gt;&gt;" Usage="automationAccountResource.GetAutomationCertificateAsync (certificateName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.AutomationCertificateResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificateName" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="certificateName"> The name of certificate. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve the certificate identified by certificate name.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/certificates/{certificateName}
            Operation Id: Certificate_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="certificateName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="certificateName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAutomationCertificates">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Automation.AutomationCertificateCollection GetAutomationCertificates ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Automation.AutomationCertificateCollection GetAutomationCertificates() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetAutomationCertificates" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAutomationCertificates () As AutomationCertificateCollection" />
      <MemberSignature Language="F#" Value="abstract member GetAutomationCertificates : unit -&gt; Azure.ResourceManager.Automation.AutomationCertificateCollection&#xA;override this.GetAutomationCertificates : unit -&gt; Azure.ResourceManager.Automation.AutomationCertificateCollection" Usage="automationAccountResource.GetAutomationCertificates " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Automation.AutomationCertificateCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of AutomationCertificateResources in the AutomationAccount. </summary>
        <returns> An object representing collection of AutomationCertificateResources and their operations over a AutomationCertificateResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAutomationConnection">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Automation.AutomationConnectionResource&gt; GetAutomationConnection (string connectionName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Automation.AutomationConnectionResource&gt; GetAutomationConnection(string connectionName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetAutomationConnection(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAutomationConnection (connectionName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of AutomationConnectionResource)" />
      <MemberSignature Language="F#" Value="abstract member GetAutomationConnection : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.AutomationConnectionResource&gt;&#xA;override this.GetAutomationConnection : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.AutomationConnectionResource&gt;" Usage="automationAccountResource.GetAutomationConnection (connectionName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Automation.AutomationConnectionResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionName" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="connectionName"> The name of connection. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve the connection identified by connection name.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/connections/{connectionName}
            Operation Id: Connection_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="connectionName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="connectionName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAutomationConnectionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.AutomationConnectionResource&gt;&gt; GetAutomationConnectionAsync (string connectionName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Automation.AutomationConnectionResource&gt;&gt; GetAutomationConnectionAsync(string connectionName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetAutomationConnectionAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAutomationConnectionAsync (connectionName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AutomationConnectionResource))" />
      <MemberSignature Language="F#" Value="abstract member GetAutomationConnectionAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.AutomationConnectionResource&gt;&gt;&#xA;override this.GetAutomationConnectionAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.AutomationConnectionResource&gt;&gt;" Usage="automationAccountResource.GetAutomationConnectionAsync (connectionName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.AutomationConnectionResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionName" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="connectionName"> The name of connection. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve the connection identified by connection name.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/connections/{connectionName}
            Operation Id: Connection_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="connectionName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="connectionName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAutomationConnections">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Automation.AutomationConnectionCollection GetAutomationConnections ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Automation.AutomationConnectionCollection GetAutomationConnections() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetAutomationConnections" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAutomationConnections () As AutomationConnectionCollection" />
      <MemberSignature Language="F#" Value="abstract member GetAutomationConnections : unit -&gt; Azure.ResourceManager.Automation.AutomationConnectionCollection&#xA;override this.GetAutomationConnections : unit -&gt; Azure.ResourceManager.Automation.AutomationConnectionCollection" Usage="automationAccountResource.GetAutomationConnections " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Automation.AutomationConnectionCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of AutomationConnectionResources in the AutomationAccount. </summary>
        <returns> An object representing collection of AutomationConnectionResources and their operations over a AutomationConnectionResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAutomationConnectionType">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Automation.AutomationConnectionTypeResource&gt; GetAutomationConnectionType (string connectionTypeName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Automation.AutomationConnectionTypeResource&gt; GetAutomationConnectionType(string connectionTypeName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetAutomationConnectionType(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAutomationConnectionType (connectionTypeName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of AutomationConnectionTypeResource)" />
      <MemberSignature Language="F#" Value="abstract member GetAutomationConnectionType : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.AutomationConnectionTypeResource&gt;&#xA;override this.GetAutomationConnectionType : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.AutomationConnectionTypeResource&gt;" Usage="automationAccountResource.GetAutomationConnectionType (connectionTypeName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Automation.AutomationConnectionTypeResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionTypeName" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="connectionTypeName"> The name of connection type. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve the connection type identified by connection type name.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/connectionTypes/{connectionTypeName}
            Operation Id: ConnectionType_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="connectionTypeName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="connectionTypeName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAutomationConnectionTypeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.AutomationConnectionTypeResource&gt;&gt; GetAutomationConnectionTypeAsync (string connectionTypeName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Automation.AutomationConnectionTypeResource&gt;&gt; GetAutomationConnectionTypeAsync(string connectionTypeName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetAutomationConnectionTypeAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAutomationConnectionTypeAsync (connectionTypeName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AutomationConnectionTypeResource))" />
      <MemberSignature Language="F#" Value="abstract member GetAutomationConnectionTypeAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.AutomationConnectionTypeResource&gt;&gt;&#xA;override this.GetAutomationConnectionTypeAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.AutomationConnectionTypeResource&gt;&gt;" Usage="automationAccountResource.GetAutomationConnectionTypeAsync (connectionTypeName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.AutomationConnectionTypeResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionTypeName" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="connectionTypeName"> The name of connection type. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve the connection type identified by connection type name.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/connectionTypes/{connectionTypeName}
            Operation Id: ConnectionType_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="connectionTypeName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="connectionTypeName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAutomationConnectionTypes">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Automation.AutomationConnectionTypeCollection GetAutomationConnectionTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Automation.AutomationConnectionTypeCollection GetAutomationConnectionTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetAutomationConnectionTypes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAutomationConnectionTypes () As AutomationConnectionTypeCollection" />
      <MemberSignature Language="F#" Value="abstract member GetAutomationConnectionTypes : unit -&gt; Azure.ResourceManager.Automation.AutomationConnectionTypeCollection&#xA;override this.GetAutomationConnectionTypes : unit -&gt; Azure.ResourceManager.Automation.AutomationConnectionTypeCollection" Usage="automationAccountResource.GetAutomationConnectionTypes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Automation.AutomationConnectionTypeCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of AutomationConnectionTypeResources in the AutomationAccount. </summary>
        <returns> An object representing collection of AutomationConnectionTypeResources and their operations over a AutomationConnectionTypeResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAutomationCredential">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Automation.AutomationCredentialResource&gt; GetAutomationCredential (string credentialName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Automation.AutomationCredentialResource&gt; GetAutomationCredential(string credentialName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetAutomationCredential(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAutomationCredential (credentialName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of AutomationCredentialResource)" />
      <MemberSignature Language="F#" Value="abstract member GetAutomationCredential : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.AutomationCredentialResource&gt;&#xA;override this.GetAutomationCredential : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.AutomationCredentialResource&gt;" Usage="automationAccountResource.GetAutomationCredential (credentialName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Automation.AutomationCredentialResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credentialName" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="credentialName"> The name of credential. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve the credential identified by credential name.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/credentials/{credentialName}
            Operation Id: Credential_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="credentialName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="credentialName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAutomationCredentialAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.AutomationCredentialResource&gt;&gt; GetAutomationCredentialAsync (string credentialName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Automation.AutomationCredentialResource&gt;&gt; GetAutomationCredentialAsync(string credentialName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetAutomationCredentialAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAutomationCredentialAsync (credentialName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AutomationCredentialResource))" />
      <MemberSignature Language="F#" Value="abstract member GetAutomationCredentialAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.AutomationCredentialResource&gt;&gt;&#xA;override this.GetAutomationCredentialAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.AutomationCredentialResource&gt;&gt;" Usage="automationAccountResource.GetAutomationCredentialAsync (credentialName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.AutomationCredentialResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credentialName" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="credentialName"> The name of credential. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve the credential identified by credential name.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/credentials/{credentialName}
            Operation Id: Credential_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="credentialName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="credentialName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAutomationCredentials">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Automation.AutomationCredentialCollection GetAutomationCredentials ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Automation.AutomationCredentialCollection GetAutomationCredentials() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetAutomationCredentials" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAutomationCredentials () As AutomationCredentialCollection" />
      <MemberSignature Language="F#" Value="abstract member GetAutomationCredentials : unit -&gt; Azure.ResourceManager.Automation.AutomationCredentialCollection&#xA;override this.GetAutomationCredentials : unit -&gt; Azure.ResourceManager.Automation.AutomationCredentialCollection" Usage="automationAccountResource.GetAutomationCredentials " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Automation.AutomationCredentialCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of AutomationCredentialResources in the AutomationAccount. </summary>
        <returns> An object representing collection of AutomationCredentialResources and their operations over a AutomationCredentialResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAutomationJob">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Automation.AutomationJobResource&gt; GetAutomationJob (string jobName, string clientRequestId = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Automation.AutomationJobResource&gt; GetAutomationJob(string jobName, string clientRequestId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetAutomationJob(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAutomationJob (jobName As String, Optional clientRequestId As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of AutomationJobResource)" />
      <MemberSignature Language="F#" Value="abstract member GetAutomationJob : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.AutomationJobResource&gt;&#xA;override this.GetAutomationJob : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.AutomationJobResource&gt;" Usage="automationAccountResource.GetAutomationJob (jobName, clientRequestId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Automation.AutomationJobResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jobName" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="clientRequestId" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="jobName"> The job name. </param>
        <param name="clientRequestId"> Identifies this specific client request. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve the job identified by job name.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/jobs/{jobName}
            Operation Id: Job_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="jobName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="jobName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAutomationJobAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.AutomationJobResource&gt;&gt; GetAutomationJobAsync (string jobName, string clientRequestId = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Automation.AutomationJobResource&gt;&gt; GetAutomationJobAsync(string jobName, string clientRequestId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetAutomationJobAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAutomationJobAsync (jobName As String, Optional clientRequestId As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AutomationJobResource))" />
      <MemberSignature Language="F#" Value="abstract member GetAutomationJobAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.AutomationJobResource&gt;&gt;&#xA;override this.GetAutomationJobAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.AutomationJobResource&gt;&gt;" Usage="automationAccountResource.GetAutomationJobAsync (jobName, clientRequestId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.AutomationJobResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jobName" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="clientRequestId" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="jobName"> The job name. </param>
        <param name="clientRequestId"> Identifies this specific client request. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve the job identified by job name.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/jobs/{jobName}
            Operation Id: Job_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="jobName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="jobName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAutomationJobs">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Automation.AutomationJobCollection GetAutomationJobs ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Automation.AutomationJobCollection GetAutomationJobs() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetAutomationJobs" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAutomationJobs () As AutomationJobCollection" />
      <MemberSignature Language="F#" Value="abstract member GetAutomationJobs : unit -&gt; Azure.ResourceManager.Automation.AutomationJobCollection&#xA;override this.GetAutomationJobs : unit -&gt; Azure.ResourceManager.Automation.AutomationJobCollection" Usage="automationAccountResource.GetAutomationJobs " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Automation.AutomationJobCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of AutomationJobResources in the AutomationAccount. </summary>
        <returns> An object representing collection of AutomationJobResources and their operations over a AutomationJobResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAutomationJobSchedule">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Automation.AutomationJobScheduleResource&gt; GetAutomationJobSchedule (Guid jobScheduleId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Automation.AutomationJobScheduleResource&gt; GetAutomationJobSchedule(valuetype System.Guid jobScheduleId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetAutomationJobSchedule(System.Guid,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAutomationJobSchedule (jobScheduleId As Guid, Optional cancellationToken As CancellationToken = Nothing) As Response(Of AutomationJobScheduleResource)" />
      <MemberSignature Language="F#" Value="abstract member GetAutomationJobSchedule : Guid * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.AutomationJobScheduleResource&gt;&#xA;override this.GetAutomationJobSchedule : Guid * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.AutomationJobScheduleResource&gt;" Usage="automationAccountResource.GetAutomationJobSchedule (jobScheduleId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Automation.AutomationJobScheduleResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jobScheduleId" Type="System.Guid" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="jobScheduleId"> The job schedule name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve the job schedule identified by job schedule name.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/jobSchedules/{jobScheduleId}
            Operation Id: JobSchedule_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAutomationJobScheduleAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.AutomationJobScheduleResource&gt;&gt; GetAutomationJobScheduleAsync (Guid jobScheduleId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Automation.AutomationJobScheduleResource&gt;&gt; GetAutomationJobScheduleAsync(valuetype System.Guid jobScheduleId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetAutomationJobScheduleAsync(System.Guid,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAutomationJobScheduleAsync (jobScheduleId As Guid, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AutomationJobScheduleResource))" />
      <MemberSignature Language="F#" Value="abstract member GetAutomationJobScheduleAsync : Guid * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.AutomationJobScheduleResource&gt;&gt;&#xA;override this.GetAutomationJobScheduleAsync : Guid * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.AutomationJobScheduleResource&gt;&gt;" Usage="automationAccountResource.GetAutomationJobScheduleAsync (jobScheduleId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.AutomationJobScheduleResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jobScheduleId" Type="System.Guid" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="jobScheduleId"> The job schedule name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve the job schedule identified by job schedule name.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/jobSchedules/{jobScheduleId}
            Operation Id: JobSchedule_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAutomationJobSchedules">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Automation.AutomationJobScheduleCollection GetAutomationJobSchedules ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Automation.AutomationJobScheduleCollection GetAutomationJobSchedules() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetAutomationJobSchedules" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAutomationJobSchedules () As AutomationJobScheduleCollection" />
      <MemberSignature Language="F#" Value="abstract member GetAutomationJobSchedules : unit -&gt; Azure.ResourceManager.Automation.AutomationJobScheduleCollection&#xA;override this.GetAutomationJobSchedules : unit -&gt; Azure.ResourceManager.Automation.AutomationJobScheduleCollection" Usage="automationAccountResource.GetAutomationJobSchedules " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Automation.AutomationJobScheduleCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of AutomationJobScheduleResources in the AutomationAccount. </summary>
        <returns> An object representing collection of AutomationJobScheduleResources and their operations over a AutomationJobScheduleResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAutomationPrivateEndpointConnection">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Automation.AutomationPrivateEndpointConnectionResource&gt; GetAutomationPrivateEndpointConnection (string privateEndpointConnectionName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Automation.AutomationPrivateEndpointConnectionResource&gt; GetAutomationPrivateEndpointConnection(string privateEndpointConnectionName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetAutomationPrivateEndpointConnection(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAutomationPrivateEndpointConnection (privateEndpointConnectionName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of AutomationPrivateEndpointConnectionResource)" />
      <MemberSignature Language="F#" Value="abstract member GetAutomationPrivateEndpointConnection : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.AutomationPrivateEndpointConnectionResource&gt;&#xA;override this.GetAutomationPrivateEndpointConnection : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.AutomationPrivateEndpointConnectionResource&gt;" Usage="automationAccountResource.GetAutomationPrivateEndpointConnection (privateEndpointConnectionName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Automation.AutomationPrivateEndpointConnectionResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="privateEndpointConnectionName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="privateEndpointConnectionName"> The name of the private endpoint connection. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a private endpoint connection.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/privateEndpointConnections/{privateEndpointConnectionName}
            Operation Id: PrivateEndpointConnections_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="privateEndpointConnectionName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="privateEndpointConnectionName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAutomationPrivateEndpointConnectionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.AutomationPrivateEndpointConnectionResource&gt;&gt; GetAutomationPrivateEndpointConnectionAsync (string privateEndpointConnectionName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Automation.AutomationPrivateEndpointConnectionResource&gt;&gt; GetAutomationPrivateEndpointConnectionAsync(string privateEndpointConnectionName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetAutomationPrivateEndpointConnectionAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAutomationPrivateEndpointConnectionAsync (privateEndpointConnectionName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AutomationPrivateEndpointConnectionResource))" />
      <MemberSignature Language="F#" Value="abstract member GetAutomationPrivateEndpointConnectionAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.AutomationPrivateEndpointConnectionResource&gt;&gt;&#xA;override this.GetAutomationPrivateEndpointConnectionAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.AutomationPrivateEndpointConnectionResource&gt;&gt;" Usage="automationAccountResource.GetAutomationPrivateEndpointConnectionAsync (privateEndpointConnectionName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.AutomationPrivateEndpointConnectionResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="privateEndpointConnectionName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="privateEndpointConnectionName"> The name of the private endpoint connection. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a private endpoint connection.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/privateEndpointConnections/{privateEndpointConnectionName}
            Operation Id: PrivateEndpointConnections_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="privateEndpointConnectionName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="privateEndpointConnectionName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAutomationPrivateEndpointConnections">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Automation.AutomationPrivateEndpointConnectionCollection GetAutomationPrivateEndpointConnections ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Automation.AutomationPrivateEndpointConnectionCollection GetAutomationPrivateEndpointConnections() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetAutomationPrivateEndpointConnections" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAutomationPrivateEndpointConnections () As AutomationPrivateEndpointConnectionCollection" />
      <MemberSignature Language="F#" Value="abstract member GetAutomationPrivateEndpointConnections : unit -&gt; Azure.ResourceManager.Automation.AutomationPrivateEndpointConnectionCollection&#xA;override this.GetAutomationPrivateEndpointConnections : unit -&gt; Azure.ResourceManager.Automation.AutomationPrivateEndpointConnectionCollection" Usage="automationAccountResource.GetAutomationPrivateEndpointConnections " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Automation.AutomationPrivateEndpointConnectionCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of AutomationPrivateEndpointConnectionResources in the AutomationAccount. </summary>
        <returns> An object representing collection of AutomationPrivateEndpointConnectionResources and their operations over a AutomationPrivateEndpointConnectionResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAutomationRunbook">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Automation.AutomationRunbookResource&gt; GetAutomationRunbook (string runbookName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Automation.AutomationRunbookResource&gt; GetAutomationRunbook(string runbookName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetAutomationRunbook(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAutomationRunbook (runbookName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of AutomationRunbookResource)" />
      <MemberSignature Language="F#" Value="abstract member GetAutomationRunbook : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.AutomationRunbookResource&gt;&#xA;override this.GetAutomationRunbook : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.AutomationRunbookResource&gt;" Usage="automationAccountResource.GetAutomationRunbook (runbookName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Automation.AutomationRunbookResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="runbookName" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="runbookName"> The runbook name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve the runbook identified by runbook name.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/runbooks/{runbookName}
            Operation Id: Runbook_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="runbookName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="runbookName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAutomationRunbookAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.AutomationRunbookResource&gt;&gt; GetAutomationRunbookAsync (string runbookName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Automation.AutomationRunbookResource&gt;&gt; GetAutomationRunbookAsync(string runbookName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetAutomationRunbookAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAutomationRunbookAsync (runbookName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AutomationRunbookResource))" />
      <MemberSignature Language="F#" Value="abstract member GetAutomationRunbookAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.AutomationRunbookResource&gt;&gt;&#xA;override this.GetAutomationRunbookAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.AutomationRunbookResource&gt;&gt;" Usage="automationAccountResource.GetAutomationRunbookAsync (runbookName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.AutomationRunbookResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="runbookName" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="runbookName"> The runbook name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve the runbook identified by runbook name.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/runbooks/{runbookName}
            Operation Id: Runbook_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="runbookName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="runbookName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAutomationRunbooks">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Automation.AutomationRunbookCollection GetAutomationRunbooks ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Automation.AutomationRunbookCollection GetAutomationRunbooks() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetAutomationRunbooks" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAutomationRunbooks () As AutomationRunbookCollection" />
      <MemberSignature Language="F#" Value="abstract member GetAutomationRunbooks : unit -&gt; Azure.ResourceManager.Automation.AutomationRunbookCollection&#xA;override this.GetAutomationRunbooks : unit -&gt; Azure.ResourceManager.Automation.AutomationRunbookCollection" Usage="automationAccountResource.GetAutomationRunbooks " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Automation.AutomationRunbookCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of AutomationRunbookResources in the AutomationAccount. </summary>
        <returns> An object representing collection of AutomationRunbookResources and their operations over a AutomationRunbookResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAutomationSchedule">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Automation.AutomationScheduleResource&gt; GetAutomationSchedule (string scheduleName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Automation.AutomationScheduleResource&gt; GetAutomationSchedule(string scheduleName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetAutomationSchedule(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAutomationSchedule (scheduleName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of AutomationScheduleResource)" />
      <MemberSignature Language="F#" Value="abstract member GetAutomationSchedule : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.AutomationScheduleResource&gt;&#xA;override this.GetAutomationSchedule : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.AutomationScheduleResource&gt;" Usage="automationAccountResource.GetAutomationSchedule (scheduleName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Automation.AutomationScheduleResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scheduleName" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="scheduleName"> The schedule name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve the schedule identified by schedule name.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/schedules/{scheduleName}
            Operation Id: Schedule_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="scheduleName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="scheduleName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAutomationScheduleAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.AutomationScheduleResource&gt;&gt; GetAutomationScheduleAsync (string scheduleName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Automation.AutomationScheduleResource&gt;&gt; GetAutomationScheduleAsync(string scheduleName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetAutomationScheduleAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAutomationScheduleAsync (scheduleName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AutomationScheduleResource))" />
      <MemberSignature Language="F#" Value="abstract member GetAutomationScheduleAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.AutomationScheduleResource&gt;&gt;&#xA;override this.GetAutomationScheduleAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.AutomationScheduleResource&gt;&gt;" Usage="automationAccountResource.GetAutomationScheduleAsync (scheduleName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.AutomationScheduleResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scheduleName" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="scheduleName"> The schedule name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve the schedule identified by schedule name.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/schedules/{scheduleName}
            Operation Id: Schedule_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="scheduleName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="scheduleName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAutomationSchedules">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Automation.AutomationScheduleCollection GetAutomationSchedules ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Automation.AutomationScheduleCollection GetAutomationSchedules() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetAutomationSchedules" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAutomationSchedules () As AutomationScheduleCollection" />
      <MemberSignature Language="F#" Value="abstract member GetAutomationSchedules : unit -&gt; Azure.ResourceManager.Automation.AutomationScheduleCollection&#xA;override this.GetAutomationSchedules : unit -&gt; Azure.ResourceManager.Automation.AutomationScheduleCollection" Usage="automationAccountResource.GetAutomationSchedules " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Automation.AutomationScheduleCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of AutomationScheduleResources in the AutomationAccount. </summary>
        <returns> An object representing collection of AutomationScheduleResources and their operations over a AutomationScheduleResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAutomationSourceControl">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Automation.AutomationSourceControlResource&gt; GetAutomationSourceControl (string sourceControlName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Automation.AutomationSourceControlResource&gt; GetAutomationSourceControl(string sourceControlName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetAutomationSourceControl(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAutomationSourceControl (sourceControlName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of AutomationSourceControlResource)" />
      <MemberSignature Language="F#" Value="abstract member GetAutomationSourceControl : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.AutomationSourceControlResource&gt;&#xA;override this.GetAutomationSourceControl : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.AutomationSourceControlResource&gt;" Usage="automationAccountResource.GetAutomationSourceControl (sourceControlName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Automation.AutomationSourceControlResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceControlName" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="sourceControlName"> The name of source control. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve the source control identified by source control name.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/sourceControls/{sourceControlName}
            Operation Id: SourceControl_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="sourceControlName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="sourceControlName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAutomationSourceControlAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.AutomationSourceControlResource&gt;&gt; GetAutomationSourceControlAsync (string sourceControlName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Automation.AutomationSourceControlResource&gt;&gt; GetAutomationSourceControlAsync(string sourceControlName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetAutomationSourceControlAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAutomationSourceControlAsync (sourceControlName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AutomationSourceControlResource))" />
      <MemberSignature Language="F#" Value="abstract member GetAutomationSourceControlAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.AutomationSourceControlResource&gt;&gt;&#xA;override this.GetAutomationSourceControlAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.AutomationSourceControlResource&gt;&gt;" Usage="automationAccountResource.GetAutomationSourceControlAsync (sourceControlName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.AutomationSourceControlResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceControlName" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="sourceControlName"> The name of source control. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve the source control identified by source control name.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/sourceControls/{sourceControlName}
            Operation Id: SourceControl_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="sourceControlName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="sourceControlName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAutomationSourceControls">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Automation.AutomationSourceControlCollection GetAutomationSourceControls ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Automation.AutomationSourceControlCollection GetAutomationSourceControls() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetAutomationSourceControls" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAutomationSourceControls () As AutomationSourceControlCollection" />
      <MemberSignature Language="F#" Value="abstract member GetAutomationSourceControls : unit -&gt; Azure.ResourceManager.Automation.AutomationSourceControlCollection&#xA;override this.GetAutomationSourceControls : unit -&gt; Azure.ResourceManager.Automation.AutomationSourceControlCollection" Usage="automationAccountResource.GetAutomationSourceControls " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Automation.AutomationSourceControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of AutomationSourceControlResources in the AutomationAccount. </summary>
        <returns> An object representing collection of AutomationSourceControlResources and their operations over a AutomationSourceControlResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAutomationVariable">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Automation.AutomationVariableResource&gt; GetAutomationVariable (string variableName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Automation.AutomationVariableResource&gt; GetAutomationVariable(string variableName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetAutomationVariable(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAutomationVariable (variableName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of AutomationVariableResource)" />
      <MemberSignature Language="F#" Value="abstract member GetAutomationVariable : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.AutomationVariableResource&gt;&#xA;override this.GetAutomationVariable : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.AutomationVariableResource&gt;" Usage="automationAccountResource.GetAutomationVariable (variableName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Automation.AutomationVariableResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="variableName" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="variableName"> The name of variable. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve the variable identified by variable name.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/variables/{variableName}
            Operation Id: Variable_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="variableName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="variableName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAutomationVariableAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.AutomationVariableResource&gt;&gt; GetAutomationVariableAsync (string variableName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Automation.AutomationVariableResource&gt;&gt; GetAutomationVariableAsync(string variableName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetAutomationVariableAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAutomationVariableAsync (variableName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AutomationVariableResource))" />
      <MemberSignature Language="F#" Value="abstract member GetAutomationVariableAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.AutomationVariableResource&gt;&gt;&#xA;override this.GetAutomationVariableAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.AutomationVariableResource&gt;&gt;" Usage="automationAccountResource.GetAutomationVariableAsync (variableName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.AutomationVariableResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="variableName" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="variableName"> The name of variable. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve the variable identified by variable name.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/variables/{variableName}
            Operation Id: Variable_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="variableName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="variableName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAutomationVariables">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Automation.AutomationVariableCollection GetAutomationVariables ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Automation.AutomationVariableCollection GetAutomationVariables() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetAutomationVariables" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAutomationVariables () As AutomationVariableCollection" />
      <MemberSignature Language="F#" Value="abstract member GetAutomationVariables : unit -&gt; Azure.ResourceManager.Automation.AutomationVariableCollection&#xA;override this.GetAutomationVariables : unit -&gt; Azure.ResourceManager.Automation.AutomationVariableCollection" Usage="automationAccountResource.GetAutomationVariables " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Automation.AutomationVariableCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of AutomationVariableResources in the AutomationAccount. </summary>
        <returns> An object representing collection of AutomationVariableResources and their operations over a AutomationVariableResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAutomationWatcher">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Automation.AutomationWatcherResource&gt; GetAutomationWatcher (string watcherName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Automation.AutomationWatcherResource&gt; GetAutomationWatcher(string watcherName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetAutomationWatcher(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAutomationWatcher (watcherName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of AutomationWatcherResource)" />
      <MemberSignature Language="F#" Value="abstract member GetAutomationWatcher : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.AutomationWatcherResource&gt;&#xA;override this.GetAutomationWatcher : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.AutomationWatcherResource&gt;" Usage="automationAccountResource.GetAutomationWatcher (watcherName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Automation.AutomationWatcherResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="watcherName" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="watcherName"> The watcher name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve the watcher identified by watcher name.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/watchers/{watcherName}
            Operation Id: Watcher_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="watcherName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="watcherName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAutomationWatcherAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.AutomationWatcherResource&gt;&gt; GetAutomationWatcherAsync (string watcherName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Automation.AutomationWatcherResource&gt;&gt; GetAutomationWatcherAsync(string watcherName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetAutomationWatcherAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAutomationWatcherAsync (watcherName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AutomationWatcherResource))" />
      <MemberSignature Language="F#" Value="abstract member GetAutomationWatcherAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.AutomationWatcherResource&gt;&gt;&#xA;override this.GetAutomationWatcherAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.AutomationWatcherResource&gt;&gt;" Usage="automationAccountResource.GetAutomationWatcherAsync (watcherName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.AutomationWatcherResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="watcherName" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="watcherName"> The watcher name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve the watcher identified by watcher name.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/watchers/{watcherName}
            Operation Id: Watcher_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="watcherName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="watcherName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAutomationWatchers">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Automation.AutomationWatcherCollection GetAutomationWatchers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Automation.AutomationWatcherCollection GetAutomationWatchers() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetAutomationWatchers" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAutomationWatchers () As AutomationWatcherCollection" />
      <MemberSignature Language="F#" Value="abstract member GetAutomationWatchers : unit -&gt; Azure.ResourceManager.Automation.AutomationWatcherCollection&#xA;override this.GetAutomationWatchers : unit -&gt; Azure.ResourceManager.Automation.AutomationWatcherCollection" Usage="automationAccountResource.GetAutomationWatchers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Automation.AutomationWatcherCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of AutomationWatcherResources in the AutomationAccount. </summary>
        <returns> An object representing collection of AutomationWatcherResources and their operations over a AutomationWatcherResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAutomationWebhook">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Automation.AutomationWebhookResource&gt; GetAutomationWebhook (string webhookName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Automation.AutomationWebhookResource&gt; GetAutomationWebhook(string webhookName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetAutomationWebhook(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAutomationWebhook (webhookName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of AutomationWebhookResource)" />
      <MemberSignature Language="F#" Value="abstract member GetAutomationWebhook : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.AutomationWebhookResource&gt;&#xA;override this.GetAutomationWebhook : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.AutomationWebhookResource&gt;" Usage="automationAccountResource.GetAutomationWebhook (webhookName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Automation.AutomationWebhookResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webhookName" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="webhookName"> The webhook name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve the webhook identified by webhook name.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/webhooks/{webhookName}
            Operation Id: Webhook_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="webhookName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="webhookName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAutomationWebhookAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.AutomationWebhookResource&gt;&gt; GetAutomationWebhookAsync (string webhookName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Automation.AutomationWebhookResource&gt;&gt; GetAutomationWebhookAsync(string webhookName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetAutomationWebhookAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAutomationWebhookAsync (webhookName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AutomationWebhookResource))" />
      <MemberSignature Language="F#" Value="abstract member GetAutomationWebhookAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.AutomationWebhookResource&gt;&gt;&#xA;override this.GetAutomationWebhookAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.AutomationWebhookResource&gt;&gt;" Usage="automationAccountResource.GetAutomationWebhookAsync (webhookName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.AutomationWebhookResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webhookName" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="webhookName"> The webhook name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve the webhook identified by webhook name.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/webhooks/{webhookName}
            Operation Id: Webhook_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="webhookName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="webhookName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAutomationWebhooks">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Automation.AutomationWebhookCollection GetAutomationWebhooks ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Automation.AutomationWebhookCollection GetAutomationWebhooks() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetAutomationWebhooks" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAutomationWebhooks () As AutomationWebhookCollection" />
      <MemberSignature Language="F#" Value="abstract member GetAutomationWebhooks : unit -&gt; Azure.ResourceManager.Automation.AutomationWebhookCollection&#xA;override this.GetAutomationWebhooks : unit -&gt; Azure.ResourceManager.Automation.AutomationWebhookCollection" Usage="automationAccountResource.GetAutomationWebhooks " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Automation.AutomationWebhookCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of AutomationWebhookResources in the AutomationAccount. </summary>
        <returns> An object representing collection of AutomationWebhookResources and their operations over a AutomationWebhookResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetByAutomationAccountKey">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Automation.Models.KeyListResult&gt; GetByAutomationAccountKey (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Automation.Models.KeyListResult&gt; GetByAutomationAccountKey(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetByAutomationAccountKey(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetByAutomationAccountKey (Optional cancellationToken As CancellationToken = Nothing) As Response(Of KeyListResult)" />
      <MemberSignature Language="F#" Value="abstract member GetByAutomationAccountKey : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.Models.KeyListResult&gt;&#xA;override this.GetByAutomationAccountKey : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.Models.KeyListResult&gt;" Usage="automationAccountResource.GetByAutomationAccountKey cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Automation.Models.KeyListResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="0" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve the automation keys for an account.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/listKeys
            Operation Id: Keys_ListByAutomationAccount
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetByAutomationAccountKeyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.Models.KeyListResult&gt;&gt; GetByAutomationAccountKeyAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Automation.Models.KeyListResult&gt;&gt; GetByAutomationAccountKeyAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetByAutomationAccountKeyAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetByAutomationAccountKeyAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of KeyListResult))" />
      <MemberSignature Language="F#" Value="abstract member GetByAutomationAccountKeyAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.Models.KeyListResult&gt;&gt;&#xA;override this.GetByAutomationAccountKeyAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.Models.KeyListResult&gt;&gt;" Usage="automationAccountResource.GetByAutomationAccountKeyAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.Models.KeyListResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="0" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve the automation keys for an account.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/listKeys
            Operation Id: Keys_ListByAutomationAccount
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetByIdSoftwareUpdateConfigurationMachineRun">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Automation.Models.SoftwareUpdateConfigurationMachineRun&gt; GetByIdSoftwareUpdateConfigurationMachineRun (Guid softwareUpdateConfigurationMachineRunId, string clientRequestId = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Automation.Models.SoftwareUpdateConfigurationMachineRun&gt; GetByIdSoftwareUpdateConfigurationMachineRun(valuetype System.Guid softwareUpdateConfigurationMachineRunId, string clientRequestId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetByIdSoftwareUpdateConfigurationMachineRun(System.Guid,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetByIdSoftwareUpdateConfigurationMachineRun (softwareUpdateConfigurationMachineRunId As Guid, Optional clientRequestId As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SoftwareUpdateConfigurationMachineRun)" />
      <MemberSignature Language="F#" Value="abstract member GetByIdSoftwareUpdateConfigurationMachineRun : Guid * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.Models.SoftwareUpdateConfigurationMachineRun&gt;&#xA;override this.GetByIdSoftwareUpdateConfigurationMachineRun : Guid * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.Models.SoftwareUpdateConfigurationMachineRun&gt;" Usage="automationAccountResource.GetByIdSoftwareUpdateConfigurationMachineRun (softwareUpdateConfigurationMachineRunId, clientRequestId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Automation.Models.SoftwareUpdateConfigurationMachineRun&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="softwareUpdateConfigurationMachineRunId" Type="System.Guid" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="clientRequestId" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="softwareUpdateConfigurationMachineRunId"> The Id of the software update configuration machine run. </param>
        <param name="clientRequestId"> Identifies this specific client request. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a single software update configuration machine run by Id.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/softwareUpdateConfigurationMachineRuns/{softwareUpdateConfigurationMachineRunId}
            Operation Id: SoftwareUpdateConfigurationMachineRuns_GetById
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetByIdSoftwareUpdateConfigurationMachineRunAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.Models.SoftwareUpdateConfigurationMachineRun&gt;&gt; GetByIdSoftwareUpdateConfigurationMachineRunAsync (Guid softwareUpdateConfigurationMachineRunId, string clientRequestId = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Automation.Models.SoftwareUpdateConfigurationMachineRun&gt;&gt; GetByIdSoftwareUpdateConfigurationMachineRunAsync(valuetype System.Guid softwareUpdateConfigurationMachineRunId, string clientRequestId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetByIdSoftwareUpdateConfigurationMachineRunAsync(System.Guid,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetByIdSoftwareUpdateConfigurationMachineRunAsync (softwareUpdateConfigurationMachineRunId As Guid, Optional clientRequestId As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SoftwareUpdateConfigurationMachineRun))" />
      <MemberSignature Language="F#" Value="abstract member GetByIdSoftwareUpdateConfigurationMachineRunAsync : Guid * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.Models.SoftwareUpdateConfigurationMachineRun&gt;&gt;&#xA;override this.GetByIdSoftwareUpdateConfigurationMachineRunAsync : Guid * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.Models.SoftwareUpdateConfigurationMachineRun&gt;&gt;" Usage="automationAccountResource.GetByIdSoftwareUpdateConfigurationMachineRunAsync (softwareUpdateConfigurationMachineRunId, clientRequestId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.Models.SoftwareUpdateConfigurationMachineRun&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="softwareUpdateConfigurationMachineRunId" Type="System.Guid" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="clientRequestId" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="softwareUpdateConfigurationMachineRunId"> The Id of the software update configuration machine run. </param>
        <param name="clientRequestId"> Identifies this specific client request. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a single software update configuration machine run by Id.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/softwareUpdateConfigurationMachineRuns/{softwareUpdateConfigurationMachineRunId}
            Operation Id: SoftwareUpdateConfigurationMachineRuns_GetById
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetByIdSoftwareUpdateConfigurationRun">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Automation.Models.SoftwareUpdateConfigurationRun&gt; GetByIdSoftwareUpdateConfigurationRun (Guid softwareUpdateConfigurationRunId, string clientRequestId = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Automation.Models.SoftwareUpdateConfigurationRun&gt; GetByIdSoftwareUpdateConfigurationRun(valuetype System.Guid softwareUpdateConfigurationRunId, string clientRequestId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetByIdSoftwareUpdateConfigurationRun(System.Guid,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetByIdSoftwareUpdateConfigurationRun (softwareUpdateConfigurationRunId As Guid, Optional clientRequestId As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SoftwareUpdateConfigurationRun)" />
      <MemberSignature Language="F#" Value="abstract member GetByIdSoftwareUpdateConfigurationRun : Guid * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.Models.SoftwareUpdateConfigurationRun&gt;&#xA;override this.GetByIdSoftwareUpdateConfigurationRun : Guid * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.Models.SoftwareUpdateConfigurationRun&gt;" Usage="automationAccountResource.GetByIdSoftwareUpdateConfigurationRun (softwareUpdateConfigurationRunId, clientRequestId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Automation.Models.SoftwareUpdateConfigurationRun&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="softwareUpdateConfigurationRunId" Type="System.Guid" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="clientRequestId" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="softwareUpdateConfigurationRunId"> The Id of the software update configuration run. </param>
        <param name="clientRequestId"> Identifies this specific client request. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a single software update configuration Run by Id.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/softwareUpdateConfigurationRuns/{softwareUpdateConfigurationRunId}
            Operation Id: SoftwareUpdateConfigurationRuns_GetById
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetByIdSoftwareUpdateConfigurationRunAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.Models.SoftwareUpdateConfigurationRun&gt;&gt; GetByIdSoftwareUpdateConfigurationRunAsync (Guid softwareUpdateConfigurationRunId, string clientRequestId = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Automation.Models.SoftwareUpdateConfigurationRun&gt;&gt; GetByIdSoftwareUpdateConfigurationRunAsync(valuetype System.Guid softwareUpdateConfigurationRunId, string clientRequestId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetByIdSoftwareUpdateConfigurationRunAsync(System.Guid,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetByIdSoftwareUpdateConfigurationRunAsync (softwareUpdateConfigurationRunId As Guid, Optional clientRequestId As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SoftwareUpdateConfigurationRun))" />
      <MemberSignature Language="F#" Value="abstract member GetByIdSoftwareUpdateConfigurationRunAsync : Guid * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.Models.SoftwareUpdateConfigurationRun&gt;&gt;&#xA;override this.GetByIdSoftwareUpdateConfigurationRunAsync : Guid * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.Models.SoftwareUpdateConfigurationRun&gt;&gt;" Usage="automationAccountResource.GetByIdSoftwareUpdateConfigurationRunAsync (softwareUpdateConfigurationRunId, clientRequestId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.Models.SoftwareUpdateConfigurationRun&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="softwareUpdateConfigurationRunId" Type="System.Guid" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="clientRequestId" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="softwareUpdateConfigurationRunId"> The Id of the software update configuration run. </param>
        <param name="clientRequestId"> Identifies this specific client request. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a single software update configuration Run by Id.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/softwareUpdateConfigurationRuns/{softwareUpdateConfigurationRunId}
            Operation Id: SoftwareUpdateConfigurationRuns_GetById
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCertificate">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Automation.CertificateResource&gt; GetCertificate (string certificateName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Automation.CertificateResource&gt; GetCertificate(string certificateName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetCertificate(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCertificate (certificateName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of CertificateResource)" />
      <MemberSignature Language="F#" Value="abstract member GetCertificate : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.CertificateResource&gt;&#xA;override this.GetCertificate : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.CertificateResource&gt;" Usage="automationAccountResource.GetCertificate (certificateName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Automation.CertificateResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificateName" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="certificateName"> The name of certificate. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve the certificate identified by certificate name.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/certificates/{certificateName}
            Operation Id: Certificate_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="certificateName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="certificateName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCertificateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.CertificateResource&gt;&gt; GetCertificateAsync (string certificateName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Automation.CertificateResource&gt;&gt; GetCertificateAsync(string certificateName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetCertificateAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCertificateAsync (certificateName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of CertificateResource))" />
      <MemberSignature Language="F#" Value="abstract member GetCertificateAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.CertificateResource&gt;&gt;&#xA;override this.GetCertificateAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.CertificateResource&gt;&gt;" Usage="automationAccountResource.GetCertificateAsync (certificateName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.CertificateResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificateName" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="certificateName"> The name of certificate. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve the certificate identified by certificate name.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/certificates/{certificateName}
            Operation Id: Certificate_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="certificateName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="certificateName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCertificates">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Automation.CertificateCollection GetCertificates ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Automation.CertificateCollection GetCertificates() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetCertificates" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCertificates () As CertificateCollection" />
      <MemberSignature Language="F#" Value="abstract member GetCertificates : unit -&gt; Azure.ResourceManager.Automation.CertificateCollection&#xA;override this.GetCertificates : unit -&gt; Azure.ResourceManager.Automation.CertificateCollection" Usage="automationAccountResource.GetCertificates " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Automation.CertificateCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of CertificateResources in the AutomationAccount. </summary>
        <returns> An object representing collection of CertificateResources and their operations over a CertificateResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConnection">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Automation.ConnectionResource&gt; GetConnection (string connectionName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Automation.ConnectionResource&gt; GetConnection(string connectionName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetConnection(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetConnection (connectionName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ConnectionResource)" />
      <MemberSignature Language="F#" Value="abstract member GetConnection : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.ConnectionResource&gt;&#xA;override this.GetConnection : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.ConnectionResource&gt;" Usage="automationAccountResource.GetConnection (connectionName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Automation.ConnectionResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionName" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="connectionName"> The name of connection. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve the connection identified by connection name.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/connections/{connectionName}
            Operation Id: Connection_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="connectionName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="connectionName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetConnectionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.ConnectionResource&gt;&gt; GetConnectionAsync (string connectionName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Automation.ConnectionResource&gt;&gt; GetConnectionAsync(string connectionName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetConnectionAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetConnectionAsync (connectionName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ConnectionResource))" />
      <MemberSignature Language="F#" Value="abstract member GetConnectionAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.ConnectionResource&gt;&gt;&#xA;override this.GetConnectionAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.ConnectionResource&gt;&gt;" Usage="automationAccountResource.GetConnectionAsync (connectionName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.ConnectionResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionName" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="connectionName"> The name of connection. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve the connection identified by connection name.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/connections/{connectionName}
            Operation Id: Connection_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="connectionName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="connectionName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetConnections">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Automation.ConnectionCollection GetConnections ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Automation.ConnectionCollection GetConnections() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetConnections" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetConnections () As ConnectionCollection" />
      <MemberSignature Language="F#" Value="abstract member GetConnections : unit -&gt; Azure.ResourceManager.Automation.ConnectionCollection&#xA;override this.GetConnections : unit -&gt; Azure.ResourceManager.Automation.ConnectionCollection" Usage="automationAccountResource.GetConnections " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Automation.ConnectionCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ConnectionResources in the AutomationAccount. </summary>
        <returns> An object representing collection of ConnectionResources and their operations over a ConnectionResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConnectionType">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Automation.ConnectionTypeResource&gt; GetConnectionType (string connectionTypeName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Automation.ConnectionTypeResource&gt; GetConnectionType(string connectionTypeName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetConnectionType(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetConnectionType (connectionTypeName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ConnectionTypeResource)" />
      <MemberSignature Language="F#" Value="abstract member GetConnectionType : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.ConnectionTypeResource&gt;&#xA;override this.GetConnectionType : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.ConnectionTypeResource&gt;" Usage="automationAccountResource.GetConnectionType (connectionTypeName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Automation.ConnectionTypeResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionTypeName" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="connectionTypeName"> The name of connection type. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve the connection type identified by connection type name.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/connectionTypes/{connectionTypeName}
            Operation Id: ConnectionType_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="connectionTypeName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="connectionTypeName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetConnectionTypeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.ConnectionTypeResource&gt;&gt; GetConnectionTypeAsync (string connectionTypeName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Automation.ConnectionTypeResource&gt;&gt; GetConnectionTypeAsync(string connectionTypeName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetConnectionTypeAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetConnectionTypeAsync (connectionTypeName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ConnectionTypeResource))" />
      <MemberSignature Language="F#" Value="abstract member GetConnectionTypeAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.ConnectionTypeResource&gt;&gt;&#xA;override this.GetConnectionTypeAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.ConnectionTypeResource&gt;&gt;" Usage="automationAccountResource.GetConnectionTypeAsync (connectionTypeName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.ConnectionTypeResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionTypeName" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="connectionTypeName"> The name of connection type. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve the connection type identified by connection type name.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/connectionTypes/{connectionTypeName}
            Operation Id: ConnectionType_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="connectionTypeName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="connectionTypeName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetConnectionTypes">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Automation.ConnectionTypeCollection GetConnectionTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Automation.ConnectionTypeCollection GetConnectionTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetConnectionTypes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetConnectionTypes () As ConnectionTypeCollection" />
      <MemberSignature Language="F#" Value="abstract member GetConnectionTypes : unit -&gt; Azure.ResourceManager.Automation.ConnectionTypeCollection&#xA;override this.GetConnectionTypes : unit -&gt; Azure.ResourceManager.Automation.ConnectionTypeCollection" Usage="automationAccountResource.GetConnectionTypes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Automation.ConnectionTypeCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ConnectionTypeResources in the AutomationAccount. </summary>
        <returns> An object representing collection of ConnectionTypeResources and their operations over a ConnectionTypeResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCredential">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Automation.CredentialResource&gt; GetCredential (string credentialName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Automation.CredentialResource&gt; GetCredential(string credentialName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetCredential(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCredential (credentialName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of CredentialResource)" />
      <MemberSignature Language="F#" Value="abstract member GetCredential : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.CredentialResource&gt;&#xA;override this.GetCredential : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.CredentialResource&gt;" Usage="automationAccountResource.GetCredential (credentialName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Automation.CredentialResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credentialName" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="credentialName"> The name of credential. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve the credential identified by credential name.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/credentials/{credentialName}
            Operation Id: Credential_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="credentialName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="credentialName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCredentialAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.CredentialResource&gt;&gt; GetCredentialAsync (string credentialName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Automation.CredentialResource&gt;&gt; GetCredentialAsync(string credentialName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetCredentialAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCredentialAsync (credentialName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of CredentialResource))" />
      <MemberSignature Language="F#" Value="abstract member GetCredentialAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.CredentialResource&gt;&gt;&#xA;override this.GetCredentialAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.CredentialResource&gt;&gt;" Usage="automationAccountResource.GetCredentialAsync (credentialName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.CredentialResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credentialName" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="credentialName"> The name of credential. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve the credential identified by credential name.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/credentials/{credentialName}
            Operation Id: Credential_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="credentialName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="credentialName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCredentials">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Automation.CredentialCollection GetCredentials ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Automation.CredentialCollection GetCredentials() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetCredentials" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCredentials () As CredentialCollection" />
      <MemberSignature Language="F#" Value="abstract member GetCredentials : unit -&gt; Azure.ResourceManager.Automation.CredentialCollection&#xA;override this.GetCredentials : unit -&gt; Azure.ResourceManager.Automation.CredentialCollection" Usage="automationAccountResource.GetCredentials " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Automation.CredentialCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of CredentialResources in the AutomationAccount. </summary>
        <returns> An object representing collection of CredentialResources and their operations over a CredentialResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDscCompilationJob">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Automation.DscCompilationJobResource&gt; GetDscCompilationJob (string compilationJobName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Automation.DscCompilationJobResource&gt; GetDscCompilationJob(string compilationJobName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetDscCompilationJob(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDscCompilationJob (compilationJobName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DscCompilationJobResource)" />
      <MemberSignature Language="F#" Value="abstract member GetDscCompilationJob : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.DscCompilationJobResource&gt;&#xA;override this.GetDscCompilationJob : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.DscCompilationJobResource&gt;" Usage="automationAccountResource.GetDscCompilationJob (compilationJobName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Automation.DscCompilationJobResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="compilationJobName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="compilationJobName"> The DSC configuration Id. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve the Dsc configuration compilation job identified by job id.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/compilationjobs/{compilationJobName}
            Operation Id: DscCompilationJob_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="compilationJobName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="compilationJobName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDscCompilationJobAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.DscCompilationJobResource&gt;&gt; GetDscCompilationJobAsync (string compilationJobName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Automation.DscCompilationJobResource&gt;&gt; GetDscCompilationJobAsync(string compilationJobName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetDscCompilationJobAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDscCompilationJobAsync (compilationJobName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DscCompilationJobResource))" />
      <MemberSignature Language="F#" Value="abstract member GetDscCompilationJobAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.DscCompilationJobResource&gt;&gt;&#xA;override this.GetDscCompilationJobAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.DscCompilationJobResource&gt;&gt;" Usage="automationAccountResource.GetDscCompilationJobAsync (compilationJobName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.DscCompilationJobResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="compilationJobName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="compilationJobName"> The DSC configuration Id. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve the Dsc configuration compilation job identified by job id.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/compilationjobs/{compilationJobName}
            Operation Id: DscCompilationJob_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="compilationJobName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="compilationJobName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDscCompilationJobs">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Automation.DscCompilationJobCollection GetDscCompilationJobs ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Automation.DscCompilationJobCollection GetDscCompilationJobs() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetDscCompilationJobs" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDscCompilationJobs () As DscCompilationJobCollection" />
      <MemberSignature Language="F#" Value="abstract member GetDscCompilationJobs : unit -&gt; Azure.ResourceManager.Automation.DscCompilationJobCollection&#xA;override this.GetDscCompilationJobs : unit -&gt; Azure.ResourceManager.Automation.DscCompilationJobCollection" Usage="automationAccountResource.GetDscCompilationJobs " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Automation.DscCompilationJobCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of DscCompilationJobResources in the AutomationAccount. </summary>
        <returns> An object representing collection of DscCompilationJobResources and their operations over a DscCompilationJobResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDscCompilationJobStreams">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Automation.Models.AutomationJobStream&gt; GetDscCompilationJobStreams (Guid jobId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Automation.Models.AutomationJobStream&gt; GetDscCompilationJobStreams(valuetype System.Guid jobId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetDscCompilationJobStreams(System.Guid,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDscCompilationJobStreams (jobId As Guid, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of AutomationJobStream)" />
      <MemberSignature Language="F#" Value="abstract member GetDscCompilationJobStreams : Guid * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Automation.Models.AutomationJobStream&gt;&#xA;override this.GetDscCompilationJobStreams : Guid * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Automation.Models.AutomationJobStream&gt;" Usage="automationAccountResource.GetDscCompilationJobStreams (jobId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Automation.Models.AutomationJobStream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jobId" Type="System.Guid" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="jobId"> The job id. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve all the job streams for the compilation Job.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/compilationjobs/{jobId}/streams
            Operation Id: DscCompilationJobStream_ListByJob
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Automation.Models.AutomationJobStream" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDscCompilationJobStreamsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Automation.Models.AutomationJobStream&gt; GetDscCompilationJobStreamsAsync (Guid jobId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Automation.Models.AutomationJobStream&gt; GetDscCompilationJobStreamsAsync(valuetype System.Guid jobId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetDscCompilationJobStreamsAsync(System.Guid,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDscCompilationJobStreamsAsync (jobId As Guid, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of AutomationJobStream)" />
      <MemberSignature Language="F#" Value="abstract member GetDscCompilationJobStreamsAsync : Guid * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Automation.Models.AutomationJobStream&gt;&#xA;override this.GetDscCompilationJobStreamsAsync : Guid * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Automation.Models.AutomationJobStream&gt;" Usage="automationAccountResource.GetDscCompilationJobStreamsAsync (jobId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Automation.Models.AutomationJobStream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jobId" Type="System.Guid" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="jobId"> The job id. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve all the job streams for the compilation Job.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/compilationjobs/{jobId}/streams
            Operation Id: DscCompilationJobStream_ListByJob
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Automation.Models.AutomationJobStream" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDscCompilationJobStreamsByJob">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Automation.Models.JobStream&gt; GetDscCompilationJobStreamsByJob (Guid jobId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Automation.Models.JobStream&gt; GetDscCompilationJobStreamsByJob(valuetype System.Guid jobId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetDscCompilationJobStreamsByJob(System.Guid,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDscCompilationJobStreamsByJob (jobId As Guid, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of JobStream)" />
      <MemberSignature Language="F#" Value="abstract member GetDscCompilationJobStreamsByJob : Guid * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Automation.Models.JobStream&gt;&#xA;override this.GetDscCompilationJobStreamsByJob : Guid * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Automation.Models.JobStream&gt;" Usage="automationAccountResource.GetDscCompilationJobStreamsByJob (jobId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Automation.Models.JobStream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jobId" Type="System.Guid" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="jobId"> The job id. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve all the job streams for the compilation Job.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/compilationjobs/{jobId}/streams
            Operation Id: DscCompilationJobStream_ListByJob
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Automation.Models.JobStream" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDscCompilationJobStreamsByJobAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Automation.Models.JobStream&gt; GetDscCompilationJobStreamsByJobAsync (Guid jobId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Automation.Models.JobStream&gt; GetDscCompilationJobStreamsByJobAsync(valuetype System.Guid jobId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetDscCompilationJobStreamsByJobAsync(System.Guid,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDscCompilationJobStreamsByJobAsync (jobId As Guid, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of JobStream)" />
      <MemberSignature Language="F#" Value="abstract member GetDscCompilationJobStreamsByJobAsync : Guid * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Automation.Models.JobStream&gt;&#xA;override this.GetDscCompilationJobStreamsByJobAsync : Guid * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Automation.Models.JobStream&gt;" Usage="automationAccountResource.GetDscCompilationJobStreamsByJobAsync (jobId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Automation.Models.JobStream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jobId" Type="System.Guid" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="jobId"> The job id. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve all the job streams for the compilation Job.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/compilationjobs/{jobId}/streams
            Operation Id: DscCompilationJobStream_ListByJob
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Automation.Models.JobStream" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDscConfiguration">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Automation.DscConfigurationResource&gt; GetDscConfiguration (string configurationName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Automation.DscConfigurationResource&gt; GetDscConfiguration(string configurationName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetDscConfiguration(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDscConfiguration (configurationName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DscConfigurationResource)" />
      <MemberSignature Language="F#" Value="abstract member GetDscConfiguration : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.DscConfigurationResource&gt;&#xA;override this.GetDscConfiguration : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.DscConfigurationResource&gt;" Usage="automationAccountResource.GetDscConfiguration (configurationName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Automation.DscConfigurationResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configurationName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="configurationName"> The configuration name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve the configuration identified by configuration name.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/configurations/{configurationName}
            Operation Id: DscConfiguration_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="configurationName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="configurationName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDscConfigurationAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.DscConfigurationResource&gt;&gt; GetDscConfigurationAsync (string configurationName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Automation.DscConfigurationResource&gt;&gt; GetDscConfigurationAsync(string configurationName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetDscConfigurationAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDscConfigurationAsync (configurationName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DscConfigurationResource))" />
      <MemberSignature Language="F#" Value="abstract member GetDscConfigurationAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.DscConfigurationResource&gt;&gt;&#xA;override this.GetDscConfigurationAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.DscConfigurationResource&gt;&gt;" Usage="automationAccountResource.GetDscConfigurationAsync (configurationName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.DscConfigurationResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configurationName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="configurationName"> The configuration name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve the configuration identified by configuration name.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/configurations/{configurationName}
            Operation Id: DscConfiguration_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="configurationName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="configurationName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDscConfigurations">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Automation.DscConfigurationCollection GetDscConfigurations ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Automation.DscConfigurationCollection GetDscConfigurations() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetDscConfigurations" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDscConfigurations () As DscConfigurationCollection" />
      <MemberSignature Language="F#" Value="abstract member GetDscConfigurations : unit -&gt; Azure.ResourceManager.Automation.DscConfigurationCollection&#xA;override this.GetDscConfigurations : unit -&gt; Azure.ResourceManager.Automation.DscConfigurationCollection" Usage="automationAccountResource.GetDscConfigurations " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Automation.DscConfigurationCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of DscConfigurationResources in the AutomationAccount. </summary>
        <returns> An object representing collection of DscConfigurationResources and their operations over a DscConfigurationResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDscNode">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Automation.DscNodeResource&gt; GetDscNode (string nodeId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Automation.DscNodeResource&gt; GetDscNode(string nodeId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetDscNode(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDscNode (nodeId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DscNodeResource)" />
      <MemberSignature Language="F#" Value="abstract member GetDscNode : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.DscNodeResource&gt;&#xA;override this.GetDscNode : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.DscNodeResource&gt;" Usage="automationAccountResource.GetDscNode (nodeId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Automation.DscNodeResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodeId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="nodeId"> The node id. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve the dsc node identified by node id.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/nodes/{nodeId}
            Operation Id: DscNode_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="nodeId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="nodeId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDscNodeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.DscNodeResource&gt;&gt; GetDscNodeAsync (string nodeId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Automation.DscNodeResource&gt;&gt; GetDscNodeAsync(string nodeId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetDscNodeAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDscNodeAsync (nodeId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DscNodeResource))" />
      <MemberSignature Language="F#" Value="abstract member GetDscNodeAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.DscNodeResource&gt;&gt;&#xA;override this.GetDscNodeAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.DscNodeResource&gt;&gt;" Usage="automationAccountResource.GetDscNodeAsync (nodeId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.DscNodeResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodeId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="nodeId"> The node id. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve the dsc node identified by node id.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/nodes/{nodeId}
            Operation Id: DscNode_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="nodeId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="nodeId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDscNodeConfiguration">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Automation.DscNodeConfigurationResource&gt; GetDscNodeConfiguration (string nodeConfigurationName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Automation.DscNodeConfigurationResource&gt; GetDscNodeConfiguration(string nodeConfigurationName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetDscNodeConfiguration(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDscNodeConfiguration (nodeConfigurationName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DscNodeConfigurationResource)" />
      <MemberSignature Language="F#" Value="abstract member GetDscNodeConfiguration : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.DscNodeConfigurationResource&gt;&#xA;override this.GetDscNodeConfiguration : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.DscNodeConfigurationResource&gt;" Usage="automationAccountResource.GetDscNodeConfiguration (nodeConfigurationName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Automation.DscNodeConfigurationResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodeConfigurationName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="nodeConfigurationName"> The Dsc node configuration name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve the Dsc node configurations by node configuration.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/nodeConfigurations/{nodeConfigurationName}
            Operation Id: DscNodeConfiguration_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="nodeConfigurationName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="nodeConfigurationName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDscNodeConfigurationAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.DscNodeConfigurationResource&gt;&gt; GetDscNodeConfigurationAsync (string nodeConfigurationName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Automation.DscNodeConfigurationResource&gt;&gt; GetDscNodeConfigurationAsync(string nodeConfigurationName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetDscNodeConfigurationAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDscNodeConfigurationAsync (nodeConfigurationName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DscNodeConfigurationResource))" />
      <MemberSignature Language="F#" Value="abstract member GetDscNodeConfigurationAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.DscNodeConfigurationResource&gt;&gt;&#xA;override this.GetDscNodeConfigurationAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.DscNodeConfigurationResource&gt;&gt;" Usage="automationAccountResource.GetDscNodeConfigurationAsync (nodeConfigurationName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.DscNodeConfigurationResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodeConfigurationName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="nodeConfigurationName"> The Dsc node configuration name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve the Dsc node configurations by node configuration.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/nodeConfigurations/{nodeConfigurationName}
            Operation Id: DscNodeConfiguration_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="nodeConfigurationName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="nodeConfigurationName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDscNodeConfigurations">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Automation.DscNodeConfigurationCollection GetDscNodeConfigurations ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Automation.DscNodeConfigurationCollection GetDscNodeConfigurations() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetDscNodeConfigurations" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDscNodeConfigurations () As DscNodeConfigurationCollection" />
      <MemberSignature Language="F#" Value="abstract member GetDscNodeConfigurations : unit -&gt; Azure.ResourceManager.Automation.DscNodeConfigurationCollection&#xA;override this.GetDscNodeConfigurations : unit -&gt; Azure.ResourceManager.Automation.DscNodeConfigurationCollection" Usage="automationAccountResource.GetDscNodeConfigurations " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Automation.DscNodeConfigurationCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of DscNodeConfigurationResources in the AutomationAccount. </summary>
        <returns> An object representing collection of DscNodeConfigurationResources and their operations over a DscNodeConfigurationResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDscNodes">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Automation.DscNodeCollection GetDscNodes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Automation.DscNodeCollection GetDscNodes() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetDscNodes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDscNodes () As DscNodeCollection" />
      <MemberSignature Language="F#" Value="abstract member GetDscNodes : unit -&gt; Azure.ResourceManager.Automation.DscNodeCollection&#xA;override this.GetDscNodes : unit -&gt; Azure.ResourceManager.Automation.DscNodeCollection" Usage="automationAccountResource.GetDscNodes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Automation.DscNodeCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of DscNodeResources in the AutomationAccount. </summary>
        <returns> An object representing collection of DscNodeResources and their operations over a DscNodeResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFieldsByType">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Automation.Models.AutomationModuleField&gt; GetFieldsByType (string typeName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Automation.Models.AutomationModuleField&gt; GetFieldsByType(string typeName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetFieldsByType(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFieldsByType (typeName As String, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of AutomationModuleField)" />
      <MemberSignature Language="F#" Value="abstract member GetFieldsByType : string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Automation.Models.AutomationModuleField&gt;&#xA;override this.GetFieldsByType : string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Automation.Models.AutomationModuleField&gt;" Usage="automationAccountResource.GetFieldsByType (typeName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Automation.Models.AutomationModuleField&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="typeName"> The name of type. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve a list of fields of a given type across all accessible modules.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/objectDataTypes/{typeName}/fields
            Operation Id: ObjectDataTypes_ListFieldsByType
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Automation.Models.AutomationModuleField" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="typeName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="typeName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetFieldsByTypeAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Automation.Models.AutomationModuleField&gt; GetFieldsByTypeAsync (string typeName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Automation.Models.AutomationModuleField&gt; GetFieldsByTypeAsync(string typeName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetFieldsByTypeAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFieldsByTypeAsync (typeName As String, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of AutomationModuleField)" />
      <MemberSignature Language="F#" Value="abstract member GetFieldsByTypeAsync : string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Automation.Models.AutomationModuleField&gt;&#xA;override this.GetFieldsByTypeAsync : string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Automation.Models.AutomationModuleField&gt;" Usage="automationAccountResource.GetFieldsByTypeAsync (typeName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Automation.Models.AutomationModuleField&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="typeName"> The name of type. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve a list of fields of a given type across all accessible modules.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/objectDataTypes/{typeName}/fields
            Operation Id: ObjectDataTypes_ListFieldsByType
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Automation.Models.AutomationModuleField" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="typeName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="typeName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetFieldsByTypeObjectDataTypes">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Automation.Models.TypeField&gt; GetFieldsByTypeObjectDataTypes (string typeName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Automation.Models.TypeField&gt; GetFieldsByTypeObjectDataTypes(string typeName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetFieldsByTypeObjectDataTypes(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFieldsByTypeObjectDataTypes (typeName As String, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of TypeField)" />
      <MemberSignature Language="F#" Value="abstract member GetFieldsByTypeObjectDataTypes : string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Automation.Models.TypeField&gt;&#xA;override this.GetFieldsByTypeObjectDataTypes : string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Automation.Models.TypeField&gt;" Usage="automationAccountResource.GetFieldsByTypeObjectDataTypes (typeName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Automation.Models.TypeField&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="typeName"> The name of type. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve a list of fields of a given type across all accessible modules.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/objectDataTypes/{typeName}/fields
            Operation Id: ObjectDataTypes_ListFieldsByType
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Automation.Models.TypeField" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="typeName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="typeName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetFieldsByTypeObjectDataTypesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Automation.Models.TypeField&gt; GetFieldsByTypeObjectDataTypesAsync (string typeName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Automation.Models.TypeField&gt; GetFieldsByTypeObjectDataTypesAsync(string typeName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetFieldsByTypeObjectDataTypesAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFieldsByTypeObjectDataTypesAsync (typeName As String, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of TypeField)" />
      <MemberSignature Language="F#" Value="abstract member GetFieldsByTypeObjectDataTypesAsync : string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Automation.Models.TypeField&gt;&#xA;override this.GetFieldsByTypeObjectDataTypesAsync : string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Automation.Models.TypeField&gt;" Usage="automationAccountResource.GetFieldsByTypeObjectDataTypesAsync (typeName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Automation.Models.TypeField&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="typeName"> The name of type. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve a list of fields of a given type across all accessible modules.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/objectDataTypes/{typeName}/fields
            Operation Id: ObjectDataTypes_ListFieldsByType
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Automation.Models.TypeField" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="typeName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="typeName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetHybridRunbookWorkerGroup">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Automation.HybridRunbookWorkerGroupResource&gt; GetHybridRunbookWorkerGroup (string hybridRunbookWorkerGroupName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Automation.HybridRunbookWorkerGroupResource&gt; GetHybridRunbookWorkerGroup(string hybridRunbookWorkerGroupName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetHybridRunbookWorkerGroup(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetHybridRunbookWorkerGroup (hybridRunbookWorkerGroupName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of HybridRunbookWorkerGroupResource)" />
      <MemberSignature Language="F#" Value="abstract member GetHybridRunbookWorkerGroup : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.HybridRunbookWorkerGroupResource&gt;&#xA;override this.GetHybridRunbookWorkerGroup : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.HybridRunbookWorkerGroupResource&gt;" Usage="automationAccountResource.GetHybridRunbookWorkerGroup (hybridRunbookWorkerGroupName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Automation.HybridRunbookWorkerGroupResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hybridRunbookWorkerGroupName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="hybridRunbookWorkerGroupName"> The hybrid runbook worker group name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve a hybrid runbook worker group.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/hybridRunbookWorkerGroups/{hybridRunbookWorkerGroupName}
            Operation Id: HybridRunbookWorkerGroup_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="hybridRunbookWorkerGroupName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="hybridRunbookWorkerGroupName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetHybridRunbookWorkerGroupAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.HybridRunbookWorkerGroupResource&gt;&gt; GetHybridRunbookWorkerGroupAsync (string hybridRunbookWorkerGroupName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Automation.HybridRunbookWorkerGroupResource&gt;&gt; GetHybridRunbookWorkerGroupAsync(string hybridRunbookWorkerGroupName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetHybridRunbookWorkerGroupAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetHybridRunbookWorkerGroupAsync (hybridRunbookWorkerGroupName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of HybridRunbookWorkerGroupResource))" />
      <MemberSignature Language="F#" Value="abstract member GetHybridRunbookWorkerGroupAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.HybridRunbookWorkerGroupResource&gt;&gt;&#xA;override this.GetHybridRunbookWorkerGroupAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.HybridRunbookWorkerGroupResource&gt;&gt;" Usage="automationAccountResource.GetHybridRunbookWorkerGroupAsync (hybridRunbookWorkerGroupName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.HybridRunbookWorkerGroupResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hybridRunbookWorkerGroupName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="hybridRunbookWorkerGroupName"> The hybrid runbook worker group name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve a hybrid runbook worker group.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/hybridRunbookWorkerGroups/{hybridRunbookWorkerGroupName}
            Operation Id: HybridRunbookWorkerGroup_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="hybridRunbookWorkerGroupName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="hybridRunbookWorkerGroupName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetHybridRunbookWorkerGroups">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Automation.HybridRunbookWorkerGroupCollection GetHybridRunbookWorkerGroups ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Automation.HybridRunbookWorkerGroupCollection GetHybridRunbookWorkerGroups() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetHybridRunbookWorkerGroups" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetHybridRunbookWorkerGroups () As HybridRunbookWorkerGroupCollection" />
      <MemberSignature Language="F#" Value="abstract member GetHybridRunbookWorkerGroups : unit -&gt; Azure.ResourceManager.Automation.HybridRunbookWorkerGroupCollection&#xA;override this.GetHybridRunbookWorkerGroups : unit -&gt; Azure.ResourceManager.Automation.HybridRunbookWorkerGroupCollection" Usage="automationAccountResource.GetHybridRunbookWorkerGroups " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Automation.HybridRunbookWorkerGroupCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of HybridRunbookWorkerGroupResources in the AutomationAccount. </summary>
        <returns> An object representing collection of HybridRunbookWorkerGroupResources and their operations over a HybridRunbookWorkerGroupResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetJob">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Automation.JobResource&gt; GetJob (string jobName, string clientRequestId = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Automation.JobResource&gt; GetJob(string jobName, string clientRequestId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetJob(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetJob (jobName As String, Optional clientRequestId As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of JobResource)" />
      <MemberSignature Language="F#" Value="abstract member GetJob : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.JobResource&gt;&#xA;override this.GetJob : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.JobResource&gt;" Usage="automationAccountResource.GetJob (jobName, clientRequestId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Automation.JobResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jobName" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="clientRequestId" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="jobName"> The job name. </param>
        <param name="clientRequestId"> Identifies this specific client request. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve the job identified by job name.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/jobs/{jobName}
            Operation Id: Job_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="jobName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="jobName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetJobAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.JobResource&gt;&gt; GetJobAsync (string jobName, string clientRequestId = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Automation.JobResource&gt;&gt; GetJobAsync(string jobName, string clientRequestId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetJobAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetJobAsync (jobName As String, Optional clientRequestId As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of JobResource))" />
      <MemberSignature Language="F#" Value="abstract member GetJobAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.JobResource&gt;&gt;&#xA;override this.GetJobAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.JobResource&gt;&gt;" Usage="automationAccountResource.GetJobAsync (jobName, clientRequestId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.JobResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jobName" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="clientRequestId" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="jobName"> The job name. </param>
        <param name="clientRequestId"> Identifies this specific client request. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve the job identified by job name.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/jobs/{jobName}
            Operation Id: Job_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="jobName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="jobName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetJobs">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Automation.JobCollection GetJobs ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Automation.JobCollection GetJobs() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetJobs" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetJobs () As JobCollection" />
      <MemberSignature Language="F#" Value="abstract member GetJobs : unit -&gt; Azure.ResourceManager.Automation.JobCollection&#xA;override this.GetJobs : unit -&gt; Azure.ResourceManager.Automation.JobCollection" Usage="automationAccountResource.GetJobs " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Automation.JobCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of JobResources in the AutomationAccount. </summary>
        <returns> An object representing collection of JobResources and their operations over a JobResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetJobSchedule">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Automation.JobScheduleResource&gt; GetJobSchedule (Guid jobScheduleId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Automation.JobScheduleResource&gt; GetJobSchedule(valuetype System.Guid jobScheduleId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetJobSchedule(System.Guid,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetJobSchedule (jobScheduleId As Guid, Optional cancellationToken As CancellationToken = Nothing) As Response(Of JobScheduleResource)" />
      <MemberSignature Language="F#" Value="abstract member GetJobSchedule : Guid * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.JobScheduleResource&gt;&#xA;override this.GetJobSchedule : Guid * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.JobScheduleResource&gt;" Usage="automationAccountResource.GetJobSchedule (jobScheduleId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Automation.JobScheduleResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jobScheduleId" Type="System.Guid" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="jobScheduleId"> The job schedule name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve the job schedule identified by job schedule name.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/jobSchedules/{jobScheduleId}
            Operation Id: JobSchedule_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetJobScheduleAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.JobScheduleResource&gt;&gt; GetJobScheduleAsync (Guid jobScheduleId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Automation.JobScheduleResource&gt;&gt; GetJobScheduleAsync(valuetype System.Guid jobScheduleId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetJobScheduleAsync(System.Guid,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetJobScheduleAsync (jobScheduleId As Guid, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of JobScheduleResource))" />
      <MemberSignature Language="F#" Value="abstract member GetJobScheduleAsync : Guid * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.JobScheduleResource&gt;&gt;&#xA;override this.GetJobScheduleAsync : Guid * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.JobScheduleResource&gt;&gt;" Usage="automationAccountResource.GetJobScheduleAsync (jobScheduleId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.JobScheduleResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jobScheduleId" Type="System.Guid" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="jobScheduleId"> The job schedule name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve the job schedule identified by job schedule name.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/jobSchedules/{jobScheduleId}
            Operation Id: JobSchedule_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetJobSchedules">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Automation.JobScheduleCollection GetJobSchedules ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Automation.JobScheduleCollection GetJobSchedules() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetJobSchedules" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetJobSchedules () As JobScheduleCollection" />
      <MemberSignature Language="F#" Value="abstract member GetJobSchedules : unit -&gt; Azure.ResourceManager.Automation.JobScheduleCollection&#xA;override this.GetJobSchedules : unit -&gt; Azure.ResourceManager.Automation.JobScheduleCollection" Usage="automationAccountResource.GetJobSchedules " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Automation.JobScheduleCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of JobScheduleResources in the AutomationAccount. </summary>
        <returns> An object representing collection of JobScheduleResources and their operations over a JobScheduleResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLinkedWorkspace">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Automation.Models.AutomationLinkedWorkspace&gt; GetLinkedWorkspace (System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Automation.Models.AutomationLinkedWorkspace&gt; GetLinkedWorkspace(valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetLinkedWorkspace(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLinkedWorkspace (Optional cancellationToken As CancellationToken = Nothing) As Response(Of AutomationLinkedWorkspace)" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="F#" Value="abstract member GetLinkedWorkspace : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.Models.AutomationLinkedWorkspace&gt;&#xA;override this.GetLinkedWorkspace : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.Models.AutomationLinkedWorkspace&gt;" Usage="automationAccountResource.GetLinkedWorkspace cancellationToken" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Automation.Models.LinkedWorkspace&gt; GetLinkedWorkspace (System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Automation.Models.LinkedWorkspace&gt; GetLinkedWorkspace(valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLinkedWorkspace (Optional cancellationToken As CancellationToken = Nothing) As Response(Of LinkedWorkspace)" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="F#" Value="abstract member GetLinkedWorkspace : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.Models.LinkedWorkspace&gt;&#xA;override this.GetLinkedWorkspace : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.Models.LinkedWorkspace&gt;" Usage="automationAccountResource.GetLinkedWorkspace cancellationToken" FrameworkAlternate="azure-dotnet-preview" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="azure-dotnet">Azure.Response&lt;Azure.ResourceManager.Automation.Models.AutomationLinkedWorkspace&gt;</ReturnType>
        <ReturnType FrameworkAlternate="azure-dotnet-preview">Azure.Response&lt;Azure.ResourceManager.Automation.Models.LinkedWorkspace&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve the linked workspace for the account id.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/linkedWorkspace
            Operation Id: LinkedWorkspace_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLinkedWorkspaceAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.Models.AutomationLinkedWorkspace&gt;&gt; GetLinkedWorkspaceAsync (System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Automation.Models.AutomationLinkedWorkspace&gt;&gt; GetLinkedWorkspaceAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetLinkedWorkspaceAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLinkedWorkspaceAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AutomationLinkedWorkspace))" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="F#" Value="abstract member GetLinkedWorkspaceAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.Models.AutomationLinkedWorkspace&gt;&gt;&#xA;override this.GetLinkedWorkspaceAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.Models.AutomationLinkedWorkspace&gt;&gt;" Usage="automationAccountResource.GetLinkedWorkspaceAsync cancellationToken" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.Models.LinkedWorkspace&gt;&gt; GetLinkedWorkspaceAsync (System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Automation.Models.LinkedWorkspace&gt;&gt; GetLinkedWorkspaceAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLinkedWorkspaceAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of LinkedWorkspace))" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="F#" Value="abstract member GetLinkedWorkspaceAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.Models.LinkedWorkspace&gt;&gt;&#xA;override this.GetLinkedWorkspaceAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.Models.LinkedWorkspace&gt;&gt;" Usage="automationAccountResource.GetLinkedWorkspaceAsync cancellationToken" FrameworkAlternate="azure-dotnet-preview" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="azure-dotnet">System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.Models.AutomationLinkedWorkspace&gt;&gt;</ReturnType>
        <ReturnType FrameworkAlternate="azure-dotnet-preview">System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.Models.LinkedWorkspace&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve the linked workspace for the account id.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/linkedWorkspace
            Operation Id: LinkedWorkspace_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRunbook">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Automation.RunbookResource&gt; GetRunbook (string runbookName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Automation.RunbookResource&gt; GetRunbook(string runbookName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetRunbook(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRunbook (runbookName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of RunbookResource)" />
      <MemberSignature Language="F#" Value="abstract member GetRunbook : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.RunbookResource&gt;&#xA;override this.GetRunbook : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.RunbookResource&gt;" Usage="automationAccountResource.GetRunbook (runbookName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Automation.RunbookResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="runbookName" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="runbookName"> The runbook name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve the runbook identified by runbook name.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/runbooks/{runbookName}
            Operation Id: Runbook_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="runbookName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="runbookName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRunbookAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.RunbookResource&gt;&gt; GetRunbookAsync (string runbookName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Automation.RunbookResource&gt;&gt; GetRunbookAsync(string runbookName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetRunbookAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRunbookAsync (runbookName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of RunbookResource))" />
      <MemberSignature Language="F#" Value="abstract member GetRunbookAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.RunbookResource&gt;&gt;&#xA;override this.GetRunbookAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.RunbookResource&gt;&gt;" Usage="automationAccountResource.GetRunbookAsync (runbookName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.RunbookResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="runbookName" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="runbookName"> The runbook name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve the runbook identified by runbook name.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/runbooks/{runbookName}
            Operation Id: Runbook_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="runbookName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="runbookName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRunbooks">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Automation.RunbookCollection GetRunbooks ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Automation.RunbookCollection GetRunbooks() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetRunbooks" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRunbooks () As RunbookCollection" />
      <MemberSignature Language="F#" Value="abstract member GetRunbooks : unit -&gt; Azure.ResourceManager.Automation.RunbookCollection&#xA;override this.GetRunbooks : unit -&gt; Azure.ResourceManager.Automation.RunbookCollection" Usage="automationAccountResource.GetRunbooks " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Automation.RunbookCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of RunbookResources in the AutomationAccount. </summary>
        <returns> An object representing collection of RunbookResources and their operations over a RunbookResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSchedule">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Automation.ScheduleResource&gt; GetSchedule (string scheduleName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Automation.ScheduleResource&gt; GetSchedule(string scheduleName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetSchedule(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSchedule (scheduleName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ScheduleResource)" />
      <MemberSignature Language="F#" Value="abstract member GetSchedule : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.ScheduleResource&gt;&#xA;override this.GetSchedule : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.ScheduleResource&gt;" Usage="automationAccountResource.GetSchedule (scheduleName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Automation.ScheduleResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scheduleName" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="scheduleName"> The schedule name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve the schedule identified by schedule name.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/schedules/{scheduleName}
            Operation Id: Schedule_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="scheduleName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="scheduleName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetScheduleAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.ScheduleResource&gt;&gt; GetScheduleAsync (string scheduleName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Automation.ScheduleResource&gt;&gt; GetScheduleAsync(string scheduleName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetScheduleAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetScheduleAsync (scheduleName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ScheduleResource))" />
      <MemberSignature Language="F#" Value="abstract member GetScheduleAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.ScheduleResource&gt;&gt;&#xA;override this.GetScheduleAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.ScheduleResource&gt;&gt;" Usage="automationAccountResource.GetScheduleAsync (scheduleName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.ScheduleResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scheduleName" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="scheduleName"> The schedule name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve the schedule identified by schedule name.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/schedules/{scheduleName}
            Operation Id: Schedule_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="scheduleName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="scheduleName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSchedules">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Automation.ScheduleCollection GetSchedules ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Automation.ScheduleCollection GetSchedules() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetSchedules" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSchedules () As ScheduleCollection" />
      <MemberSignature Language="F#" Value="abstract member GetSchedules : unit -&gt; Azure.ResourceManager.Automation.ScheduleCollection&#xA;override this.GetSchedules : unit -&gt; Azure.ResourceManager.Automation.ScheduleCollection" Usage="automationAccountResource.GetSchedules " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Automation.ScheduleCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ScheduleResources in the AutomationAccount. </summary>
        <returns> An object representing collection of ScheduleResources and their operations over a ScheduleResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSoftwareUpdateConfiguration">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Automation.SoftwareUpdateConfigurationResource&gt; GetSoftwareUpdateConfiguration (string softwareUpdateConfigurationName, string clientRequestId = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Automation.SoftwareUpdateConfigurationResource&gt; GetSoftwareUpdateConfiguration(string softwareUpdateConfigurationName, string clientRequestId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetSoftwareUpdateConfiguration(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSoftwareUpdateConfiguration (softwareUpdateConfigurationName As String, Optional clientRequestId As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SoftwareUpdateConfigurationResource)" />
      <MemberSignature Language="F#" Value="abstract member GetSoftwareUpdateConfiguration : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.SoftwareUpdateConfigurationResource&gt;&#xA;override this.GetSoftwareUpdateConfiguration : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.SoftwareUpdateConfigurationResource&gt;" Usage="automationAccountResource.GetSoftwareUpdateConfiguration (softwareUpdateConfigurationName, clientRequestId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Automation.SoftwareUpdateConfigurationResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="softwareUpdateConfigurationName" Type="System.String" />
        <Parameter Name="clientRequestId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="softwareUpdateConfigurationName"> The name of the software update configuration to be created. </param>
        <param name="clientRequestId"> Identifies this specific client request. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a single software update configuration by name.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/softwareUpdateConfigurations/{softwareUpdateConfigurationName}
            Operation Id: SoftwareUpdateConfigurations_GetByName
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="softwareUpdateConfigurationName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="softwareUpdateConfigurationName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSoftwareUpdateConfigurationAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.SoftwareUpdateConfigurationResource&gt;&gt; GetSoftwareUpdateConfigurationAsync (string softwareUpdateConfigurationName, string clientRequestId = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Automation.SoftwareUpdateConfigurationResource&gt;&gt; GetSoftwareUpdateConfigurationAsync(string softwareUpdateConfigurationName, string clientRequestId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetSoftwareUpdateConfigurationAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSoftwareUpdateConfigurationAsync (softwareUpdateConfigurationName As String, Optional clientRequestId As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SoftwareUpdateConfigurationResource))" />
      <MemberSignature Language="F#" Value="abstract member GetSoftwareUpdateConfigurationAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.SoftwareUpdateConfigurationResource&gt;&gt;&#xA;override this.GetSoftwareUpdateConfigurationAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.SoftwareUpdateConfigurationResource&gt;&gt;" Usage="automationAccountResource.GetSoftwareUpdateConfigurationAsync (softwareUpdateConfigurationName, clientRequestId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.SoftwareUpdateConfigurationResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="softwareUpdateConfigurationName" Type="System.String" />
        <Parameter Name="clientRequestId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="softwareUpdateConfigurationName"> The name of the software update configuration to be created. </param>
        <param name="clientRequestId"> Identifies this specific client request. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a single software update configuration by name.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/softwareUpdateConfigurations/{softwareUpdateConfigurationName}
            Operation Id: SoftwareUpdateConfigurations_GetByName
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="softwareUpdateConfigurationName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="softwareUpdateConfigurationName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSoftwareUpdateConfigurationMachineRun">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Automation.Models.SoftwareUpdateConfigurationMachineRun&gt; GetSoftwareUpdateConfigurationMachineRun (Guid softwareUpdateConfigurationMachineRunId, string clientRequestId = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Automation.Models.SoftwareUpdateConfigurationMachineRun&gt; GetSoftwareUpdateConfigurationMachineRun(valuetype System.Guid softwareUpdateConfigurationMachineRunId, string clientRequestId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetSoftwareUpdateConfigurationMachineRun(System.Guid,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSoftwareUpdateConfigurationMachineRun (softwareUpdateConfigurationMachineRunId As Guid, Optional clientRequestId As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SoftwareUpdateConfigurationMachineRun)" />
      <MemberSignature Language="F#" Value="abstract member GetSoftwareUpdateConfigurationMachineRun : Guid * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.Models.SoftwareUpdateConfigurationMachineRun&gt;&#xA;override this.GetSoftwareUpdateConfigurationMachineRun : Guid * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.Models.SoftwareUpdateConfigurationMachineRun&gt;" Usage="automationAccountResource.GetSoftwareUpdateConfigurationMachineRun (softwareUpdateConfigurationMachineRunId, clientRequestId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Automation.Models.SoftwareUpdateConfigurationMachineRun&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="softwareUpdateConfigurationMachineRunId" Type="System.Guid" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="clientRequestId" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="softwareUpdateConfigurationMachineRunId"> The Id of the software update configuration machine run. </param>
        <param name="clientRequestId"> Identifies this specific client request. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a single software update configuration machine run by Id.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/softwareUpdateConfigurationMachineRuns/{softwareUpdateConfigurationMachineRunId}
            Operation Id: SoftwareUpdateConfigurationMachineRuns_GetById
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSoftwareUpdateConfigurationMachineRunAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.Models.SoftwareUpdateConfigurationMachineRun&gt;&gt; GetSoftwareUpdateConfigurationMachineRunAsync (Guid softwareUpdateConfigurationMachineRunId, string clientRequestId = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Automation.Models.SoftwareUpdateConfigurationMachineRun&gt;&gt; GetSoftwareUpdateConfigurationMachineRunAsync(valuetype System.Guid softwareUpdateConfigurationMachineRunId, string clientRequestId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetSoftwareUpdateConfigurationMachineRunAsync(System.Guid,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSoftwareUpdateConfigurationMachineRunAsync (softwareUpdateConfigurationMachineRunId As Guid, Optional clientRequestId As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SoftwareUpdateConfigurationMachineRun))" />
      <MemberSignature Language="F#" Value="abstract member GetSoftwareUpdateConfigurationMachineRunAsync : Guid * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.Models.SoftwareUpdateConfigurationMachineRun&gt;&gt;&#xA;override this.GetSoftwareUpdateConfigurationMachineRunAsync : Guid * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.Models.SoftwareUpdateConfigurationMachineRun&gt;&gt;" Usage="automationAccountResource.GetSoftwareUpdateConfigurationMachineRunAsync (softwareUpdateConfigurationMachineRunId, clientRequestId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.Models.SoftwareUpdateConfigurationMachineRun&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="softwareUpdateConfigurationMachineRunId" Type="System.Guid" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="clientRequestId" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="softwareUpdateConfigurationMachineRunId"> The Id of the software update configuration machine run. </param>
        <param name="clientRequestId"> Identifies this specific client request. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a single software update configuration machine run by Id.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/softwareUpdateConfigurationMachineRuns/{softwareUpdateConfigurationMachineRunId}
            Operation Id: SoftwareUpdateConfigurationMachineRuns_GetById
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSoftwareUpdateConfigurationMachineRuns">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Automation.Models.SoftwareUpdateConfigurationMachineRun&gt; GetSoftwareUpdateConfigurationMachineRuns (string clientRequestId = default, string filter = default, string skip = default, string top = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Automation.Models.SoftwareUpdateConfigurationMachineRun&gt; GetSoftwareUpdateConfigurationMachineRuns(string clientRequestId, string filter, string skip, string top, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetSoftwareUpdateConfigurationMachineRuns(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSoftwareUpdateConfigurationMachineRuns (Optional clientRequestId As String = Nothing, Optional filter As String = Nothing, Optional skip As String = Nothing, Optional top As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of SoftwareUpdateConfigurationMachineRun)" />
      <MemberSignature Language="F#" Value="abstract member GetSoftwareUpdateConfigurationMachineRuns : string * string * string * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Automation.Models.SoftwareUpdateConfigurationMachineRun&gt;&#xA;override this.GetSoftwareUpdateConfigurationMachineRuns : string * string * string * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Automation.Models.SoftwareUpdateConfigurationMachineRun&gt;" Usage="automationAccountResource.GetSoftwareUpdateConfigurationMachineRuns (clientRequestId, filter, skip, top, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Automation.Models.SoftwareUpdateConfigurationMachineRun&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clientRequestId" Type="System.String" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="skip" Type="System.String" />
        <Parameter Name="top" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="clientRequestId"> Identifies this specific client request. </param>
        <param name="filter"> The filter to apply on the operation. You can use the following filters: 'properties/osType', 'properties/status', 'properties/startTime', and 'properties/softwareUpdateConfiguration/name'. </param>
        <param name="skip"> number of entries you skip before returning results. </param>
        <param name="top"> Maximum number of entries returned in the results collection. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Return list of software update configuration machine runs
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/softwareUpdateConfigurationMachineRuns
            Operation Id: SoftwareUpdateConfigurationMachineRuns_List
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Automation.Models.SoftwareUpdateConfigurationMachineRun" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSoftwareUpdateConfigurationMachineRunsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Automation.Models.SoftwareUpdateConfigurationMachineRun&gt; GetSoftwareUpdateConfigurationMachineRunsAsync (string clientRequestId = default, string filter = default, string skip = default, string top = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Automation.Models.SoftwareUpdateConfigurationMachineRun&gt; GetSoftwareUpdateConfigurationMachineRunsAsync(string clientRequestId, string filter, string skip, string top, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetSoftwareUpdateConfigurationMachineRunsAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSoftwareUpdateConfigurationMachineRunsAsync (Optional clientRequestId As String = Nothing, Optional filter As String = Nothing, Optional skip As String = Nothing, Optional top As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of SoftwareUpdateConfigurationMachineRun)" />
      <MemberSignature Language="F#" Value="abstract member GetSoftwareUpdateConfigurationMachineRunsAsync : string * string * string * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Automation.Models.SoftwareUpdateConfigurationMachineRun&gt;&#xA;override this.GetSoftwareUpdateConfigurationMachineRunsAsync : string * string * string * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Automation.Models.SoftwareUpdateConfigurationMachineRun&gt;" Usage="automationAccountResource.GetSoftwareUpdateConfigurationMachineRunsAsync (clientRequestId, filter, skip, top, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Automation.Models.SoftwareUpdateConfigurationMachineRun&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clientRequestId" Type="System.String" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="skip" Type="System.String" />
        <Parameter Name="top" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="clientRequestId"> Identifies this specific client request. </param>
        <param name="filter"> The filter to apply on the operation. You can use the following filters: 'properties/osType', 'properties/status', 'properties/startTime', and 'properties/softwareUpdateConfiguration/name'. </param>
        <param name="skip"> number of entries you skip before returning results. </param>
        <param name="top"> Maximum number of entries returned in the results collection. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Return list of software update configuration machine runs
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/softwareUpdateConfigurationMachineRuns
            Operation Id: SoftwareUpdateConfigurationMachineRuns_List
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Automation.Models.SoftwareUpdateConfigurationMachineRun" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSoftwareUpdateConfigurationRun">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Automation.Models.SoftwareUpdateConfigurationRun&gt; GetSoftwareUpdateConfigurationRun (Guid softwareUpdateConfigurationRunId, string clientRequestId = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Automation.Models.SoftwareUpdateConfigurationRun&gt; GetSoftwareUpdateConfigurationRun(valuetype System.Guid softwareUpdateConfigurationRunId, string clientRequestId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetSoftwareUpdateConfigurationRun(System.Guid,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSoftwareUpdateConfigurationRun (softwareUpdateConfigurationRunId As Guid, Optional clientRequestId As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SoftwareUpdateConfigurationRun)" />
      <MemberSignature Language="F#" Value="abstract member GetSoftwareUpdateConfigurationRun : Guid * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.Models.SoftwareUpdateConfigurationRun&gt;&#xA;override this.GetSoftwareUpdateConfigurationRun : Guid * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.Models.SoftwareUpdateConfigurationRun&gt;" Usage="automationAccountResource.GetSoftwareUpdateConfigurationRun (softwareUpdateConfigurationRunId, clientRequestId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Automation.Models.SoftwareUpdateConfigurationRun&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="softwareUpdateConfigurationRunId" Type="System.Guid" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="clientRequestId" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="softwareUpdateConfigurationRunId"> The Id of the software update configuration run. </param>
        <param name="clientRequestId"> Identifies this specific client request. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a single software update configuration Run by Id.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/softwareUpdateConfigurationRuns/{softwareUpdateConfigurationRunId}
            Operation Id: SoftwareUpdateConfigurationRuns_GetById
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSoftwareUpdateConfigurationRunAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.Models.SoftwareUpdateConfigurationRun&gt;&gt; GetSoftwareUpdateConfigurationRunAsync (Guid softwareUpdateConfigurationRunId, string clientRequestId = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Automation.Models.SoftwareUpdateConfigurationRun&gt;&gt; GetSoftwareUpdateConfigurationRunAsync(valuetype System.Guid softwareUpdateConfigurationRunId, string clientRequestId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetSoftwareUpdateConfigurationRunAsync(System.Guid,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSoftwareUpdateConfigurationRunAsync (softwareUpdateConfigurationRunId As Guid, Optional clientRequestId As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SoftwareUpdateConfigurationRun))" />
      <MemberSignature Language="F#" Value="abstract member GetSoftwareUpdateConfigurationRunAsync : Guid * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.Models.SoftwareUpdateConfigurationRun&gt;&gt;&#xA;override this.GetSoftwareUpdateConfigurationRunAsync : Guid * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.Models.SoftwareUpdateConfigurationRun&gt;&gt;" Usage="automationAccountResource.GetSoftwareUpdateConfigurationRunAsync (softwareUpdateConfigurationRunId, clientRequestId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.Models.SoftwareUpdateConfigurationRun&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="softwareUpdateConfigurationRunId" Type="System.Guid" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="clientRequestId" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="softwareUpdateConfigurationRunId"> The Id of the software update configuration run. </param>
        <param name="clientRequestId"> Identifies this specific client request. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a single software update configuration Run by Id.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/softwareUpdateConfigurationRuns/{softwareUpdateConfigurationRunId}
            Operation Id: SoftwareUpdateConfigurationRuns_GetById
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSoftwareUpdateConfigurationRuns">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Automation.Models.SoftwareUpdateConfigurationRun&gt; GetSoftwareUpdateConfigurationRuns (string clientRequestId = default, string filter = default, string skip = default, string top = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Automation.Models.SoftwareUpdateConfigurationRun&gt; GetSoftwareUpdateConfigurationRuns(string clientRequestId, string filter, string skip, string top, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetSoftwareUpdateConfigurationRuns(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSoftwareUpdateConfigurationRuns (Optional clientRequestId As String = Nothing, Optional filter As String = Nothing, Optional skip As String = Nothing, Optional top As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of SoftwareUpdateConfigurationRun)" />
      <MemberSignature Language="F#" Value="abstract member GetSoftwareUpdateConfigurationRuns : string * string * string * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Automation.Models.SoftwareUpdateConfigurationRun&gt;&#xA;override this.GetSoftwareUpdateConfigurationRuns : string * string * string * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Automation.Models.SoftwareUpdateConfigurationRun&gt;" Usage="automationAccountResource.GetSoftwareUpdateConfigurationRuns (clientRequestId, filter, skip, top, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Automation.Models.SoftwareUpdateConfigurationRun&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clientRequestId" Type="System.String" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="skip" Type="System.String" />
        <Parameter Name="top" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="clientRequestId"> Identifies this specific client request. </param>
        <param name="filter"> The filter to apply on the operation. You can use the following filters: 'properties/osType', 'properties/status', 'properties/startTime', and 'properties/softwareUpdateConfiguration/name'. </param>
        <param name="skip"> Number of entries you skip before returning results. </param>
        <param name="top"> Maximum number of entries returned in the results collection. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Return list of software update configuration runs
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/softwareUpdateConfigurationRuns
            Operation Id: SoftwareUpdateConfigurationRuns_List
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Automation.Models.SoftwareUpdateConfigurationRun" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSoftwareUpdateConfigurationRunsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Automation.Models.SoftwareUpdateConfigurationRun&gt; GetSoftwareUpdateConfigurationRunsAsync (string clientRequestId = default, string filter = default, string skip = default, string top = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Automation.Models.SoftwareUpdateConfigurationRun&gt; GetSoftwareUpdateConfigurationRunsAsync(string clientRequestId, string filter, string skip, string top, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetSoftwareUpdateConfigurationRunsAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSoftwareUpdateConfigurationRunsAsync (Optional clientRequestId As String = Nothing, Optional filter As String = Nothing, Optional skip As String = Nothing, Optional top As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of SoftwareUpdateConfigurationRun)" />
      <MemberSignature Language="F#" Value="abstract member GetSoftwareUpdateConfigurationRunsAsync : string * string * string * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Automation.Models.SoftwareUpdateConfigurationRun&gt;&#xA;override this.GetSoftwareUpdateConfigurationRunsAsync : string * string * string * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Automation.Models.SoftwareUpdateConfigurationRun&gt;" Usage="automationAccountResource.GetSoftwareUpdateConfigurationRunsAsync (clientRequestId, filter, skip, top, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Automation.Models.SoftwareUpdateConfigurationRun&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clientRequestId" Type="System.String" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="skip" Type="System.String" />
        <Parameter Name="top" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="clientRequestId"> Identifies this specific client request. </param>
        <param name="filter"> The filter to apply on the operation. You can use the following filters: 'properties/osType', 'properties/status', 'properties/startTime', and 'properties/softwareUpdateConfiguration/name'. </param>
        <param name="skip"> Number of entries you skip before returning results. </param>
        <param name="top"> Maximum number of entries returned in the results collection. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Return list of software update configuration runs
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/softwareUpdateConfigurationRuns
            Operation Id: SoftwareUpdateConfigurationRuns_List
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Automation.Models.SoftwareUpdateConfigurationRun" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSoftwareUpdateConfigurations">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Automation.SoftwareUpdateConfigurationCollection GetSoftwareUpdateConfigurations ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Automation.SoftwareUpdateConfigurationCollection GetSoftwareUpdateConfigurations() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetSoftwareUpdateConfigurations" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSoftwareUpdateConfigurations () As SoftwareUpdateConfigurationCollection" />
      <MemberSignature Language="F#" Value="abstract member GetSoftwareUpdateConfigurations : unit -&gt; Azure.ResourceManager.Automation.SoftwareUpdateConfigurationCollection&#xA;override this.GetSoftwareUpdateConfigurations : unit -&gt; Azure.ResourceManager.Automation.SoftwareUpdateConfigurationCollection" Usage="automationAccountResource.GetSoftwareUpdateConfigurations " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Automation.SoftwareUpdateConfigurationCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of SoftwareUpdateConfigurationResources in the AutomationAccount. </summary>
        <returns> An object representing collection of SoftwareUpdateConfigurationResources and their operations over a SoftwareUpdateConfigurationResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSourceControl">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Automation.SourceControlResource&gt; GetSourceControl (string sourceControlName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Automation.SourceControlResource&gt; GetSourceControl(string sourceControlName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetSourceControl(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSourceControl (sourceControlName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SourceControlResource)" />
      <MemberSignature Language="F#" Value="abstract member GetSourceControl : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.SourceControlResource&gt;&#xA;override this.GetSourceControl : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.SourceControlResource&gt;" Usage="automationAccountResource.GetSourceControl (sourceControlName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Automation.SourceControlResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceControlName" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="sourceControlName"> The name of source control. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve the source control identified by source control name.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/sourceControls/{sourceControlName}
            Operation Id: SourceControl_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="sourceControlName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="sourceControlName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSourceControlAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.SourceControlResource&gt;&gt; GetSourceControlAsync (string sourceControlName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Automation.SourceControlResource&gt;&gt; GetSourceControlAsync(string sourceControlName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetSourceControlAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSourceControlAsync (sourceControlName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SourceControlResource))" />
      <MemberSignature Language="F#" Value="abstract member GetSourceControlAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.SourceControlResource&gt;&gt;&#xA;override this.GetSourceControlAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.SourceControlResource&gt;&gt;" Usage="automationAccountResource.GetSourceControlAsync (sourceControlName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.SourceControlResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceControlName" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="sourceControlName"> The name of source control. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve the source control identified by source control name.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/sourceControls/{sourceControlName}
            Operation Id: SourceControl_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="sourceControlName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="sourceControlName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSourceControls">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Automation.SourceControlCollection GetSourceControls ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Automation.SourceControlCollection GetSourceControls() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetSourceControls" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSourceControls () As SourceControlCollection" />
      <MemberSignature Language="F#" Value="abstract member GetSourceControls : unit -&gt; Azure.ResourceManager.Automation.SourceControlCollection&#xA;override this.GetSourceControls : unit -&gt; Azure.ResourceManager.Automation.SourceControlCollection" Usage="automationAccountResource.GetSourceControls " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Automation.SourceControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of SourceControlResources in the AutomationAccount. </summary>
        <returns> An object representing collection of SourceControlResources and their operations over a SourceControlResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStatistics">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Automation.Models.AutomationAccountStatistics&gt; GetStatistics (string filter = default, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Automation.Models.AutomationAccountStatistics&gt; GetStatistics(string filter, valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetStatistics(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStatistics (Optional filter As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of AutomationAccountStatistics)" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="F#" Value="abstract member GetStatistics : string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Automation.Models.AutomationAccountStatistics&gt;&#xA;override this.GetStatistics : string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Automation.Models.AutomationAccountStatistics&gt;" Usage="automationAccountResource.GetStatistics (filter, cancellationToken)" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Automation.Models.Statistics&gt; GetStatistics (string filter = default, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Automation.Models.Statistics&gt; GetStatistics(string filter, valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStatistics (Optional filter As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of Statistics)" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="F#" Value="abstract member GetStatistics : string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Automation.Models.Statistics&gt;&#xA;override this.GetStatistics : string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Automation.Models.Statistics&gt;" Usage="automationAccountResource.GetStatistics (filter, cancellationToken)" FrameworkAlternate="azure-dotnet-preview" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="azure-dotnet">Azure.Pageable&lt;Azure.ResourceManager.Automation.Models.AutomationAccountStatistics&gt;</ReturnType>
        <ReturnType FrameworkAlternate="azure-dotnet-preview">Azure.Pageable&lt;Azure.ResourceManager.Automation.Models.Statistics&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="filter"> The filter to apply on the operation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve the statistics for the account.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/statistics
            Operation Id: Statistics_ListByAutomationAccount
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Automation.Models.AutomationAccountStatistics" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStatisticsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Automation.Models.AutomationAccountStatistics&gt; GetStatisticsAsync (string filter = default, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Automation.Models.AutomationAccountStatistics&gt; GetStatisticsAsync(string filter, valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetStatisticsAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStatisticsAsync (Optional filter As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of AutomationAccountStatistics)" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="F#" Value="abstract member GetStatisticsAsync : string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Automation.Models.AutomationAccountStatistics&gt;&#xA;override this.GetStatisticsAsync : string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Automation.Models.AutomationAccountStatistics&gt;" Usage="automationAccountResource.GetStatisticsAsync (filter, cancellationToken)" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Automation.Models.Statistics&gt; GetStatisticsAsync (string filter = default, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Automation.Models.Statistics&gt; GetStatisticsAsync(string filter, valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStatisticsAsync (Optional filter As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of Statistics)" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="F#" Value="abstract member GetStatisticsAsync : string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Automation.Models.Statistics&gt;&#xA;override this.GetStatisticsAsync : string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Automation.Models.Statistics&gt;" Usage="automationAccountResource.GetStatisticsAsync (filter, cancellationToken)" FrameworkAlternate="azure-dotnet-preview" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="azure-dotnet">Azure.AsyncPageable&lt;Azure.ResourceManager.Automation.Models.AutomationAccountStatistics&gt;</ReturnType>
        <ReturnType FrameworkAlternate="azure-dotnet-preview">Azure.AsyncPageable&lt;Azure.ResourceManager.Automation.Models.Statistics&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="filter"> The filter to apply on the operation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve the statistics for the account.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/statistics
            Operation Id: Statistics_ListByAutomationAccount
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Automation.Models.AutomationAccountStatistics" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStreamDscCompilationJob">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Automation.Models.AutomationJobStream&gt; GetStreamDscCompilationJob (Guid jobId, string jobStreamId, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Automation.Models.AutomationJobStream&gt; GetStreamDscCompilationJob(valuetype System.Guid jobId, string jobStreamId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetStreamDscCompilationJob(System.Guid,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStreamDscCompilationJob (jobId As Guid, jobStreamId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of AutomationJobStream)" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="F#" Value="abstract member GetStreamDscCompilationJob : Guid * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.Models.AutomationJobStream&gt;&#xA;override this.GetStreamDscCompilationJob : Guid * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.Models.AutomationJobStream&gt;" Usage="automationAccountResource.GetStreamDscCompilationJob (jobId, jobStreamId, cancellationToken)" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Automation.Models.JobStream&gt; GetStreamDscCompilationJob (Guid jobId, string jobStreamId, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Automation.Models.JobStream&gt; GetStreamDscCompilationJob(valuetype System.Guid jobId, string jobStreamId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStreamDscCompilationJob (jobId As Guid, jobStreamId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of JobStream)" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="F#" Value="abstract member GetStreamDscCompilationJob : Guid * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.Models.JobStream&gt;&#xA;override this.GetStreamDscCompilationJob : Guid * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.Models.JobStream&gt;" Usage="automationAccountResource.GetStreamDscCompilationJob (jobId, jobStreamId, cancellationToken)" FrameworkAlternate="azure-dotnet-preview" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="azure-dotnet">Azure.Response&lt;Azure.ResourceManager.Automation.Models.AutomationJobStream&gt;</ReturnType>
        <ReturnType FrameworkAlternate="azure-dotnet-preview">Azure.Response&lt;Azure.ResourceManager.Automation.Models.JobStream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jobId" Type="System.Guid" />
        <Parameter Name="jobStreamId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="jobId"> The job id. </param>
        <param name="jobStreamId"> The job stream id. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve the job stream identified by job stream id.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/compilationjobs/{jobId}/streams/{jobStreamId}
            Operation Id: DscCompilationJob_GetStream
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="jobStreamId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="jobStreamId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetStreamDscCompilationJobAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.Models.AutomationJobStream&gt;&gt; GetStreamDscCompilationJobAsync (Guid jobId, string jobStreamId, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Automation.Models.AutomationJobStream&gt;&gt; GetStreamDscCompilationJobAsync(valuetype System.Guid jobId, string jobStreamId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetStreamDscCompilationJobAsync(System.Guid,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStreamDscCompilationJobAsync (jobId As Guid, jobStreamId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AutomationJobStream))" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="F#" Value="abstract member GetStreamDscCompilationJobAsync : Guid * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.Models.AutomationJobStream&gt;&gt;&#xA;override this.GetStreamDscCompilationJobAsync : Guid * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.Models.AutomationJobStream&gt;&gt;" Usage="automationAccountResource.GetStreamDscCompilationJobAsync (jobId, jobStreamId, cancellationToken)" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.Models.JobStream&gt;&gt; GetStreamDscCompilationJobAsync (Guid jobId, string jobStreamId, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Automation.Models.JobStream&gt;&gt; GetStreamDscCompilationJobAsync(valuetype System.Guid jobId, string jobStreamId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStreamDscCompilationJobAsync (jobId As Guid, jobStreamId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of JobStream))" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="F#" Value="abstract member GetStreamDscCompilationJobAsync : Guid * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.Models.JobStream&gt;&gt;&#xA;override this.GetStreamDscCompilationJobAsync : Guid * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.Models.JobStream&gt;&gt;" Usage="automationAccountResource.GetStreamDscCompilationJobAsync (jobId, jobStreamId, cancellationToken)" FrameworkAlternate="azure-dotnet-preview" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="azure-dotnet">System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.Models.AutomationJobStream&gt;&gt;</ReturnType>
        <ReturnType FrameworkAlternate="azure-dotnet-preview">System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.Models.JobStream&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jobId" Type="System.Guid" />
        <Parameter Name="jobStreamId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="jobId"> The job id. </param>
        <param name="jobStreamId"> The job stream id. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve the job stream identified by job stream id.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/compilationjobs/{jobId}/streams/{jobStreamId}
            Operation Id: DscCompilationJob_GetStream
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="jobStreamId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="jobStreamId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetUsages">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Automation.Models.AutomationUsage&gt; GetUsages (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Automation.Models.AutomationUsage&gt; GetUsages(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetUsages(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetUsages (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of AutomationUsage)" />
      <MemberSignature Language="F#" Value="abstract member GetUsages : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Automation.Models.AutomationUsage&gt;&#xA;override this.GetUsages : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Automation.Models.AutomationUsage&gt;" Usage="automationAccountResource.GetUsages cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Automation.Models.AutomationUsage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve the usage for the account id.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/usages
            Operation Id: Usages_ListByAutomationAccount
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Automation.Models.AutomationUsage" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUsagesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Automation.Models.AutomationUsage&gt; GetUsagesAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Automation.Models.AutomationUsage&gt; GetUsagesAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetUsagesAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetUsagesAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of AutomationUsage)" />
      <MemberSignature Language="F#" Value="abstract member GetUsagesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Automation.Models.AutomationUsage&gt;&#xA;override this.GetUsagesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Automation.Models.AutomationUsage&gt;" Usage="automationAccountResource.GetUsagesAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Automation.Models.AutomationUsage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve the usage for the account id.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/usages
            Operation Id: Usages_ListByAutomationAccount
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Automation.Models.AutomationUsage" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVariable">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Automation.VariableResource&gt; GetVariable (string variableName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Automation.VariableResource&gt; GetVariable(string variableName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetVariable(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVariable (variableName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of VariableResource)" />
      <MemberSignature Language="F#" Value="abstract member GetVariable : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.VariableResource&gt;&#xA;override this.GetVariable : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.VariableResource&gt;" Usage="automationAccountResource.GetVariable (variableName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Automation.VariableResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="variableName" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="variableName"> The name of variable. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve the variable identified by variable name.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/variables/{variableName}
            Operation Id: Variable_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="variableName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="variableName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVariableAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.VariableResource&gt;&gt; GetVariableAsync (string variableName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Automation.VariableResource&gt;&gt; GetVariableAsync(string variableName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetVariableAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVariableAsync (variableName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of VariableResource))" />
      <MemberSignature Language="F#" Value="abstract member GetVariableAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.VariableResource&gt;&gt;&#xA;override this.GetVariableAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.VariableResource&gt;&gt;" Usage="automationAccountResource.GetVariableAsync (variableName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.VariableResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="variableName" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="variableName"> The name of variable. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve the variable identified by variable name.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/variables/{variableName}
            Operation Id: Variable_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="variableName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="variableName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVariables">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Automation.VariableCollection GetVariables ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Automation.VariableCollection GetVariables() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetVariables" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVariables () As VariableCollection" />
      <MemberSignature Language="F#" Value="abstract member GetVariables : unit -&gt; Azure.ResourceManager.Automation.VariableCollection&#xA;override this.GetVariables : unit -&gt; Azure.ResourceManager.Automation.VariableCollection" Usage="automationAccountResource.GetVariables " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Automation.VariableCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of VariableResources in the AutomationAccount. </summary>
        <returns> An object representing collection of VariableResources and their operations over a VariableResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWatcher">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Automation.WatcherResource&gt; GetWatcher (string watcherName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Automation.WatcherResource&gt; GetWatcher(string watcherName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetWatcher(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetWatcher (watcherName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of WatcherResource)" />
      <MemberSignature Language="F#" Value="abstract member GetWatcher : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.WatcherResource&gt;&#xA;override this.GetWatcher : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.WatcherResource&gt;" Usage="automationAccountResource.GetWatcher (watcherName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Automation.WatcherResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="watcherName" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="watcherName"> The watcher name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve the watcher identified by watcher name.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/watchers/{watcherName}
            Operation Id: Watcher_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="watcherName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="watcherName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetWatcherAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.WatcherResource&gt;&gt; GetWatcherAsync (string watcherName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Automation.WatcherResource&gt;&gt; GetWatcherAsync(string watcherName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetWatcherAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetWatcherAsync (watcherName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of WatcherResource))" />
      <MemberSignature Language="F#" Value="abstract member GetWatcherAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.WatcherResource&gt;&gt;&#xA;override this.GetWatcherAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.WatcherResource&gt;&gt;" Usage="automationAccountResource.GetWatcherAsync (watcherName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.WatcherResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="watcherName" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="watcherName"> The watcher name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve the watcher identified by watcher name.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/watchers/{watcherName}
            Operation Id: Watcher_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="watcherName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="watcherName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetWatchers">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Automation.WatcherCollection GetWatchers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Automation.WatcherCollection GetWatchers() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetWatchers" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetWatchers () As WatcherCollection" />
      <MemberSignature Language="F#" Value="abstract member GetWatchers : unit -&gt; Azure.ResourceManager.Automation.WatcherCollection&#xA;override this.GetWatchers : unit -&gt; Azure.ResourceManager.Automation.WatcherCollection" Usage="automationAccountResource.GetWatchers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Automation.WatcherCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of WatcherResources in the AutomationAccount. </summary>
        <returns> An object representing collection of WatcherResources and their operations over a WatcherResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWebhook">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Automation.WebhookResource&gt; GetWebhook (string webhookName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Automation.WebhookResource&gt; GetWebhook(string webhookName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetWebhook(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetWebhook (webhookName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of WebhookResource)" />
      <MemberSignature Language="F#" Value="abstract member GetWebhook : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.WebhookResource&gt;&#xA;override this.GetWebhook : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.WebhookResource&gt;" Usage="automationAccountResource.GetWebhook (webhookName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Automation.WebhookResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webhookName" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="webhookName"> The webhook name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve the webhook identified by webhook name.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/webhooks/{webhookName}
            Operation Id: Webhook_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="webhookName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="webhookName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetWebhookAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.WebhookResource&gt;&gt; GetWebhookAsync (string webhookName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Automation.WebhookResource&gt;&gt; GetWebhookAsync(string webhookName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetWebhookAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetWebhookAsync (webhookName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of WebhookResource))" />
      <MemberSignature Language="F#" Value="abstract member GetWebhookAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.WebhookResource&gt;&gt;&#xA;override this.GetWebhookAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.WebhookResource&gt;&gt;" Usage="automationAccountResource.GetWebhookAsync (webhookName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.WebhookResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webhookName" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="webhookName"> The webhook name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve the webhook identified by webhook name.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/webhooks/{webhookName}
            Operation Id: Webhook_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="webhookName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="webhookName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetWebhooks">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Automation.WebhookCollection GetWebhooks ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Automation.WebhookCollection GetWebhooks() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.GetWebhooks" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetWebhooks () As WebhookCollection" />
      <MemberSignature Language="F#" Value="abstract member GetWebhooks : unit -&gt; Azure.ResourceManager.Automation.WebhookCollection&#xA;override this.GetWebhooks : unit -&gt; Azure.ResourceManager.Automation.WebhookCollection" Usage="automationAccountResource.GetWebhooks " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Automation.WebhookCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of WebhookResources in the AutomationAccount. </summary>
        <returns> An object representing collection of WebhookResources and their operations over a WebhookResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasData">
      <MemberSignature Language="C#" Value="public virtual bool HasData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasData" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Automation.AutomationAccountResource.HasData" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HasData As Boolean" />
      <MemberSignature Language="F#" Value="member this.HasData : bool" Usage="Azure.ResourceManager.Automation.AutomationAccountResource.HasData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets whether or not the current instance has data. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegenerateKeyAgentRegistrationInformation">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Automation.Models.AgentRegistration&gt; RegenerateKeyAgentRegistrationInformation (Azure.ResourceManager.Automation.Models.AgentRegistrationRegenerateKeyContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Automation.Models.AgentRegistration&gt; RegenerateKeyAgentRegistrationInformation(class Azure.ResourceManager.Automation.Models.AgentRegistrationRegenerateKeyContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.RegenerateKeyAgentRegistrationInformation(Azure.ResourceManager.Automation.Models.AgentRegistrationRegenerateKeyContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RegenerateKeyAgentRegistrationInformation (content As AgentRegistrationRegenerateKeyContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of AgentRegistration)" />
      <MemberSignature Language="F#" Value="abstract member RegenerateKeyAgentRegistrationInformation : Azure.ResourceManager.Automation.Models.AgentRegistrationRegenerateKeyContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.Models.AgentRegistration&gt;&#xA;override this.RegenerateKeyAgentRegistrationInformation : Azure.ResourceManager.Automation.Models.AgentRegistrationRegenerateKeyContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.Models.AgentRegistration&gt;" Usage="automationAccountResource.RegenerateKeyAgentRegistrationInformation (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Automation.Models.AgentRegistration&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.Automation.Models.AgentRegistrationRegenerateKeyContent" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="content"> The name of the agent registration key to be regenerated. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Regenerate a primary or secondary agent registration key
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/agentRegistrationInformation/regenerateKey
            Operation Id: AgentRegistrationInformation_RegenerateKey
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="RegenerateKeyAgentRegistrationInformation">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Automation.Models.AgentRegistration&gt; RegenerateKeyAgentRegistrationInformation (Azure.ResourceManager.Automation.Models.AgentRegistrationRegenerateKeyParameter agentRegistrationRegenerateKeyParameter, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Automation.Models.AgentRegistration&gt; RegenerateKeyAgentRegistrationInformation(class Azure.ResourceManager.Automation.Models.AgentRegistrationRegenerateKeyParameter agentRegistrationRegenerateKeyParameter, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.RegenerateKeyAgentRegistrationInformation(Azure.ResourceManager.Automation.Models.AgentRegistrationRegenerateKeyParameter,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RegenerateKeyAgentRegistrationInformation (agentRegistrationRegenerateKeyParameter As AgentRegistrationRegenerateKeyParameter, Optional cancellationToken As CancellationToken = Nothing) As Response(Of AgentRegistration)" />
      <MemberSignature Language="F#" Value="abstract member RegenerateKeyAgentRegistrationInformation : Azure.ResourceManager.Automation.Models.AgentRegistrationRegenerateKeyParameter * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.Models.AgentRegistration&gt;&#xA;override this.RegenerateKeyAgentRegistrationInformation : Azure.ResourceManager.Automation.Models.AgentRegistrationRegenerateKeyParameter * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.Models.AgentRegistration&gt;" Usage="automationAccountResource.RegenerateKeyAgentRegistrationInformation (agentRegistrationRegenerateKeyParameter, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Automation.Models.AgentRegistration&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="agentRegistrationRegenerateKeyParameter" Type="Azure.ResourceManager.Automation.Models.AgentRegistrationRegenerateKeyParameter" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="agentRegistrationRegenerateKeyParameter"> The name of the agent registration key to be regenerated. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Regenerate a primary or secondary agent registration key
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/agentRegistrationInformation/regenerateKey
            Operation Id: AgentRegistrationInformation_RegenerateKey
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="agentRegistrationRegenerateKeyParameter" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="RegenerateKeyAgentRegistrationInformationAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.Models.AgentRegistration&gt;&gt; RegenerateKeyAgentRegistrationInformationAsync (Azure.ResourceManager.Automation.Models.AgentRegistrationRegenerateKeyContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Automation.Models.AgentRegistration&gt;&gt; RegenerateKeyAgentRegistrationInformationAsync(class Azure.ResourceManager.Automation.Models.AgentRegistrationRegenerateKeyContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.RegenerateKeyAgentRegistrationInformationAsync(Azure.ResourceManager.Automation.Models.AgentRegistrationRegenerateKeyContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RegenerateKeyAgentRegistrationInformationAsync (content As AgentRegistrationRegenerateKeyContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AgentRegistration))" />
      <MemberSignature Language="F#" Value="abstract member RegenerateKeyAgentRegistrationInformationAsync : Azure.ResourceManager.Automation.Models.AgentRegistrationRegenerateKeyContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.Models.AgentRegistration&gt;&gt;&#xA;override this.RegenerateKeyAgentRegistrationInformationAsync : Azure.ResourceManager.Automation.Models.AgentRegistrationRegenerateKeyContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.Models.AgentRegistration&gt;&gt;" Usage="automationAccountResource.RegenerateKeyAgentRegistrationInformationAsync (content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.Models.AgentRegistration&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.ResourceManager.Automation.Models.AgentRegistrationRegenerateKeyContent" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="content"> The name of the agent registration key to be regenerated. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Regenerate a primary or secondary agent registration key
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/agentRegistrationInformation/regenerateKey
            Operation Id: AgentRegistrationInformation_RegenerateKey
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="RegenerateKeyAgentRegistrationInformationAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.Models.AgentRegistration&gt;&gt; RegenerateKeyAgentRegistrationInformationAsync (Azure.ResourceManager.Automation.Models.AgentRegistrationRegenerateKeyParameter agentRegistrationRegenerateKeyParameter, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Automation.Models.AgentRegistration&gt;&gt; RegenerateKeyAgentRegistrationInformationAsync(class Azure.ResourceManager.Automation.Models.AgentRegistrationRegenerateKeyParameter agentRegistrationRegenerateKeyParameter, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.RegenerateKeyAgentRegistrationInformationAsync(Azure.ResourceManager.Automation.Models.AgentRegistrationRegenerateKeyParameter,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RegenerateKeyAgentRegistrationInformationAsync (agentRegistrationRegenerateKeyParameter As AgentRegistrationRegenerateKeyParameter, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AgentRegistration))" />
      <MemberSignature Language="F#" Value="abstract member RegenerateKeyAgentRegistrationInformationAsync : Azure.ResourceManager.Automation.Models.AgentRegistrationRegenerateKeyParameter * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.Models.AgentRegistration&gt;&gt;&#xA;override this.RegenerateKeyAgentRegistrationInformationAsync : Azure.ResourceManager.Automation.Models.AgentRegistrationRegenerateKeyParameter * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.Models.AgentRegistration&gt;&gt;" Usage="automationAccountResource.RegenerateKeyAgentRegistrationInformationAsync (agentRegistrationRegenerateKeyParameter, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.Models.AgentRegistration&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="agentRegistrationRegenerateKeyParameter" Type="Azure.ResourceManager.Automation.Models.AgentRegistrationRegenerateKeyParameter" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="agentRegistrationRegenerateKeyParameter"> The name of the agent registration key to be regenerated. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Regenerate a primary or secondary agent registration key
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/agentRegistrationInformation/regenerateKey
            Operation Id: AgentRegistrationInformation_RegenerateKey
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="agentRegistrationRegenerateKeyParameter" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveTag">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Automation.AutomationAccountResource&gt; RemoveTag (string key, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Automation.AutomationAccountResource&gt; RemoveTag(string key, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.RemoveTag(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoveTag (key As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of AutomationAccountResource)" />
      <MemberSignature Language="F#" Value="abstract member RemoveTag : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.AutomationAccountResource&gt;&#xA;override this.RemoveTag : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.AutomationAccountResource&gt;" Usage="automationAccountResource.RemoveTag (key, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Automation.AutomationAccountResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="key"> The key for the tag. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Removes a tag by key from the resource.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}
            Operation Id: AutomationAccount_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveTagAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.AutomationAccountResource&gt;&gt; RemoveTagAsync (string key, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Automation.AutomationAccountResource&gt;&gt; RemoveTagAsync(string key, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.RemoveTagAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoveTagAsync (key As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AutomationAccountResource))" />
      <MemberSignature Language="F#" Value="abstract member RemoveTagAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.AutomationAccountResource&gt;&gt;&#xA;override this.RemoveTagAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.AutomationAccountResource&gt;&gt;" Usage="automationAccountResource.RemoveTagAsync (key, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.AutomationAccountResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="key"> The key for the tag. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Removes a tag by key from the resource.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}
            Operation Id: AutomationAccount_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ResourceType">
      <MemberSignature Language="C#" Value="public static readonly Azure.Core.ResourceType ResourceType;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype Azure.Core.ResourceType ResourceType" />
      <MemberSignature Language="DocId" Value="F:Azure.ResourceManager.Automation.AutomationAccountResource.ResourceType" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ResourceType As ResourceType " />
      <MemberSignature Language="F#" Value=" staticval mutable ResourceType : Azure.Core.ResourceType" Usage="Azure.ResourceManager.Automation.AutomationAccountResource.ResourceType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.ResourceType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets the resource type for the operations. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTags">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Automation.AutomationAccountResource&gt; SetTags (System.Collections.Generic.IDictionary&lt;string,string&gt; tags, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Automation.AutomationAccountResource&gt; SetTags(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.SetTags(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetTags (tags As IDictionary(Of String, String), Optional cancellationToken As CancellationToken = Nothing) As Response(Of AutomationAccountResource)" />
      <MemberSignature Language="F#" Value="abstract member SetTags : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.AutomationAccountResource&gt;&#xA;override this.SetTags : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.AutomationAccountResource&gt;" Usage="automationAccountResource.SetTags (tags, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Automation.AutomationAccountResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tags"> The set of tags to use as replacement. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Replace the tags on the resource with the given set.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}
            Operation Id: AutomationAccount_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tags" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="SetTagsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.AutomationAccountResource&gt;&gt; SetTagsAsync (System.Collections.Generic.IDictionary&lt;string,string&gt; tags, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Automation.AutomationAccountResource&gt;&gt; SetTagsAsync(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.SetTagsAsync(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetTagsAsync (tags As IDictionary(Of String, String), Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AutomationAccountResource))" />
      <MemberSignature Language="F#" Value="abstract member SetTagsAsync : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.AutomationAccountResource&gt;&gt;&#xA;override this.SetTagsAsync : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.AutomationAccountResource&gt;&gt;" Usage="automationAccountResource.SetTagsAsync (tags, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.AutomationAccountResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tags"> The set of tags to use as replacement. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Replace the tags on the resource with the given set.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}
            Operation Id: AutomationAccount_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tags" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Automation.AutomationAccountResource&gt; Update (Azure.ResourceManager.Automation.Models.AutomationAccountPatch patch, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Automation.AutomationAccountResource&gt; Update(class Azure.ResourceManager.Automation.Models.AutomationAccountPatch patch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.Update(Azure.ResourceManager.Automation.Models.AutomationAccountPatch,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Update (patch As AutomationAccountPatch, Optional cancellationToken As CancellationToken = Nothing) As Response(Of AutomationAccountResource)" />
      <MemberSignature Language="F#" Value="abstract member Update : Azure.ResourceManager.Automation.Models.AutomationAccountPatch * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.AutomationAccountResource&gt;&#xA;override this.Update : Azure.ResourceManager.Automation.Models.AutomationAccountPatch * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Automation.AutomationAccountResource&gt;" Usage="automationAccountResource.Update (patch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Automation.AutomationAccountResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="patch" Type="Azure.ResourceManager.Automation.Models.AutomationAccountPatch" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="patch"> Parameters supplied to the update automation account. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Update an automation account.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}
            Operation Id: AutomationAccount_Update
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="patch" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.AutomationAccountResource&gt;&gt; UpdateAsync (Azure.ResourceManager.Automation.Models.AutomationAccountPatch patch, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Automation.AutomationAccountResource&gt;&gt; UpdateAsync(class Azure.ResourceManager.Automation.Models.AutomationAccountPatch patch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Automation.AutomationAccountResource.UpdateAsync(Azure.ResourceManager.Automation.Models.AutomationAccountPatch,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateAsync (patch As AutomationAccountPatch, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AutomationAccountResource))" />
      <MemberSignature Language="F#" Value="abstract member UpdateAsync : Azure.ResourceManager.Automation.Models.AutomationAccountPatch * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.AutomationAccountResource&gt;&gt;&#xA;override this.UpdateAsync : Azure.ResourceManager.Automation.Models.AutomationAccountPatch * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.AutomationAccountResource&gt;&gt;" Usage="automationAccountResource.UpdateAsync (patch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Automation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Automation.AutomationAccountResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="patch" Type="Azure.ResourceManager.Automation.Models.AutomationAccountPatch" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="patch"> Parameters supplied to the update automation account. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Update an automation account.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}
            Operation Id: AutomationAccount_Update
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="patch" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>

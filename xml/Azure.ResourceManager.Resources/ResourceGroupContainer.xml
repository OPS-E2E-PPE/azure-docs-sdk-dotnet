<Type Name="ResourceGroupContainer" FullName="Azure.ResourceManager.Resources.ResourceGroupContainer">
  <TypeSignature Language="C#" Value="public class ResourceGroupContainer : Azure.ResourceManager.Core.ArmContainer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ResourceGroupContainer extends Azure.ResourceManager.Core.ArmContainer" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Resources.ResourceGroupContainer" />
  <TypeSignature Language="VB.NET" Value="Public Class ResourceGroupContainer&#xA;Inherits ArmContainer" />
  <TypeSignature Language="F#" Value="type ResourceGroupContainer = class&#xA;    inherit ArmContainer" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.Core.ArmContainer</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            A class representing collection of ResourceGroupContainer and their operations over a ResourceGroup.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ResourceGroupContainer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.ResourceGroupContainer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.ResourceManager.Resources.ResourceGroupContainer" /> class for mocking.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckIfExists">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;bool&gt; CheckIfExists (string resourceGroupName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;bool&gt; CheckIfExists(string resourceGroupName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.ResourceGroupContainer.CheckIfExists(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckIfExists (resourceGroupName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of Boolean)" />
      <MemberSignature Language="F#" Value="abstract member CheckIfExists : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;bool&gt;&#xA;override this.CheckIfExists : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;bool&gt;" Usage="resourceGroupContainer.CheckIfExists (resourceGroupName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> The name of the resource you want to check. </param>
        <param name="cancellationToken"> A token to allow the caller to cancel the call to the service.
            The default value is <see cref="P:System.Threading.CancellationToken.None" />. </param>
        <summary>
            Determines whether or not the azure resource exists in this container.
            </summary>
        <returns> Whether or not the resource existed. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckIfExistsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt; CheckIfExistsAsync (string resourceGroupName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;bool&gt;&gt; CheckIfExistsAsync(string resourceGroupName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.ResourceGroupContainer.CheckIfExistsAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckIfExistsAsync (resourceGroupName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of Boolean))" />
      <MemberSignature Language="F#" Value="abstract member CheckIfExistsAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt;&#xA;override this.CheckIfExistsAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt;" Usage="resourceGroupContainer.CheckIfExistsAsync (resourceGroupName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Boolean&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> The name of the resource you want to check. </param>
        <param name="cancellationToken"> A token to allow the caller to cancel the call to the service.
            The default value is <see cref="P:System.Threading.CancellationToken.None" />. </param>
        <summary>
            Determines whether or not the azure resource exists in this container.
            </summary>
        <returns> Whether or not the resource existed. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdate">
      <MemberSignature Language="C#" Value="public Azure.Response&lt;Azure.ResourceManager.Resources.ResourceGroup&gt; CreateOrUpdate (string name, Azure.ResourceManager.Resources.ResourceGroupData resourceDetails, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Azure.Response`1&lt;class Azure.ResourceManager.Resources.ResourceGroup&gt; CreateOrUpdate(string name, class Azure.ResourceManager.Resources.ResourceGroupData resourceDetails, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.ResourceGroupContainer.CreateOrUpdate(System.String,Azure.ResourceManager.Resources.ResourceGroupData,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateOrUpdate (name As String, resourceDetails As ResourceGroupData, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ResourceGroup)" />
      <MemberSignature Language="F#" Value="member this.CreateOrUpdate : string * Azure.ResourceManager.Resources.ResourceGroupData * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Resources.ResourceGroup&gt;" Usage="resourceGroupContainer.CreateOrUpdate (name, resourceDetails, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Resources.ResourceGroup&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceDetails" Type="Azure.ResourceManager.Resources.ResourceGroupData" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="name"> The name of the resource group. </param>
        <param name="resourceDetails"> The desired resource group configuration. </param>
        <param name="cancellationToken"> A token to allow the caller to cancel the call to the service. The default value is <see cref="P:System.Threading.CancellationToken.None" />. </param>
        <summary>
            The operation to create or update a resource group. Please note some properties can be set only during creation.
            </summary>
        <returns> A response with the <see cref="T:Azure.Response`1" /> operation for this resource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"> Name of the resource group cannot be null or a whitespace. </exception>
        <exception cref="T:System.ArgumentNullException"> resourceDetails cannot be null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.ResourceGroup&gt;&gt; CreateOrUpdateAsync (string name, Azure.ResourceManager.Resources.ResourceGroupData resourceDetails, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Resources.ResourceGroup&gt;&gt; CreateOrUpdateAsync(string name, class Azure.ResourceManager.Resources.ResourceGroupData resourceDetails, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.ResourceGroupContainer.CreateOrUpdateAsync(System.String,Azure.ResourceManager.Resources.ResourceGroupData,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdateAsync (name As String, resourceDetails As ResourceGroupData, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ResourceGroup))" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdateAsync : string * Azure.ResourceManager.Resources.ResourceGroupData * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.ResourceGroup&gt;&gt;&#xA;override this.CreateOrUpdateAsync : string * Azure.ResourceManager.Resources.ResourceGroupData * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.ResourceGroup&gt;&gt;" Usage="resourceGroupContainer.CreateOrUpdateAsync (name, resourceDetails, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.ResourceGroup&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceDetails" Type="Azure.ResourceManager.Resources.ResourceGroupData" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="name"> The name of the resource group. </param>
        <param name="resourceDetails"> The desired resource group configuration. </param>
        <param name="cancellationToken"> A token to allow the caller to cancel the call to the service. The default value is <see cref="P:System.Threading.CancellationToken.None" />. </param>
        <summary>
            The operation to create or update a resource group. Please note some properties can be set only during creation.
            </summary>
        <returns> A <see cref="T:System.Threading.Tasks.Task" /> that on completion returns a response with the <see cref="T:Azure.Response`1" /> operation for this resource group. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"> Name of the resource group cannot be null or a whitespace. </exception>
        <exception cref="T:System.ArgumentNullException"> resourceDetails cannot be null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public Azure.Response&lt;Azure.ResourceManager.Resources.ResourceGroup&gt; Get (string resourceGroupName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Azure.Response`1&lt;class Azure.ResourceManager.Resources.ResourceGroup&gt; Get(string resourceGroupName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.ResourceGroupContainer.Get(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function Get (resourceGroupName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ResourceGroup)" />
      <MemberSignature Language="F#" Value="member this.Get : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Resources.ResourceGroup&gt;" Usage="resourceGroupContainer.Get (resourceGroupName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Resources.ResourceGroup&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> The name of the resource group get. </param>
        <param name="cancellationToken"> A token to allow the caller to cancel the call to the service. The default value is <see cref="P:System.Threading.CancellationToken.None" />. </param>
        <summary>
            Gets details for this resource group from the service.
            </summary>
        <returns> A response with the <see cref="T:Azure.Response`1" /> operation for this resource group. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"> resourceGroupName cannot be null or a whitespace. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAll">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Resources.ResourceGroup&gt; GetAll (string filter = default, int? top = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Resources.ResourceGroup&gt; GetAll(string filter, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.ResourceGroupContainer.GetAll(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAll (Optional filter As String = Nothing, Optional top As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ResourceGroup)" />
      <MemberSignature Language="F#" Value="abstract member GetAll : string * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Resources.ResourceGroup&gt;&#xA;override this.GetAll : string * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Resources.ResourceGroup&gt;" Usage="resourceGroupContainer.GetAll (filter, top, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Resources.ResourceGroup&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="filter"> The filter to apply on the operation.&lt;br&gt;&lt;br&gt;You can filter by tag names and values. For example, to filter for a tag name and value, use $filter=tagName eq 'tag1' and tagValue eq 'Value1'. </param>
        <param name="top"> The number of results to return. If null is passed, returns all resource groups. </param>
        <param name="cancellationToken"> A token to allow the caller to cancel the call to the service. The default value is <see cref="P:System.Threading.CancellationToken.None" />. </param>
        <summary>
            List the resource groups for this subscription.
            </summary>
        <returns> A collection of resource operations that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Resources.ResourceGroup&gt; GetAllAsync (string filter = default, int? top = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Resources.ResourceGroup&gt; GetAllAsync(string filter, valuetype System.Nullable`1&lt;int32&gt; top, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.ResourceGroupContainer.GetAllAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAllAsync (Optional filter As String = Nothing, Optional top As Nullable(Of Integer) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ResourceGroup)" />
      <MemberSignature Language="F#" Value="abstract member GetAllAsync : string * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Resources.ResourceGroup&gt;&#xA;override this.GetAllAsync : string * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Resources.ResourceGroup&gt;" Usage="resourceGroupContainer.GetAllAsync (filter, top, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Resources.ResourceGroup&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="filter"> The filter to apply on the operation.&lt;br&gt;&lt;br&gt;You can filter by tag names and values. For example, to filter for a tag name and value, use $filter=tagName eq 'tag1' and tagValue eq 'Value1'. </param>
        <param name="top"> The number of results to return. If null is passed, returns all resource groups. </param>
        <param name="cancellationToken"> A token to allow the caller to cancel the call to the service. The default value is <see cref="P:System.Threading.CancellationToken.None" />. </param>
        <summary>
            List the resource groups for this subscription.
            </summary>
        <returns> An async collection of resource operations that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.ResourceGroup&gt;&gt; GetAsync (string resourceGroupName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Resources.ResourceGroup&gt;&gt; GetAsync(string resourceGroupName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.ResourceGroupContainer.GetAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAsync (resourceGroupName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ResourceGroup))" />
      <MemberSignature Language="F#" Value="abstract member GetAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.ResourceGroup&gt;&gt;&#xA;override this.GetAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.ResourceGroup&gt;&gt;" Usage="resourceGroupContainer.GetAsync (resourceGroupName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.ResourceGroup&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> The name of the resource group get. </param>
        <param name="cancellationToken"> A token to allow the caller to cancel the call to the service. The default value is <see cref="P:System.Threading.CancellationToken.None" />. </param>
        <summary>
            Gets details for this resource group from the service.
            </summary>
        <returns> A <see cref="T:System.Threading.Tasks.Task" /> that on completion returns a response with the <see cref="T:Azure.Response`1" /> operation for this resource group. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"> resourceGroupName cannot be null or a whitespace. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetIfExists">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Resources.ResourceGroup&gt; GetIfExists (string resourceGroupName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Resources.ResourceGroup&gt; GetIfExists(string resourceGroupName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.ResourceGroupContainer.GetIfExists(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIfExists (resourceGroupName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ResourceGroup)" />
      <MemberSignature Language="F#" Value="abstract member GetIfExists : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Resources.ResourceGroup&gt;&#xA;override this.GetIfExists : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Resources.ResourceGroup&gt;" Usage="resourceGroupContainer.GetIfExists (resourceGroupName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Resources.ResourceGroup&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> The name of the resource you want to get. </param>
        <param name="cancellationToken"> A token to allow the caller to cancel the call to the service.
            The default value is <see cref="P:System.Threading.CancellationToken.None" />. </param>
        <summary>
            Returns the resource from Azure if it exists.
            </summary>
        <returns> Whether or not the resource existed. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIfExistsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.ResourceGroup&gt;&gt; GetIfExistsAsync (string resourceGroupName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Resources.ResourceGroup&gt;&gt; GetIfExistsAsync(string resourceGroupName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.ResourceGroupContainer.GetIfExistsAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIfExistsAsync (resourceGroupName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ResourceGroup))" />
      <MemberSignature Language="F#" Value="abstract member GetIfExistsAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.ResourceGroup&gt;&gt;&#xA;override this.GetIfExistsAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.ResourceGroup&gt;&gt;" Usage="resourceGroupContainer.GetIfExistsAsync (resourceGroupName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.ResourceGroup&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> The name of the resource you want to get. </param>
        <param name="cancellationToken"> A token to allow the caller to cancel the call to the service.
            The default value is <see cref="P:System.Threading.CancellationToken.None" />. </param>
        <summary>
            Returns the resource from Azure if it exists.
            </summary>
        <returns> Whether or not the resource existed. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="protected Azure.ResourceManager.Resources.Subscription Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.Resources.Subscription Parent" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Resources.ResourceGroupContainer.Parent" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Parent As Subscription" />
      <MemberSignature Language="F#" Value="member this.Parent : Azure.ResourceManager.Resources.Subscription" Usage="Azure.ResourceManager.Resources.ResourceGroupContainer.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Resources.Subscription</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the parent resource of this resource.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartCreateOrUpdate">
      <MemberSignature Language="C#" Value="public Azure.ResourceManager.Resources.Models.ResourceGroupCreateOrUpdateOperation StartCreateOrUpdate (string name, Azure.ResourceManager.Resources.ResourceGroupData resourceDetails, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Azure.ResourceManager.Resources.Models.ResourceGroupCreateOrUpdateOperation StartCreateOrUpdate(string name, class Azure.ResourceManager.Resources.ResourceGroupData resourceDetails, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.ResourceGroupContainer.StartCreateOrUpdate(System.String,Azure.ResourceManager.Resources.ResourceGroupData,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function StartCreateOrUpdate (name As String, resourceDetails As ResourceGroupData, Optional cancellationToken As CancellationToken = Nothing) As ResourceGroupCreateOrUpdateOperation" />
      <MemberSignature Language="F#" Value="member this.StartCreateOrUpdate : string * Azure.ResourceManager.Resources.ResourceGroupData * System.Threading.CancellationToken -&gt; Azure.ResourceManager.Resources.Models.ResourceGroupCreateOrUpdateOperation" Usage="resourceGroupContainer.StartCreateOrUpdate (name, resourceDetails, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Resources.Models.ResourceGroupCreateOrUpdateOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceDetails" Type="Azure.ResourceManager.Resources.ResourceGroupData" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="name"> The name of the resource group. </param>
        <param name="resourceDetails"> The desired resource group configuration. </param>
        <param name="cancellationToken"> A token to allow the caller to cancel the call to the service. The default value is <see cref="P:System.Threading.CancellationToken.None" />. </param>
        <summary>
            The operation to create or update a resource group. Please note some properties can be set only during creation.
            </summary>
        <returns> An <see cref="T:Azure.Operation`1" /> that allows polling for completion of the operation. </returns>
        <remarks>
          <see href="https://azure.github.io/azure-sdk/dotnet_introduction.html#dotnet-longrunning">Details on long running operation object.</see>
        </remarks>
        <exception cref="T:System.ArgumentException"> Name of the resource group cannot be null or a whitespace. </exception>
        <exception cref="T:System.ArgumentNullException"> resourceDetails cannot be null. </exception>
      </Docs>
    </Member>
    <Member MemberName="StartCreateOrUpdateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.Resources.Models.ResourceGroupCreateOrUpdateOperation&gt; StartCreateOrUpdateAsync (string name, Azure.ResourceManager.Resources.ResourceGroupData resourceDetails, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.Resources.Models.ResourceGroupCreateOrUpdateOperation&gt; StartCreateOrUpdateAsync(string name, class Azure.ResourceManager.Resources.ResourceGroupData resourceDetails, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.ResourceGroupContainer.StartCreateOrUpdateAsync(System.String,Azure.ResourceManager.Resources.ResourceGroupData,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartCreateOrUpdateAsync (name As String, resourceDetails As ResourceGroupData, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ResourceGroupCreateOrUpdateOperation)" />
      <MemberSignature Language="F#" Value="abstract member StartCreateOrUpdateAsync : string * Azure.ResourceManager.Resources.ResourceGroupData * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.Resources.Models.ResourceGroupCreateOrUpdateOperation&gt;&#xA;override this.StartCreateOrUpdateAsync : string * Azure.ResourceManager.Resources.ResourceGroupData * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.Resources.Models.ResourceGroupCreateOrUpdateOperation&gt;" Usage="resourceGroupContainer.StartCreateOrUpdateAsync (name, resourceDetails, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.Resources.Models.ResourceGroupCreateOrUpdateOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceDetails" Type="Azure.ResourceManager.Resources.ResourceGroupData" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="name"> The name of the resource group. </param>
        <param name="resourceDetails"> The desired resource group configuration. </param>
        <param name="cancellationToken"> A token to allow the caller to cancel the call to the service. The default value is <see cref="P:System.Threading.CancellationToken.None" />. </param>
        <summary>
            The operation to create or update a resource group. Please note some properties can be set only during creation.
            </summary>
        <returns> A <see cref="T:System.Threading.Tasks.Task" /> that on completion returns an <see cref="T:Azure.Operation`1" /> that allows polling for completion of the operation. </returns>
        <remarks>
          <see href="https://azure.github.io/azure-sdk/dotnet_introduction.html#dotnet-longrunning">Details on long running operation object.</see>
        </remarks>
        <exception cref="T:System.ArgumentException"> Name of the resource group cannot be null or a whitespace. </exception>
        <exception cref="T:System.ArgumentNullException"> resourceDetails cannot be null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ValidResourceType">
      <MemberSignature Language="C#" Value="protected override Azure.ResourceManager.ResourceType ValidResourceType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.ResourceType ValidResourceType" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Resources.ResourceGroupContainer.ValidResourceType" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ValidResourceType As ResourceType" />
      <MemberSignature Language="F#" Value="member this.ValidResourceType : Azure.ResourceManager.ResourceType" Usage="Azure.ResourceManager.Resources.ResourceGroupContainer.ValidResourceType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ResourceType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the valid Azure resource type for the current operations.
            </summary>
        <value> A valid Azure resource type. </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

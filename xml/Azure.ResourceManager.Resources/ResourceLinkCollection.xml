<Type Name="ResourceLinkCollection" FullName="Azure.ResourceManager.Resources.ResourceLinkCollection">
  <TypeSignature Language="C#" Value="public class ResourceLinkCollection : Azure.ResourceManager.Core.ArmCollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ResourceLinkCollection extends Azure.ResourceManager.Core.ArmCollection" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Resources.ResourceLinkCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class ResourceLinkCollection&#xA;Inherits ArmCollection" />
  <TypeSignature Language="F#" Value="type ResourceLinkCollection = class&#xA;    inherit ArmCollection" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.Core.ArmCollection</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class representing collection of ResourceLink and their operations over its parent. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ResourceLinkCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.ResourceLinkCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Resources.ResourceLinkCollection" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdate">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Resources.Models.ResourceLinkCreateOrUpdateOperation CreateOrUpdate (Azure.ResourceManager.ResourceIdentifier linkId, Azure.ResourceManager.Resources.Models.ResourceLinkProperties properties = default, bool waitForCompletion = true, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Resources.Models.ResourceLinkCreateOrUpdateOperation CreateOrUpdate(class Azure.ResourceManager.ResourceIdentifier linkId, class Azure.ResourceManager.Resources.Models.ResourceLinkProperties properties, bool waitForCompletion, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.ResourceLinkCollection.CreateOrUpdate(Azure.ResourceManager.ResourceIdentifier,Azure.ResourceManager.Resources.Models.ResourceLinkProperties,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdate (linkId As ResourceIdentifier, Optional properties As ResourceLinkProperties = Nothing, Optional waitForCompletion As Boolean = true, Optional cancellationToken As CancellationToken = Nothing) As ResourceLinkCreateOrUpdateOperation" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdate : Azure.ResourceManager.ResourceIdentifier * Azure.ResourceManager.Resources.Models.ResourceLinkProperties * bool * System.Threading.CancellationToken -&gt; Azure.ResourceManager.Resources.Models.ResourceLinkCreateOrUpdateOperation&#xA;override this.CreateOrUpdate : Azure.ResourceManager.ResourceIdentifier * Azure.ResourceManager.Resources.Models.ResourceLinkProperties * bool * System.Threading.CancellationToken -&gt; Azure.ResourceManager.Resources.Models.ResourceLinkCreateOrUpdateOperation" Usage="resourceLinkCollection.CreateOrUpdate (linkId, properties, waitForCompletion, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Resources.Models.ResourceLinkCreateOrUpdateOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="linkId" Type="Azure.ResourceManager.ResourceIdentifier" />
        <Parameter Name="properties" Type="Azure.ResourceManager.Resources.Models.ResourceLinkProperties" />
        <Parameter Name="waitForCompletion" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="linkId"> The fully qualified ID of the resource link. Use the format, /subscriptions/{subscription-id}/resourceGroups/{resource-group-name}/{provider-namespace}/{resource-type}/{resource-name}/Microsoft.Resources/links/{link-name}. For example, /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myGroup/Microsoft.Web/sites/mySite/Microsoft.Resources/links/myLink. </param>
        <param name="properties"> Properties for resource link. </param>
        <param name="waitForCompletion"> Waits for the completion of the long running operations. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Creates or updates a resource link between the specified resources. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="linkId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.Resources.Models.ResourceLinkCreateOrUpdateOperation&gt; CreateOrUpdateAsync (Azure.ResourceManager.ResourceIdentifier linkId, Azure.ResourceManager.Resources.Models.ResourceLinkProperties properties = default, bool waitForCompletion = true, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.Resources.Models.ResourceLinkCreateOrUpdateOperation&gt; CreateOrUpdateAsync(class Azure.ResourceManager.ResourceIdentifier linkId, class Azure.ResourceManager.Resources.Models.ResourceLinkProperties properties, bool waitForCompletion, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.ResourceLinkCollection.CreateOrUpdateAsync(Azure.ResourceManager.ResourceIdentifier,Azure.ResourceManager.Resources.Models.ResourceLinkProperties,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdateAsync (linkId As ResourceIdentifier, Optional properties As ResourceLinkProperties = Nothing, Optional waitForCompletion As Boolean = true, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ResourceLinkCreateOrUpdateOperation)" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdateAsync : Azure.ResourceManager.ResourceIdentifier * Azure.ResourceManager.Resources.Models.ResourceLinkProperties * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.Resources.Models.ResourceLinkCreateOrUpdateOperation&gt;&#xA;override this.CreateOrUpdateAsync : Azure.ResourceManager.ResourceIdentifier * Azure.ResourceManager.Resources.Models.ResourceLinkProperties * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.Resources.Models.ResourceLinkCreateOrUpdateOperation&gt;" Usage="resourceLinkCollection.CreateOrUpdateAsync (linkId, properties, waitForCompletion, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.Resources.Models.ResourceLinkCreateOrUpdateOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="linkId" Type="Azure.ResourceManager.ResourceIdentifier" />
        <Parameter Name="properties" Type="Azure.ResourceManager.Resources.Models.ResourceLinkProperties" />
        <Parameter Name="waitForCompletion" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="linkId"> The fully qualified ID of the resource link. Use the format, /subscriptions/{subscription-id}/resourceGroups/{resource-group-name}/{provider-namespace}/{resource-type}/{resource-name}/Microsoft.Resources/links/{link-name}. For example, /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myGroup/Microsoft.Web/sites/mySite/Microsoft.Resources/links/myLink. </param>
        <param name="properties"> Properties for resource link. </param>
        <param name="waitForCompletion"> Waits for the completion of the long running operations. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Creates or updates a resource link between the specified resources. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="linkId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;bool&gt; Exists (Azure.ResourceManager.ResourceIdentifier linkId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;bool&gt; Exists(class Azure.ResourceManager.ResourceIdentifier linkId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.ResourceLinkCollection.Exists(Azure.ResourceManager.ResourceIdentifier,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Exists (linkId As ResourceIdentifier, Optional cancellationToken As CancellationToken = Nothing) As Response(Of Boolean)" />
      <MemberSignature Language="F#" Value="abstract member Exists : Azure.ResourceManager.ResourceIdentifier * System.Threading.CancellationToken -&gt; Azure.Response&lt;bool&gt;&#xA;override this.Exists : Azure.ResourceManager.ResourceIdentifier * System.Threading.CancellationToken -&gt; Azure.Response&lt;bool&gt;" Usage="resourceLinkCollection.Exists (linkId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="linkId" Type="Azure.ResourceManager.ResourceIdentifier" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="linkId"> The fully qualified Id of the resource link. For example, /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myGroup/Microsoft.Web/sites/mySite/Microsoft.Resources/links/myLink. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Tries to get details for this resource from the service. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="linkId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ExistsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt; ExistsAsync (Azure.ResourceManager.ResourceIdentifier linkId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;bool&gt;&gt; ExistsAsync(class Azure.ResourceManager.ResourceIdentifier linkId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.ResourceLinkCollection.ExistsAsync(Azure.ResourceManager.ResourceIdentifier,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ExistsAsync (linkId As ResourceIdentifier, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of Boolean))" />
      <MemberSignature Language="F#" Value="abstract member ExistsAsync : Azure.ResourceManager.ResourceIdentifier * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt;&#xA;override this.ExistsAsync : Azure.ResourceManager.ResourceIdentifier * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt;" Usage="resourceLinkCollection.ExistsAsync (linkId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Boolean&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="linkId" Type="Azure.ResourceManager.ResourceIdentifier" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="linkId"> The fully qualified Id of the resource link. For example, /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myGroup/Microsoft.Web/sites/mySite/Microsoft.Resources/links/myLink. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Tries to get details for this resource from the service. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="linkId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Resources.ResourceLink&gt; Get (Azure.ResourceManager.ResourceIdentifier linkId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Resources.ResourceLink&gt; Get(class Azure.ResourceManager.ResourceIdentifier linkId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.ResourceLinkCollection.Get(Azure.ResourceManager.ResourceIdentifier,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Get (linkId As ResourceIdentifier, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ResourceLink)" />
      <MemberSignature Language="F#" Value="abstract member Get : Azure.ResourceManager.ResourceIdentifier * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Resources.ResourceLink&gt;&#xA;override this.Get : Azure.ResourceManager.ResourceIdentifier * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Resources.ResourceLink&gt;" Usage="resourceLinkCollection.Get (linkId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Resources.ResourceLink&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="linkId" Type="Azure.ResourceManager.ResourceIdentifier" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="linkId"> The fully qualified Id of the resource link. For example, /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myGroup/Microsoft.Web/sites/mySite/Microsoft.Resources/links/myLink. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets a resource link with the specified ID. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="linkId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAll">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Resources.ResourceLink&gt; GetAll (string scope, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Resources.ResourceLink&gt; GetAll(string scope, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.ResourceLinkCollection.GetAll(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAll (scope As String, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ResourceLink)" />
      <MemberSignature Language="F#" Value="abstract member GetAll : string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Resources.ResourceLink&gt;&#xA;override this.GetAll : string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Resources.ResourceLink&gt;" Usage="resourceLinkCollection.GetAll (scope, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Resources.ResourceLink&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scope"> The fully qualified ID of the scope for getting the resource links. For example, to list resource links at and under a resource group, set the scope to /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myGroup. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets a list of resource links at and below the specified source scope. </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Resources.ResourceLink" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Resources.ResourceLink&gt; GetAllAsync (string scope, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Resources.ResourceLink&gt; GetAllAsync(string scope, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.ResourceLinkCollection.GetAllAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAllAsync (scope As String, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ResourceLink)" />
      <MemberSignature Language="F#" Value="abstract member GetAllAsync : string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Resources.ResourceLink&gt;&#xA;override this.GetAllAsync : string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Resources.ResourceLink&gt;" Usage="resourceLinkCollection.GetAllAsync (scope, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Resources.ResourceLink&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scope"> The fully qualified ID of the scope for getting the resource links. For example, to list resource links at and under a resource group, set the scope to /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myGroup. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets a list of resource links at and below the specified source scope. </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Resources.ResourceLink" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.ResourceLink&gt;&gt; GetAsync (Azure.ResourceManager.ResourceIdentifier linkId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Resources.ResourceLink&gt;&gt; GetAsync(class Azure.ResourceManager.ResourceIdentifier linkId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.ResourceLinkCollection.GetAsync(Azure.ResourceManager.ResourceIdentifier,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAsync (linkId As ResourceIdentifier, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ResourceLink))" />
      <MemberSignature Language="F#" Value="abstract member GetAsync : Azure.ResourceManager.ResourceIdentifier * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.ResourceLink&gt;&gt;&#xA;override this.GetAsync : Azure.ResourceManager.ResourceIdentifier * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.ResourceLink&gt;&gt;" Usage="resourceLinkCollection.GetAsync (linkId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.ResourceLink&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="linkId" Type="Azure.ResourceManager.ResourceIdentifier" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="linkId"> The fully qualified Id of the resource link. For example, /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myGroup/Microsoft.Web/sites/mySite/Microsoft.Resources/links/myLink. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets a resource link with the specified ID. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="linkId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetIfExists">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Resources.ResourceLink&gt; GetIfExists (Azure.ResourceManager.ResourceIdentifier linkId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Resources.ResourceLink&gt; GetIfExists(class Azure.ResourceManager.ResourceIdentifier linkId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.ResourceLinkCollection.GetIfExists(Azure.ResourceManager.ResourceIdentifier,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIfExists (linkId As ResourceIdentifier, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ResourceLink)" />
      <MemberSignature Language="F#" Value="abstract member GetIfExists : Azure.ResourceManager.ResourceIdentifier * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Resources.ResourceLink&gt;&#xA;override this.GetIfExists : Azure.ResourceManager.ResourceIdentifier * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Resources.ResourceLink&gt;" Usage="resourceLinkCollection.GetIfExists (linkId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Resources.ResourceLink&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="linkId" Type="Azure.ResourceManager.ResourceIdentifier" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="linkId"> The fully qualified Id of the resource link. For example, /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myGroup/Microsoft.Web/sites/mySite/Microsoft.Resources/links/myLink. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Tries to get details for this resource from the service. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="linkId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetIfExistsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.ResourceLink&gt;&gt; GetIfExistsAsync (Azure.ResourceManager.ResourceIdentifier linkId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Resources.ResourceLink&gt;&gt; GetIfExistsAsync(class Azure.ResourceManager.ResourceIdentifier linkId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.ResourceLinkCollection.GetIfExistsAsync(Azure.ResourceManager.ResourceIdentifier,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIfExistsAsync (linkId As ResourceIdentifier, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ResourceLink))" />
      <MemberSignature Language="F#" Value="abstract member GetIfExistsAsync : Azure.ResourceManager.ResourceIdentifier * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.ResourceLink&gt;&gt;&#xA;override this.GetIfExistsAsync : Azure.ResourceManager.ResourceIdentifier * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.ResourceLink&gt;&gt;" Usage="resourceLinkCollection.GetIfExistsAsync (linkId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.ResourceLink&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="linkId" Type="Azure.ResourceManager.ResourceIdentifier" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="linkId"> The fully qualified Id of the resource link. For example, /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myGroup/Microsoft.Web/sites/mySite/Microsoft.Resources/links/myLink. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Tries to get details for this resource from the service. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="linkId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ValidResourceType">
      <MemberSignature Language="C#" Value="protected override Azure.ResourceManager.ResourceType ValidResourceType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.ResourceType ValidResourceType" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Resources.ResourceLinkCollection.ValidResourceType" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ValidResourceType As ResourceType" />
      <MemberSignature Language="F#" Value="member this.ValidResourceType : Azure.ResourceManager.ResourceType" Usage="Azure.ResourceManager.Resources.ResourceLinkCollection.ValidResourceType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ResourceType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets the valid resource type for this object. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

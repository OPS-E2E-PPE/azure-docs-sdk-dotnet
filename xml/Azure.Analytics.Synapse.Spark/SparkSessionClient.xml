<Type Name="SparkSessionClient" FullName="Azure.Analytics.Synapse.Spark.SparkSessionClient">
  <TypeSignature Language="C#" Value="public class SparkSessionClient" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SparkSessionClient extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Analytics.Synapse.Spark.SparkSessionClient" />
  <TypeSignature Language="VB.NET" Value="Public Class SparkSessionClient" />
  <TypeSignature Language="F#" Value="type SparkSessionClient = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Analytics.Synapse.Spark</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> The SparkSession service client. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SparkSessionClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Spark.SparkSessionClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Spark</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of SparkSessionClient for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SparkSessionClient (Uri endpoint, string sparkPoolName, Azure.Core.TokenCredential credential);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, string sparkPoolName, class Azure.Core.TokenCredential credential) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Spark.SparkSessionClient.#ctor(System.Uri,System.String,Azure.Core.TokenCredential)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, sparkPoolName As String, credential As TokenCredential)" />
      <MemberSignature Language="F#" Value="new Azure.Analytics.Synapse.Spark.SparkSessionClient : Uri * string * Azure.Core.TokenCredential -&gt; Azure.Analytics.Synapse.Spark.SparkSessionClient" Usage="new Azure.Analytics.Synapse.Spark.SparkSessionClient (endpoint, sparkPoolName, credential)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Spark</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="sparkPoolName" Type="System.String" />
        <Parameter Name="credential" Type="Azure.Core.TokenCredential" />
      </Parameters>
      <Docs>
        <param name="endpoint">To be added.</param>
        <param name="sparkPoolName">To be added.</param>
        <param name="credential">To be added.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.Analytics.Synapse.Spark.SparkSessionClient" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SparkSessionClient (Uri endpoint, string sparkPoolName, Azure.Core.TokenCredential credential, Azure.Analytics.Synapse.Spark.SparkClientOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, string sparkPoolName, class Azure.Core.TokenCredential credential, class Azure.Analytics.Synapse.Spark.SparkClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Spark.SparkSessionClient.#ctor(System.Uri,System.String,Azure.Core.TokenCredential,Azure.Analytics.Synapse.Spark.SparkClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, sparkPoolName As String, credential As TokenCredential, options As SparkClientOptions)" />
      <MemberSignature Language="F#" Value="new Azure.Analytics.Synapse.Spark.SparkSessionClient : Uri * string * Azure.Core.TokenCredential * Azure.Analytics.Synapse.Spark.SparkClientOptions -&gt; Azure.Analytics.Synapse.Spark.SparkSessionClient" Usage="new Azure.Analytics.Synapse.Spark.SparkSessionClient (endpoint, sparkPoolName, credential, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Spark</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="sparkPoolName" Type="System.String" />
        <Parameter Name="credential" Type="Azure.Core.TokenCredential" />
        <Parameter Name="options" Type="Azure.Analytics.Synapse.Spark.SparkClientOptions" />
      </Parameters>
      <Docs>
        <param name="endpoint">To be added.</param>
        <param name="sparkPoolName">To be added.</param>
        <param name="credential">To be added.</param>
        <param name="options">To be added.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.Analytics.Synapse.Spark.SparkSessionClient" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelSparkSession">
      <MemberSignature Language="C#" Value="public virtual Azure.Response CancelSparkSession (int sessionId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response CancelSparkSession(int32 sessionId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Spark.SparkSessionClient.CancelSparkSession(System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CancelSparkSession (sessionId As Integer, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member CancelSparkSession : int * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.CancelSparkSession : int * System.Threading.CancellationToken -&gt; Azure.Response" Usage="sparkSessionClient.CancelSparkSession (sessionId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Spark</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sessionId" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sessionId"> Identifier for the session. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Cancels a running spark session. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelSparkSessionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; CancelSparkSessionAsync (int sessionId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; CancelSparkSessionAsync(int32 sessionId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Spark.SparkSessionClient.CancelSparkSessionAsync(System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CancelSparkSessionAsync (sessionId As Integer, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member CancelSparkSessionAsync : int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.CancelSparkSessionAsync : int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="sparkSessionClient.CancelSparkSessionAsync (sessionId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Spark</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sessionId" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sessionId"> Identifier for the session. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Cancels a running spark session. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelSparkStatement">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Analytics.Synapse.Spark.Models.SparkStatementCancellationResult&gt; CancelSparkStatement (int sessionId, int statementId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Analytics.Synapse.Spark.Models.SparkStatementCancellationResult&gt; CancelSparkStatement(int32 sessionId, int32 statementId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Spark.SparkSessionClient.CancelSparkStatement(System.Int32,System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CancelSparkStatement (sessionId As Integer, statementId As Integer, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SparkStatementCancellationResult)" />
      <MemberSignature Language="F#" Value="abstract member CancelSparkStatement : int * int * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Analytics.Synapse.Spark.Models.SparkStatementCancellationResult&gt;&#xA;override this.CancelSparkStatement : int * int * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Analytics.Synapse.Spark.Models.SparkStatementCancellationResult&gt;" Usage="sparkSessionClient.CancelSparkStatement (sessionId, statementId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Spark</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Analytics.Synapse.Spark.Models.SparkStatementCancellationResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sessionId" Type="System.Int32" />
        <Parameter Name="statementId" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sessionId"> Identifier for the session. </param>
        <param name="statementId"> Identifier for the statement. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Kill a statement within a session. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelSparkStatementAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.Spark.Models.SparkStatementCancellationResult&gt;&gt; CancelSparkStatementAsync (int sessionId, int statementId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Analytics.Synapse.Spark.Models.SparkStatementCancellationResult&gt;&gt; CancelSparkStatementAsync(int32 sessionId, int32 statementId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Spark.SparkSessionClient.CancelSparkStatementAsync(System.Int32,System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CancelSparkStatementAsync (sessionId As Integer, statementId As Integer, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SparkStatementCancellationResult))" />
      <MemberSignature Language="F#" Value="abstract member CancelSparkStatementAsync : int * int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.Spark.Models.SparkStatementCancellationResult&gt;&gt;&#xA;override this.CancelSparkStatementAsync : int * int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.Spark.Models.SparkStatementCancellationResult&gt;&gt;" Usage="sparkSessionClient.CancelSparkStatementAsync (sessionId, statementId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Spark</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.Spark.Models.SparkStatementCancellationResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sessionId" Type="System.Int32" />
        <Parameter Name="statementId" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sessionId"> Identifier for the session. </param>
        <param name="statementId"> Identifier for the statement. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Kill a statement within a session. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSparkSession">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Analytics.Synapse.Spark.Models.SparkSession&gt; CreateSparkSession (Azure.Analytics.Synapse.Spark.Models.SparkSessionOptions sparkSessionOptions, bool? detailed = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Analytics.Synapse.Spark.Models.SparkSession&gt; CreateSparkSession(class Azure.Analytics.Synapse.Spark.Models.SparkSessionOptions sparkSessionOptions, valuetype System.Nullable`1&lt;bool&gt; detailed, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Spark.SparkSessionClient.CreateSparkSession(Azure.Analytics.Synapse.Spark.Models.SparkSessionOptions,System.Nullable{System.Boolean},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateSparkSession (sparkSessionOptions As SparkSessionOptions, Optional detailed As Nullable(Of Boolean) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SparkSession)" />
      <MemberSignature Language="F#" Value="abstract member CreateSparkSession : Azure.Analytics.Synapse.Spark.Models.SparkSessionOptions * Nullable&lt;bool&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Analytics.Synapse.Spark.Models.SparkSession&gt;&#xA;override this.CreateSparkSession : Azure.Analytics.Synapse.Spark.Models.SparkSessionOptions * Nullable&lt;bool&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Analytics.Synapse.Spark.Models.SparkSession&gt;" Usage="sparkSessionClient.CreateSparkSession (sparkSessionOptions, detailed, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Spark</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Analytics.Synapse.Spark.Models.SparkSession&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sparkSessionOptions" Type="Azure.Analytics.Synapse.Spark.Models.SparkSessionOptions" />
        <Parameter Name="detailed" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sparkSessionOptions"> Livy compatible batch job request payload. </param>
        <param name="detailed"> Optional query param specifying whether detailed response is returned beyond plain livy. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Create new spark session. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSparkSessionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.Spark.Models.SparkSession&gt;&gt; CreateSparkSessionAsync (Azure.Analytics.Synapse.Spark.Models.SparkSessionOptions sparkSessionOptions, bool? detailed = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Analytics.Synapse.Spark.Models.SparkSession&gt;&gt; CreateSparkSessionAsync(class Azure.Analytics.Synapse.Spark.Models.SparkSessionOptions sparkSessionOptions, valuetype System.Nullable`1&lt;bool&gt; detailed, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Spark.SparkSessionClient.CreateSparkSessionAsync(Azure.Analytics.Synapse.Spark.Models.SparkSessionOptions,System.Nullable{System.Boolean},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateSparkSessionAsync (sparkSessionOptions As SparkSessionOptions, Optional detailed As Nullable(Of Boolean) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SparkSession))" />
      <MemberSignature Language="F#" Value="abstract member CreateSparkSessionAsync : Azure.Analytics.Synapse.Spark.Models.SparkSessionOptions * Nullable&lt;bool&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.Spark.Models.SparkSession&gt;&gt;&#xA;override this.CreateSparkSessionAsync : Azure.Analytics.Synapse.Spark.Models.SparkSessionOptions * Nullable&lt;bool&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.Spark.Models.SparkSession&gt;&gt;" Usage="sparkSessionClient.CreateSparkSessionAsync (sparkSessionOptions, detailed, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Spark</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.Spark.Models.SparkSession&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sparkSessionOptions" Type="Azure.Analytics.Synapse.Spark.Models.SparkSessionOptions" />
        <Parameter Name="detailed" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sparkSessionOptions"> Livy compatible batch job request payload. </param>
        <param name="detailed"> Optional query param specifying whether detailed response is returned beyond plain livy. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Create new spark session. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSparkStatement">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Analytics.Synapse.Spark.Models.SparkStatement&gt; CreateSparkStatement (int sessionId, Azure.Analytics.Synapse.Spark.Models.SparkStatementOptions sparkStatementOptions, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Analytics.Synapse.Spark.Models.SparkStatement&gt; CreateSparkStatement(int32 sessionId, class Azure.Analytics.Synapse.Spark.Models.SparkStatementOptions sparkStatementOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Spark.SparkSessionClient.CreateSparkStatement(System.Int32,Azure.Analytics.Synapse.Spark.Models.SparkStatementOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateSparkStatement (sessionId As Integer, sparkStatementOptions As SparkStatementOptions, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SparkStatement)" />
      <MemberSignature Language="F#" Value="abstract member CreateSparkStatement : int * Azure.Analytics.Synapse.Spark.Models.SparkStatementOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Analytics.Synapse.Spark.Models.SparkStatement&gt;&#xA;override this.CreateSparkStatement : int * Azure.Analytics.Synapse.Spark.Models.SparkStatementOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Analytics.Synapse.Spark.Models.SparkStatement&gt;" Usage="sparkSessionClient.CreateSparkStatement (sessionId, sparkStatementOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Spark</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Analytics.Synapse.Spark.Models.SparkStatement&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sessionId" Type="System.Int32" />
        <Parameter Name="sparkStatementOptions" Type="Azure.Analytics.Synapse.Spark.Models.SparkStatementOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sessionId"> Identifier for the session. </param>
        <param name="sparkStatementOptions"> Livy compatible batch job request payload. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Create statement within a spark session. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSparkStatementAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.Spark.Models.SparkStatement&gt;&gt; CreateSparkStatementAsync (int sessionId, Azure.Analytics.Synapse.Spark.Models.SparkStatementOptions sparkStatementOptions, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Analytics.Synapse.Spark.Models.SparkStatement&gt;&gt; CreateSparkStatementAsync(int32 sessionId, class Azure.Analytics.Synapse.Spark.Models.SparkStatementOptions sparkStatementOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Spark.SparkSessionClient.CreateSparkStatementAsync(System.Int32,Azure.Analytics.Synapse.Spark.Models.SparkStatementOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateSparkStatementAsync (sessionId As Integer, sparkStatementOptions As SparkStatementOptions, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SparkStatement))" />
      <MemberSignature Language="F#" Value="abstract member CreateSparkStatementAsync : int * Azure.Analytics.Synapse.Spark.Models.SparkStatementOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.Spark.Models.SparkStatement&gt;&gt;&#xA;override this.CreateSparkStatementAsync : int * Azure.Analytics.Synapse.Spark.Models.SparkStatementOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.Spark.Models.SparkStatement&gt;&gt;" Usage="sparkSessionClient.CreateSparkStatementAsync (sessionId, sparkStatementOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Spark</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.Spark.Models.SparkStatement&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sessionId" Type="System.Int32" />
        <Parameter Name="sparkStatementOptions" Type="Azure.Analytics.Synapse.Spark.Models.SparkStatementOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sessionId"> Identifier for the session. </param>
        <param name="sparkStatementOptions"> Livy compatible batch job request payload. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Create statement within a spark session. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSparkSession">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Analytics.Synapse.Spark.Models.SparkSession&gt; GetSparkSession (int sessionId, bool? detailed = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Analytics.Synapse.Spark.Models.SparkSession&gt; GetSparkSession(int32 sessionId, valuetype System.Nullable`1&lt;bool&gt; detailed, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Spark.SparkSessionClient.GetSparkSession(System.Int32,System.Nullable{System.Boolean},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSparkSession (sessionId As Integer, Optional detailed As Nullable(Of Boolean) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SparkSession)" />
      <MemberSignature Language="F#" Value="abstract member GetSparkSession : int * Nullable&lt;bool&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Analytics.Synapse.Spark.Models.SparkSession&gt;&#xA;override this.GetSparkSession : int * Nullable&lt;bool&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Analytics.Synapse.Spark.Models.SparkSession&gt;" Usage="sparkSessionClient.GetSparkSession (sessionId, detailed, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Spark</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Analytics.Synapse.Spark.Models.SparkSession&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sessionId" Type="System.Int32" />
        <Parameter Name="detailed" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sessionId"> Identifier for the session. </param>
        <param name="detailed"> Optional query param specifying whether detailed response is returned beyond plain livy. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets a single spark session. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSparkSessionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.Spark.Models.SparkSession&gt;&gt; GetSparkSessionAsync (int sessionId, bool? detailed = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Analytics.Synapse.Spark.Models.SparkSession&gt;&gt; GetSparkSessionAsync(int32 sessionId, valuetype System.Nullable`1&lt;bool&gt; detailed, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Spark.SparkSessionClient.GetSparkSessionAsync(System.Int32,System.Nullable{System.Boolean},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSparkSessionAsync (sessionId As Integer, Optional detailed As Nullable(Of Boolean) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SparkSession))" />
      <MemberSignature Language="F#" Value="abstract member GetSparkSessionAsync : int * Nullable&lt;bool&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.Spark.Models.SparkSession&gt;&gt;&#xA;override this.GetSparkSessionAsync : int * Nullable&lt;bool&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.Spark.Models.SparkSession&gt;&gt;" Usage="sparkSessionClient.GetSparkSessionAsync (sessionId, detailed, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Spark</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.Spark.Models.SparkSession&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sessionId" Type="System.Int32" />
        <Parameter Name="detailed" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sessionId"> Identifier for the session. </param>
        <param name="detailed"> Optional query param specifying whether detailed response is returned beyond plain livy. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets a single spark session. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSparkSessions">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Analytics.Synapse.Spark.Models.SparkSessionCollection&gt; GetSparkSessions (int? from = default, int? size = default, bool? detailed = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Analytics.Synapse.Spark.Models.SparkSessionCollection&gt; GetSparkSessions(valuetype System.Nullable`1&lt;int32&gt; from, valuetype System.Nullable`1&lt;int32&gt; size, valuetype System.Nullable`1&lt;bool&gt; detailed, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Spark.SparkSessionClient.GetSparkSessions(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSparkSessions (Optional from As Nullable(Of Integer) = Nothing, Optional size As Nullable(Of Integer) = Nothing, Optional detailed As Nullable(Of Boolean) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SparkSessionCollection)" />
      <MemberSignature Language="F#" Value="abstract member GetSparkSessions : Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;bool&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Analytics.Synapse.Spark.Models.SparkSessionCollection&gt;&#xA;override this.GetSparkSessions : Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;bool&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Analytics.Synapse.Spark.Models.SparkSessionCollection&gt;" Usage="sparkSessionClient.GetSparkSessions (from, size, detailed, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Spark</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Analytics.Synapse.Spark.Models.SparkSessionCollection&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="from" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="size" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="detailed" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="from"> Optional param specifying which index the list should begin from. </param>
        <param name="size">
            Optional param specifying the size of the returned list.
            
                        By default it is 20 and that is the maximum.
            </param>
        <param name="detailed"> Optional query param specifying whether detailed response is returned beyond plain livy. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> List all spark sessions which are running under a particular spark pool. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSparkSessionsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.Spark.Models.SparkSessionCollection&gt;&gt; GetSparkSessionsAsync (int? from = default, int? size = default, bool? detailed = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Analytics.Synapse.Spark.Models.SparkSessionCollection&gt;&gt; GetSparkSessionsAsync(valuetype System.Nullable`1&lt;int32&gt; from, valuetype System.Nullable`1&lt;int32&gt; size, valuetype System.Nullable`1&lt;bool&gt; detailed, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Spark.SparkSessionClient.GetSparkSessionsAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSparkSessionsAsync (Optional from As Nullable(Of Integer) = Nothing, Optional size As Nullable(Of Integer) = Nothing, Optional detailed As Nullable(Of Boolean) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SparkSessionCollection))" />
      <MemberSignature Language="F#" Value="abstract member GetSparkSessionsAsync : Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;bool&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.Spark.Models.SparkSessionCollection&gt;&gt;&#xA;override this.GetSparkSessionsAsync : Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;bool&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.Spark.Models.SparkSessionCollection&gt;&gt;" Usage="sparkSessionClient.GetSparkSessionsAsync (from, size, detailed, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Spark</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.Spark.Models.SparkSessionCollection&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="from" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="size" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="detailed" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="from"> Optional param specifying which index the list should begin from. </param>
        <param name="size">
            Optional param specifying the size of the returned list.
            
                        By default it is 20 and that is the maximum.
            </param>
        <param name="detailed"> Optional query param specifying whether detailed response is returned beyond plain livy. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> List all spark sessions which are running under a particular spark pool. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSparkStatement">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Analytics.Synapse.Spark.Models.SparkStatement&gt; GetSparkStatement (int sessionId, int statementId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Analytics.Synapse.Spark.Models.SparkStatement&gt; GetSparkStatement(int32 sessionId, int32 statementId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Spark.SparkSessionClient.GetSparkStatement(System.Int32,System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSparkStatement (sessionId As Integer, statementId As Integer, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SparkStatement)" />
      <MemberSignature Language="F#" Value="abstract member GetSparkStatement : int * int * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Analytics.Synapse.Spark.Models.SparkStatement&gt;&#xA;override this.GetSparkStatement : int * int * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Analytics.Synapse.Spark.Models.SparkStatement&gt;" Usage="sparkSessionClient.GetSparkStatement (sessionId, statementId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Spark</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Analytics.Synapse.Spark.Models.SparkStatement&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sessionId" Type="System.Int32" />
        <Parameter Name="statementId" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sessionId"> Identifier for the session. </param>
        <param name="statementId"> Identifier for the statement. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets a single statement within a spark session. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSparkStatementAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.Spark.Models.SparkStatement&gt;&gt; GetSparkStatementAsync (int sessionId, int statementId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Analytics.Synapse.Spark.Models.SparkStatement&gt;&gt; GetSparkStatementAsync(int32 sessionId, int32 statementId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Spark.SparkSessionClient.GetSparkStatementAsync(System.Int32,System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSparkStatementAsync (sessionId As Integer, statementId As Integer, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SparkStatement))" />
      <MemberSignature Language="F#" Value="abstract member GetSparkStatementAsync : int * int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.Spark.Models.SparkStatement&gt;&gt;&#xA;override this.GetSparkStatementAsync : int * int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.Spark.Models.SparkStatement&gt;&gt;" Usage="sparkSessionClient.GetSparkStatementAsync (sessionId, statementId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Spark</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.Spark.Models.SparkStatement&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sessionId" Type="System.Int32" />
        <Parameter Name="statementId" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sessionId"> Identifier for the session. </param>
        <param name="statementId"> Identifier for the statement. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets a single statement within a spark session. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSparkStatements">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Analytics.Synapse.Spark.Models.SparkStatementCollection&gt; GetSparkStatements (int sessionId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Analytics.Synapse.Spark.Models.SparkStatementCollection&gt; GetSparkStatements(int32 sessionId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Spark.SparkSessionClient.GetSparkStatements(System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSparkStatements (sessionId As Integer, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SparkStatementCollection)" />
      <MemberSignature Language="F#" Value="abstract member GetSparkStatements : int * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Analytics.Synapse.Spark.Models.SparkStatementCollection&gt;&#xA;override this.GetSparkStatements : int * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Analytics.Synapse.Spark.Models.SparkStatementCollection&gt;" Usage="sparkSessionClient.GetSparkStatements (sessionId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Spark</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Analytics.Synapse.Spark.Models.SparkStatementCollection&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sessionId" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sessionId"> Identifier for the session. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets a list of statements within a spark session. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSparkStatementsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.Spark.Models.SparkStatementCollection&gt;&gt; GetSparkStatementsAsync (int sessionId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Analytics.Synapse.Spark.Models.SparkStatementCollection&gt;&gt; GetSparkStatementsAsync(int32 sessionId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Spark.SparkSessionClient.GetSparkStatementsAsync(System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSparkStatementsAsync (sessionId As Integer, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SparkStatementCollection))" />
      <MemberSignature Language="F#" Value="abstract member GetSparkStatementsAsync : int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.Spark.Models.SparkStatementCollection&gt;&gt;&#xA;override this.GetSparkStatementsAsync : int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.Spark.Models.SparkStatementCollection&gt;&gt;" Usage="sparkSessionClient.GetSparkStatementsAsync (sessionId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Spark</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Analytics.Synapse.Spark.Models.SparkStatementCollection&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sessionId" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sessionId"> Identifier for the session. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets a list of statements within a spark session. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetSparkSessionTimeout">
      <MemberSignature Language="C#" Value="public virtual Azure.Response ResetSparkSessionTimeout (int sessionId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response ResetSparkSessionTimeout(int32 sessionId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Spark.SparkSessionClient.ResetSparkSessionTimeout(System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ResetSparkSessionTimeout (sessionId As Integer, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member ResetSparkSessionTimeout : int * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.ResetSparkSessionTimeout : int * System.Threading.CancellationToken -&gt; Azure.Response" Usage="sparkSessionClient.ResetSparkSessionTimeout (sessionId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Spark</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sessionId" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sessionId"> Identifier for the session. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Sends a keep alive call to the current session to reset the session timeout. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetSparkSessionTimeoutAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; ResetSparkSessionTimeoutAsync (int sessionId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; ResetSparkSessionTimeoutAsync(int32 sessionId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.Spark.SparkSessionClient.ResetSparkSessionTimeoutAsync(System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ResetSparkSessionTimeoutAsync (sessionId As Integer, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member ResetSparkSessionTimeoutAsync : int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.ResetSparkSessionTimeoutAsync : int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="sparkSessionClient.ResetSparkSessionTimeoutAsync (sessionId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.Spark</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sessionId" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sessionId"> Identifier for the session. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Sends a keep alive call to the current session to reset the session timeout. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="ManagedIdentityCredential" FullName="Azure.Identity.ManagedIdentityCredential">
  <TypeSignature Language="C#" Value="public class ManagedIdentityCredential : Azure.Core.TokenCredential" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ManagedIdentityCredential extends Azure.Core.TokenCredential" />
  <TypeSignature Language="DocId" Value="T:Azure.Identity.ManagedIdentityCredential" />
  <TypeSignature Language="VB.NET" Value="Public Class ManagedIdentityCredential&#xA;Inherits TokenCredential" />
  <TypeSignature Language="F#" Value="type ManagedIdentityCredential = class&#xA;    inherit TokenCredential" />
  <AssemblyInfo>
    <AssemblyName>Azure.Identity</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.Core.TokenCredential</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Attempts authentication using a managed identity that has been assigned to the deployment environment.This authentication type works in Azure VMs,
            App Service and Azure Functions applications, as well as inside of Azure Cloud Shell. More information about configuring managed identities can be found here:
            https://docs.microsoft.com/en-us/azure/active-directory/managed-identities-azure-resources/overview
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagedIdentityCredential (string clientId = null, Azure.Identity.IdentityClientOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string clientId, class Azure.Identity.IdentityClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Identity.ManagedIdentityCredential.#ctor(System.String,Azure.Identity.IdentityClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Optional clientId As String = null, Optional options As IdentityClientOptions = null)" />
      <MemberSignature Language="F#" Value="new Azure.Identity.ManagedIdentityCredential : string * Azure.Identity.IdentityClientOptions -&gt; Azure.Identity.ManagedIdentityCredential" Usage="new Azure.Identity.ManagedIdentityCredential (clientId, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Identity</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="clientId" Type="System.String" />
        <Parameter Name="options" Type="Azure.Identity.IdentityClientOptions" />
      </Parameters>
      <Docs>
        <param name="clientId">
            The client id to authenticate for a user assigned managed identity.  More information on user assigned managed identities cam be found here: 
            https://docs.microsoft.com/en-us/azure/active-directory/managed-identities-azure-resources/overview#how-a-user-assigned-managed-identity-works-with-an-azure-vm
            </param>
        <param name="options">Options that allow to configure the management of the requests sent to the Azure Active Directory service.</param>
        <summary>
            Creates an instance of the ManagedIdentityCredential capable of authenticating a resource with a managed identity.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetToken">
      <MemberSignature Language="C#" Value="public override Azure.Core.AccessToken GetToken (string[] scopes, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype Azure.Core.AccessToken GetToken(string[] scopes, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Identity.ManagedIdentityCredential.GetToken(System.String[],System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.GetToken : string[] * System.Threading.CancellationToken -&gt; Azure.Core.AccessToken" Usage="managedIdentityCredential.GetToken (scopes, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Identity</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.AccessToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scopes" Type="System.String[]" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scopes">The list of scopes for which the token will have access.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Obtains an <see cref="T:Azure.Core.AccessToken" /> from the Managed Identity service if available.
            </summary>
        <returns>An <see cref="T:Azure.Core.AccessToken" /> which can be used to authenticate service client calls, or a default <see cref="T:Azure.Core.AccessToken" /> if no managed identity is available.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTokenAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;Azure.Core.AccessToken&gt; GetTokenAsync (string[] scopes, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;valuetype Azure.Core.AccessToken&gt; GetTokenAsync(string[] scopes, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Identity.ManagedIdentityCredential.GetTokenAsync(System.String[],System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.GetTokenAsync : string[] * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Core.AccessToken&gt;" Usage="managedIdentityCredential.GetTokenAsync (scopes, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Identity</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Core.AccessToken&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scopes" Type="System.String[]" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scopes">The list of scopes for which the token will have access.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Obtains an <see cref="T:Azure.Core.AccessToken" /> from the Managed Identity service if available.
            </summary>
        <returns>An <see cref="T:Azure.Core.AccessToken" /> which can be used to authenticate service client calls, or a default <see cref="T:Azure.Core.AccessToken" /> if no managed identity is available.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="UsernamePasswordCredential" FullName="Azure.Identity.UsernamePasswordCredential">
  <TypeSignature Language="C#" Value="public class UsernamePasswordCredential : Azure.Core.TokenCredential" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UsernamePasswordCredential extends Azure.Core.TokenCredential" />
  <TypeSignature Language="DocId" Value="T:Azure.Identity.UsernamePasswordCredential" />
  <TypeSignature Language="VB.NET" Value="Public Class UsernamePasswordCredential&#xA;Inherits TokenCredential" />
  <TypeSignature Language="F#" Value="type UsernamePasswordCredential = class&#xA;    inherit TokenCredential" />
  <AssemblyInfo>
    <AssemblyName>Azure.Identity</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.Core.TokenCredential</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
             Enables authentication to Azure Active Directory using a user's  username and password. If the user has MFA enabled this
             credential will fail to get a token throwing an <see cref="T:Azure.Identity.AuthenticationFailedException" />. Also, this credential requires a high degree of
             trust and is not recommended outside of prototyping when more secure credentials can be used.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected UsernamePasswordCredential ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Identity.UsernamePasswordCredential.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Identity</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Protected constructor for mocking
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UsernamePasswordCredential (string username, System.Security.SecureString password, string clientId, string tenantId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string username, class System.Security.SecureString password, string clientId, string tenantId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Identity.UsernamePasswordCredential.#ctor(System.String,System.Security.SecureString,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (username As String, password As SecureString, clientId As String, tenantId As String)" />
      <MemberSignature Language="F#" Value="new Azure.Identity.UsernamePasswordCredential : string * System.Security.SecureString * string * string -&gt; Azure.Identity.UsernamePasswordCredential" Usage="new Azure.Identity.UsernamePasswordCredential (username, password, clientId, tenantId)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Identity</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.Security.SecureString" />
        <Parameter Name="clientId" Type="System.String" />
        <Parameter Name="tenantId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">
        </param>
        <param name="password">The user account's user name, UPN.</param>
        <param name="clientId">The client (application) ID of an App Registration in the tenant.</param>
        <param name="tenantId">The Azure Active Directory tenant (directory) ID or name.</param>
        <summary>
            Creates an instance of the UsernamePasswordCredential with the details needed to authenticate against Azure Active Directory with a simple username
            and password.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UsernamePasswordCredential (string username, System.Security.SecureString password, string clientId, string tenantId, Azure.Identity.IdentityClientOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string username, class System.Security.SecureString password, string clientId, string tenantId, class Azure.Identity.IdentityClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Identity.UsernamePasswordCredential.#ctor(System.String,System.Security.SecureString,System.String,System.String,Azure.Identity.IdentityClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (username As String, password As SecureString, clientId As String, tenantId As String, options As IdentityClientOptions)" />
      <MemberSignature Language="F#" Value="new Azure.Identity.UsernamePasswordCredential : string * System.Security.SecureString * string * string * Azure.Identity.IdentityClientOptions -&gt; Azure.Identity.UsernamePasswordCredential" Usage="new Azure.Identity.UsernamePasswordCredential (username, password, clientId, tenantId, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Identity</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.Security.SecureString" />
        <Parameter Name="clientId" Type="System.String" />
        <Parameter Name="tenantId" Type="System.String" />
        <Parameter Name="options" Type="Azure.Identity.IdentityClientOptions" />
      </Parameters>
      <Docs>
        <param name="username">
        </param>
        <param name="password">The user account's user name, UPN.</param>
        <param name="clientId">The client (application) ID of an App Registration in the tenant.</param>
        <param name="tenantId">The Azure Active Directory tenant (directory) ID or name.</param>
        <param name="options">The client options for the newly created UsernamePasswordCredential</param>
        <summary>
            Creates an instance of the UsernamePasswordCredential with the details needed to authenticate against Azure Active Directory with a simple username
            and password.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetToken">
      <MemberSignature Language="C#" Value="public override Azure.Core.AccessToken GetToken (string[] scopes, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype Azure.Core.AccessToken GetToken(string[] scopes, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Identity.UsernamePasswordCredential.GetToken(System.String[],System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.GetToken : string[] * System.Threading.CancellationToken -&gt; Azure.Core.AccessToken" Usage="usernamePasswordCredential.GetToken (scopes, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Identity</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.AccessToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scopes" Type="System.String[]" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scopes">The list of scopes for which the token will have access.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Obtains a token for a user account, authenticating them using the given username and password.  Note: This will fail with
            an <see cref="T:Azure.Identity.AuthenticationFailedException" /> if the specified user acound has MFA enabled.
            </summary>
        <returns>An <see cref="T:Azure.Core.AccessToken" /> which can be used to authenticate service client calls.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTokenAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;Azure.Core.AccessToken&gt; GetTokenAsync (string[] scopes, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;valuetype Azure.Core.AccessToken&gt; GetTokenAsync(string[] scopes, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Identity.UsernamePasswordCredential.GetTokenAsync(System.String[],System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.GetTokenAsync : string[] * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Core.AccessToken&gt;" Usage="usernamePasswordCredential.GetTokenAsync (scopes, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Identity</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Core.AccessToken&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scopes" Type="System.String[]" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scopes">The list of scopes for which the token will have access.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Obtains a token for a user account, authenticating them using the given username and password.  Note: This will fail with
            an <see cref="T:Azure.Identity.AuthenticationFailedException" /> if the specified user acound has MFA enabled.
            </summary>
        <returns>An <see cref="T:Azure.Core.AccessToken" /> which can be used to authenticate service client calls.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="AzureApplicationCredential" FullName="Azure.Identity.AzureApplicationCredential">
  <TypeSignature Language="C#" Value="public class AzureApplicationCredential : Azure.Core.TokenCredential" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AzureApplicationCredential extends Azure.Core.TokenCredential" />
  <TypeSignature Language="DocId" Value="T:Azure.Identity.AzureApplicationCredential" />
  <TypeSignature Language="VB.NET" Value="Public Class AzureApplicationCredential&#xA;Inherits TokenCredential" />
  <TypeSignature Language="F#" Value="type AzureApplicationCredential = class&#xA;    inherit TokenCredential" />
  <AssemblyInfo>
    <AssemblyName>Azure.Identity</AssemblyName>
    <AssemblyVersion>1.5.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.Core.TokenCredential</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Provides a <see cref="T:Azure.Core.TokenCredential" /> implementation which chains the <see cref="T:Azure.Identity.EnvironmentCredential" /> and <see cref="T:Azure.Identity.ManagedIdentityCredential" /> implementations to be tried in order
            until one of the getToken methods returns a non-default <see cref="T:Azure.Core.AccessToken" />.
            </summary>
    <remarks>
            This credential is designed for applications deployed to Azure <see cref="T:Azure.Identity.DefaultAzureCredential" /> is
            better suited to local development). It authenticates service principals and managed identities..
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AzureApplicationCredential ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Identity.AzureApplicationCredential.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Identity</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes an instance of the <see cref="T:Azure.Identity.AzureApplicationCredential" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AzureApplicationCredential (Azure.Identity.AzureApplicationCredentialOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Azure.Identity.AzureApplicationCredentialOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Identity.AzureApplicationCredential.#ctor(Azure.Identity.AzureApplicationCredentialOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (options As AzureApplicationCredentialOptions)" />
      <MemberSignature Language="F#" Value="new Azure.Identity.AzureApplicationCredential : Azure.Identity.AzureApplicationCredentialOptions -&gt; Azure.Identity.AzureApplicationCredential" Usage="new Azure.Identity.AzureApplicationCredential options" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Identity</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="options" Type="Azure.Identity.AzureApplicationCredentialOptions" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:Azure.Identity.TokenCredentialOptions" /> to configure this credential.</param>
        <summary>
            Initializes an instance of the <see cref="T:Azure.Identity.AzureApplicationCredential" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetToken">
      <MemberSignature Language="C#" Value="public override Azure.Core.AccessToken GetToken (Azure.Core.TokenRequestContext requestContext, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype Azure.Core.AccessToken GetToken(valuetype Azure.Core.TokenRequestContext requestContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Identity.AzureApplicationCredential.GetToken(Azure.Core.TokenRequestContext,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetToken (requestContext As TokenRequestContext, Optional cancellationToken As CancellationToken = Nothing) As AccessToken" />
      <MemberSignature Language="F#" Value="override this.GetToken : Azure.Core.TokenRequestContext * System.Threading.CancellationToken -&gt; Azure.Core.AccessToken" Usage="azureApplicationCredential.GetToken (requestContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Identity</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.AccessToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestContext" Type="Azure.Core.TokenRequestContext" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="requestContext">The details of the authentication request.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Sequentially calls <see cref="M:Azure.Core.TokenCredential.GetToken(Azure.Core.TokenRequestContext,System.Threading.CancellationToken)" /> on all the specified sources, returning the first successfully obtained <see cref="T:Azure.Core.AccessToken" />.
            This method is called automatically by Azure SDK client libraries. You may call this method directly, but you must also handle token caching and token refreshing.
            </summary>
        <returns>The first <see cref="T:Azure.Core.AccessToken" /> returned by the specified sources. Any credential which raises a <see cref="T:Azure.Identity.CredentialUnavailableException" /> will be skipped.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTokenAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.ValueTask&lt;Azure.Core.AccessToken&gt; GetTokenAsync (Azure.Core.TokenRequestContext requestContext, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;valuetype Azure.Core.AccessToken&gt; GetTokenAsync(valuetype Azure.Core.TokenRequestContext requestContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Identity.AzureApplicationCredential.GetTokenAsync(Azure.Core.TokenRequestContext,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetTokenAsync (requestContext As TokenRequestContext, Optional cancellationToken As CancellationToken = Nothing) As ValueTask(Of AccessToken)" />
      <MemberSignature Language="F#" Value="override this.GetTokenAsync : Azure.Core.TokenRequestContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;Azure.Core.AccessToken&gt;" Usage="azureApplicationCredential.GetTokenAsync (requestContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Identity</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;Azure.Core.AccessToken&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestContext" Type="Azure.Core.TokenRequestContext" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="requestContext">The details of the authentication request.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Sequentially calls <see cref="M:Azure.Core.TokenCredential.GetToken(Azure.Core.TokenRequestContext,System.Threading.CancellationToken)" /> on all the specified sources, returning the first successfully obtained <see cref="T:Azure.Core.AccessToken" />.
            This method is called automatically by Azure SDK client libraries. You may call this method directly, but you must also handle token caching and token refreshing.
            </summary>
        <returns>The first <see cref="T:Azure.Core.AccessToken" /> returned by the specified sources. Any credential which raises a <see cref="T:Azure.Identity.CredentialUnavailableException" /> will be skipped.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

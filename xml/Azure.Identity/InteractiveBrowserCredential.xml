<Type Name="InteractiveBrowserCredential" FullName="Azure.Identity.InteractiveBrowserCredential">
  <TypeSignature Language="C#" Value="public class InteractiveBrowserCredential : Azure.Core.TokenCredential" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit InteractiveBrowserCredential extends Azure.Core.TokenCredential" />
  <TypeSignature Language="DocId" Value="T:Azure.Identity.InteractiveBrowserCredential" />
  <TypeSignature Language="VB.NET" Value="Public Class InteractiveBrowserCredential&#xA;Inherits TokenCredential" />
  <TypeSignature Language="F#" Value="type InteractiveBrowserCredential = class&#xA;    inherit TokenCredential" />
  <AssemblyInfo>
    <AssemblyName>Azure.Identity</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.Core.TokenCredential</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            A <see cref="T:Azure.Core.TokenCredential" /> implementation which launches the system default browser to interactively authenticate a user, and obtain an access token.
            The browser will only be launched to authenticate the user once, then will silently aquire access tokens through the users refresh token as long as it's valid.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InteractiveBrowserCredential ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Identity.InteractiveBrowserCredential.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Identity</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Creates a new InteractiveBrowserCredential with the specifeid options, which will authenticate users.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InteractiveBrowserCredential (string clientId, string tenantId = null, Azure.Identity.AzureCredentialOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string clientId, string tenantId, class Azure.Identity.AzureCredentialOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Identity.InteractiveBrowserCredential.#ctor(System.String,System.String,Azure.Identity.AzureCredentialOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (clientId As String, Optional tenantId As String = null, Optional options As AzureCredentialOptions = null)" />
      <MemberSignature Language="F#" Value="new Azure.Identity.InteractiveBrowserCredential : string * string * Azure.Identity.AzureCredentialOptions -&gt; Azure.Identity.InteractiveBrowserCredential" Usage="new Azure.Identity.InteractiveBrowserCredential (clientId, tenantId, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Identity</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="clientId" Type="System.String" />
        <Parameter Name="tenantId" Type="System.String" />
        <Parameter Name="options" Type="Azure.Identity.AzureCredentialOptions" />
      </Parameters>
      <Docs>
        <param name="clientId">The client id of the application to which the users will authenticate</param>
        <param name="tenantId">The tenant id of the application and the users to authentiacte</param>
        <param name="options">The client options for the newly created DeviceCodeCredential</param>
        <summary>
            Creates a new InteractiveBrowserCredential with the specifeid options, which will authenticate users with the specified application.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetToken">
      <MemberSignature Language="C#" Value="public override Azure.Core.AccessToken GetToken (Azure.Core.TokenRequest request, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype Azure.Core.AccessToken GetToken(valuetype Azure.Core.TokenRequest request, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Identity.InteractiveBrowserCredential.GetToken(Azure.Core.TokenRequest,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.GetToken : Azure.Core.TokenRequest * System.Threading.CancellationToken -&gt; Azure.Core.AccessToken" Usage="interactiveBrowserCredential.GetToken (request, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Identity</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.AccessToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="Azure.Core.TokenRequest" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="request">The details of the authentication request.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Obtains an <see cref="T:Azure.Core.AccessToken" /> token for a user account silently if the user has already authenticated, otherwise the default browser is launched to authenticate the user.
            </summary>
        <returns>An <see cref="T:Azure.Core.AccessToken" /> which can be used to authenticate service client calls.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTokenAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;Azure.Core.AccessToken&gt; GetTokenAsync (Azure.Core.TokenRequest request, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;valuetype Azure.Core.AccessToken&gt; GetTokenAsync(valuetype Azure.Core.TokenRequest request, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Identity.InteractiveBrowserCredential.GetTokenAsync(Azure.Core.TokenRequest,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.GetTokenAsync : Azure.Core.TokenRequest * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Core.AccessToken&gt;" Usage="interactiveBrowserCredential.GetTokenAsync (request, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Identity</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Core.AccessToken&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="Azure.Core.TokenRequest" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="request">The details of the authentication request.</param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
        <summary>
            Obtains an <see cref="T:Azure.Core.AccessToken" /> token for a user account silently if the user has already authenticated, otherwise the default browser is launched to authenticate the user.
            </summary>
        <returns>An <see cref="T:Azure.Core.AccessToken" /> which can be used to authenticate service client calls.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="SsisAccessCredential" FullName="Azure.ResourceManager.DataFactory.Models.SsisAccessCredential">
  <TypeSignature Language="C#" Value="public class SsisAccessCredential" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SsisAccessCredential extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.DataFactory.Models.SsisAccessCredential" />
  <TypeSignature Language="VB.NET" Value="Public Class SsisAccessCredential" />
  <TypeSignature Language="F#" Value="type SsisAccessCredential = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> SSIS access credential. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SsisAccessCredential (BinaryData domain, BinaryData userName, Azure.ResourceManager.DataFactory.Models.SecretBase password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.BinaryData domain, class System.BinaryData userName, class Azure.ResourceManager.DataFactory.Models.SecretBase password) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataFactory.Models.SsisAccessCredential.#ctor(System.BinaryData,System.BinaryData,Azure.ResourceManager.DataFactory.Models.SecretBase)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (domain As BinaryData, userName As BinaryData, password As SecretBase)" />
      <MemberSignature Language="F#" Value="new Azure.ResourceManager.DataFactory.Models.SsisAccessCredential : BinaryData * BinaryData * Azure.ResourceManager.DataFactory.Models.SecretBase -&gt; Azure.ResourceManager.DataFactory.Models.SsisAccessCredential" Usage="new Azure.ResourceManager.DataFactory.Models.SsisAccessCredential (domain, userName, password)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="domain" Type="System.BinaryData" />
        <Parameter Name="userName" Type="System.BinaryData" />
        <Parameter Name="password" Type="Azure.ResourceManager.DataFactory.Models.SecretBase" />
      </Parameters>
      <Docs>
        <param name="domain"> Domain for windows authentication. </param>
        <param name="userName"> UseName for windows authentication. </param>
        <param name="password">
            Password for windows authentication.
            Please note <see cref="T:Azure.ResourceManager.DataFactory.Models.SecretBase" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
            The available derived classes include <see cref="T:Azure.ResourceManager.DataFactory.Models.SecureString" /> and <see cref="T:Azure.ResourceManager.DataFactory.Models.AzureKeyVaultSecretReference" />.
            </param>
        <summary> Initializes a new instance of SsisAccessCredential. </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="domain" />, <paramref name="userName" /> or <paramref name="password" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Domain">
      <MemberSignature Language="C#" Value="public BinaryData Domain { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.BinaryData Domain" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.SsisAccessCredential.Domain" />
      <MemberSignature Language="VB.NET" Value="Public Property Domain As BinaryData" />
      <MemberSignature Language="F#" Value="member this.Domain : BinaryData with get, set" Usage="Azure.ResourceManager.DataFactory.Models.SsisAccessCredential.Domain" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Domain for windows authentication. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Password">
      <MemberSignature Language="C#" Value="public Azure.ResourceManager.DataFactory.Models.SecretBase Password { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.DataFactory.Models.SecretBase Password" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.SsisAccessCredential.Password" />
      <MemberSignature Language="VB.NET" Value="Public Property Password As SecretBase" />
      <MemberSignature Language="F#" Value="member this.Password : Azure.ResourceManager.DataFactory.Models.SecretBase with get, set" Usage="Azure.ResourceManager.DataFactory.Models.SsisAccessCredential.Password" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataFactory.Models.SecretBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Password for windows authentication.
            Please note <see cref="T:Azure.ResourceManager.DataFactory.Models.SecretBase" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
            The available derived classes include <see cref="T:Azure.ResourceManager.DataFactory.Models.SecureString" /> and <see cref="T:Azure.ResourceManager.DataFactory.Models.AzureKeyVaultSecretReference" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserName">
      <MemberSignature Language="C#" Value="public BinaryData UserName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.BinaryData UserName" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataFactory.Models.SsisAccessCredential.UserName" />
      <MemberSignature Language="VB.NET" Value="Public Property UserName As BinaryData" />
      <MemberSignature Language="F#" Value="member this.UserName : BinaryData with get, set" Usage="Azure.ResourceManager.DataFactory.Models.SsisAccessCredential.UserName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> UseName for windows authentication. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

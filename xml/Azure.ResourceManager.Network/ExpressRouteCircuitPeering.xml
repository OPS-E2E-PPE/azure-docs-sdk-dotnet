<Type Name="ExpressRouteCircuitPeering" FullName="Azure.ResourceManager.Network.ExpressRouteCircuitPeering">
  <TypeSignature Language="C#" Value="public class ExpressRouteCircuitPeering : Azure.ResourceManager.Core.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ExpressRouteCircuitPeering extends Azure.ResourceManager.Core.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Network.ExpressRouteCircuitPeering" />
  <TypeSignature Language="VB.NET" Value="Public Class ExpressRouteCircuitPeering&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type ExpressRouteCircuitPeering = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.Core.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A Class representing a ExpressRouteCircuitPeering along with the instance operations that can be performed on it. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ExpressRouteCircuitPeering ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.ExpressRouteCircuitPeering.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Network.ExpressRouteCircuitPeering" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateResourceIdentifier">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ResourceIdentifier CreateResourceIdentifier (string subscriptionId, string resourceGroupName, string circuitName, string peeringName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ResourceIdentifier CreateResourceIdentifier(string subscriptionId, string resourceGroupName, string circuitName, string peeringName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.ExpressRouteCircuitPeering.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateResourceIdentifier (subscriptionId As String, resourceGroupName As String, circuitName As String, peeringName As String) As ResourceIdentifier" />
      <MemberSignature Language="F#" Value="static member CreateResourceIdentifier : string * string * string * string -&gt; Azure.ResourceManager.ResourceIdentifier" Usage="Azure.ResourceManager.Network.ExpressRouteCircuitPeering.CreateResourceIdentifier (subscriptionId, resourceGroupName, circuitName, peeringName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ResourceIdentifier</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionId" Type="System.String" />
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="circuitName" Type="System.String" />
        <Parameter Name="peeringName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subscriptionId">To be added.</param>
        <param name="resourceGroupName">To be added.</param>
        <param name="circuitName">To be added.</param>
        <param name="peeringName">To be added.</param>
        <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.Network.ExpressRouteCircuitPeering" /> instance. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.ExpressRouteCircuitPeeringData Data { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.Network.ExpressRouteCircuitPeeringData Data" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Network.ExpressRouteCircuitPeering.Data" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Data As ExpressRouteCircuitPeeringData" />
      <MemberSignature Language="F#" Value="member this.Data : Azure.ResourceManager.Network.ExpressRouteCircuitPeeringData" Usage="Azure.ResourceManager.Network.ExpressRouteCircuitPeering.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.ExpressRouteCircuitPeeringData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets the data representing this Feature. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.Models.ExpressRouteCircuitPeeringDeleteOperation Delete (bool waitForCompletion = true, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.Models.ExpressRouteCircuitPeeringDeleteOperation Delete(bool waitForCompletion, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.ExpressRouteCircuitPeering.Delete(System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Delete (Optional waitForCompletion As Boolean = true, Optional cancellationToken As CancellationToken = Nothing) As ExpressRouteCircuitPeeringDeleteOperation" />
      <MemberSignature Language="F#" Value="abstract member Delete : bool * System.Threading.CancellationToken -&gt; Azure.ResourceManager.Network.Models.ExpressRouteCircuitPeeringDeleteOperation&#xA;override this.Delete : bool * System.Threading.CancellationToken -&gt; Azure.ResourceManager.Network.Models.ExpressRouteCircuitPeeringDeleteOperation" Usage="expressRouteCircuitPeering.Delete (waitForCompletion, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.Models.ExpressRouteCircuitPeeringDeleteOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitForCompletion" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitForCompletion"> Waits for the completion of the long running operations. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Deletes the specified peering from the specified express route circuit. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.Network.Models.ExpressRouteCircuitPeeringDeleteOperation&gt; DeleteAsync (bool waitForCompletion = true, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.Network.Models.ExpressRouteCircuitPeeringDeleteOperation&gt; DeleteAsync(bool waitForCompletion, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.ExpressRouteCircuitPeering.DeleteAsync(System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteAsync (Optional waitForCompletion As Boolean = true, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ExpressRouteCircuitPeeringDeleteOperation)" />
      <MemberSignature Language="F#" Value="abstract member DeleteAsync : bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.Network.Models.ExpressRouteCircuitPeeringDeleteOperation&gt;&#xA;override this.DeleteAsync : bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.Network.Models.ExpressRouteCircuitPeeringDeleteOperation&gt;" Usage="expressRouteCircuitPeering.DeleteAsync (waitForCompletion, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.Network.Models.ExpressRouteCircuitPeeringDeleteOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitForCompletion" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitForCompletion"> Waits for the completion of the long running operations. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Deletes the specified peering from the specified express route circuit. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Network.ExpressRouteCircuitPeering&gt; Get (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Network.ExpressRouteCircuitPeering&gt; Get(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.ExpressRouteCircuitPeering.Get(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Get (Optional cancellationToken As CancellationToken = Nothing) As Response(Of ExpressRouteCircuitPeering)" />
      <MemberSignature Language="F#" Value="abstract member Get : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.ExpressRouteCircuitPeering&gt;&#xA;override this.Get : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.ExpressRouteCircuitPeering&gt;" Usage="expressRouteCircuitPeering.Get cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Network.ExpressRouteCircuitPeering&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets the specified peering for the express route circuit. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetArpTableExpressRouteCircuit">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.Models.ExpressRouteCircuitListArpTableOperation GetArpTableExpressRouteCircuit (string devicePath, bool waitForCompletion = true, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.Models.ExpressRouteCircuitListArpTableOperation GetArpTableExpressRouteCircuit(string devicePath, bool waitForCompletion, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.ExpressRouteCircuitPeering.GetArpTableExpressRouteCircuit(System.String,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetArpTableExpressRouteCircuit (devicePath As String, Optional waitForCompletion As Boolean = true, Optional cancellationToken As CancellationToken = Nothing) As ExpressRouteCircuitListArpTableOperation" />
      <MemberSignature Language="F#" Value="abstract member GetArpTableExpressRouteCircuit : string * bool * System.Threading.CancellationToken -&gt; Azure.ResourceManager.Network.Models.ExpressRouteCircuitListArpTableOperation&#xA;override this.GetArpTableExpressRouteCircuit : string * bool * System.Threading.CancellationToken -&gt; Azure.ResourceManager.Network.Models.ExpressRouteCircuitListArpTableOperation" Usage="expressRouteCircuitPeering.GetArpTableExpressRouteCircuit (devicePath, waitForCompletion, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.Models.ExpressRouteCircuitListArpTableOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="devicePath" Type="System.String" />
        <Parameter Name="waitForCompletion" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="devicePath"> The path of the device. </param>
        <param name="waitForCompletion"> Waits for the completion of the long running operations. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets the currently advertised ARP table associated with the express route circuit in a resource group. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="devicePath" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetArpTableExpressRouteCircuitAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.Network.Models.ExpressRouteCircuitListArpTableOperation&gt; GetArpTableExpressRouteCircuitAsync (string devicePath, bool waitForCompletion = true, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.Network.Models.ExpressRouteCircuitListArpTableOperation&gt; GetArpTableExpressRouteCircuitAsync(string devicePath, bool waitForCompletion, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.ExpressRouteCircuitPeering.GetArpTableExpressRouteCircuitAsync(System.String,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetArpTableExpressRouteCircuitAsync (devicePath As String, Optional waitForCompletion As Boolean = true, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ExpressRouteCircuitListArpTableOperation)" />
      <MemberSignature Language="F#" Value="abstract member GetArpTableExpressRouteCircuitAsync : string * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.Network.Models.ExpressRouteCircuitListArpTableOperation&gt;&#xA;override this.GetArpTableExpressRouteCircuitAsync : string * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.Network.Models.ExpressRouteCircuitListArpTableOperation&gt;" Usage="expressRouteCircuitPeering.GetArpTableExpressRouteCircuitAsync (devicePath, waitForCompletion, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.Network.Models.ExpressRouteCircuitListArpTableOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="devicePath" Type="System.String" />
        <Parameter Name="waitForCompletion" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="devicePath"> The path of the device. </param>
        <param name="waitForCompletion"> Waits for the completion of the long running operations. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets the currently advertised ARP table associated with the express route circuit in a resource group. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="devicePath" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.ExpressRouteCircuitPeering&gt;&gt; GetAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Network.ExpressRouteCircuitPeering&gt;&gt; GetAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.ExpressRouteCircuitPeering.GetAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ExpressRouteCircuitPeering))" />
      <MemberSignature Language="F#" Value="abstract member GetAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.ExpressRouteCircuitPeering&gt;&gt;&#xA;override this.GetAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.ExpressRouteCircuitPeering&gt;&gt;" Usage="expressRouteCircuitPeering.GetAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.ExpressRouteCircuitPeering&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets the specified peering for the express route circuit. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAvailableLocations">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Resources.Models.Location&gt; GetAvailableLocations (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;valuetype Azure.ResourceManager.Resources.Models.Location&gt; GetAvailableLocations(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.ExpressRouteCircuitPeering.GetAvailableLocations(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAvailableLocations (Optional cancellationToken As CancellationToken = Nothing) As IEnumerable(Of Location)" />
      <MemberSignature Language="F#" Value="abstract member GetAvailableLocations : System.Threading.CancellationToken -&gt; seq&lt;Azure.ResourceManager.Resources.Models.Location&gt;&#xA;override this.GetAvailableLocations : System.Threading.CancellationToken -&gt; seq&lt;Azure.ResourceManager.Resources.Models.Location&gt;" Usage="expressRouteCircuitPeering.GetAvailableLocations cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Resources.Models.Location&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> A token to allow the caller to cancel the call to the service. The default value is <see cref="P:System.Threading.CancellationToken.None" />. </param>
        <summary> Lists all available geo-locations. </summary>
        <returns> A collection of locations that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAvailableLocationsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Resources.Models.Location&gt;&gt; GetAvailableLocationsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IEnumerable`1&lt;valuetype Azure.ResourceManager.Resources.Models.Location&gt;&gt; GetAvailableLocationsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.ExpressRouteCircuitPeering.GetAvailableLocationsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAvailableLocationsAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of IEnumerable(Of Location))" />
      <MemberSignature Language="F#" Value="abstract member GetAvailableLocationsAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;seq&lt;Azure.ResourceManager.Resources.Models.Location&gt;&gt;&#xA;override this.GetAvailableLocationsAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;seq&lt;Azure.ResourceManager.Resources.Models.Location&gt;&gt;" Usage="expressRouteCircuitPeering.GetAvailableLocationsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Resources.Models.Location&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> A token to allow the caller to cancel the call to the service. The default value is <see cref="P:System.Threading.CancellationToken.None" />. </param>
        <summary> Lists all available geo-locations. </summary>
        <returns> A collection of locations that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExpressRouteCircuitConnections">
      <MemberSignature Language="C#" Value="public Azure.ResourceManager.Network.ExpressRouteCircuitConnectionCollection GetExpressRouteCircuitConnections ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Azure.ResourceManager.Network.ExpressRouteCircuitConnectionCollection GetExpressRouteCircuitConnections() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.ExpressRouteCircuitPeering.GetExpressRouteCircuitConnections" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExpressRouteCircuitConnections () As ExpressRouteCircuitConnectionCollection" />
      <MemberSignature Language="F#" Value="member this.GetExpressRouteCircuitConnections : unit -&gt; Azure.ResourceManager.Network.ExpressRouteCircuitConnectionCollection" Usage="expressRouteCircuitPeering.GetExpressRouteCircuitConnections " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.ExpressRouteCircuitConnectionCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ExpressRouteCircuitConnections in the ExpressRouteCircuitPeering. </summary>
        <returns> An object representing collection of ExpressRouteCircuitConnections and their operations over a ExpressRouteCircuitPeering. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPeerExpressRouteCircuitConnections">
      <MemberSignature Language="C#" Value="public Azure.ResourceManager.Network.PeerExpressRouteCircuitConnectionCollection GetPeerExpressRouteCircuitConnections ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Azure.ResourceManager.Network.PeerExpressRouteCircuitConnectionCollection GetPeerExpressRouteCircuitConnections() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.ExpressRouteCircuitPeering.GetPeerExpressRouteCircuitConnections" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPeerExpressRouteCircuitConnections () As PeerExpressRouteCircuitConnectionCollection" />
      <MemberSignature Language="F#" Value="member this.GetPeerExpressRouteCircuitConnections : unit -&gt; Azure.ResourceManager.Network.PeerExpressRouteCircuitConnectionCollection" Usage="expressRouteCircuitPeering.GetPeerExpressRouteCircuitConnections " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.PeerExpressRouteCircuitConnectionCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of PeerExpressRouteCircuitConnections in the ExpressRouteCircuitPeering. </summary>
        <returns> An object representing collection of PeerExpressRouteCircuitConnections and their operations over a ExpressRouteCircuitPeering. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPeeringStatsExpressRouteCircuit">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Network.Models.ExpressRouteCircuitStats&gt; GetPeeringStatsExpressRouteCircuit (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Network.Models.ExpressRouteCircuitStats&gt; GetPeeringStatsExpressRouteCircuit(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.ExpressRouteCircuitPeering.GetPeeringStatsExpressRouteCircuit(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPeeringStatsExpressRouteCircuit (Optional cancellationToken As CancellationToken = Nothing) As Response(Of ExpressRouteCircuitStats)" />
      <MemberSignature Language="F#" Value="abstract member GetPeeringStatsExpressRouteCircuit : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.Models.ExpressRouteCircuitStats&gt;&#xA;override this.GetPeeringStatsExpressRouteCircuit : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.Models.ExpressRouteCircuitStats&gt;" Usage="expressRouteCircuitPeering.GetPeeringStatsExpressRouteCircuit cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Network.Models.ExpressRouteCircuitStats&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets all stats from an express route circuit in a resource group. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPeeringStatsExpressRouteCircuitAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.Models.ExpressRouteCircuitStats&gt;&gt; GetPeeringStatsExpressRouteCircuitAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Network.Models.ExpressRouteCircuitStats&gt;&gt; GetPeeringStatsExpressRouteCircuitAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.ExpressRouteCircuitPeering.GetPeeringStatsExpressRouteCircuitAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPeeringStatsExpressRouteCircuitAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ExpressRouteCircuitStats))" />
      <MemberSignature Language="F#" Value="abstract member GetPeeringStatsExpressRouteCircuitAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.Models.ExpressRouteCircuitStats&gt;&gt;&#xA;override this.GetPeeringStatsExpressRouteCircuitAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.Models.ExpressRouteCircuitStats&gt;&gt;" Usage="expressRouteCircuitPeering.GetPeeringStatsExpressRouteCircuitAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.Models.ExpressRouteCircuitStats&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets all stats from an express route circuit in a resource group. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRoutesTableExpressRouteCircuit">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.Models.ExpressRouteCircuitListRoutesTableOperation GetRoutesTableExpressRouteCircuit (string devicePath, bool waitForCompletion = true, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.Models.ExpressRouteCircuitListRoutesTableOperation GetRoutesTableExpressRouteCircuit(string devicePath, bool waitForCompletion, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.ExpressRouteCircuitPeering.GetRoutesTableExpressRouteCircuit(System.String,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRoutesTableExpressRouteCircuit (devicePath As String, Optional waitForCompletion As Boolean = true, Optional cancellationToken As CancellationToken = Nothing) As ExpressRouteCircuitListRoutesTableOperation" />
      <MemberSignature Language="F#" Value="abstract member GetRoutesTableExpressRouteCircuit : string * bool * System.Threading.CancellationToken -&gt; Azure.ResourceManager.Network.Models.ExpressRouteCircuitListRoutesTableOperation&#xA;override this.GetRoutesTableExpressRouteCircuit : string * bool * System.Threading.CancellationToken -&gt; Azure.ResourceManager.Network.Models.ExpressRouteCircuitListRoutesTableOperation" Usage="expressRouteCircuitPeering.GetRoutesTableExpressRouteCircuit (devicePath, waitForCompletion, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.Models.ExpressRouteCircuitListRoutesTableOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="devicePath" Type="System.String" />
        <Parameter Name="waitForCompletion" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="devicePath"> The path of the device. </param>
        <param name="waitForCompletion"> Waits for the completion of the long running operations. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets the currently advertised routes table associated with the express route circuit in a resource group. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="devicePath" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRoutesTableExpressRouteCircuitAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.Network.Models.ExpressRouteCircuitListRoutesTableOperation&gt; GetRoutesTableExpressRouteCircuitAsync (string devicePath, bool waitForCompletion = true, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.Network.Models.ExpressRouteCircuitListRoutesTableOperation&gt; GetRoutesTableExpressRouteCircuitAsync(string devicePath, bool waitForCompletion, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.ExpressRouteCircuitPeering.GetRoutesTableExpressRouteCircuitAsync(System.String,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRoutesTableExpressRouteCircuitAsync (devicePath As String, Optional waitForCompletion As Boolean = true, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ExpressRouteCircuitListRoutesTableOperation)" />
      <MemberSignature Language="F#" Value="abstract member GetRoutesTableExpressRouteCircuitAsync : string * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.Network.Models.ExpressRouteCircuitListRoutesTableOperation&gt;&#xA;override this.GetRoutesTableExpressRouteCircuitAsync : string * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.Network.Models.ExpressRouteCircuitListRoutesTableOperation&gt;" Usage="expressRouteCircuitPeering.GetRoutesTableExpressRouteCircuitAsync (devicePath, waitForCompletion, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.Network.Models.ExpressRouteCircuitListRoutesTableOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="devicePath" Type="System.String" />
        <Parameter Name="waitForCompletion" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="devicePath"> The path of the device. </param>
        <param name="waitForCompletion"> Waits for the completion of the long running operations. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets the currently advertised routes table associated with the express route circuit in a resource group. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="devicePath" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRoutesTableSummaryExpressRouteCircuit">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.Models.ExpressRouteCircuitListRoutesTableSummaryOperation GetRoutesTableSummaryExpressRouteCircuit (string devicePath, bool waitForCompletion = true, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.Models.ExpressRouteCircuitListRoutesTableSummaryOperation GetRoutesTableSummaryExpressRouteCircuit(string devicePath, bool waitForCompletion, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.ExpressRouteCircuitPeering.GetRoutesTableSummaryExpressRouteCircuit(System.String,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRoutesTableSummaryExpressRouteCircuit (devicePath As String, Optional waitForCompletion As Boolean = true, Optional cancellationToken As CancellationToken = Nothing) As ExpressRouteCircuitListRoutesTableSummaryOperation" />
      <MemberSignature Language="F#" Value="abstract member GetRoutesTableSummaryExpressRouteCircuit : string * bool * System.Threading.CancellationToken -&gt; Azure.ResourceManager.Network.Models.ExpressRouteCircuitListRoutesTableSummaryOperation&#xA;override this.GetRoutesTableSummaryExpressRouteCircuit : string * bool * System.Threading.CancellationToken -&gt; Azure.ResourceManager.Network.Models.ExpressRouteCircuitListRoutesTableSummaryOperation" Usage="expressRouteCircuitPeering.GetRoutesTableSummaryExpressRouteCircuit (devicePath, waitForCompletion, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.Models.ExpressRouteCircuitListRoutesTableSummaryOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="devicePath" Type="System.String" />
        <Parameter Name="waitForCompletion" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="devicePath"> The path of the device. </param>
        <param name="waitForCompletion"> Waits for the completion of the long running operations. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets the currently advertised routes table summary associated with the express route circuit in a resource group. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="devicePath" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRoutesTableSummaryExpressRouteCircuitAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.Network.Models.ExpressRouteCircuitListRoutesTableSummaryOperation&gt; GetRoutesTableSummaryExpressRouteCircuitAsync (string devicePath, bool waitForCompletion = true, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.Network.Models.ExpressRouteCircuitListRoutesTableSummaryOperation&gt; GetRoutesTableSummaryExpressRouteCircuitAsync(string devicePath, bool waitForCompletion, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.ExpressRouteCircuitPeering.GetRoutesTableSummaryExpressRouteCircuitAsync(System.String,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRoutesTableSummaryExpressRouteCircuitAsync (devicePath As String, Optional waitForCompletion As Boolean = true, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ExpressRouteCircuitListRoutesTableSummaryOperation)" />
      <MemberSignature Language="F#" Value="abstract member GetRoutesTableSummaryExpressRouteCircuitAsync : string * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.Network.Models.ExpressRouteCircuitListRoutesTableSummaryOperation&gt;&#xA;override this.GetRoutesTableSummaryExpressRouteCircuitAsync : string * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.Network.Models.ExpressRouteCircuitListRoutesTableSummaryOperation&gt;" Usage="expressRouteCircuitPeering.GetRoutesTableSummaryExpressRouteCircuitAsync (devicePath, waitForCompletion, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.Network.Models.ExpressRouteCircuitListRoutesTableSummaryOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="devicePath" Type="System.String" />
        <Parameter Name="waitForCompletion" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="devicePath"> The path of the device. </param>
        <param name="waitForCompletion"> Waits for the completion of the long running operations. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets the currently advertised routes table summary associated with the express route circuit in a resource group. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="devicePath" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="HasData">
      <MemberSignature Language="C#" Value="public virtual bool HasData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasData" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Network.ExpressRouteCircuitPeering.HasData" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HasData As Boolean" />
      <MemberSignature Language="F#" Value="member this.HasData : bool" Usage="Azure.ResourceManager.Network.ExpressRouteCircuitPeering.HasData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets whether or not the current instance has data. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResourceType">
      <MemberSignature Language="C#" Value="public static readonly Azure.ResourceManager.ResourceType ResourceType;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Azure.ResourceManager.ResourceType ResourceType" />
      <MemberSignature Language="DocId" Value="F:Azure.ResourceManager.Network.ExpressRouteCircuitPeering.ResourceType" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ResourceType As ResourceType " />
      <MemberSignature Language="F#" Value=" staticval mutable ResourceType : Azure.ResourceManager.ResourceType" Usage="Azure.ResourceManager.Network.ExpressRouteCircuitPeering.ResourceType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ResourceType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets the resource type for the operations. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidResourceType">
      <MemberSignature Language="C#" Value="protected override Azure.ResourceManager.ResourceType ValidResourceType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.ResourceType ValidResourceType" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Network.ExpressRouteCircuitPeering.ValidResourceType" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ValidResourceType As ResourceType" />
      <MemberSignature Language="F#" Value="member this.ValidResourceType : Azure.ResourceManager.ResourceType" Usage="Azure.ResourceManager.Network.ExpressRouteCircuitPeering.ValidResourceType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ResourceType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets the valid resource type for the operations. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

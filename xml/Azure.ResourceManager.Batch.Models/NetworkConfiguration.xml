<Type Name="NetworkConfiguration" FullName="Azure.ResourceManager.Batch.Models.NetworkConfiguration">
  <TypeSignature Language="C#" Value="public class NetworkConfiguration" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NetworkConfiguration extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Batch.Models.NetworkConfiguration" />
  <TypeSignature Language="VB.NET" Value="Public Class NetworkConfiguration" />
  <TypeSignature Language="F#" Value="type NetworkConfiguration = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Batch</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> The network configuration for a pool. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetworkConfiguration ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Batch.Models.NetworkConfiguration.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Batch</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of NetworkConfiguration. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DynamicVNetAssignmentScope">
      <MemberSignature Language="C#" Value="public Azure.ResourceManager.Batch.Models.DynamicVNetAssignmentScope? DynamicVNetAssignmentScope { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Batch.Models.DynamicVNetAssignmentScope&gt; DynamicVNetAssignmentScope" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Batch.Models.NetworkConfiguration.DynamicVNetAssignmentScope" />
      <MemberSignature Language="VB.NET" Value="Public Property DynamicVNetAssignmentScope As Nullable(Of DynamicVNetAssignmentScope)" />
      <MemberSignature Language="F#" Value="member this.DynamicVNetAssignmentScope : Nullable&lt;Azure.ResourceManager.Batch.Models.DynamicVNetAssignmentScope&gt; with get, set" Usage="Azure.ResourceManager.Batch.Models.NetworkConfiguration.DynamicVNetAssignmentScope" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Batch</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Azure.ResourceManager.Batch.Models.DynamicVNetAssignmentScope&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The scope of dynamic vnet assignment. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndpointInboundNatPools">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Azure.ResourceManager.Batch.Models.InboundNatPool&gt; EndpointInboundNatPools { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Azure.ResourceManager.Batch.Models.InboundNatPool&gt; EndpointInboundNatPools" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Batch.Models.NetworkConfiguration.EndpointInboundNatPools" />
      <MemberSignature Language="VB.NET" Value="Public Property EndpointInboundNatPools As IList(Of InboundNatPool)" />
      <MemberSignature Language="F#" Value="member this.EndpointInboundNatPools : System.Collections.Generic.IList&lt;Azure.ResourceManager.Batch.Models.InboundNatPool&gt; with get, set" Usage="Azure.ResourceManager.Batch.Models.NetworkConfiguration.EndpointInboundNatPools" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Batch</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Azure.ResourceManager.Batch.Models.InboundNatPool&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The maximum number of inbound NAT pools per Batch pool is 5. If the maximum number of inbound NAT pools is exceeded the request fails with HTTP status code 400. This cannot be specified if the IPAddressProvisioningType is NoPublicIPAddresses. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PublicIPAddressConfiguration">
      <MemberSignature Language="C#" Value="public Azure.ResourceManager.Batch.Models.PublicIPAddressConfiguration PublicIPAddressConfiguration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.Batch.Models.PublicIPAddressConfiguration PublicIPAddressConfiguration" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Batch.Models.NetworkConfiguration.PublicIPAddressConfiguration" />
      <MemberSignature Language="VB.NET" Value="Public Property PublicIPAddressConfiguration As PublicIPAddressConfiguration" />
      <MemberSignature Language="F#" Value="member this.PublicIPAddressConfiguration : Azure.ResourceManager.Batch.Models.PublicIPAddressConfiguration with get, set" Usage="Azure.ResourceManager.Batch.Models.NetworkConfiguration.PublicIPAddressConfiguration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Batch</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Batch.Models.PublicIPAddressConfiguration</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> This property is only supported on Pools with the virtualMachineConfiguration property. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubnetId">
      <MemberSignature Language="C#" Value="public string SubnetId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SubnetId" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Batch.Models.NetworkConfiguration.SubnetId" />
      <MemberSignature Language="VB.NET" Value="Public Property SubnetId As String" />
      <MemberSignature Language="F#" Value="member this.SubnetId : string with get, set" Usage="Azure.ResourceManager.Batch.Models.NetworkConfiguration.SubnetId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Batch</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The virtual network must be in the same region and subscription as the Azure Batch account. The specified subnet should have enough free IP addresses to accommodate the number of nodes in the pool. If the subnet doesn't have enough free IP addresses, the pool will partially allocate compute nodes and a resize error will occur. The 'MicrosoftAzureBatch' service principal must have the 'Classic Virtual Machine Contributor' Role-Based Access Control (RBAC) role for the specified VNet. The specified subnet must allow communication from the Azure Batch service to be able to schedule tasks on the compute nodes. This can be verified by checking if the specified VNet has any associated Network Security Groups (NSG). If communication to the compute nodes in the specified subnet is denied by an NSG, then the Batch service will set the state of the compute nodes to unusable. If the specified VNet has any associated Network Security Groups (NSG), then a few reserved system ports must be enabled for inbound communication. For pools created with a virtual machine configuration, enable ports 29876 and 29877, as well as port 22 for Linux and port 3389 for Windows. For pools created with a cloud service configuration, enable ports 10100, 20100, and 30100. Also enable outbound connections to Azure Storage on port 443. For cloudServiceConfiguration pools, only 'classic' VNETs are supported. For more details see: https://docs.microsoft.com/en-us/azure/batch/batch-api-basics#virtual-network-vnet-and-firewall-configuration. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="ClaimsPrincipalFactory" FullName="Microsoft.Identity.Web.ClaimsPrincipalFactory">
  <TypeSignature Language="C#" Value="public static class ClaimsPrincipalFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ClaimsPrincipalFactory extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Identity.Web.ClaimsPrincipalFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class ClaimsPrincipalFactory" />
  <TypeSignature Language="F#" Value="type ClaimsPrincipalFactory = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Identity.Web</AssemblyName>
    <AssemblyVersion>0.1.1.0</AssemblyVersion>
    <AssemblyVersion>0.1.2.0</AssemblyVersion>
    <AssemblyVersion>0.1.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Factory class to create ClaimsPrincipal objects.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="FromTenantIdAndObjectId">
      <MemberSignature Language="C#" Value="public static System.Security.Claims.ClaimsPrincipal FromTenantIdAndObjectId (string tenantId, string objectId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Claims.ClaimsPrincipal FromTenantIdAndObjectId(string tenantId, string objectId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Identity.Web.ClaimsPrincipalFactory.FromTenantIdAndObjectId(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromTenantIdAndObjectId (tenantId As String, objectId As String) As ClaimsPrincipal" />
      <MemberSignature Language="F#" Value="static member FromTenantIdAndObjectId : string * string -&gt; System.Security.Claims.ClaimsPrincipal" Usage="Microsoft.Identity.Web.ClaimsPrincipalFactory.FromTenantIdAndObjectId (tenantId, objectId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Web</AssemblyName>
        <AssemblyVersion>0.1.1.0</AssemblyVersion>
        <AssemblyVersion>0.1.2.0</AssemblyVersion>
        <AssemblyVersion>0.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.ClaimsPrincipal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantId" Type="System.String" />
        <Parameter Name="objectId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tenantId">Tenant Id of the account.</param>
        <param name="objectId">Object Id of the account in this tenant ID.</param>
        <summary>
             Instantiate a ClaimsPrincipal from an account objectId and tenantId. This can
             be useful when the Web app subscribes to another service on behalf of the user
             and then is called back by a notification where the user is identified by his tenant
             id and object id (like in Microsoft Graph Web Hooks).
             </summary>
        <returns>A ClaimsPrincipal containing these two claims.</returns>
        <remarks>To be added.</remarks>
        <example>
          <code>
             private async Task GetChangedMessagesAsync(IEnumerable&lt;Notification&gt; notifications)
             {
              foreach (var notification in notifications)
              {
               SubscriptionStore subscription =
                       subscriptionStore.GetSubscriptionInfo(notification.SubscriptionId);
              HttpContext.User = ClaimsPrincipalExtension.FromTenantIdAndObjectId(subscription.TenantId,
                                                                                  subscription.UserId);
              string accessToken = await tokenAcquisition.GetAccessTokenForUserAsync(scopes);
             </code>
        </example>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="ITokenAcquisition" FullName="Microsoft.Identity.Web.ITokenAcquisition">
  <TypeSignature Language="C#" Value="public interface ITokenAcquisition" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ITokenAcquisition" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Identity.Web.ITokenAcquisition" />
  <TypeSignature Language="VB.NET" Value="Public Interface ITokenAcquisition" />
  <TypeSignature Language="F#" Value="type ITokenAcquisition = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Identity.Web</AssemblyName>
    <AssemblyVersion>0.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetAccessTokenForAppAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;string&gt; GetAccessTokenForAppAsync (System.Collections.Generic.IEnumerable&lt;string&gt; scopes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; GetAccessTokenForAppAsync(class System.Collections.Generic.IEnumerable`1&lt;string&gt; scopes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Identity.Web.ITokenAcquisition.GetAccessTokenForAppAsync(System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAccessTokenForAppAsync (scopes As IEnumerable(Of String)) As Task(Of String)" />
      <MemberSignature Language="F#" Value="abstract member GetAccessTokenForAppAsync : seq&lt;string&gt; -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="iTokenAcquisition.GetAccessTokenForAppAsync scopes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Web</AssemblyName>
        <AssemblyVersion>0.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scopes" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="scopes">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAccessTokenForUserAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;string&gt; GetAccessTokenForUserAsync (System.Collections.Generic.IEnumerable&lt;string&gt; scopes, string tenantId = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; GetAccessTokenForUserAsync(class System.Collections.Generic.IEnumerable`1&lt;string&gt; scopes, string tenantId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Identity.Web.ITokenAcquisition.GetAccessTokenForUserAsync(System.Collections.Generic.IEnumerable{System.String},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAccessTokenForUserAsync (scopes As IEnumerable(Of String), Optional tenantId As String = null) As Task(Of String)" />
      <MemberSignature Language="F#" Value="abstract member GetAccessTokenForUserAsync : seq&lt;string&gt; * string -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="iTokenAcquisition.GetAccessTokenForUserAsync (scopes, tenantId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Web</AssemblyName>
        <AssemblyVersion>0.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scopes" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="tenantId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="scopes">To be added.</param>
        <param name="tenantId">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplyForbiddenWithWwwAuthenticateHeader">
      <MemberSignature Language="C#" Value="public void ReplyForbiddenWithWwwAuthenticateHeader (System.Collections.Generic.IEnumerable&lt;string&gt; scopes, Microsoft.Identity.Client.MsalUiRequiredException msalSeviceException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReplyForbiddenWithWwwAuthenticateHeader(class System.Collections.Generic.IEnumerable`1&lt;string&gt; scopes, class Microsoft.Identity.Client.MsalUiRequiredException msalSeviceException) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Identity.Web.ITokenAcquisition.ReplyForbiddenWithWwwAuthenticateHeader(System.Collections.Generic.IEnumerable{System.String},Microsoft.Identity.Client.MsalUiRequiredException)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReplyForbiddenWithWwwAuthenticateHeader (scopes As IEnumerable(Of String), msalSeviceException As MsalUiRequiredException)" />
      <MemberSignature Language="F#" Value="abstract member ReplyForbiddenWithWwwAuthenticateHeader : seq&lt;string&gt; * Microsoft.Identity.Client.MsalUiRequiredException -&gt; unit" Usage="iTokenAcquisition.ReplyForbiddenWithWwwAuthenticateHeader (scopes, msalSeviceException)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Identity.Web</AssemblyName>
        <AssemblyVersion>0.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scopes" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="msalSeviceException" Type="Microsoft.Identity.Client.MsalUiRequiredException" />
      </Parameters>
      <Docs>
        <param name="scopes">To be added.</param>
        <param name="msalSeviceException">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

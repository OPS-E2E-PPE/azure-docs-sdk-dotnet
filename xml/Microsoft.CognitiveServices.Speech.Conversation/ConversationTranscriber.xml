<Type Name="ConversationTranscriber" FullName="Microsoft.CognitiveServices.Speech.Conversation.ConversationTranscriber">
  <TypeSignature Language="C#" Value="public sealed class ConversationTranscriber : Microsoft.CognitiveServices.Speech.Recognizer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ConversationTranscriber extends Microsoft.CognitiveServices.Speech.Recognizer" />
  <TypeSignature Language="DocId" Value="T:Microsoft.CognitiveServices.Speech.Conversation.ConversationTranscriber" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ConversationTranscriber&#xA;Inherits Recognizer" />
  <TypeSignature Language="F#" Value="type ConversationTranscriber = class&#xA;    inherit Recognizer" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
    <AssemblyVersion>1.6.0.28</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.CognitiveServices.Speech.Recognizer</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Perform conversation transcribing on the speech input. It returns recognized text and speaker id.
            Added in version 1.5.0
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConversationTranscriber (Microsoft.CognitiveServices.Speech.SpeechConfig speechConfig);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.CognitiveServices.Speech.SpeechConfig speechConfig) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.Conversation.ConversationTranscriber.#ctor(Microsoft.CognitiveServices.Speech.SpeechConfig)" />
      <MemberSignature Language="F#" Value="new Microsoft.CognitiveServices.Speech.Conversation.ConversationTranscriber : Microsoft.CognitiveServices.Speech.SpeechConfig -&gt; Microsoft.CognitiveServices.Speech.Conversation.ConversationTranscriber" Usage="new Microsoft.CognitiveServices.Speech.Conversation.ConversationTranscriber speechConfig" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>1.6.0.28</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="speechConfig" Type="Microsoft.CognitiveServices.Speech.SpeechConfig" />
      </Parameters>
      <Docs>
        <param name="speechConfig">Speech configuration</param>
        <summary>
            Creates a new instance of ConversationTranscriber.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConversationTranscriber (Microsoft.CognitiveServices.Speech.SpeechConfig speechConfig, Microsoft.CognitiveServices.Speech.Audio.AudioConfig audioConfig);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.CognitiveServices.Speech.SpeechConfig speechConfig, class Microsoft.CognitiveServices.Speech.Audio.AudioConfig audioConfig) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.Conversation.ConversationTranscriber.#ctor(Microsoft.CognitiveServices.Speech.SpeechConfig,Microsoft.CognitiveServices.Speech.Audio.AudioConfig)" />
      <MemberSignature Language="F#" Value="new Microsoft.CognitiveServices.Speech.Conversation.ConversationTranscriber : Microsoft.CognitiveServices.Speech.SpeechConfig * Microsoft.CognitiveServices.Speech.Audio.AudioConfig -&gt; Microsoft.CognitiveServices.Speech.Conversation.ConversationTranscriber" Usage="new Microsoft.CognitiveServices.Speech.Conversation.ConversationTranscriber (speechConfig, audioConfig)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>1.6.0.28</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="speechConfig" Type="Microsoft.CognitiveServices.Speech.SpeechConfig" />
        <Parameter Name="audioConfig" Type="Microsoft.CognitiveServices.Speech.Audio.AudioConfig" />
      </Parameters>
      <Docs>
        <param name="speechConfig">Speech configuration</param>
        <param name="audioConfig">Audio configuration</param>
        <summary>
            Creates a new instance of ConversationTranscriber.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddParticipant">
      <MemberSignature Language="C#" Value="public void AddParticipant (Microsoft.CognitiveServices.Speech.Conversation.Participant participant);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddParticipant(class Microsoft.CognitiveServices.Speech.Conversation.Participant participant) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.Conversation.ConversationTranscriber.AddParticipant(Microsoft.CognitiveServices.Speech.Conversation.Participant)" />
      <MemberSignature Language="F#" Value="member this.AddParticipant : Microsoft.CognitiveServices.Speech.Conversation.Participant -&gt; unit" Usage="conversationTranscriber.AddParticipant participant" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>1.6.0.28</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="participant" Type="Microsoft.CognitiveServices.Speech.Conversation.Participant" />
      </Parameters>
      <Docs>
        <param name="participant">A Participant object.</param>
        <summary>
            Add a participant to a conversation using the Participant object
            </summary>
        <returns>void.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddParticipant">
      <MemberSignature Language="C#" Value="public void AddParticipant (Microsoft.CognitiveServices.Speech.Conversation.User user);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddParticipant(class Microsoft.CognitiveServices.Speech.Conversation.User user) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.Conversation.ConversationTranscriber.AddParticipant(Microsoft.CognitiveServices.Speech.Conversation.User)" />
      <MemberSignature Language="F#" Value="member this.AddParticipant : Microsoft.CognitiveServices.Speech.Conversation.User -&gt; unit" Usage="conversationTranscriber.AddParticipant user" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>1.6.0.28</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="user" Type="Microsoft.CognitiveServices.Speech.Conversation.User" />
      </Parameters>
      <Docs>
        <param name="user">A User object.</param>
        <summary>
            Add a participant to a conversation using the User object.
            </summary>
        <returns>void.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddParticipant">
      <MemberSignature Language="C#" Value="public Microsoft.CognitiveServices.Speech.Conversation.Participant AddParticipant (string userId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CognitiveServices.Speech.Conversation.Participant AddParticipant(string userId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.Conversation.ConversationTranscriber.AddParticipant(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddParticipant (userId As String) As Participant" />
      <MemberSignature Language="F#" Value="member this.AddParticipant : string -&gt; Microsoft.CognitiveServices.Speech.Conversation.Participant" Usage="conversationTranscriber.AddParticipant userId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>1.6.0.28</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CognitiveServices.Speech.Conversation.Participant</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="userId">A user id.</param>
        <summary>
             Add a participant to a conversation using the user's id.
            
             Note: The returned participants can be used to remove. If the client changes the participant's attributes,
             the changed attributes are passed on to the service only when the participants is added again.
            
             </summary>
        <returns>A Participant object.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthorizationToken">
      <MemberSignature Language="C#" Value="public string AuthorizationToken { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AuthorizationToken" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CognitiveServices.Speech.Conversation.ConversationTranscriber.AuthorizationToken" />
      <MemberSignature Language="VB.NET" Value="Public Property AuthorizationToken As String" />
      <MemberSignature Language="F#" Value="member this.AuthorizationToken : string with get, set" Usage="Microsoft.CognitiveServices.Speech.Conversation.ConversationTranscriber.AuthorizationToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>1.6.0.28</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets/sets authorization token used to communicate with the service.
            Note: The caller needs to ensure that the authorization token is valid. Before the authorization token
            expires, the caller needs to refresh it by calling this setter with a new valid token.
            Otherwise, the recognizer will encounter errors during recognition.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Canceled">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Microsoft.CognitiveServices.Speech.Conversation.ConversationTranscriptionCanceledEventArgs&gt; Canceled;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Microsoft.CognitiveServices.Speech.Conversation.ConversationTranscriptionCanceledEventArgs&gt; Canceled" />
      <MemberSignature Language="DocId" Value="E:Microsoft.CognitiveServices.Speech.Conversation.ConversationTranscriber.Canceled" />
      <MemberSignature Language="VB.NET" Value="Public Event Canceled As EventHandler(Of ConversationTranscriptionCanceledEventArgs) " />
      <MemberSignature Language="F#" Value="member this.Canceled : EventHandler&lt;Microsoft.CognitiveServices.Speech.Conversation.ConversationTranscriptionCanceledEventArgs&gt; " Usage="member this.Canceled : System.EventHandler&lt;Microsoft.CognitiveServices.Speech.Conversation.ConversationTranscriptionCanceledEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>1.6.0.28</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Microsoft.CognitiveServices.Speech.Conversation.ConversationTranscriptionCanceledEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The event <see cref="E:Microsoft.CognitiveServices.Speech.Conversation.ConversationTranscriber.Canceled" /> signals that the speech recognition was canceled.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConversationId">
      <MemberSignature Language="C#" Value="public string ConversationId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConversationId" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CognitiveServices.Speech.Conversation.ConversationTranscriber.ConversationId" />
      <MemberSignature Language="VB.NET" Value="Public Property ConversationId As String" />
      <MemberSignature Language="F#" Value="member this.ConversationId : string with get, set" Usage="Microsoft.CognitiveServices.Speech.Conversation.ConversationTranscriber.ConversationId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>1.6.0.28</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets/sets the conversation id.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.Conversation.ConversationTranscriber.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="conversationTranscriber.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>1.6.0.28</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndConversationAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task EndConversationAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task EndConversationAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.Conversation.ConversationTranscriber.EndConversationAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function EndConversationAsync () As Task" />
      <MemberSignature Language="F#" Value="member this.EndConversationAsync : unit -&gt; System.Threading.Tasks.Task" Usage="conversationTranscriber.EndConversationAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>1.6.0.28</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
             End a conversation.
             </summary>
        <returns>A task representing the asynchronous operation that ends the recognition.</returns>
        <remarks>This is used to communicate to the service to shutdown the conversation in the service.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputFormat">
      <MemberSignature Language="C#" Value="public Microsoft.CognitiveServices.Speech.OutputFormat OutputFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.CognitiveServices.Speech.OutputFormat OutputFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CognitiveServices.Speech.Conversation.ConversationTranscriber.OutputFormat" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OutputFormat As OutputFormat" />
      <MemberSignature Language="F#" Value="member this.OutputFormat : Microsoft.CognitiveServices.Speech.OutputFormat" Usage="Microsoft.CognitiveServices.Speech.Conversation.ConversationTranscriber.OutputFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>1.6.0.28</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CognitiveServices.Speech.OutputFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the output format setting.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public Microsoft.CognitiveServices.Speech.PropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CognitiveServices.Speech.PropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CognitiveServices.Speech.Conversation.ConversationTranscriber.Properties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Properties As PropertyCollection" />
      <MemberSignature Language="F#" Value="member this.Properties : Microsoft.CognitiveServices.Speech.PropertyCollection" Usage="Microsoft.CognitiveServices.Speech.Conversation.ConversationTranscriber.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>1.6.0.28</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CognitiveServices.Speech.PropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the collection or properties and their values defined for this <see cref="T:Microsoft.CognitiveServices.Speech.Conversation.ConversationTranscriber" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Recognized">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Microsoft.CognitiveServices.Speech.Conversation.ConversationTranscriptionEventArgs&gt; Recognized;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Microsoft.CognitiveServices.Speech.Conversation.ConversationTranscriptionEventArgs&gt; Recognized" />
      <MemberSignature Language="DocId" Value="E:Microsoft.CognitiveServices.Speech.Conversation.ConversationTranscriber.Recognized" />
      <MemberSignature Language="VB.NET" Value="Public Event Recognized As EventHandler(Of ConversationTranscriptionEventArgs) " />
      <MemberSignature Language="F#" Value="member this.Recognized : EventHandler&lt;Microsoft.CognitiveServices.Speech.Conversation.ConversationTranscriptionEventArgs&gt; " Usage="member this.Recognized : System.EventHandler&lt;Microsoft.CognitiveServices.Speech.Conversation.ConversationTranscriptionEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>1.6.0.28</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Microsoft.CognitiveServices.Speech.Conversation.ConversationTranscriptionEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The event <see cref="E:Microsoft.CognitiveServices.Speech.Conversation.ConversationTranscriber.Recognized" /> signals that a final recognition result is received.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Recognizing">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Microsoft.CognitiveServices.Speech.Conversation.ConversationTranscriptionEventArgs&gt; Recognizing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Microsoft.CognitiveServices.Speech.Conversation.ConversationTranscriptionEventArgs&gt; Recognizing" />
      <MemberSignature Language="DocId" Value="E:Microsoft.CognitiveServices.Speech.Conversation.ConversationTranscriber.Recognizing" />
      <MemberSignature Language="VB.NET" Value="Public Event Recognizing As EventHandler(Of ConversationTranscriptionEventArgs) " />
      <MemberSignature Language="F#" Value="member this.Recognizing : EventHandler&lt;Microsoft.CognitiveServices.Speech.Conversation.ConversationTranscriptionEventArgs&gt; " Usage="member this.Recognizing : System.EventHandler&lt;Microsoft.CognitiveServices.Speech.Conversation.ConversationTranscriptionEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>1.6.0.28</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Microsoft.CognitiveServices.Speech.Conversation.ConversationTranscriptionEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The event <see cref="E:Microsoft.CognitiveServices.Speech.Conversation.ConversationTranscriber.Recognizing" /> signals that an intermediate recognition result is received.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveParticipant">
      <MemberSignature Language="C#" Value="public void RemoveParticipant (Microsoft.CognitiveServices.Speech.Conversation.Participant participant);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveParticipant(class Microsoft.CognitiveServices.Speech.Conversation.Participant participant) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.Conversation.ConversationTranscriber.RemoveParticipant(Microsoft.CognitiveServices.Speech.Conversation.Participant)" />
      <MemberSignature Language="F#" Value="member this.RemoveParticipant : Microsoft.CognitiveServices.Speech.Conversation.Participant -&gt; unit" Usage="conversationTranscriber.RemoveParticipant participant" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>1.6.0.28</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="participant" Type="Microsoft.CognitiveServices.Speech.Conversation.Participant" />
      </Parameters>
      <Docs>
        <param name="participant">A Participant object.</param>
        <summary>
            Remove a participant in a conversation using the Participant object
            </summary>
        <returns>void.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveParticipant">
      <MemberSignature Language="C#" Value="public void RemoveParticipant (Microsoft.CognitiveServices.Speech.Conversation.User user);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveParticipant(class Microsoft.CognitiveServices.Speech.Conversation.User user) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.Conversation.ConversationTranscriber.RemoveParticipant(Microsoft.CognitiveServices.Speech.Conversation.User)" />
      <MemberSignature Language="F#" Value="member this.RemoveParticipant : Microsoft.CognitiveServices.Speech.Conversation.User -&gt; unit" Usage="conversationTranscriber.RemoveParticipant user" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>1.6.0.28</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="user" Type="Microsoft.CognitiveServices.Speech.Conversation.User" />
      </Parameters>
      <Docs>
        <param name="user">A User object.</param>
        <summary>
            Remove a participant in a conversation using the User object
            </summary>
        <returns>void.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveParticipant">
      <MemberSignature Language="C#" Value="public void RemoveParticipant (string userId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveParticipant(string userId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.Conversation.ConversationTranscriber.RemoveParticipant(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveParticipant (userId As String)" />
      <MemberSignature Language="F#" Value="member this.RemoveParticipant : string -&gt; unit" Usage="conversationTranscriber.RemoveParticipant userId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>1.6.0.28</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="userId">A user id.</param>
        <summary>
            Remove a participant from a conversation using a user id object
            </summary>
        <returns>void.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SpeechRecognitionLanguage">
      <MemberSignature Language="C#" Value="public string SpeechRecognitionLanguage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SpeechRecognitionLanguage" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CognitiveServices.Speech.Conversation.ConversationTranscriber.SpeechRecognitionLanguage" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SpeechRecognitionLanguage As String" />
      <MemberSignature Language="F#" Value="member this.SpeechRecognitionLanguage : string" Usage="Microsoft.CognitiveServices.Speech.Conversation.ConversationTranscriber.SpeechRecognitionLanguage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>1.6.0.28</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the language name that is used for recognition.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartTranscribingAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task StartTranscribingAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task StartTranscribingAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.Conversation.ConversationTranscriber.StartTranscribingAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function StartTranscribingAsync () As Task" />
      <MemberSignature Language="F#" Value="member this.StartTranscribingAsync : unit -&gt; System.Threading.Tasks.Task" Usage="conversationTranscriber.StartTranscribingAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>1.6.0.28</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Starts conversation trancsribing on a continuous audio stream, until StopTranscribingAsync() is called.
            User must subscribe to events to receive recognition results.
            </summary>
        <returns>A task representing the asynchronous operation that starts the recognition.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StopTranscribingAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task StopTranscribingAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task StopTranscribingAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CognitiveServices.Speech.Conversation.ConversationTranscriber.StopTranscribingAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function StopTranscribingAsync () As Task" />
      <MemberSignature Language="F#" Value="member this.StopTranscribingAsync : unit -&gt; System.Threading.Tasks.Task" Usage="conversationTranscriber.StopTranscribingAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CognitiveServices.Speech.csharp</AssemblyName>
        <AssemblyVersion>1.6.0.28</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Stops conversation transcribing.
            </summary>
        <returns>A task representing the asynchronous operation that stops the recognition.</returns>
        <remarks>This is used to pause the conversation. The client can start the conversation again by calling StartTranscribingAsync.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
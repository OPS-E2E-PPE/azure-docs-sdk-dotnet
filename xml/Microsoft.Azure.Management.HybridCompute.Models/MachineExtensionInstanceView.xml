<Type Name="MachineExtensionInstanceView" FullName="Microsoft.Azure.Management.HybridCompute.Models.MachineExtensionInstanceView">
  <TypeSignature Language="C#" Value="public class MachineExtensionInstanceView" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MachineExtensionInstanceView extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Management.HybridCompute.Models.MachineExtensionInstanceView" />
  <TypeSignature Language="VB.NET" Value="Public Class MachineExtensionInstanceView" />
  <TypeSignature Language="F#" Value="type MachineExtensionInstanceView = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Management.HybridCompute</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Describes the Machine Extension Instance View.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MachineExtensionInstanceView ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.HybridCompute.Models.MachineExtensionInstanceView.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.HybridCompute</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the MachineExtensionInstanceView
            class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MachineExtensionInstanceView (string name = default, string type = default, string typeHandlerVersion = default, Microsoft.Azure.Management.HybridCompute.Models.MachineExtensionInstanceViewStatus status = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string type, string typeHandlerVersion, class Microsoft.Azure.Management.HybridCompute.Models.MachineExtensionInstanceViewStatus status) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Management.HybridCompute.Models.MachineExtensionInstanceView.#ctor(System.String,System.String,System.String,Microsoft.Azure.Management.HybridCompute.Models.MachineExtensionInstanceViewStatus)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Optional name As String = Nothing, Optional type As String = Nothing, Optional typeHandlerVersion As String = Nothing, Optional status As MachineExtensionInstanceViewStatus = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.Management.HybridCompute.Models.MachineExtensionInstanceView : string * string * string * Microsoft.Azure.Management.HybridCompute.Models.MachineExtensionInstanceViewStatus -&gt; Microsoft.Azure.Management.HybridCompute.Models.MachineExtensionInstanceView" Usage="new Microsoft.Azure.Management.HybridCompute.Models.MachineExtensionInstanceView (name, type, typeHandlerVersion, status)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.HybridCompute</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.String" />
        <Parameter Name="typeHandlerVersion" Type="System.String" />
        <Parameter Name="status" Type="Microsoft.Azure.Management.HybridCompute.Models.MachineExtensionInstanceViewStatus" />
      </Parameters>
      <Docs>
        <param name="name">The machine extension name.</param>
        <param name="type">Specifies the type of the extension; an example
            is "CustomScriptExtension".</param>
        <param name="typeHandlerVersion">Specifies the version of the
            script handler.</param>
        <param name="status">Instance view status.</param>
        <summary>
            Initializes a new instance of the MachineExtensionInstanceView
            class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.HybridCompute.Models.MachineExtensionInstanceView.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="Microsoft.Azure.Management.HybridCompute.Models.MachineExtensionInstanceView.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.HybridCompute</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="name")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="name")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the machine extension name.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Status">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Management.HybridCompute.Models.MachineExtensionInstanceViewStatus Status { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Azure.Management.HybridCompute.Models.MachineExtensionInstanceViewStatus Status" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.HybridCompute.Models.MachineExtensionInstanceView.Status" />
      <MemberSignature Language="VB.NET" Value="Public Property Status As MachineExtensionInstanceViewStatus" />
      <MemberSignature Language="F#" Value="member this.Status : Microsoft.Azure.Management.HybridCompute.Models.MachineExtensionInstanceViewStatus with get, set" Usage="Microsoft.Azure.Management.HybridCompute.Models.MachineExtensionInstanceView.Status" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.HybridCompute</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="status")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="status")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Management.HybridCompute.Models.MachineExtensionInstanceViewStatus</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets instance view status.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public string Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Type" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.HybridCompute.Models.MachineExtensionInstanceView.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As String" />
      <MemberSignature Language="F#" Value="member this.Type : string" Usage="Microsoft.Azure.Management.HybridCompute.Models.MachineExtensionInstanceView.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.HybridCompute</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="type")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="type")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets specifies the type of the extension; an example is
            "CustomScriptExtension".
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeHandlerVersion">
      <MemberSignature Language="C#" Value="public string TypeHandlerVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TypeHandlerVersion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Management.HybridCompute.Models.MachineExtensionInstanceView.TypeHandlerVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TypeHandlerVersion As String" />
      <MemberSignature Language="F#" Value="member this.TypeHandlerVersion : string" Usage="Microsoft.Azure.Management.HybridCompute.Models.MachineExtensionInstanceView.TypeHandlerVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Management.HybridCompute</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="typeHandlerVersion")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="typeHandlerVersion")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets specifies the version of the script handler.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="EventHubClient" FullName="Azure.Messaging.EventHubs.EventHubClient">
  <TypeSignature Language="C#" Value="public class EventHubClient : IAsyncDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EventHubClient extends System.Object implements class System.IAsyncDisposable" />
  <TypeSignature Language="DocId" Value="T:Azure.Messaging.EventHubs.EventHubClient" />
  <TypeSignature Language="VB.NET" Value="Public Class EventHubClient&#xA;Implements IAsyncDisposable" />
  <TypeSignature Language="F#" Value="type EventHubClient = class&#xA;    interface IAsyncDisposable" />
  <AssemblyInfo>
    <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IAsyncDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
               The main point of interaction with the Azure Event Hubs service, the client offers a
               connection to a specific Event Hub within the Event Hubs namespace and offers operations
               for sending event data, receiving events, and inspecting the connected Event Hub.
             </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EventHubClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.EventHubClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
               Initializes a new instance of the <see cref="T:Azure.Messaging.EventHubs.EventHubClient" /> class.
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EventHubClient (Azure.Messaging.EventHubs.EventHubClientOptions clientOptions);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Azure.Messaging.EventHubs.EventHubClientOptions clientOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.EventHubClient.#ctor(Azure.Messaging.EventHubs.EventHubClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (clientOptions As EventHubClientOptions)" />
      <MemberSignature Language="F#" Value="new Azure.Messaging.EventHubs.EventHubClient : Azure.Messaging.EventHubs.EventHubClientOptions -&gt; Azure.Messaging.EventHubs.EventHubClient" Usage="new Azure.Messaging.EventHubs.EventHubClient clientOptions" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="clientOptions" Type="Azure.Messaging.EventHubs.EventHubClientOptions" />
      </Parameters>
      <Docs>
        <param name="clientOptions">A set of options to apply when configuring the client.</param>
        <summary>
               Initializes a new instance of the <see cref="T:Azure.Messaging.EventHubs.EventHubClient" /> class.
             </summary>
        <remarks>
               Because this is a non-public constructor, it is assumed that the <paramref name="clientOptions" /> passed are
               owned by this instance and are safe from changes made by consumers.  It is considered the responsibility of the
               caller to ensure that any needed cloning of options is performed.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventHubClient (string connectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.EventHubClient.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String)" />
      <MemberSignature Language="F#" Value="new Azure.Messaging.EventHubs.EventHubClient : string -&gt; Azure.Messaging.EventHubs.EventHubClient" Usage="new Azure.Messaging.EventHubs.EventHubClient connectionString" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">The connection string to use for connecting to the Event Hubs namespace; it is expected that the Event Hub path and the shared key properties are contained in this connection string.</param>
        <summary>
               Initializes a new instance of the <see cref="T:Azure.Messaging.EventHubs.EventHubClient" /> class.
             </summary>
        <remarks>
               If the connection string is copied from the Event Hubs namespace, it will likely not contain the path to the desired Event Hub,
               which is needed.  In this case, the path can be added manually by adding ";EntityPath=[[ EVENT HUB NAME ]]" to the end of the
               connection string.  For example, ";EntityPath=telemetry-hub".
            
               If you have defined a shared access policy directly on the Event Hub itself, then copying the connection string from that
               Event Hub will result in a connection string that contains the path.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventHubClient (string connectionString, Azure.Messaging.EventHubs.EventHubClientOptions clientOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString, class Azure.Messaging.EventHubs.EventHubClientOptions clientOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.EventHubClient.#ctor(System.String,Azure.Messaging.EventHubs.EventHubClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String, clientOptions As EventHubClientOptions)" />
      <MemberSignature Language="F#" Value="new Azure.Messaging.EventHubs.EventHubClient : string * Azure.Messaging.EventHubs.EventHubClientOptions -&gt; Azure.Messaging.EventHubs.EventHubClient" Usage="new Azure.Messaging.EventHubs.EventHubClient (connectionString, clientOptions)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="clientOptions" Type="Azure.Messaging.EventHubs.EventHubClientOptions" />
      </Parameters>
      <Docs>
        <param name="connectionString">The connection string to use for connecting to the Event Hubs namespace; it is expected that the Event Hub path and SAS token are contained in this connection string.</param>
        <param name="clientOptions">A set of options to apply when configuring the client.</param>
        <summary>
               Initializes a new instance of the <see cref="T:Azure.Messaging.EventHubs.EventHubClient" /> class.
             </summary>
        <remarks>
               If the connection string is copied from the Event Hubs namespace, it will likely not contain the path to the desired Event Hub,
               which is needed.  In this case, the path can be added manually by adding ";EntityPath=[[ EVENT HUB NAME ]]" to the end of the
               connection string.  For example, ";EntityPath=telemetry-hub".
            
               If you have defined a shared access policy directly on the Event Hub itself, then copying the connection string from that
               Event Hub will result in a connection string that contains the path.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventHubClient (string connectionString, string eventHubPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString, string eventHubPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.EventHubClient.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String, eventHubPath As String)" />
      <MemberSignature Language="F#" Value="new Azure.Messaging.EventHubs.EventHubClient : string * string -&gt; Azure.Messaging.EventHubs.EventHubClient" Usage="new Azure.Messaging.EventHubs.EventHubClient (connectionString, eventHubPath)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="eventHubPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">The connection string to use for connecting to the Event Hubs namespace; it is expected that the shared key properties are contained in this connection string, but not the Event Hub path.</param>
        <param name="eventHubPath">The path of the specific Event Hub to connect the client to.</param>
        <summary>
               Initializes a new instance of the <see cref="T:Azure.Messaging.EventHubs.EventHubClient" /> class.
             </summary>
        <remarks>
               If the connection string is copied from the Event Hub itself, it will contain the path to the desired Event Hub,
               and can be used directly without passing the <paramref name="eventHubPath" />.  The path to the Event Hub should be
               passed only once, either as part of the connection string or separately.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventHubClient (string connectionString, string eventHubPath, Azure.Messaging.EventHubs.EventHubClientOptions clientOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString, string eventHubPath, class Azure.Messaging.EventHubs.EventHubClientOptions clientOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.EventHubClient.#ctor(System.String,System.String,Azure.Messaging.EventHubs.EventHubClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String, eventHubPath As String, clientOptions As EventHubClientOptions)" />
      <MemberSignature Language="F#" Value="new Azure.Messaging.EventHubs.EventHubClient : string * string * Azure.Messaging.EventHubs.EventHubClientOptions -&gt; Azure.Messaging.EventHubs.EventHubClient" Usage="new Azure.Messaging.EventHubs.EventHubClient (connectionString, eventHubPath, clientOptions)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="eventHubPath" Type="System.String" />
        <Parameter Name="clientOptions" Type="Azure.Messaging.EventHubs.EventHubClientOptions" />
      </Parameters>
      <Docs>
        <param name="connectionString">The connection string to use for connecting to the Event Hubs namespace; it is expected that the Event Hub path and SAS token are contained in this connection string.</param>
        <param name="eventHubPath">The path of the specific Event Hub to connect the client to.</param>
        <param name="clientOptions">A set of options to apply when configuring the client.</param>
        <summary>
               Initializes a new instance of the <see cref="T:Azure.Messaging.EventHubs.EventHubClient" /> class.
             </summary>
        <remarks>
               If the connection string is copied from the Event Hub itself, it will contain the path to the desired Event Hub,
               and can be used directly without passing the <paramref name="eventHubPath" />.  The path to the Event Hub should be
               passed only once, either as part of the connection string or separately.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventHubClient (string host, string eventHubPath, Azure.Core.TokenCredential credential, Azure.Messaging.EventHubs.EventHubClientOptions clientOptions = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string host, string eventHubPath, class Azure.Core.TokenCredential credential, class Azure.Messaging.EventHubs.EventHubClientOptions clientOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.EventHubClient.#ctor(System.String,System.String,Azure.Core.TokenCredential,Azure.Messaging.EventHubs.EventHubClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (host As String, eventHubPath As String, credential As TokenCredential, Optional clientOptions As EventHubClientOptions = null)" />
      <MemberSignature Language="F#" Value="new Azure.Messaging.EventHubs.EventHubClient : string * string * Azure.Core.TokenCredential * Azure.Messaging.EventHubs.EventHubClientOptions -&gt; Azure.Messaging.EventHubs.EventHubClient" Usage="new Azure.Messaging.EventHubs.EventHubClient (host, eventHubPath, credential, clientOptions)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="host" Type="System.String" />
        <Parameter Name="eventHubPath" Type="System.String" />
        <Parameter Name="credential" Type="Azure.Core.TokenCredential" />
        <Parameter Name="clientOptions" Type="Azure.Messaging.EventHubs.EventHubClientOptions" />
      </Parameters>
      <Docs>
        <param name="host">The fully qualified host name for the Event Hubs namespace.  This is likely to be similar to <c>{yournamespace}.servicebus.windows.net</c>.</param>
        <param name="eventHubPath">The path of the specific Event Hub to connect the client to.</param>
        <param name="credential">The Azure managed identity credential to use for authorization.  Access controls may be specified by the Event Hubs namespace or the requeseted Event Hub, depending on Azure configuration.</param>
        <param name="clientOptions">A set of options to apply when configuring the client.</param>
        <summary>
               Initializes a new instance of the <see cref="T:Azure.Messaging.EventHubs.EventHubClient" /> class.
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public virtual void Close (System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.EventHubClient.Close(System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member Close : System.Threading.CancellationToken -&gt; unit&#xA;override this.Close : System.Threading.CancellationToken -&gt; unit" Usage="eventHubClient.Close cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken" /> instance to signal the request to cancel the operation.</param>
        <summary>
               Closes the connection to the Event Hub instance.
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task CloseAsync (System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task CloseAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.EventHubClient.CloseAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member CloseAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.CloseAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="eventHubClient.CloseAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken" /> instance to signal the request to cancel the operation.</param>
        <summary>
               Closes the connection to the Event Hub instance.
             </summary>
        <returns>A task to be resolved on when the operation has completed.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateConsumer">
      <MemberSignature Language="C#" Value="public virtual Azure.Messaging.EventHubs.EventHubConsumer CreateConsumer (string consumerGroup, string partitionId, Azure.Messaging.EventHubs.EventPosition eventPosition, Azure.Messaging.EventHubs.EventHubConsumerOptions consumerOptions = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Messaging.EventHubs.EventHubConsumer CreateConsumer(string consumerGroup, string partitionId, class Azure.Messaging.EventHubs.EventPosition eventPosition, class Azure.Messaging.EventHubs.EventHubConsumerOptions consumerOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.EventHubClient.CreateConsumer(System.String,System.String,Azure.Messaging.EventHubs.EventPosition,Azure.Messaging.EventHubs.EventHubConsumerOptions)" />
      <MemberSignature Language="F#" Value="abstract member CreateConsumer : string * string * Azure.Messaging.EventHubs.EventPosition * Azure.Messaging.EventHubs.EventHubConsumerOptions -&gt; Azure.Messaging.EventHubs.EventHubConsumer&#xA;override this.CreateConsumer : string * string * Azure.Messaging.EventHubs.EventPosition * Azure.Messaging.EventHubs.EventHubConsumerOptions -&gt; Azure.Messaging.EventHubs.EventHubConsumer" Usage="eventHubClient.CreateConsumer (consumerGroup, partitionId, eventPosition, consumerOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Messaging.EventHubs.EventHubConsumer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="consumerGroup" Type="System.String" />
        <Parameter Name="partitionId" Type="System.String" />
        <Parameter Name="eventPosition" Type="Azure.Messaging.EventHubs.EventPosition" />
        <Parameter Name="consumerOptions" Type="Azure.Messaging.EventHubs.EventHubConsumerOptions" />
      </Parameters>
      <Docs>
        <param name="consumerGroup">The name of the consumer group this consumer is associated with.  Events are read in the context of this group.</param>
        <param name="partitionId">The identifier of the Event Hub partition from which events will be received.</param>
        <param name="eventPosition">The position within the partition where the consumer should begin reading events.</param>
        <param name="consumerOptions">The set of options to apply when creating the consumer.</param>
        <summary>
               Creates an Event Hub consumer responsible for reading <see cref="T:Azure.Messaging.EventHubs.EventData" /> from a specific Event Hub partition,
               in the context of a specific consumer group.
            
               A consumer may be exclusive, which asserts ownership over the partition for the consumer
               group to ensure that only one consumer from that group is reading the from the partition.
               These exclusive consumers are sometimes referred to as "Epoch Consumers."
            
               A consumer may also be non-exclusive, allowing multiple consumers from the same consumer
               group to be actively reading events from the partition.  These non-exclusive consumers are
               sometimes referred to as "Non-epoch Consumers."
            
               Designating a consumer as exclusive may be specified in the <paramref name="consumerOptions" />.
               By default, consumers are created as non-exclusive.
             </summary>
        <returns>An Event Hub consumer configured in the requested manner.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateProducer">
      <MemberSignature Language="C#" Value="public virtual Azure.Messaging.EventHubs.EventHubProducer CreateProducer (Azure.Messaging.EventHubs.EventHubProducerOptions producerOptions = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Messaging.EventHubs.EventHubProducer CreateProducer(class Azure.Messaging.EventHubs.EventHubProducerOptions producerOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.EventHubClient.CreateProducer(Azure.Messaging.EventHubs.EventHubProducerOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateProducer (Optional producerOptions As EventHubProducerOptions = null) As EventHubProducer" />
      <MemberSignature Language="F#" Value="abstract member CreateProducer : Azure.Messaging.EventHubs.EventHubProducerOptions -&gt; Azure.Messaging.EventHubs.EventHubProducer&#xA;override this.CreateProducer : Azure.Messaging.EventHubs.EventHubProducerOptions -&gt; Azure.Messaging.EventHubs.EventHubProducer" Usage="eventHubClient.CreateProducer producerOptions" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Messaging.EventHubs.EventHubProducer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="producerOptions" Type="Azure.Messaging.EventHubs.EventHubProducerOptions" />
      </Parameters>
      <Docs>
        <param name="producerOptions">The set of options to apply when creating the producer.</param>
        <summary>
               Creates an Event Hub producer responsible for publishing <see cref="T:Azure.Messaging.EventHubs.EventData" /> to the
               Event Hub, either as a single item or grouped together in batches.  Depending on the
               <paramref name="producerOptions" /> specified, the producer may be created to allow event
               data to be automatically routed to an available partition or specific to a partition.
             </summary>
        <returns>An Event Hub producer configured in the requested manner.</returns>
        <remarks>
               Allowing automatic routing of partitions is recommended when:
               <para>- The publishing of events needs to be highly available.</para><para>- The event data should be evenly distributed among all available partitions.</para>
            
               If no partition is specified, the following rules are used for automatically selecting one:
               <para>- Distribute the events equally amongst all available partitions using a round-robin approach.</para><para>- If a partition becomes unavailable, the Event Hubs service will automatically detect it and forward the message to another available partition.</para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DisposeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.ValueTask DisposeAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask DisposeAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.EventHubClient.DisposeAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DisposeAsync () As ValueTask" />
      <MemberSignature Language="F#" Value="abstract member DisposeAsync : unit -&gt; System.Threading.Tasks.ValueTask&#xA;override this.DisposeAsync : unit -&gt; System.Threading.Tasks.ValueTask" Usage="eventHubClient.DisposeAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
               Performs the task needed to clean up resources used by the <see cref="T:Azure.Messaging.EventHubs.EventHubClient" />,
               including ensuring that the client itself has been closed.
             </summary>
        <returns>A task to be resolved on when the operation has completed.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.EventHubClient.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="eventHubClient.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
        <summary>
               Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
             </summary>
        <returns>
          <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EventHubPath">
      <MemberSignature Language="C#" Value="public string EventHubPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EventHubPath" />
      <MemberSignature Language="DocId" Value="P:Azure.Messaging.EventHubs.EventHubClient.EventHubPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EventHubPath As String" />
      <MemberSignature Language="F#" Value="member this.EventHubPath : string" Usage="Azure.Messaging.EventHubs.EventHubClient.EventHubPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
               The path of the specific Event Hub that the client is connected to, relative
               to the Event Hubs namespace that contains it.
             </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.EventHubClient.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="eventHubClient.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
               Returns a hash code for this instance.
             </summary>
        <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPartitionIdsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;string[]&gt; GetPartitionIdsAsync (System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;string[]&gt; GetPartitionIdsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.EventHubClient.GetPartitionIdsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetPartitionIdsAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;string[]&gt;&#xA;override this.GetPartitionIdsAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;string[]&gt;" Usage="eventHubClient.GetPartitionIdsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken" /> instance to signal the request to cancel the operation.</param>
        <summary>
               Retrieves the set of identifiers for the partitions of an Event Hub.
             </summary>
        <returns>The set of identifiers for the partitions within the Event Hub that this client is associated with.</returns>
        <remarks>
               This method is synonomous with invoking <see cref="M:Azure.Messaging.EventHubs.EventHubClient.GetPropertiesAsync(System.Threading.CancellationToken)" /> and reading the <see cref="P:Azure.Messaging.EventHubs.Metadata.EventHubProperties.PartitionIds" />
               property that is returned. It is offered as a convienience for quick access to the set of partition identifiers for the associated Event Hub.
               No new or extended information is presented.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPartitionPropertiesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Messaging.EventHubs.Metadata.PartitionProperties&gt; GetPartitionPropertiesAsync (string partitionId, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Messaging.EventHubs.Metadata.PartitionProperties&gt; GetPartitionPropertiesAsync(string partitionId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.EventHubClient.GetPartitionPropertiesAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetPartitionPropertiesAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Messaging.EventHubs.Metadata.PartitionProperties&gt;&#xA;override this.GetPartitionPropertiesAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Messaging.EventHubs.Metadata.PartitionProperties&gt;" Usage="eventHubClient.GetPartitionPropertiesAsync (partitionId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Messaging.EventHubs.Metadata.PartitionProperties&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partitionId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="partitionId">The unique identifier of a partition associated with the Event Hub.</param>
        <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken" /> instance to signal the request to cancel the operation.</param>
        <summary>
               Retrieves information about a specific partiton for an Event Hub, including elements that describe the available
               events in the partition event stream.
             </summary>
        <returns>The set of information for the requested partition under the Event Hub this client is associated with.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertiesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Messaging.EventHubs.Metadata.EventHubProperties&gt; GetPropertiesAsync (System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Messaging.EventHubs.Metadata.EventHubProperties&gt; GetPropertiesAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.EventHubClient.GetPropertiesAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetPropertiesAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Messaging.EventHubs.Metadata.EventHubProperties&gt;&#xA;override this.GetPropertiesAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Messaging.EventHubs.Metadata.EventHubProperties&gt;" Usage="eventHubClient.GetPropertiesAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Messaging.EventHubs.Metadata.EventHubProperties&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken" /> instance to signal the request to cancel the operation.</param>
        <summary>
               Retrieves information about an Event Hub, including the number of partitions present
               and their identifiers.
             </summary>
        <returns>The set of information for the Event Hub that this client is associated with.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.EventHubClient.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="eventHubClient.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
               Converts the instance to string representation.
             </summary>
        <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
<Type Name="EventProcessorClient" FullName="Azure.Messaging.EventHubs.EventProcessorClient">
  <TypeSignature Language="C#" Value="public class EventProcessorClient" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EventProcessorClient extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Messaging.EventHubs.EventProcessorClient" />
  <TypeSignature Language="VB.NET" Value="Public Class EventProcessorClient" />
  <TypeSignature Language="F#" Value="type EventProcessorClient = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Messaging.EventHubs.Processor</AssemblyName>
    <AssemblyVersion>5.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
               Consumes events for the configured Event Hub and consumer group across all partitions, making them available for processing
               through the provided handlers.
             </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EventProcessorClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.EventProcessorClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs.Processor</AssemblyName>
        <AssemblyVersion>5.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
               Initializes a new instance of the <see cref="T:Azure.Messaging.EventHubs.EventProcessorClient" /> class.
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventProcessorClient (Azure.Storage.Blobs.BlobContainerClient checkpointStore, string consumerGroup, string connectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Azure.Storage.Blobs.BlobContainerClient checkpointStore, string consumerGroup, string connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.EventProcessorClient.#ctor(Azure.Storage.Blobs.BlobContainerClient,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (checkpointStore As BlobContainerClient, consumerGroup As String, connectionString As String)" />
      <MemberSignature Language="F#" Value="new Azure.Messaging.EventHubs.EventProcessorClient : Azure.Storage.Blobs.BlobContainerClient * string * string -&gt; Azure.Messaging.EventHubs.EventProcessorClient" Usage="new Azure.Messaging.EventHubs.EventProcessorClient (checkpointStore, consumerGroup, connectionString)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs.Processor</AssemblyName>
        <AssemblyVersion>5.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="checkpointStore" Type="Azure.Storage.Blobs.BlobContainerClient" />
        <Parameter Name="consumerGroup" Type="System.String" />
        <Parameter Name="connectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="checkpointStore">The client responsible for interaction with durable storage, responsible for persisting checkpoints and load-balancing state.</param>
        <param name="consumerGroup">The name of the consumer group this processor is associated with.  Events are read in the context of this group.</param>
        <param name="connectionString">The connection string to use for connecting to the Event Hubs namespace; it is expected that the Event Hub name and the shared key properties are contained in this connection string.</param>
        <summary>
               Initializes a new instance of the <see cref="T:Azure.Messaging.EventHubs.EventProcessorClient" /> class.
             </summary>
        <remarks>
               If the connection string is copied from the Event Hubs namespace, it will likely not contain the name of the desired Event Hub,
               which is needed.  In this case, the name can be added manually by adding ";EntityPath=[[ EVENT HUB NAME ]]" to the end of the
               connection string.  For example, ";EntityPath=telemetry-hub".
            
               If you have defined a shared access policy directly on the Event Hub itself, then copying the connection string from that
               Event Hub will result in a connection string that contains the name.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventProcessorClient (Azure.Storage.Blobs.BlobContainerClient checkpointStore, string consumerGroup, string connectionString, Azure.Messaging.EventHubs.EventProcessorClientOptions clientOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Azure.Storage.Blobs.BlobContainerClient checkpointStore, string consumerGroup, string connectionString, class Azure.Messaging.EventHubs.EventProcessorClientOptions clientOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.EventProcessorClient.#ctor(Azure.Storage.Blobs.BlobContainerClient,System.String,System.String,Azure.Messaging.EventHubs.EventProcessorClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (checkpointStore As BlobContainerClient, consumerGroup As String, connectionString As String, clientOptions As EventProcessorClientOptions)" />
      <MemberSignature Language="F#" Value="new Azure.Messaging.EventHubs.EventProcessorClient : Azure.Storage.Blobs.BlobContainerClient * string * string * Azure.Messaging.EventHubs.EventProcessorClientOptions -&gt; Azure.Messaging.EventHubs.EventProcessorClient" Usage="new Azure.Messaging.EventHubs.EventProcessorClient (checkpointStore, consumerGroup, connectionString, clientOptions)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs.Processor</AssemblyName>
        <AssemblyVersion>5.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="checkpointStore" Type="Azure.Storage.Blobs.BlobContainerClient" />
        <Parameter Name="consumerGroup" Type="System.String" />
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="clientOptions" Type="Azure.Messaging.EventHubs.EventProcessorClientOptions" />
      </Parameters>
      <Docs>
        <param name="checkpointStore">The client responsible for interaction with durable storage, responsible for persisting checkpoints and load-balancing state.</param>
        <param name="consumerGroup">The name of the consumer group this processor is associated with.  Events are read in the context of this group.</param>
        <param name="connectionString">The connection string to use for connecting to the Event Hubs namespace; it is expected that the Event Hub name and the shared key properties are contained in this connection string.</param>
        <param name="clientOptions">The set of options to use for this processor.</param>
        <summary>
               Initializes a new instance of the <see cref="T:Azure.Messaging.EventHubs.EventProcessorClient" /> class.
             </summary>
        <remarks>
               If the connection string is copied from the Event Hubs namespace, it will likely not contain the name of the desired Event Hub,
               which is needed.  In this case, the name can be added manually by adding ";EntityPath=[[ EVENT HUB NAME ]]" to the end of the
               connection string.  For example, ";EntityPath=telemetry-hub".
            
               If you have defined a shared access policy directly on the Event Hub itself, then copying the connection string from that
               Event Hub will result in a connection string that contains the name.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventProcessorClient (Azure.Storage.Blobs.BlobContainerClient checkpointStore, string consumerGroup, string connectionString, string eventHubName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Azure.Storage.Blobs.BlobContainerClient checkpointStore, string consumerGroup, string connectionString, string eventHubName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.EventProcessorClient.#ctor(Azure.Storage.Blobs.BlobContainerClient,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (checkpointStore As BlobContainerClient, consumerGroup As String, connectionString As String, eventHubName As String)" />
      <MemberSignature Language="F#" Value="new Azure.Messaging.EventHubs.EventProcessorClient : Azure.Storage.Blobs.BlobContainerClient * string * string * string -&gt; Azure.Messaging.EventHubs.EventProcessorClient" Usage="new Azure.Messaging.EventHubs.EventProcessorClient (checkpointStore, consumerGroup, connectionString, eventHubName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs.Processor</AssemblyName>
        <AssemblyVersion>5.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="checkpointStore" Type="Azure.Storage.Blobs.BlobContainerClient" />
        <Parameter Name="consumerGroup" Type="System.String" />
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="eventHubName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="checkpointStore">The client responsible for interaction with durable storage, responsible for persisting checkpoints and load-balancing state.</param>
        <param name="consumerGroup">The name of the consumer group this processor is associated with.  Events are read in the context of this group.</param>
        <param name="connectionString">The connection string to use for connecting to the Event Hubs namespace; it is expected that the shared key properties are contained in this connection string, but not the Event Hub name.</param>
        <param name="eventHubName">The name of the specific Event Hub to associate the processor with.</param>
        <summary>
               Initializes a new instance of the <see cref="T:Azure.Messaging.EventHubs.EventProcessorClient" /> class.
             </summary>
        <remarks>
               If the connection string is copied from the Event Hub itself, it will contain the name of the desired Event Hub,
               and can be used directly without passing the <paramref name="eventHubName" />.  The name of the Event Hub should be
               passed only once, either as part of the connection string or separately.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventProcessorClient (Azure.Storage.Blobs.BlobContainerClient checkpointStore, string consumerGroup, string connectionString, string eventHubName, Azure.Messaging.EventHubs.EventProcessorClientOptions clientOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Azure.Storage.Blobs.BlobContainerClient checkpointStore, string consumerGroup, string connectionString, string eventHubName, class Azure.Messaging.EventHubs.EventProcessorClientOptions clientOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.EventProcessorClient.#ctor(Azure.Storage.Blobs.BlobContainerClient,System.String,System.String,System.String,Azure.Messaging.EventHubs.EventProcessorClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (checkpointStore As BlobContainerClient, consumerGroup As String, connectionString As String, eventHubName As String, clientOptions As EventProcessorClientOptions)" />
      <MemberSignature Language="F#" Value="new Azure.Messaging.EventHubs.EventProcessorClient : Azure.Storage.Blobs.BlobContainerClient * string * string * string * Azure.Messaging.EventHubs.EventProcessorClientOptions -&gt; Azure.Messaging.EventHubs.EventProcessorClient" Usage="new Azure.Messaging.EventHubs.EventProcessorClient (checkpointStore, consumerGroup, connectionString, eventHubName, clientOptions)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs.Processor</AssemblyName>
        <AssemblyVersion>5.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="checkpointStore" Type="Azure.Storage.Blobs.BlobContainerClient" />
        <Parameter Name="consumerGroup" Type="System.String" />
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="eventHubName" Type="System.String" />
        <Parameter Name="clientOptions" Type="Azure.Messaging.EventHubs.EventProcessorClientOptions" />
      </Parameters>
      <Docs>
        <param name="checkpointStore">The client responsible for interaction with durable storage, responsible for persisting checkpoints and load-balancing state.</param>
        <param name="consumerGroup">The name of the consumer group this processor is associated with.  Events are read in the context of this group.</param>
        <param name="connectionString">The connection string to use for connecting to the Event Hubs namespace; it is expected that the shared key properties are contained in this connection string, but not the Event Hub name.</param>
        <param name="eventHubName">The name of the specific Event Hub to associate the processor with.</param>
        <param name="clientOptions">The set of options to use for this processor.</param>
        <summary>
               Initializes a new instance of the <see cref="T:Azure.Messaging.EventHubs.EventProcessorClient" /> class.
             </summary>
        <remarks>
               If the connection string is copied from the Event Hub itself, it will contain the name of the desired Event Hub,
               and can be used directly without passing the <paramref name="eventHubName" />.  The name of the Event Hub should be
               passed only once, either as part of the connection string or separately.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventProcessorClient (Azure.Storage.Blobs.BlobContainerClient checkpointStore, string consumerGroup, string fullyQualifiedNamespace, string eventHubName, Azure.Core.TokenCredential credential, Azure.Messaging.EventHubs.EventProcessorClientOptions clientOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Azure.Storage.Blobs.BlobContainerClient checkpointStore, string consumerGroup, string fullyQualifiedNamespace, string eventHubName, class Azure.Core.TokenCredential credential, class Azure.Messaging.EventHubs.EventProcessorClientOptions clientOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.EventProcessorClient.#ctor(Azure.Storage.Blobs.BlobContainerClient,System.String,System.String,System.String,Azure.Core.TokenCredential,Azure.Messaging.EventHubs.EventProcessorClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (checkpointStore As BlobContainerClient, consumerGroup As String, fullyQualifiedNamespace As String, eventHubName As String, credential As TokenCredential, Optional clientOptions As EventProcessorClientOptions = null)" />
      <MemberSignature Language="F#" Value="new Azure.Messaging.EventHubs.EventProcessorClient : Azure.Storage.Blobs.BlobContainerClient * string * string * string * Azure.Core.TokenCredential * Azure.Messaging.EventHubs.EventProcessorClientOptions -&gt; Azure.Messaging.EventHubs.EventProcessorClient" Usage="new Azure.Messaging.EventHubs.EventProcessorClient (checkpointStore, consumerGroup, fullyQualifiedNamespace, eventHubName, credential, clientOptions)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs.Processor</AssemblyName>
        <AssemblyVersion>5.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="checkpointStore" Type="Azure.Storage.Blobs.BlobContainerClient" />
        <Parameter Name="consumerGroup" Type="System.String" />
        <Parameter Name="fullyQualifiedNamespace" Type="System.String" />
        <Parameter Name="eventHubName" Type="System.String" />
        <Parameter Name="credential" Type="Azure.Core.TokenCredential" />
        <Parameter Name="clientOptions" Type="Azure.Messaging.EventHubs.EventProcessorClientOptions" />
      </Parameters>
      <Docs>
        <param name="checkpointStore">The client responsible for interaction with durable storage, responsible for persisting checkpoints and load-balancing state.</param>
        <param name="consumerGroup">The name of the consumer group this processor is associated with.  Events are read in the context of this group.</param>
        <param name="fullyQualifiedNamespace">The fully qualified Event Hubs namespace to connect to.  This is likely to be similar to <c>{yournamespace}.servicebus.windows.net</c>.</param>
        <param name="eventHubName">The name of the specific Event Hub to associate the processor with.</param>
        <param name="credential">The Azure managed identity credential to use for authorization.  Access controls may be specified by the Event Hubs namespace or the requested Event Hub, depending on Azure configuration.</param>
        <param name="clientOptions">The set of options to use for this processor.</param>
        <summary>
               Initializes a new instance of the <see cref="T:Azure.Messaging.EventHubs.EventProcessorClient" /> class.
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConsumerGroup">
      <MemberSignature Language="C#" Value="public string ConsumerGroup { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConsumerGroup" />
      <MemberSignature Language="DocId" Value="P:Azure.Messaging.EventHubs.EventProcessorClient.ConsumerGroup" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConsumerGroup As String" />
      <MemberSignature Language="F#" Value="member this.ConsumerGroup : string" Usage="Azure.Messaging.EventHubs.EventProcessorClient.ConsumerGroup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs.Processor</AssemblyName>
        <AssemblyVersion>5.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
               The name of the consumer group this event processor is associated with.  Events will be
               read only in the context of this group.
             </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.EventProcessorClient.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="eventProcessorClient.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs.Processor</AssemblyName>
        <AssemblyVersion>5.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
        <summary>
               Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
             </summary>
        <returns>
          <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EventHubName">
      <MemberSignature Language="C#" Value="public string EventHubName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EventHubName" />
      <MemberSignature Language="DocId" Value="P:Azure.Messaging.EventHubs.EventProcessorClient.EventHubName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EventHubName As String" />
      <MemberSignature Language="F#" Value="member this.EventHubName : string" Usage="Azure.Messaging.EventHubs.EventProcessorClient.EventHubName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs.Processor</AssemblyName>
        <AssemblyVersion>5.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
               The name of the Event Hub that the processor is connected to, specific to the
               Event Hubs namespace that contains it.
             </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FullyQualifiedNamespace">
      <MemberSignature Language="C#" Value="public string FullyQualifiedNamespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullyQualifiedNamespace" />
      <MemberSignature Language="DocId" Value="P:Azure.Messaging.EventHubs.EventProcessorClient.FullyQualifiedNamespace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FullyQualifiedNamespace As String" />
      <MemberSignature Language="F#" Value="member this.FullyQualifiedNamespace : string" Usage="Azure.Messaging.EventHubs.EventProcessorClient.FullyQualifiedNamespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs.Processor</AssemblyName>
        <AssemblyVersion>5.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
               The fully qualified Event Hubs namespace that the processor is associated with.  This is likely
               to be similar to <c>{yournamespace}.servicebus.windows.net</c>.
             </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.EventProcessorClient.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="eventProcessorClient.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs.Processor</AssemblyName>
        <AssemblyVersion>5.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
               Returns a hash code for this instance.
             </summary>
        <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Identifier">
      <MemberSignature Language="C#" Value="public string Identifier { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Identifier" />
      <MemberSignature Language="DocId" Value="P:Azure.Messaging.EventHubs.EventProcessorClient.Identifier" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Identifier As String" />
      <MemberSignature Language="F#" Value="member this.Identifier : string" Usage="Azure.Messaging.EventHubs.EventProcessorClient.Identifier" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs.Processor</AssemblyName>
        <AssemblyVersion>5.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
               A unique name used to identify this event processor.
             </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRunning">
      <MemberSignature Language="C#" Value="public bool IsRunning { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRunning" />
      <MemberSignature Language="DocId" Value="P:Azure.Messaging.EventHubs.EventProcessorClient.IsRunning" />
      <MemberSignature Language="VB.NET" Value="Public Property IsRunning As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsRunning : bool with get, set" Usage="Azure.Messaging.EventHubs.EventProcessorClient.IsRunning" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs.Processor</AssemblyName>
        <AssemblyVersion>5.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
               Indicates whether or not this event processor is currently running.
             </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PartitionClosingAsync">
      <MemberSignature Language="C#" Value="public event Func&lt;Azure.Messaging.EventHubs.Processor.PartitionClosingEventArgs,System.Threading.Tasks.Task&gt; PartitionClosingAsync;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Func`2&lt;class Azure.Messaging.EventHubs.Processor.PartitionClosingEventArgs, class System.Threading.Tasks.Task&gt; PartitionClosingAsync" />
      <MemberSignature Language="DocId" Value="E:Azure.Messaging.EventHubs.EventProcessorClient.PartitionClosingAsync" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PartitionClosingAsync As Func(Of PartitionClosingEventArgs, Task) " />
      <MemberSignature Language="F#" Value="member this.PartitionClosingAsync : Func&lt;Azure.Messaging.EventHubs.Processor.PartitionClosingEventArgs, System.Threading.Tasks.Task&gt; " Usage="member this.PartitionClosingAsync : System.Func&lt;Azure.Messaging.EventHubs.Processor.PartitionClosingEventArgs, System.Threading.Tasks.Task&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs.Processor</AssemblyName>
        <AssemblyVersion>5.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;Azure.Messaging.EventHubs.Processor.PartitionClosingEventArgs,System.Threading.Tasks.Task&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
               The event to be raised once event processing stops for a given partition.
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PartitionInitializingAsync">
      <MemberSignature Language="C#" Value="public event Func&lt;Azure.Messaging.EventHubs.Processor.PartitionInitializingEventArgs,System.Threading.Tasks.Task&gt; PartitionInitializingAsync;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Func`2&lt;class Azure.Messaging.EventHubs.Processor.PartitionInitializingEventArgs, class System.Threading.Tasks.Task&gt; PartitionInitializingAsync" />
      <MemberSignature Language="DocId" Value="E:Azure.Messaging.EventHubs.EventProcessorClient.PartitionInitializingAsync" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PartitionInitializingAsync As Func(Of PartitionInitializingEventArgs, Task) " />
      <MemberSignature Language="F#" Value="member this.PartitionInitializingAsync : Func&lt;Azure.Messaging.EventHubs.Processor.PartitionInitializingEventArgs, System.Threading.Tasks.Task&gt; " Usage="member this.PartitionInitializingAsync : System.Func&lt;Azure.Messaging.EventHubs.Processor.PartitionInitializingEventArgs, System.Threading.Tasks.Task&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs.Processor</AssemblyName>
        <AssemblyVersion>5.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;Azure.Messaging.EventHubs.Processor.PartitionInitializingEventArgs,System.Threading.Tasks.Task&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
               The event to be raised just before event processing starts for a given partition.
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessErrorAsync">
      <MemberSignature Language="C#" Value="public event Func&lt;Azure.Messaging.EventHubs.Processor.ProcessErrorEventArgs,System.Threading.Tasks.Task&gt; ProcessErrorAsync;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Func`2&lt;valuetype Azure.Messaging.EventHubs.Processor.ProcessErrorEventArgs, class System.Threading.Tasks.Task&gt; ProcessErrorAsync" />
      <MemberSignature Language="DocId" Value="E:Azure.Messaging.EventHubs.EventProcessorClient.ProcessErrorAsync" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ProcessErrorAsync As Func(Of ProcessErrorEventArgs, Task) " />
      <MemberSignature Language="F#" Value="member this.ProcessErrorAsync : Func&lt;Azure.Messaging.EventHubs.Processor.ProcessErrorEventArgs, System.Threading.Tasks.Task&gt; " Usage="member this.ProcessErrorAsync : System.Func&lt;Azure.Messaging.EventHubs.Processor.ProcessErrorEventArgs, System.Threading.Tasks.Task&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs.Processor</AssemblyName>
        <AssemblyVersion>5.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;Azure.Messaging.EventHubs.Processor.ProcessErrorEventArgs,System.Threading.Tasks.Task&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
               The event responsible for processing unhandled exceptions thrown while this processor is running.
               Implementation is mandatory.
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessEventAsync">
      <MemberSignature Language="C#" Value="public event Func&lt;Azure.Messaging.EventHubs.Processor.ProcessEventArgs,System.Threading.Tasks.Task&gt; ProcessEventAsync;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Func`2&lt;valuetype Azure.Messaging.EventHubs.Processor.ProcessEventArgs, class System.Threading.Tasks.Task&gt; ProcessEventAsync" />
      <MemberSignature Language="DocId" Value="E:Azure.Messaging.EventHubs.EventProcessorClient.ProcessEventAsync" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ProcessEventAsync As Func(Of ProcessEventArgs, Task) " />
      <MemberSignature Language="F#" Value="member this.ProcessEventAsync : Func&lt;Azure.Messaging.EventHubs.Processor.ProcessEventArgs, System.Threading.Tasks.Task&gt; " Usage="member this.ProcessEventAsync : System.Func&lt;Azure.Messaging.EventHubs.Processor.ProcessEventArgs, System.Threading.Tasks.Task&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs.Processor</AssemblyName>
        <AssemblyVersion>5.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;Azure.Messaging.EventHubs.Processor.ProcessEventArgs,System.Threading.Tasks.Task&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
               The event responsible for processing events received from the Event Hubs service.  Implementation
               is mandatory.
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartProcessing">
      <MemberSignature Language="C#" Value="public virtual void StartProcessing (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartProcessing(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.EventProcessorClient.StartProcessing(System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member StartProcessing : System.Threading.CancellationToken -&gt; unit&#xA;override this.StartProcessing : System.Threading.CancellationToken -&gt; unit" Usage="eventProcessorClient.StartProcessing cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs.Processor</AssemblyName>
        <AssemblyVersion>5.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> instance to signal the request to cancel the start operation.  This won't affect the <see cref="T:Azure.Messaging.EventHubs.EventProcessorClient" /> once it starts running.</param>
        <summary>
               Signals the <see cref="T:Azure.Messaging.EventHubs.EventProcessorClient" /> to begin processing events.  Should this method be called while the processor
               is running, no action is taken.
             </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.Messaging.EventHubs.EventHubsException">Occurs when this <see cref="T:Azure.Messaging.EventHubs.EventProcessorClient" /> instance is already closed.</exception>
        <exception cref="T:System.InvalidOperationException">Occurs when this method is invoked without <see cref="E:Azure.Messaging.EventHubs.EventProcessorClient.ProcessEventAsync" /> or <see cref="E:Azure.Messaging.EventHubs.EventProcessorClient.ProcessErrorAsync" /> set.</exception>
      </Docs>
    </Member>
    <Member MemberName="StartProcessingAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task StartProcessingAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task StartProcessingAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.EventProcessorClient.StartProcessingAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member StartProcessingAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.StartProcessingAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="eventProcessorClient.StartProcessingAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs.Processor</AssemblyName>
        <AssemblyVersion>5.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> instance to signal the request to cancel the start operation.  This won't affect the <see cref="T:Azure.Messaging.EventHubs.EventProcessorClient" /> once it starts running.</param>
        <summary>
               Signals the <see cref="T:Azure.Messaging.EventHubs.EventProcessorClient" /> to begin processing events.  Should this method be called while the processor
               is running, no action is taken.
             </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.Messaging.EventHubs.EventHubsException">Occurs when this <see cref="T:Azure.Messaging.EventHubs.EventProcessorClient" /> instance is already closed.</exception>
        <exception cref="T:System.InvalidOperationException">Occurs when this method is invoked without <see cref="E:Azure.Messaging.EventHubs.EventProcessorClient.ProcessEventAsync" /> or <see cref="E:Azure.Messaging.EventHubs.EventProcessorClient.ProcessErrorAsync" /> set.</exception>
      </Docs>
    </Member>
    <Member MemberName="StopProcessing">
      <MemberSignature Language="C#" Value="public virtual void StopProcessing (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StopProcessing(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.EventProcessorClient.StopProcessing(System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member StopProcessing : System.Threading.CancellationToken -&gt; unit&#xA;override this.StopProcessing : System.Threading.CancellationToken -&gt; unit" Usage="eventProcessorClient.StopProcessing cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs.Processor</AssemblyName>
        <AssemblyVersion>5.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> instance to signal the request to cancel the stop operation.  If the operation is successfully canceled, the <see cref="T:Azure.Messaging.EventHubs.EventProcessorClient" /> will keep running.</param>
        <summary>
               Signals the <see cref="T:Azure.Messaging.EventHubs.EventProcessorClient" /> to stop processing events.  Should this method be called while the processor
               is not running, no action is taken.
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StopProcessingAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task StopProcessingAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task StopProcessingAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.EventProcessorClient.StopProcessingAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member StopProcessingAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.StopProcessingAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="eventProcessorClient.StopProcessingAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs.Processor</AssemblyName>
        <AssemblyVersion>5.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> instance to signal the request to cancel the stop operation.  If the operation is successfully canceled, the <see cref="T:Azure.Messaging.EventHubs.EventProcessorClient" /> will keep running.</param>
        <summary>
               Signals the <see cref="T:Azure.Messaging.EventHubs.EventProcessorClient" /> to stop processing events.  Should this method be called while the processor
               is not running, no action is taken.
             </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.EventProcessorClient.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="eventProcessorClient.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs.Processor</AssemblyName>
        <AssemblyVersion>5.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
               Converts the instance to string representation.
             </summary>
        <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="EventHubProducer" FullName="Azure.Messaging.EventHubs.EventHubProducer">
  <TypeSignature Language="C#" Value="public class EventHubProducer : IAsyncDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EventHubProducer extends System.Object implements class System.IAsyncDisposable" />
  <TypeSignature Language="DocId" Value="T:Azure.Messaging.EventHubs.EventHubProducer" />
  <TypeSignature Language="VB.NET" Value="Public Class EventHubProducer&#xA;Implements IAsyncDisposable" />
  <TypeSignature Language="F#" Value="type EventHubProducer = class&#xA;    interface IAsyncDisposable" />
  <AssemblyInfo>
    <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IAsyncDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
               A producer responsible for transmitting <see cref="T:Azure.Messaging.EventHubs.EventData" /> to a specific Event Hub,
               grouped together in batches.  Depending on the options specified at creation, the producer may
               be created to allow event data to be automatically routed to an available partition or specific
               to a partition.
             </summary>
    <remarks>
               Allowing automatic routing of partitions is recommended when:
               <para>- The sending of events needs to be highly available.</para><para>- The event data should be evenly distributed among all available partitions.</para>
            
               If no partition is specified, the following rules are used for automatically selecting one:
               <para>1) Distribute the events equally amongst all available partitions using a round-robin approach.</para><para>2) If a partition becomes unavailable, the Event Hubs service will automatically detect it and forward the message to another available partition.</para></remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EventHubProducer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.EventHubProducer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
               Initializes a new instance of the <see cref="T:Azure.Messaging.EventHubs.EventHubProducer" /> class.
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public virtual void Close (System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.EventHubProducer.Close(System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member Close : System.Threading.CancellationToken -&gt; unit&#xA;override this.Close : System.Threading.CancellationToken -&gt; unit" Usage="eventHubProducer.Close cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken" /> instance to signal the request to cancel the operation.</param>
        <summary>
               Closes the producer.
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task CloseAsync (System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task CloseAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.EventHubProducer.CloseAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member CloseAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.CloseAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="eventHubProducer.CloseAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken" /> instance to signal the request to cancel the operation.</param>
        <summary>
               Closes the producer.
             </summary>
        <returns>A task to be resolved on when the operation has completed.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBatchAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Messaging.EventHubs.EventDataBatch&gt; CreateBatchAsync (System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Messaging.EventHubs.EventDataBatch&gt; CreateBatchAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.EventHubProducer.CreateBatchAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member CreateBatchAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Messaging.EventHubs.EventDataBatch&gt;&#xA;override this.CreateBatchAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Messaging.EventHubs.EventDataBatch&gt;" Usage="eventHubProducer.CreateBatchAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Messaging.EventHubs.EventDataBatch&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken" /> instance to signal the request to cancel the operation.</param>
        <summary>
               Creates a size-constraint batch to which <see cref="T:Azure.Messaging.EventHubs.EventData" /> may be added using a try-based pattern.  If an event would
               exceed the maximum allowable size of the batch, the batch will not allow adding the event and signal that scenario using its
               return value.
            
               Because events that would violate the size constraint cannot be added, publishing a batch will not trigger an exception when
               attempting to send the events to the Event Hubs service.
             </summary>
        <returns>An <see cref="T:Azure.Messaging.EventHubs.EventDataBatch" /> with the default batch options.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:Azure.Messaging.EventHubs.EventHubProducer.CreateBatchAsync(Azure.Messaging.EventHubs.BatchOptions,System.Threading.CancellationToken)" />
      </Docs>
    </Member>
    <Member MemberName="CreateBatchAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Messaging.EventHubs.EventDataBatch&gt; CreateBatchAsync (Azure.Messaging.EventHubs.BatchOptions options, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Messaging.EventHubs.EventDataBatch&gt; CreateBatchAsync(class Azure.Messaging.EventHubs.BatchOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.EventHubProducer.CreateBatchAsync(Azure.Messaging.EventHubs.BatchOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member CreateBatchAsync : Azure.Messaging.EventHubs.BatchOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Messaging.EventHubs.EventDataBatch&gt;&#xA;override this.CreateBatchAsync : Azure.Messaging.EventHubs.BatchOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Messaging.EventHubs.EventDataBatch&gt;" Usage="eventHubProducer.CreateBatchAsync (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Messaging.EventHubs.EventDataBatch&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.Messaging.EventHubs.BatchOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options">The set of options to consider when creating this batch.</param>
        <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken" /> instance to signal the request to cancel the operation.</param>
        <summary>
               Creates a size-constraint batch to which <see cref="T:Azure.Messaging.EventHubs.EventData" /> may be added using a try-based pattern.  If an event would
               exceed the maximum allowable size of the batch, the batch will not allow adding the event and signal that scenario using its
               return value.
            
               Because events that would violate the size constraint cannot be added, publishing a batch will not trigger an exception when
               attempting to send the events to the Event Hubs service.
             </summary>
        <returns>An <see cref="T:Azure.Messaging.EventHubs.EventDataBatch" /> with the requested <paramref name="options" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:Azure.Messaging.EventHubs.EventHubProducer.CreateBatchAsync(Azure.Messaging.EventHubs.BatchOptions,System.Threading.CancellationToken)" />
      </Docs>
    </Member>
    <Member MemberName="DisposeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.ValueTask DisposeAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask DisposeAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.EventHubProducer.DisposeAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DisposeAsync () As ValueTask" />
      <MemberSignature Language="F#" Value="abstract member DisposeAsync : unit -&gt; System.Threading.Tasks.ValueTask&#xA;override this.DisposeAsync : unit -&gt; System.Threading.Tasks.ValueTask" Usage="eventHubProducer.DisposeAsync " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IAsyncDisposable.DisposeAsync</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
               Performs the task needed to clean up resources used by the <see cref="T:Azure.Messaging.EventHubs.EventHubClient" />,
               including ensuring that the client itself has been closed.
             </summary>
        <returns>A task to be resolved on when the operation has completed.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.EventHubProducer.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="eventHubProducer.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
        <summary>
               Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
             </summary>
        <returns>
          <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EventHubName">
      <MemberSignature Language="C#" Value="public string EventHubName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EventHubName" />
      <MemberSignature Language="DocId" Value="P:Azure.Messaging.EventHubs.EventHubProducer.EventHubName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EventHubName As String" />
      <MemberSignature Language="F#" Value="member this.EventHubName : string" Usage="Azure.Messaging.EventHubs.EventHubProducer.EventHubName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
               The name of the Event Hub that the producer is connected to, specific to the
               Event Hubs namespace that contains it.
             </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.EventHubProducer.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="eventHubProducer.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
               Returns a hash code for this instance.
             </summary>
        <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PartitionId">
      <MemberSignature Language="C#" Value="public string PartitionId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PartitionId" />
      <MemberSignature Language="DocId" Value="P:Azure.Messaging.EventHubs.EventHubProducer.PartitionId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PartitionId As String" />
      <MemberSignature Language="F#" Value="member this.PartitionId : string" Usage="Azure.Messaging.EventHubs.EventHubProducer.PartitionId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
               The identifier of the Event Hub partition that the <see cref="T:Azure.Messaging.EventHubs.EventHubProducer" /> is bound to, indicating
               that it will send events to only that partition.
            
               If the identifier was not specified at creation, the producer will allow the Event Hubs service to be
               responsible for routing events that are sent to an available partition.
             </summary>
        <value>If <c>null</c>, the producer is not specific to a partition and events will be automatically routed; otherwise, the identifier of the partition events will be sent to.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RetryPolicy">
      <MemberSignature Language="C#" Value="public Azure.Messaging.EventHubs.EventHubRetryPolicy RetryPolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Messaging.EventHubs.EventHubRetryPolicy RetryPolicy" />
      <MemberSignature Language="DocId" Value="P:Azure.Messaging.EventHubs.EventHubProducer.RetryPolicy" />
      <MemberSignature Language="VB.NET" Value="Public Property RetryPolicy As EventHubRetryPolicy" />
      <MemberSignature Language="F#" Value="member this.RetryPolicy : Azure.Messaging.EventHubs.EventHubRetryPolicy with get, set" Usage="Azure.Messaging.EventHubs.EventHubProducer.RetryPolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Messaging.EventHubs.EventHubRetryPolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
               The policy to use for determining retry behavior for when an operation fails.
             </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task SendAsync (Azure.Messaging.EventHubs.EventData eventData, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SendAsync(class Azure.Messaging.EventHubs.EventData eventData, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.EventHubProducer.SendAsync(Azure.Messaging.EventHubs.EventData,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member SendAsync : Azure.Messaging.EventHubs.EventData * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.SendAsync : Azure.Messaging.EventHubs.EventData * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="eventHubProducer.SendAsync (eventData, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventData" Type="Azure.Messaging.EventHubs.EventData" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="eventData">The event data to send.</param>
        <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken" /> instance to signal the request to cancel the operation.</param>
        <summary>
               Sends an event to the associated Event Hub using a batched approach.  If the size of the event exceeds the
               maximum size of a single batch, an exception will be triggered and the send will fail.
             </summary>
        <returns>A task to be resolved on when the operation has completed.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:Azure.Messaging.EventHubs.EventHubProducer.SendAsync(Azure.Messaging.EventHubs.EventData,Azure.Messaging.EventHubs.SendOptions,System.Threading.CancellationToken)" />
        <altmember cref="M:Azure.Messaging.EventHubs.EventHubProducer.SendAsync(System.Collections.Generic.IEnumerable{Azure.Messaging.EventHubs.EventData},System.Threading.CancellationToken)" />
        <altmember cref="M:Azure.Messaging.EventHubs.EventHubProducer.SendAsync(System.Collections.Generic.IEnumerable{Azure.Messaging.EventHubs.EventData},Azure.Messaging.EventHubs.SendOptions,System.Threading.CancellationToken)" />
        <altmember cref="M:Azure.Messaging.EventHubs.EventHubProducer.SendAsync(Azure.Messaging.EventHubs.EventDataBatch,System.Threading.CancellationToken)" />
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task SendAsync (Azure.Messaging.EventHubs.EventDataBatch eventBatch, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SendAsync(class Azure.Messaging.EventHubs.EventDataBatch eventBatch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.EventHubProducer.SendAsync(Azure.Messaging.EventHubs.EventDataBatch,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member SendAsync : Azure.Messaging.EventHubs.EventDataBatch * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.SendAsync : Azure.Messaging.EventHubs.EventDataBatch * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="eventHubProducer.SendAsync (eventBatch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventBatch" Type="Azure.Messaging.EventHubs.EventDataBatch" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="eventBatch">The set of event data to send.</param>
        <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken" /> instance to signal the request to cancel the operation.</param>
        <summary>
               Sends a set of events to the associated Event Hub using a batched approach.
             </summary>
        <returns>A task to be resolved on when the operation has completed.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:Azure.Messaging.EventHubs.EventHubProducer.SendAsync(Azure.Messaging.EventHubs.EventData,System.Threading.CancellationToken)" />
        <altmember cref="M:Azure.Messaging.EventHubs.EventHubProducer.SendAsync(Azure.Messaging.EventHubs.EventData,Azure.Messaging.EventHubs.SendOptions,System.Threading.CancellationToken)" />
        <altmember cref="M:Azure.Messaging.EventHubs.EventHubProducer.SendAsync(System.Collections.Generic.IEnumerable{Azure.Messaging.EventHubs.EventData},System.Threading.CancellationToken)" />
        <altmember cref="M:Azure.Messaging.EventHubs.EventHubProducer.SendAsync(System.Collections.Generic.IEnumerable{Azure.Messaging.EventHubs.EventData},Azure.Messaging.EventHubs.SendOptions,System.Threading.CancellationToken)" />
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task SendAsync (System.Collections.Generic.IEnumerable&lt;Azure.Messaging.EventHubs.EventData&gt; events, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SendAsync(class System.Collections.Generic.IEnumerable`1&lt;class Azure.Messaging.EventHubs.EventData&gt; events, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.EventHubProducer.SendAsync(System.Collections.Generic.IEnumerable{Azure.Messaging.EventHubs.EventData},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member SendAsync : seq&lt;Azure.Messaging.EventHubs.EventData&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.SendAsync : seq&lt;Azure.Messaging.EventHubs.EventData&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="eventHubProducer.SendAsync (events, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="events" Type="System.Collections.Generic.IEnumerable&lt;Azure.Messaging.EventHubs.EventData&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="events">The set of event data to send.</param>
        <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken" /> instance to signal the request to cancel the operation.</param>
        <summary>
               Sends a set of events to the associated Event Hub using a batched approach.  If the size of events exceed the
               maximum size of a single batch, an exception will be triggered and the send will fail.
             </summary>
        <returns>A task to be resolved on when the operation has completed.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:Azure.Messaging.EventHubs.EventHubProducer.SendAsync(System.Collections.Generic.IEnumerable{Azure.Messaging.EventHubs.EventData},Azure.Messaging.EventHubs.SendOptions,System.Threading.CancellationToken)" />
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task SendAsync (Azure.Messaging.EventHubs.EventData eventData, Azure.Messaging.EventHubs.SendOptions options, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SendAsync(class Azure.Messaging.EventHubs.EventData eventData, class Azure.Messaging.EventHubs.SendOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.EventHubProducer.SendAsync(Azure.Messaging.EventHubs.EventData,Azure.Messaging.EventHubs.SendOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member SendAsync : Azure.Messaging.EventHubs.EventData * Azure.Messaging.EventHubs.SendOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.SendAsync : Azure.Messaging.EventHubs.EventData * Azure.Messaging.EventHubs.SendOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="eventHubProducer.SendAsync (eventData, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventData" Type="Azure.Messaging.EventHubs.EventData" />
        <Parameter Name="options" Type="Azure.Messaging.EventHubs.SendOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="eventData">The event data to send.</param>
        <param name="options">The set of options to consider when sending this batch.</param>
        <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken" /> instance to signal the request to cancel the operation.</param>
        <summary>
               Sends an event to the associated Event Hub using a batched approach.  If the size of the event exceeds the
               maximum size of a single batch, an exception will be triggered and the send will fail.
             </summary>
        <returns>A task to be resolved on when the operation has completed.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:Azure.Messaging.EventHubs.EventHubProducer.SendAsync(Azure.Messaging.EventHubs.EventData,System.Threading.CancellationToken)" />
        <altmember cref="M:Azure.Messaging.EventHubs.EventHubProducer.SendAsync(System.Collections.Generic.IEnumerable{Azure.Messaging.EventHubs.EventData},System.Threading.CancellationToken)" />
        <altmember cref="M:Azure.Messaging.EventHubs.EventHubProducer.SendAsync(System.Collections.Generic.IEnumerable{Azure.Messaging.EventHubs.EventData},Azure.Messaging.EventHubs.SendOptions,System.Threading.CancellationToken)" />
        <altmember cref="M:Azure.Messaging.EventHubs.EventHubProducer.SendAsync(Azure.Messaging.EventHubs.EventDataBatch,System.Threading.CancellationToken)" />
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task SendAsync (System.Collections.Generic.IEnumerable&lt;Azure.Messaging.EventHubs.EventData&gt; events, Azure.Messaging.EventHubs.SendOptions options, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SendAsync(class System.Collections.Generic.IEnumerable`1&lt;class Azure.Messaging.EventHubs.EventData&gt; events, class Azure.Messaging.EventHubs.SendOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.EventHubProducer.SendAsync(System.Collections.Generic.IEnumerable{Azure.Messaging.EventHubs.EventData},Azure.Messaging.EventHubs.SendOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member SendAsync : seq&lt;Azure.Messaging.EventHubs.EventData&gt; * Azure.Messaging.EventHubs.SendOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.SendAsync : seq&lt;Azure.Messaging.EventHubs.EventData&gt; * Azure.Messaging.EventHubs.SendOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="eventHubProducer.SendAsync (events, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="events" Type="System.Collections.Generic.IEnumerable&lt;Azure.Messaging.EventHubs.EventData&gt;" />
        <Parameter Name="options" Type="Azure.Messaging.EventHubs.SendOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="events">The set of event data to send.</param>
        <param name="options">The set of options to consider when sending this batch.</param>
        <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken" /> instance to signal the request to cancel the operation.</param>
        <summary>
               Sends a set of events to the associated Event Hub using a batched approach.  If the size of events exceed the
               maximum size of a single batch, an exception will be triggered and the send will fail.
             </summary>
        <returns>A task to be resolved on when the operation has completed.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:Azure.Messaging.EventHubs.EventHubProducer.SendAsync(Azure.Messaging.EventHubs.EventData,System.Threading.CancellationToken)" />
        <altmember cref="M:Azure.Messaging.EventHubs.EventHubProducer.SendAsync(Azure.Messaging.EventHubs.EventData,Azure.Messaging.EventHubs.SendOptions,System.Threading.CancellationToken)" />
        <altmember cref="M:Azure.Messaging.EventHubs.EventHubProducer.SendAsync(System.Collections.Generic.IEnumerable{Azure.Messaging.EventHubs.EventData},System.Threading.CancellationToken)" />
        <altmember cref="M:Azure.Messaging.EventHubs.EventHubProducer.SendAsync(Azure.Messaging.EventHubs.EventDataBatch,System.Threading.CancellationToken)" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Messaging.EventHubs.EventHubProducer.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="eventHubProducer.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Messaging.EventHubs</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
               Converts the instance to string representation.
             </summary>
        <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

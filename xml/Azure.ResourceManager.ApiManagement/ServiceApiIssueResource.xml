<Type Name="ServiceApiIssueResource" FullName="Azure.ResourceManager.ApiManagement.ServiceApiIssueResource">
  <TypeSignature Language="C#" Value="public class ServiceApiIssueResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServiceApiIssueResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.ApiManagement.ServiceApiIssueResource" />
  <TypeSignature Language="VB.NET" Value="Public Class ServiceApiIssueResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type ServiceApiIssueResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            A Class representing a ServiceApiIssue along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct a <see cref="T:Azure.ResourceManager.ApiManagement.ServiceApiIssueResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetServiceApiIssueResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.ApiManagement.ApiContractResource" /> using the GetServiceApiIssue method.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ServiceApiIssueResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ServiceApiIssueResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.ApiManagement.ServiceApiIssueResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateResourceIdentifier">
      <MemberSignature Language="C#" Value="public static Azure.Core.ResourceIdentifier CreateResourceIdentifier (string subscriptionId, string resourceGroupName, string serviceName, string apiId, string issueId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Core.ResourceIdentifier CreateResourceIdentifier(string subscriptionId, string resourceGroupName, string serviceName, string apiId, string issueId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ServiceApiIssueResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateResourceIdentifier (subscriptionId As String, resourceGroupName As String, serviceName As String, apiId As String, issueId As String) As ResourceIdentifier" />
      <MemberSignature Language="F#" Value="static member CreateResourceIdentifier : string * string * string * string * string -&gt; Azure.Core.ResourceIdentifier" Usage="Azure.ResourceManager.ApiManagement.ServiceApiIssueResource.CreateResourceIdentifier (subscriptionId, resourceGroupName, serviceName, apiId, issueId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.ResourceIdentifier</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionId" Type="System.String" />
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="serviceName" Type="System.String" />
        <Parameter Name="apiId" Type="System.String" />
        <Parameter Name="issueId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subscriptionId">To be added.</param>
        <param name="resourceGroupName">To be added.</param>
        <param name="serviceName">To be added.</param>
        <param name="apiId">To be added.</param>
        <param name="issueId">To be added.</param>
        <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.ApiManagement.ServiceApiIssueResource" /> instance. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApiManagement.IssueContractData Data { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.ApiManagement.IssueContractData Data" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.ApiManagement.ServiceApiIssueResource.Data" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Data As IssueContractData" />
      <MemberSignature Language="F#" Value="member this.Data : Azure.ResourceManager.ApiManagement.IssueContractData" Usage="Azure.ResourceManager.ApiManagement.ServiceApiIssueResource.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.IssueContractData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets the data representing this Feature. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation Delete (Azure.WaitUntil waitUntil, string ifMatch, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation Delete(valuetype Azure.WaitUntil waitUntil, string ifMatch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ServiceApiIssueResource.Delete(Azure.WaitUntil,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Delete (waitUntil As WaitUntil, ifMatch As String, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation" />
      <MemberSignature Language="F#" Value="abstract member Delete : Azure.WaitUntil * string * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&#xA;override this.Delete : Azure.WaitUntil * string * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation" Usage="serviceApiIssueResource.Delete (waitUntil, ifMatch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="ifMatch" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="ifMatch"> ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Deletes the specified Issue from an API.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/issues/{issueId}
            Operation Id: ApiIssue_Delete
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="ifMatch" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt; DeleteAsync (Azure.WaitUntil waitUntil, string ifMatch, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation&gt; DeleteAsync(valuetype Azure.WaitUntil waitUntil, string ifMatch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ServiceApiIssueResource.DeleteAsync(Azure.WaitUntil,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteAsync (waitUntil As WaitUntil, ifMatch As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation)" />
      <MemberSignature Language="F#" Value="abstract member DeleteAsync : Azure.WaitUntil * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;&#xA;override this.DeleteAsync : Azure.WaitUntil * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;" Usage="serviceApiIssueResource.DeleteAsync (waitUntil, ifMatch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="ifMatch" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="ifMatch"> ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Deletes the specified Issue from an API.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/issues/{issueId}
            Operation Id: ApiIssue_Delete
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="ifMatch" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ApiManagement.ServiceApiIssueResource&gt; Get (bool? expandCommentsAttachments = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.ServiceApiIssueResource&gt; Get(valuetype System.Nullable`1&lt;bool&gt; expandCommentsAttachments, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ServiceApiIssueResource.Get(System.Nullable{System.Boolean},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Get (Optional expandCommentsAttachments As Nullable(Of Boolean) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ServiceApiIssueResource)" />
      <MemberSignature Language="F#" Value="abstract member Get : Nullable&lt;bool&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.ServiceApiIssueResource&gt;&#xA;override this.Get : Nullable&lt;bool&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.ServiceApiIssueResource&gt;" Usage="serviceApiIssueResource.Get (expandCommentsAttachments, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ApiManagement.ServiceApiIssueResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expandCommentsAttachments" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="expandCommentsAttachments"> Expand the comment attachments. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the details of the Issue for an API specified by its identifier.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/issues/{issueId}
            Operation Id: ApiIssue_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ServiceApiIssueResource&gt;&gt; GetAsync (bool? expandCommentsAttachments = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.ServiceApiIssueResource&gt;&gt; GetAsync(valuetype System.Nullable`1&lt;bool&gt; expandCommentsAttachments, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ServiceApiIssueResource.GetAsync(System.Nullable{System.Boolean},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAsync (Optional expandCommentsAttachments As Nullable(Of Boolean) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ServiceApiIssueResource))" />
      <MemberSignature Language="F#" Value="abstract member GetAsync : Nullable&lt;bool&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ServiceApiIssueResource&gt;&gt;&#xA;override this.GetAsync : Nullable&lt;bool&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ServiceApiIssueResource&gt;&gt;" Usage="serviceApiIssueResource.GetAsync (expandCommentsAttachments, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ServiceApiIssueResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expandCommentsAttachments" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="expandCommentsAttachments"> Expand the comment attachments. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the details of the Issue for an API specified by its identifier.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/issues/{issueId}
            Operation Id: ApiIssue_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEntityTag">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;bool&gt; GetEntityTag (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;bool&gt; GetEntityTag(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ServiceApiIssueResource.GetEntityTag(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEntityTag (Optional cancellationToken As CancellationToken = Nothing) As Response(Of Boolean)" />
      <MemberSignature Language="F#" Value="abstract member GetEntityTag : System.Threading.CancellationToken -&gt; Azure.Response&lt;bool&gt;&#xA;override this.GetEntityTag : System.Threading.CancellationToken -&gt; Azure.Response&lt;bool&gt;" Usage="serviceApiIssueResource.GetEntityTag cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the entity state (Etag) version of the Issue for an API specified by its identifier.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/issues/{issueId}
            Operation Id: ApiIssue_GetEntityTag
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEntityTagAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt; GetEntityTagAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;bool&gt;&gt; GetEntityTagAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ServiceApiIssueResource.GetEntityTagAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEntityTagAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of Boolean))" />
      <MemberSignature Language="F#" Value="abstract member GetEntityTagAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt;&#xA;override this.GetEntityTagAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt;" Usage="serviceApiIssueResource.GetEntityTagAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Boolean&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the entity state (Etag) version of the Issue for an API specified by its identifier.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/issues/{issueId}
            Operation Id: ApiIssue_GetEntityTag
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIssueAttachmentContract">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ApiManagement.IssueAttachmentContractResource&gt; GetIssueAttachmentContract (string attachmentId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.IssueAttachmentContractResource&gt; GetIssueAttachmentContract(string attachmentId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ServiceApiIssueResource.GetIssueAttachmentContract(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIssueAttachmentContract (attachmentId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of IssueAttachmentContractResource)" />
      <MemberSignature Language="F#" Value="abstract member GetIssueAttachmentContract : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.IssueAttachmentContractResource&gt;&#xA;override this.GetIssueAttachmentContract : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.IssueAttachmentContractResource&gt;" Usage="serviceApiIssueResource.GetIssueAttachmentContract (attachmentId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ApiManagement.IssueAttachmentContractResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attachmentId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="attachmentId"> Attachment identifier within an Issue. Must be unique in the current Issue. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the details of the issue Attachment for an API specified by its identifier.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/issues/{issueId}/attachments/{attachmentId}
            Operation Id: ApiIssueAttachment_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="attachmentId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="attachmentId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetIssueAttachmentContractAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.IssueAttachmentContractResource&gt;&gt; GetIssueAttachmentContractAsync (string attachmentId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.IssueAttachmentContractResource&gt;&gt; GetIssueAttachmentContractAsync(string attachmentId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ServiceApiIssueResource.GetIssueAttachmentContractAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIssueAttachmentContractAsync (attachmentId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of IssueAttachmentContractResource))" />
      <MemberSignature Language="F#" Value="abstract member GetIssueAttachmentContractAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.IssueAttachmentContractResource&gt;&gt;&#xA;override this.GetIssueAttachmentContractAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.IssueAttachmentContractResource&gt;&gt;" Usage="serviceApiIssueResource.GetIssueAttachmentContractAsync (attachmentId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.IssueAttachmentContractResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attachmentId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="attachmentId"> Attachment identifier within an Issue. Must be unique in the current Issue. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the details of the issue Attachment for an API specified by its identifier.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/issues/{issueId}/attachments/{attachmentId}
            Operation Id: ApiIssueAttachment_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="attachmentId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="attachmentId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetIssueAttachmentContracts">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApiManagement.IssueAttachmentContractCollection GetIssueAttachmentContracts ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApiManagement.IssueAttachmentContractCollection GetIssueAttachmentContracts() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ServiceApiIssueResource.GetIssueAttachmentContracts" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIssueAttachmentContracts () As IssueAttachmentContractCollection" />
      <MemberSignature Language="F#" Value="abstract member GetIssueAttachmentContracts : unit -&gt; Azure.ResourceManager.ApiManagement.IssueAttachmentContractCollection&#xA;override this.GetIssueAttachmentContracts : unit -&gt; Azure.ResourceManager.ApiManagement.IssueAttachmentContractCollection" Usage="serviceApiIssueResource.GetIssueAttachmentContracts " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.IssueAttachmentContractCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of IssueAttachmentContractResources in the ServiceApiIssue. </summary>
        <returns> An object representing collection of IssueAttachmentContractResources and their operations over a IssueAttachmentContractResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIssueCommentContract">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ApiManagement.IssueCommentContractResource&gt; GetIssueCommentContract (string commentId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.IssueCommentContractResource&gt; GetIssueCommentContract(string commentId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ServiceApiIssueResource.GetIssueCommentContract(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIssueCommentContract (commentId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of IssueCommentContractResource)" />
      <MemberSignature Language="F#" Value="abstract member GetIssueCommentContract : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.IssueCommentContractResource&gt;&#xA;override this.GetIssueCommentContract : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.IssueCommentContractResource&gt;" Usage="serviceApiIssueResource.GetIssueCommentContract (commentId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ApiManagement.IssueCommentContractResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commentId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="commentId"> Comment identifier within an Issue. Must be unique in the current Issue. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the details of the issue Comment for an API specified by its identifier.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/issues/{issueId}/comments/{commentId}
            Operation Id: ApiIssueComment_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="commentId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="commentId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetIssueCommentContractAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.IssueCommentContractResource&gt;&gt; GetIssueCommentContractAsync (string commentId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.IssueCommentContractResource&gt;&gt; GetIssueCommentContractAsync(string commentId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ServiceApiIssueResource.GetIssueCommentContractAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIssueCommentContractAsync (commentId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of IssueCommentContractResource))" />
      <MemberSignature Language="F#" Value="abstract member GetIssueCommentContractAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.IssueCommentContractResource&gt;&gt;&#xA;override this.GetIssueCommentContractAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.IssueCommentContractResource&gt;&gt;" Usage="serviceApiIssueResource.GetIssueCommentContractAsync (commentId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.IssueCommentContractResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commentId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="commentId"> Comment identifier within an Issue. Must be unique in the current Issue. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the details of the issue Comment for an API specified by its identifier.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/issues/{issueId}/comments/{commentId}
            Operation Id: ApiIssueComment_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="commentId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="commentId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetIssueCommentContracts">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ApiManagement.IssueCommentContractCollection GetIssueCommentContracts ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ApiManagement.IssueCommentContractCollection GetIssueCommentContracts() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ServiceApiIssueResource.GetIssueCommentContracts" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIssueCommentContracts () As IssueCommentContractCollection" />
      <MemberSignature Language="F#" Value="abstract member GetIssueCommentContracts : unit -&gt; Azure.ResourceManager.ApiManagement.IssueCommentContractCollection&#xA;override this.GetIssueCommentContracts : unit -&gt; Azure.ResourceManager.ApiManagement.IssueCommentContractCollection" Usage="serviceApiIssueResource.GetIssueCommentContracts " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiManagement.IssueCommentContractCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of IssueCommentContractResources in the ServiceApiIssue. </summary>
        <returns> An object representing collection of IssueCommentContractResources and their operations over a IssueCommentContractResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasData">
      <MemberSignature Language="C#" Value="public virtual bool HasData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasData" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.ApiManagement.ServiceApiIssueResource.HasData" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HasData As Boolean" />
      <MemberSignature Language="F#" Value="member this.HasData : bool" Usage="Azure.ResourceManager.ApiManagement.ServiceApiIssueResource.HasData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets whether or not the current instance has data. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResourceType">
      <MemberSignature Language="C#" Value="public static readonly Azure.Core.ResourceType ResourceType;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype Azure.Core.ResourceType ResourceType" />
      <MemberSignature Language="DocId" Value="F:Azure.ResourceManager.ApiManagement.ServiceApiIssueResource.ResourceType" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ResourceType As ResourceType " />
      <MemberSignature Language="F#" Value=" staticval mutable ResourceType : Azure.Core.ResourceType" Usage="Azure.ResourceManager.ApiManagement.ServiceApiIssueResource.ResourceType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.ResourceType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets the resource type for the operations. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ApiManagement.ServiceApiIssueResource&gt; Update (string ifMatch, Azure.ResourceManager.ApiManagement.Models.ServiceApiIssuePatch patch, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.ServiceApiIssueResource&gt; Update(string ifMatch, class Azure.ResourceManager.ApiManagement.Models.ServiceApiIssuePatch patch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ServiceApiIssueResource.Update(System.String,Azure.ResourceManager.ApiManagement.Models.ServiceApiIssuePatch,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Update (ifMatch As String, patch As ServiceApiIssuePatch, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ServiceApiIssueResource)" />
      <MemberSignature Language="F#" Value="abstract member Update : string * Azure.ResourceManager.ApiManagement.Models.ServiceApiIssuePatch * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.ServiceApiIssueResource&gt;&#xA;override this.Update : string * Azure.ResourceManager.ApiManagement.Models.ServiceApiIssuePatch * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiManagement.ServiceApiIssueResource&gt;" Usage="serviceApiIssueResource.Update (ifMatch, patch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ApiManagement.ServiceApiIssueResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ifMatch" Type="System.String" />
        <Parameter Name="patch" Type="Azure.ResourceManager.ApiManagement.Models.ServiceApiIssuePatch" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="ifMatch"> ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update. </param>
        <param name="patch"> Update parameters. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Updates an existing issue for an API.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/issues/{issueId}
            Operation Id: ApiIssue_Update
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="ifMatch" /> or <paramref name="patch" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ServiceApiIssueResource&gt;&gt; UpdateAsync (string ifMatch, Azure.ResourceManager.ApiManagement.Models.ServiceApiIssuePatch patch, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ApiManagement.ServiceApiIssueResource&gt;&gt; UpdateAsync(string ifMatch, class Azure.ResourceManager.ApiManagement.Models.ServiceApiIssuePatch patch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiManagement.ServiceApiIssueResource.UpdateAsync(System.String,Azure.ResourceManager.ApiManagement.Models.ServiceApiIssuePatch,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateAsync (ifMatch As String, patch As ServiceApiIssuePatch, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ServiceApiIssueResource))" />
      <MemberSignature Language="F#" Value="abstract member UpdateAsync : string * Azure.ResourceManager.ApiManagement.Models.ServiceApiIssuePatch * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ServiceApiIssueResource&gt;&gt;&#xA;override this.UpdateAsync : string * Azure.ResourceManager.ApiManagement.Models.ServiceApiIssuePatch * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ServiceApiIssueResource&gt;&gt;" Usage="serviceApiIssueResource.UpdateAsync (ifMatch, patch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiManagement</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiManagement.ServiceApiIssueResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ifMatch" Type="System.String" />
        <Parameter Name="patch" Type="Azure.ResourceManager.ApiManagement.Models.ServiceApiIssuePatch" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="ifMatch"> ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update. </param>
        <param name="patch"> Update parameters. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Updates an existing issue for an API.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/issues/{issueId}
            Operation Id: ApiIssue_Update
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="ifMatch" /> or <paramref name="patch" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="SearchPointOfInterestOptions" FullName="Azure.Maps.Search.SearchPointOfInterestOptions">
  <TypeSignature Language="C#" Value="public class SearchPointOfInterestOptions : Azure.Maps.Search.SearchAddressBaseOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SearchPointOfInterestOptions extends Azure.Maps.Search.SearchAddressBaseOptions" />
  <TypeSignature Language="DocId" Value="T:Azure.Maps.Search.SearchPointOfInterestOptions" />
  <TypeSignature Language="VB.NET" Value="Public Class SearchPointOfInterestOptions&#xA;Inherits SearchAddressBaseOptions" />
  <TypeSignature Language="F#" Value="type SearchPointOfInterestOptions = class&#xA;    inherit SearchAddressBaseOptions" />
  <AssemblyInfo>
    <AssemblyName>Azure.Maps.Search</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.Maps.Search.SearchAddressBaseOptions</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> Options. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SearchPointOfInterestOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Maps.Search.SearchPointOfInterestOptions.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Maps.Search</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BrandFilter">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;string&gt; BrandFilter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;string&gt; BrandFilter" />
      <MemberSignature Language="DocId" Value="P:Azure.Maps.Search.SearchPointOfInterestOptions.BrandFilter" />
      <MemberSignature Language="VB.NET" Value="Public Property BrandFilter As IEnumerable(Of String)" />
      <MemberSignature Language="F#" Value="member this.BrandFilter : seq&lt;string&gt; with get, set" Usage="Azure.Maps.Search.SearchPointOfInterestOptions.BrandFilter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Maps.Search</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            A list of brand names which could be used to restrict the result to specific brands. Item order does not matter. When multiple brands are provided, only results that belong to (at least) one of the provided list will be returned. Brands that contain a "," in their name should be put into quotes.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CategoryFilter">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;int&gt; CategoryFilter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;int32&gt; CategoryFilter" />
      <MemberSignature Language="DocId" Value="P:Azure.Maps.Search.SearchPointOfInterestOptions.CategoryFilter" />
      <MemberSignature Language="VB.NET" Value="Public Property CategoryFilter As IEnumerable(Of Integer)" />
      <MemberSignature Language="F#" Value="member this.CategoryFilter : seq&lt;int&gt; with get, set" Usage="Azure.Maps.Search.SearchPointOfInterestOptions.CategoryFilter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Maps.Search</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            A list of category set IDs which could be used to restrict the result to specific Points of Interest categories. ID order does not matter. When multiple category identifiers are provided, only POIs that belong to (at least) one of the categories from the provided list will be returned. The list of supported categories can be discovered usingâ€¯ <see href="https://aka.ms/AzureMapsPOICategoryTree">POI Categories API</see>.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ElectricVehicleConnectorFilter">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Azure.Maps.Search.ElectricVehicleConnector&gt; ElectricVehicleConnectorFilter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;valuetype Azure.Maps.Search.ElectricVehicleConnector&gt; ElectricVehicleConnectorFilter" />
      <MemberSignature Language="DocId" Value="P:Azure.Maps.Search.SearchPointOfInterestOptions.ElectricVehicleConnectorFilter" />
      <MemberSignature Language="VB.NET" Value="Public Property ElectricVehicleConnectorFilter As IEnumerable(Of ElectricVehicleConnector)" />
      <MemberSignature Language="F#" Value="member this.ElectricVehicleConnectorFilter : seq&lt;Azure.Maps.Search.ElectricVehicleConnector&gt; with get, set" Usage="Azure.Maps.Search.SearchPointOfInterestOptions.ElectricVehicleConnectorFilter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Maps.Search</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Azure.Maps.Search.ElectricVehicleConnector&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            A list of connector types which could be used to restrict the result to Electric Vehicle Station supporting specific connector types. Item order does not matter. When multiple connector types are provided, only results that belong to (at least) one of the provided list will be returned.
            Please refer to <see cref="T:Azure.Maps.Search.ElectricVehicleConnector" /> for all the available connector types
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtendedPostalCodesFor">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Azure.Maps.Search.PointOfInterestExtendedPostalCodes&gt; ExtendedPostalCodesFor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;valuetype Azure.Maps.Search.PointOfInterestExtendedPostalCodes&gt; ExtendedPostalCodesFor" />
      <MemberSignature Language="DocId" Value="P:Azure.Maps.Search.SearchPointOfInterestOptions.ExtendedPostalCodesFor" />
      <MemberSignature Language="VB.NET" Value="Public Property ExtendedPostalCodesFor As IEnumerable(Of PointOfInterestExtendedPostalCodes)" />
      <MemberSignature Language="F#" Value="member this.ExtendedPostalCodesFor : seq&lt;Azure.Maps.Search.PointOfInterestExtendedPostalCodes&gt; with get, set" Usage="Azure.Maps.Search.SearchPointOfInterestOptions.ExtendedPostalCodesFor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Maps.Search</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Azure.Maps.Search.PointOfInterestExtendedPostalCodes&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Indexes for which extended postal codes should be included in the results.
            Please refer to <see cref="T:Azure.Maps.Search.PointOfInterestExtendedPostalCodes" /> for all the available extended postal codes
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

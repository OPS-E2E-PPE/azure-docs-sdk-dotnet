<Type Name="ContainerRegistryExtensions" FullName="Azure.ResourceManager.ContainerRegistry.ContainerRegistryExtensions">
  <TypeSignature Language="C#" Value="public static class ContainerRegistryExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ContainerRegistryExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.ContainerRegistry.ContainerRegistryExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module ContainerRegistryExtensions" />
  <TypeSignature Language="F#" Value="type ContainerRegistryExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to Azure.ResourceManager.ContainerRegistry. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CheckContainerRegistryNameAvailability">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryNameAvailableResult&gt; CheckContainerRegistryNameAvailability (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryNameAvailabilityContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryNameAvailableResult&gt; CheckContainerRegistryNameAvailability(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryNameAvailabilityContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.ContainerRegistryExtensions.CheckContainerRegistryNameAvailability(Azure.ResourceManager.Resources.SubscriptionResource,Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryNameAvailabilityContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CheckContainerRegistryNameAvailability (subscriptionResource As SubscriptionResource, content As ContainerRegistryNameAvailabilityContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ContainerRegistryNameAvailableResult)" />
      <MemberSignature Language="F#" Value="static member CheckContainerRegistryNameAvailability : Azure.ResourceManager.Resources.SubscriptionResource * Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryNameAvailabilityContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryNameAvailableResult&gt;" Usage="Azure.ResourceManager.ContainerRegistry.ContainerRegistryExtensions.CheckContainerRegistryNameAvailability (subscriptionResource, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryNameAvailableResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" Index="0" FrameworkAlternate="azure-dotnet" RefType="this" />
        <Parameter Name="content" Type="Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryNameAvailabilityContent" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="content"> The object containing information for the availability request. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Checks whether the container registry name is available for use. The name must contain only alphanumeric characters, be globally unique, and between 5 and 50 characters in length.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.ContainerRegistry/checkNameAvailability
            Operation Id: Registries_CheckNameAvailability
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CheckContainerRegistryNameAvailabilityAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryNameAvailableResult&gt;&gt; CheckContainerRegistryNameAvailabilityAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryNameAvailabilityContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryNameAvailableResult&gt;&gt; CheckContainerRegistryNameAvailabilityAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, class Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryNameAvailabilityContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.ContainerRegistryExtensions.CheckContainerRegistryNameAvailabilityAsync(Azure.ResourceManager.Resources.SubscriptionResource,Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryNameAvailabilityContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CheckContainerRegistryNameAvailabilityAsync (subscriptionResource As SubscriptionResource, content As ContainerRegistryNameAvailabilityContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ContainerRegistryNameAvailableResult))" />
      <MemberSignature Language="F#" Value="static member CheckContainerRegistryNameAvailabilityAsync : Azure.ResourceManager.Resources.SubscriptionResource * Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryNameAvailabilityContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryNameAvailableResult&gt;&gt;" Usage="Azure.ResourceManager.ContainerRegistry.ContainerRegistryExtensions.CheckContainerRegistryNameAvailabilityAsync (subscriptionResource, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryNameAvailableResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" Index="0" FrameworkAlternate="azure-dotnet" RefType="this" />
        <Parameter Name="content" Type="Azure.ResourceManager.ContainerRegistry.Models.ContainerRegistryNameAvailabilityContent" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="content"> The object containing information for the availability request. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Checks whether the container registry name is available for use. The name must contain only alphanumeric characters, be globally unique, and between 5 and 50 characters in length.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.ContainerRegistry/checkNameAvailability
            Operation Id: Registries_CheckNameAvailability
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CheckNameAvailabilityRegistry">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.ContainerRegistry.Models.RegistryNameStatus&gt; CheckNameAvailabilityRegistry (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.ResourceManager.ContainerRegistry.Models.RegistryNameCheckContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.ContainerRegistry.Models.RegistryNameStatus&gt; CheckNameAvailabilityRegistry(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, class Azure.ResourceManager.ContainerRegistry.Models.RegistryNameCheckContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.ContainerRegistryExtensions.CheckNameAvailabilityRegistry(Azure.ResourceManager.Resources.SubscriptionResource,Azure.ResourceManager.ContainerRegistry.Models.RegistryNameCheckContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CheckNameAvailabilityRegistry (subscriptionResource As SubscriptionResource, content As RegistryNameCheckContent, Optional cancellationToken As CancellationToken = Nothing) As Response(Of RegistryNameStatus)" />
      <MemberSignature Language="F#" Value="static member CheckNameAvailabilityRegistry : Azure.ResourceManager.Resources.SubscriptionResource * Azure.ResourceManager.ContainerRegistry.Models.RegistryNameCheckContent * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ContainerRegistry.Models.RegistryNameStatus&gt;" Usage="Azure.ResourceManager.ContainerRegistry.ContainerRegistryExtensions.CheckNameAvailabilityRegistry (subscriptionResource, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ContainerRegistry.Models.RegistryNameStatus&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="content" Type="Azure.ResourceManager.ContainerRegistry.Models.RegistryNameCheckContent" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="content"> The object containing information for the availability request. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Checks whether the container registry name is available for use. The name must contain only alphanumeric characters, be globally unique, and between 5 and 50 characters in length.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.ContainerRegistry/checkNameAvailability
            Operation Id: Registries_CheckNameAvailability
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CheckNameAvailabilityRegistryAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ContainerRegistry.Models.RegistryNameStatus&gt;&gt; CheckNameAvailabilityRegistryAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, Azure.ResourceManager.ContainerRegistry.Models.RegistryNameCheckContent content, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ContainerRegistry.Models.RegistryNameStatus&gt;&gt; CheckNameAvailabilityRegistryAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, class Azure.ResourceManager.ContainerRegistry.Models.RegistryNameCheckContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.ContainerRegistryExtensions.CheckNameAvailabilityRegistryAsync(Azure.ResourceManager.Resources.SubscriptionResource,Azure.ResourceManager.ContainerRegistry.Models.RegistryNameCheckContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CheckNameAvailabilityRegistryAsync (subscriptionResource As SubscriptionResource, content As RegistryNameCheckContent, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of RegistryNameStatus))" />
      <MemberSignature Language="F#" Value="static member CheckNameAvailabilityRegistryAsync : Azure.ResourceManager.Resources.SubscriptionResource * Azure.ResourceManager.ContainerRegistry.Models.RegistryNameCheckContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ContainerRegistry.Models.RegistryNameStatus&gt;&gt;" Usage="Azure.ResourceManager.ContainerRegistry.ContainerRegistryExtensions.CheckNameAvailabilityRegistryAsync (subscriptionResource, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ContainerRegistry.Models.RegistryNameStatus&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="content" Type="Azure.ResourceManager.ContainerRegistry.Models.RegistryNameCheckContent" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="content"> The object containing information for the availability request. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Checks whether the container registry name is available for use. The name must contain only alphanumeric characters, be globally unique, and between 5 and 50 characters in length.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.ContainerRegistry/checkNameAvailability
            Operation Id: Registries_CheckNameAvailability
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAgentPoolResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.AgentPoolResource GetAgentPoolResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.AgentPoolResource GetAgentPoolResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.ContainerRegistryExtensions.GetAgentPoolResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAgentPoolResource (client As ArmClient, id As ResourceIdentifier) As AgentPoolResource" />
      <MemberSignature Language="F#" Value="static member GetAgentPoolResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ContainerRegistry.AgentPoolResource" Usage="Azure.ResourceManager.ContainerRegistry.ContainerRegistryExtensions.GetAgentPoolResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.AgentPoolResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.ContainerRegistry.AgentPoolResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ContainerRegistry.AgentPoolResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.ContainerRegistry.AgentPoolResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ContainerRegistry.AgentPoolResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContainerRegistries">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.ContainerRegistryCollection GetContainerRegistries (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.ContainerRegistryCollection GetContainerRegistries(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.ContainerRegistryExtensions.GetContainerRegistries(Azure.ResourceManager.Resources.ResourceGroupResource)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetContainerRegistries (resourceGroupResource As ResourceGroupResource) As ContainerRegistryCollection" />
      <MemberSignature Language="F#" Value="static member GetContainerRegistries : Azure.ResourceManager.Resources.ResourceGroupResource -&gt; Azure.ResourceManager.ContainerRegistry.ContainerRegistryCollection" Usage="Azure.ResourceManager.ContainerRegistry.ContainerRegistryExtensions.GetContainerRegistries resourceGroupResource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.ContainerRegistryCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" Index="0" FrameworkAlternate="azure-dotnet" RefType="this" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <summary> Gets a collection of ContainerRegistryResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of ContainerRegistryResources and their operations over a ContainerRegistryResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContainerRegistries">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.ContainerRegistry.ContainerRegistryResource&gt; GetContainerRegistries (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.ContainerRegistry.ContainerRegistryResource&gt; GetContainerRegistries(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.ContainerRegistryExtensions.GetContainerRegistries(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetContainerRegistries (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ContainerRegistryResource)" />
      <MemberSignature Language="F#" Value="static member GetContainerRegistries : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ContainerRegistry.ContainerRegistryResource&gt;" Usage="Azure.ResourceManager.ContainerRegistry.ContainerRegistryExtensions.GetContainerRegistries (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.ContainerRegistry.ContainerRegistryResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" Index="0" FrameworkAlternate="azure-dotnet" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all the container registries under the specified subscription.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.ContainerRegistry/registries
            Operation Id: Registries_List
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.ContainerRegistry.ContainerRegistryResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContainerRegistriesAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.ContainerRegistry.ContainerRegistryResource&gt; GetContainerRegistriesAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.ContainerRegistry.ContainerRegistryResource&gt; GetContainerRegistriesAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.ContainerRegistryExtensions.GetContainerRegistriesAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetContainerRegistriesAsync (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ContainerRegistryResource)" />
      <MemberSignature Language="F#" Value="static member GetContainerRegistriesAsync : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ContainerRegistry.ContainerRegistryResource&gt;" Usage="Azure.ResourceManager.ContainerRegistry.ContainerRegistryExtensions.GetContainerRegistriesAsync (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.ContainerRegistry.ContainerRegistryResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" Index="0" FrameworkAlternate="azure-dotnet" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all the container registries under the specified subscription.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.ContainerRegistry/registries
            Operation Id: Registries_List
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.ContainerRegistry.ContainerRegistryResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContainerRegistry">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.ContainerRegistry.ContainerRegistryResource&gt; GetContainerRegistry (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string registryName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.ContainerRegistry.ContainerRegistryResource&gt; GetContainerRegistry(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string registryName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.ContainerRegistryExtensions.GetContainerRegistry(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetContainerRegistry (resourceGroupResource As ResourceGroupResource, registryName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ContainerRegistryResource)" />
      <MemberSignature Language="F#" Value="static member GetContainerRegistry : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ContainerRegistry.ContainerRegistryResource&gt;" Usage="Azure.ResourceManager.ContainerRegistry.ContainerRegistryExtensions.GetContainerRegistry (resourceGroupResource, registryName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ContainerRegistry.ContainerRegistryResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" Index="0" FrameworkAlternate="azure-dotnet" RefType="this" />
        <Parameter Name="registryName" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="registryName"> The name of the container registry. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the properties of the specified container registry.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}
            Operation Id: Registries_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="registryName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="registryName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetContainerRegistryAgentPoolResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.ContainerRegistryAgentPoolResource GetContainerRegistryAgentPoolResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.ContainerRegistryAgentPoolResource GetContainerRegistryAgentPoolResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.ContainerRegistryExtensions.GetContainerRegistryAgentPoolResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetContainerRegistryAgentPoolResource (client As ArmClient, id As ResourceIdentifier) As ContainerRegistryAgentPoolResource" />
      <MemberSignature Language="F#" Value="static member GetContainerRegistryAgentPoolResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ContainerRegistry.ContainerRegistryAgentPoolResource" Usage="Azure.ResourceManager.ContainerRegistry.ContainerRegistryExtensions.GetContainerRegistryAgentPoolResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.ContainerRegistryAgentPoolResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" Index="0" FrameworkAlternate="azure-dotnet" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ContainerRegistry.ContainerRegistryAgentPoolResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ContainerRegistry.ContainerRegistryAgentPoolResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ContainerRegistry.ContainerRegistryAgentPoolResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ContainerRegistry.ContainerRegistryAgentPoolResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContainerRegistryAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ContainerRegistry.ContainerRegistryResource&gt;&gt; GetContainerRegistryAsync (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string registryName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ContainerRegistry.ContainerRegistryResource&gt;&gt; GetContainerRegistryAsync(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string registryName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.ContainerRegistryExtensions.GetContainerRegistryAsync(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetContainerRegistryAsync (resourceGroupResource As ResourceGroupResource, registryName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ContainerRegistryResource))" />
      <MemberSignature Language="F#" Value="static member GetContainerRegistryAsync : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ContainerRegistry.ContainerRegistryResource&gt;&gt;" Usage="Azure.ResourceManager.ContainerRegistry.ContainerRegistryExtensions.GetContainerRegistryAsync (resourceGroupResource, registryName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ContainerRegistry.ContainerRegistryResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" Index="0" FrameworkAlternate="azure-dotnet" RefType="this" />
        <Parameter Name="registryName" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="registryName"> The name of the container registry. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the properties of the specified container registry.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}
            Operation Id: Registries_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="registryName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="registryName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetContainerRegistryPrivateEndpointConnectionResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.ContainerRegistryPrivateEndpointConnectionResource GetContainerRegistryPrivateEndpointConnectionResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.ContainerRegistryPrivateEndpointConnectionResource GetContainerRegistryPrivateEndpointConnectionResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.ContainerRegistryExtensions.GetContainerRegistryPrivateEndpointConnectionResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetContainerRegistryPrivateEndpointConnectionResource (client As ArmClient, id As ResourceIdentifier) As ContainerRegistryPrivateEndpointConnectionResource" />
      <MemberSignature Language="F#" Value="static member GetContainerRegistryPrivateEndpointConnectionResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ContainerRegistry.ContainerRegistryPrivateEndpointConnectionResource" Usage="Azure.ResourceManager.ContainerRegistry.ContainerRegistryExtensions.GetContainerRegistryPrivateEndpointConnectionResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.ContainerRegistryPrivateEndpointConnectionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ContainerRegistry.ContainerRegistryPrivateEndpointConnectionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ContainerRegistry.ContainerRegistryPrivateEndpointConnectionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ContainerRegistry.ContainerRegistryPrivateEndpointConnectionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ContainerRegistry.ContainerRegistryPrivateEndpointConnectionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContainerRegistryPrivateLinkResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.ContainerRegistryPrivateLinkResource GetContainerRegistryPrivateLinkResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.ContainerRegistryPrivateLinkResource GetContainerRegistryPrivateLinkResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.ContainerRegistryExtensions.GetContainerRegistryPrivateLinkResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetContainerRegistryPrivateLinkResource (client As ArmClient, id As ResourceIdentifier) As ContainerRegistryPrivateLinkResource" />
      <MemberSignature Language="F#" Value="static member GetContainerRegistryPrivateLinkResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ContainerRegistry.ContainerRegistryPrivateLinkResource" Usage="Azure.ResourceManager.ContainerRegistry.ContainerRegistryExtensions.GetContainerRegistryPrivateLinkResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.ContainerRegistryPrivateLinkResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ContainerRegistry.ContainerRegistryPrivateLinkResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ContainerRegistry.ContainerRegistryPrivateLinkResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ContainerRegistry.ContainerRegistryPrivateLinkResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ContainerRegistry.ContainerRegistryPrivateLinkResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContainerRegistryReplicationResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.ContainerRegistryReplicationResource GetContainerRegistryReplicationResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.ContainerRegistryReplicationResource GetContainerRegistryReplicationResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.ContainerRegistryExtensions.GetContainerRegistryReplicationResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetContainerRegistryReplicationResource (client As ArmClient, id As ResourceIdentifier) As ContainerRegistryReplicationResource" />
      <MemberSignature Language="F#" Value="static member GetContainerRegistryReplicationResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ContainerRegistry.ContainerRegistryReplicationResource" Usage="Azure.ResourceManager.ContainerRegistry.ContainerRegistryExtensions.GetContainerRegistryReplicationResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.ContainerRegistryReplicationResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" Index="0" FrameworkAlternate="azure-dotnet" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ContainerRegistry.ContainerRegistryReplicationResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ContainerRegistry.ContainerRegistryReplicationResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ContainerRegistry.ContainerRegistryReplicationResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ContainerRegistry.ContainerRegistryReplicationResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContainerRegistryResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.ContainerRegistryResource GetContainerRegistryResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.ContainerRegistryResource GetContainerRegistryResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.ContainerRegistryExtensions.GetContainerRegistryResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetContainerRegistryResource (client As ArmClient, id As ResourceIdentifier) As ContainerRegistryResource" />
      <MemberSignature Language="F#" Value="static member GetContainerRegistryResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ContainerRegistry.ContainerRegistryResource" Usage="Azure.ResourceManager.ContainerRegistry.ContainerRegistryExtensions.GetContainerRegistryResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.ContainerRegistryResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" Index="0" FrameworkAlternate="azure-dotnet" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ContainerRegistry.ContainerRegistryResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ContainerRegistry.ContainerRegistryResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ContainerRegistry.ContainerRegistryResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ContainerRegistry.ContainerRegistryResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContainerRegistryRunResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.ContainerRegistryRunResource GetContainerRegistryRunResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.ContainerRegistryRunResource GetContainerRegistryRunResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.ContainerRegistryExtensions.GetContainerRegistryRunResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetContainerRegistryRunResource (client As ArmClient, id As ResourceIdentifier) As ContainerRegistryRunResource" />
      <MemberSignature Language="F#" Value="static member GetContainerRegistryRunResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ContainerRegistry.ContainerRegistryRunResource" Usage="Azure.ResourceManager.ContainerRegistry.ContainerRegistryExtensions.GetContainerRegistryRunResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.ContainerRegistryRunResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" Index="0" FrameworkAlternate="azure-dotnet" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ContainerRegistry.ContainerRegistryRunResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ContainerRegistry.ContainerRegistryRunResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ContainerRegistry.ContainerRegistryRunResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ContainerRegistry.ContainerRegistryRunResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContainerRegistryTaskResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.ContainerRegistryTaskResource GetContainerRegistryTaskResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.ContainerRegistryTaskResource GetContainerRegistryTaskResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.ContainerRegistryExtensions.GetContainerRegistryTaskResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetContainerRegistryTaskResource (client As ArmClient, id As ResourceIdentifier) As ContainerRegistryTaskResource" />
      <MemberSignature Language="F#" Value="static member GetContainerRegistryTaskResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ContainerRegistry.ContainerRegistryTaskResource" Usage="Azure.ResourceManager.ContainerRegistry.ContainerRegistryExtensions.GetContainerRegistryTaskResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.ContainerRegistryTaskResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" Index="0" FrameworkAlternate="azure-dotnet" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ContainerRegistry.ContainerRegistryTaskResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ContainerRegistry.ContainerRegistryTaskResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ContainerRegistry.ContainerRegistryTaskResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ContainerRegistry.ContainerRegistryTaskResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContainerRegistryTaskRunResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.ContainerRegistryTaskRunResource GetContainerRegistryTaskRunResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.ContainerRegistryTaskRunResource GetContainerRegistryTaskRunResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.ContainerRegistryExtensions.GetContainerRegistryTaskRunResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetContainerRegistryTaskRunResource (client As ArmClient, id As ResourceIdentifier) As ContainerRegistryTaskRunResource" />
      <MemberSignature Language="F#" Value="static member GetContainerRegistryTaskRunResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ContainerRegistry.ContainerRegistryTaskRunResource" Usage="Azure.ResourceManager.ContainerRegistry.ContainerRegistryExtensions.GetContainerRegistryTaskRunResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.ContainerRegistryTaskRunResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" Index="0" FrameworkAlternate="azure-dotnet" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ContainerRegistry.ContainerRegistryTaskRunResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ContainerRegistry.ContainerRegistryTaskRunResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ContainerRegistry.ContainerRegistryTaskRunResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ContainerRegistry.ContainerRegistryTaskRunResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContainerRegistryWebhookResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.ContainerRegistryWebhookResource GetContainerRegistryWebhookResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.ContainerRegistryWebhookResource GetContainerRegistryWebhookResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.ContainerRegistryExtensions.GetContainerRegistryWebhookResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetContainerRegistryWebhookResource (client As ArmClient, id As ResourceIdentifier) As ContainerRegistryWebhookResource" />
      <MemberSignature Language="F#" Value="static member GetContainerRegistryWebhookResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ContainerRegistry.ContainerRegistryWebhookResource" Usage="Azure.ResourceManager.ContainerRegistry.ContainerRegistryExtensions.GetContainerRegistryWebhookResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.ContainerRegistryWebhookResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" Index="0" FrameworkAlternate="azure-dotnet" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ContainerRegistry.ContainerRegistryWebhookResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ContainerRegistry.ContainerRegistryWebhookResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ContainerRegistry.ContainerRegistryWebhookResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ContainerRegistry.ContainerRegistryWebhookResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRegistries">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.RegistryCollection GetRegistries (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.RegistryCollection GetRegistries(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.ContainerRegistryExtensions.GetRegistries(Azure.ResourceManager.Resources.ResourceGroupResource)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRegistries (resourceGroupResource As ResourceGroupResource) As RegistryCollection" />
      <MemberSignature Language="F#" Value="static member GetRegistries : Azure.ResourceManager.Resources.ResourceGroupResource -&gt; Azure.ResourceManager.ContainerRegistry.RegistryCollection" Usage="Azure.ResourceManager.ContainerRegistry.ContainerRegistryExtensions.GetRegistries resourceGroupResource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.RegistryCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" Index="0" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <summary> Gets a collection of RegistryResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of RegistryResources and their operations over a RegistryResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRegistries">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.ContainerRegistry.RegistryResource&gt; GetRegistries (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.ContainerRegistry.RegistryResource&gt; GetRegistries(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.ContainerRegistryExtensions.GetRegistries(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRegistries (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of RegistryResource)" />
      <MemberSignature Language="F#" Value="static member GetRegistries : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ContainerRegistry.RegistryResource&gt;" Usage="Azure.ResourceManager.ContainerRegistry.ContainerRegistryExtensions.GetRegistries (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.ContainerRegistry.RegistryResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all the container registries under the specified subscription.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.ContainerRegistry/registries
            Operation Id: Registries_List
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.ContainerRegistry.RegistryResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRegistriesAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.ContainerRegistry.RegistryResource&gt; GetRegistriesAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.ContainerRegistry.RegistryResource&gt; GetRegistriesAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.ContainerRegistryExtensions.GetRegistriesAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRegistriesAsync (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of RegistryResource)" />
      <MemberSignature Language="F#" Value="static member GetRegistriesAsync : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ContainerRegistry.RegistryResource&gt;" Usage="Azure.ResourceManager.ContainerRegistry.ContainerRegistryExtensions.GetRegistriesAsync (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.ContainerRegistry.RegistryResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all the container registries under the specified subscription.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.ContainerRegistry/registries
            Operation Id: Registries_List
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.ContainerRegistry.RegistryResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRegistry">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.ContainerRegistry.RegistryResource&gt; GetRegistry (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string registryName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.ContainerRegistry.RegistryResource&gt; GetRegistry(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string registryName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.ContainerRegistryExtensions.GetRegistry(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRegistry (resourceGroupResource As ResourceGroupResource, registryName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of RegistryResource)" />
      <MemberSignature Language="F#" Value="static member GetRegistry : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ContainerRegistry.RegistryResource&gt;" Usage="Azure.ResourceManager.ContainerRegistry.ContainerRegistryExtensions.GetRegistry (resourceGroupResource, registryName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ContainerRegistry.RegistryResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="registryName" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="registryName"> The name of the container registry. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the properties of the specified container registry.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}
            Operation Id: Registries_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="registryName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="registryName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRegistryAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ContainerRegistry.RegistryResource&gt;&gt; GetRegistryAsync (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string registryName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ContainerRegistry.RegistryResource&gt;&gt; GetRegistryAsync(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string registryName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.ContainerRegistryExtensions.GetRegistryAsync(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRegistryAsync (resourceGroupResource As ResourceGroupResource, registryName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of RegistryResource))" />
      <MemberSignature Language="F#" Value="static member GetRegistryAsync : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ContainerRegistry.RegistryResource&gt;&gt;" Usage="Azure.ResourceManager.ContainerRegistry.ContainerRegistryExtensions.GetRegistryAsync (resourceGroupResource, registryName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ContainerRegistry.RegistryResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="registryName" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="registryName"> The name of the container registry. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the properties of the specified container registry.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}
            Operation Id: Registries_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="registryName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="registryName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRegistryResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.RegistryResource GetRegistryResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.RegistryResource GetRegistryResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.ContainerRegistryExtensions.GetRegistryResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRegistryResource (client As ArmClient, id As ResourceIdentifier) As RegistryResource" />
      <MemberSignature Language="F#" Value="static member GetRegistryResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ContainerRegistry.RegistryResource" Usage="Azure.ResourceManager.ContainerRegistry.ContainerRegistryExtensions.GetRegistryResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.RegistryResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ContainerRegistry.RegistryResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ContainerRegistry.RegistryResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ContainerRegistry.RegistryResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ContainerRegistry.RegistryResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetReplicationResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.ReplicationResource GetReplicationResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.ReplicationResource GetReplicationResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.ContainerRegistryExtensions.GetReplicationResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetReplicationResource (client As ArmClient, id As ResourceIdentifier) As ReplicationResource" />
      <MemberSignature Language="F#" Value="static member GetReplicationResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ContainerRegistry.ReplicationResource" Usage="Azure.ResourceManager.ContainerRegistry.ContainerRegistryExtensions.GetReplicationResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.ReplicationResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ContainerRegistry.ReplicationResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ContainerRegistry.ReplicationResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ContainerRegistry.ReplicationResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ContainerRegistry.ReplicationResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRunResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.RunResource GetRunResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.RunResource GetRunResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.ContainerRegistryExtensions.GetRunResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRunResource (client As ArmClient, id As ResourceIdentifier) As RunResource" />
      <MemberSignature Language="F#" Value="static member GetRunResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ContainerRegistry.RunResource" Usage="Azure.ResourceManager.ContainerRegistry.ContainerRegistryExtensions.GetRunResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.RunResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ContainerRegistry.RunResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ContainerRegistry.RunResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ContainerRegistry.RunResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ContainerRegistry.RunResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTaskResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.TaskResource GetTaskResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.TaskResource GetTaskResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.ContainerRegistryExtensions.GetTaskResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetTaskResource (client As ArmClient, id As ResourceIdentifier) As TaskResource" />
      <MemberSignature Language="F#" Value="static member GetTaskResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ContainerRegistry.TaskResource" Usage="Azure.ResourceManager.ContainerRegistry.ContainerRegistryExtensions.GetTaskResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.TaskResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ContainerRegistry.TaskResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ContainerRegistry.TaskResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ContainerRegistry.TaskResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ContainerRegistry.TaskResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTaskRunResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.TaskRunResource GetTaskRunResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.TaskRunResource GetTaskRunResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.ContainerRegistryExtensions.GetTaskRunResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetTaskRunResource (client As ArmClient, id As ResourceIdentifier) As TaskRunResource" />
      <MemberSignature Language="F#" Value="static member GetTaskRunResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ContainerRegistry.TaskRunResource" Usage="Azure.ResourceManager.ContainerRegistry.ContainerRegistryExtensions.GetTaskRunResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.TaskRunResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ContainerRegistry.TaskRunResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ContainerRegistry.TaskRunResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ContainerRegistry.TaskRunResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ContainerRegistry.TaskRunResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWebhookResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ContainerRegistry.WebhookResource GetWebhookResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ContainerRegistry.WebhookResource GetWebhookResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ContainerRegistry.ContainerRegistryExtensions.GetWebhookResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetWebhookResource (client As ArmClient, id As ResourceIdentifier) As WebhookResource" />
      <MemberSignature Language="F#" Value="static member GetWebhookResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ContainerRegistry.WebhookResource" Usage="Azure.ResourceManager.ContainerRegistry.ContainerRegistryExtensions.GetWebhookResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ContainerRegistry.WebhookResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ContainerRegistry.WebhookResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ContainerRegistry.WebhookResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ContainerRegistry.WebhookResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ContainerRegistry.WebhookResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

<Type Name="AnomalyDetectorClient" FullName="Azure.AI.AnomalyDetector.AnomalyDetectorClient">
  <TypeSignature Language="C#" Value="public class AnomalyDetectorClient" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AnomalyDetectorClient extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.AI.AnomalyDetector.AnomalyDetectorClient" />
  <TypeSignature Language="VB.NET" Value="Public Class AnomalyDetectorClient" />
  <TypeSignature Language="F#" Value="type AnomalyDetectorClient = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <see cref="T:Azure.AI.AnomalyDetector.AnomalyDetectorClient" /> is use to connect to the Azure Cognitive Anomaly Detector Service.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AnomalyDetectorClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.AnomalyDetector.AnomalyDetectorClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of AnomalyDetectorClient for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AnomalyDetectorClient (Uri endpoint, Azure.AzureKeyCredential credential);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, class Azure.AzureKeyCredential credential) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.AnomalyDetector.AnomalyDetectorClient.#ctor(System.Uri,Azure.AzureKeyCredential)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, credential As AzureKeyCredential)" />
      <MemberSignature Language="F#" Value="new Azure.AI.AnomalyDetector.AnomalyDetectorClient : Uri * Azure.AzureKeyCredential -&gt; Azure.AI.AnomalyDetector.AnomalyDetectorClient" Usage="new Azure.AI.AnomalyDetector.AnomalyDetectorClient (endpoint, credential)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.AzureKeyCredential" />
      </Parameters>
      <Docs>
        <param name="endpoint">The endpoint to use for connecting to the Anomaly Detector Azure Cognitive Service.</param>
        <param name="credential">A credential used to authenticate to an Azure Service.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.AI.AnomalyDetector.AnomalyDetectorClient" /> class.
            </summary>
        <remarks>
            Both the <paramref name="endpoint" /> URI string and the <paramref name="credential" /><c>string</c> key
            can be found in the Azure Portal.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AnomalyDetectorClient (Uri endpoint, Azure.Core.TokenCredential credential);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, class Azure.Core.TokenCredential credential) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.AnomalyDetector.AnomalyDetectorClient.#ctor(System.Uri,Azure.Core.TokenCredential)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, credential As TokenCredential)" />
      <MemberSignature Language="F#" Value="new Azure.AI.AnomalyDetector.AnomalyDetectorClient : Uri * Azure.Core.TokenCredential -&gt; Azure.AI.AnomalyDetector.AnomalyDetectorClient" Usage="new Azure.AI.AnomalyDetector.AnomalyDetectorClient (endpoint, credential)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.Core.TokenCredential" />
      </Parameters>
      <Docs>
        <param name="endpoint">The endpoint to use for connecting to the Anomaly Detector Azure Cognitive Service.</param>
        <param name="credential">A credential used to authenticate to an Azure Service.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.AI.AnomalyDetector.AnomalyDetectorClient" /> class.
            </summary>
        <remarks>
            The <paramref name="endpoint" /> URI string can be found in the Azure Portal.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AnomalyDetectorClient (Uri endpoint, Azure.AzureKeyCredential credential, Azure.AI.AnomalyDetector.AnomalyDetectorClientOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, class Azure.AzureKeyCredential credential, class Azure.AI.AnomalyDetector.AnomalyDetectorClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.AnomalyDetector.AnomalyDetectorClient.#ctor(System.Uri,Azure.AzureKeyCredential,Azure.AI.AnomalyDetector.AnomalyDetectorClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, credential As AzureKeyCredential, options As AnomalyDetectorClientOptions)" />
      <MemberSignature Language="F#" Value="new Azure.AI.AnomalyDetector.AnomalyDetectorClient : Uri * Azure.AzureKeyCredential * Azure.AI.AnomalyDetector.AnomalyDetectorClientOptions -&gt; Azure.AI.AnomalyDetector.AnomalyDetectorClient" Usage="new Azure.AI.AnomalyDetector.AnomalyDetectorClient (endpoint, credential, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.AzureKeyCredential" />
        <Parameter Name="options" Type="Azure.AI.AnomalyDetector.AnomalyDetectorClientOptions" />
      </Parameters>
      <Docs>
        <param name="endpoint">The endpoint to use for connecting to the Anomaly Detector Azure Cognitive Service.</param>
        <param name="credential">A credential used to authenticate to an Azure Service.</param>
        <param name="options">A set of options to apply when configuring the client.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.AI.AnomalyDetector.AnomalyDetectorClient" /> class.
            </summary>
        <remarks>
            Both the <paramref name="endpoint" /> URI string and the <paramref name="credential" /><c>string</c> key
            can be found in the Azure Portal.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AnomalyDetectorClient (Uri endpoint, Azure.Core.TokenCredential credential, Azure.AI.AnomalyDetector.AnomalyDetectorClientOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, class Azure.Core.TokenCredential credential, class Azure.AI.AnomalyDetector.AnomalyDetectorClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.AnomalyDetector.AnomalyDetectorClient.#ctor(System.Uri,Azure.Core.TokenCredential,Azure.AI.AnomalyDetector.AnomalyDetectorClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, credential As TokenCredential, options As AnomalyDetectorClientOptions)" />
      <MemberSignature Language="F#" Value="new Azure.AI.AnomalyDetector.AnomalyDetectorClient : Uri * Azure.Core.TokenCredential * Azure.AI.AnomalyDetector.AnomalyDetectorClientOptions -&gt; Azure.AI.AnomalyDetector.AnomalyDetectorClient" Usage="new Azure.AI.AnomalyDetector.AnomalyDetectorClient (endpoint, credential, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.Core.TokenCredential" />
        <Parameter Name="options" Type="Azure.AI.AnomalyDetector.AnomalyDetectorClientOptions" />
      </Parameters>
      <Docs>
        <param name="endpoint">The endpoint to use for connecting to the Anomaly Detector Azure Cognitive Service.</param>
        <param name="credential">A credential used to authenticate to an Azure Service.</param>
        <param name="options">A set of options to apply when configuring the client.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.AI.AnomalyDetector.AnomalyDetectorClient" /> class.
            </summary>
        <remarks>
            The <paramref name="endpoint" /> URI string can be found in the Azure Portal.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="DetectChangePoint">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.AI.AnomalyDetector.Models.ChangePointDetectResponse&gt; DetectChangePoint (Azure.AI.AnomalyDetector.Models.ChangePointDetectRequest body, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.AI.AnomalyDetector.Models.ChangePointDetectResponse&gt; DetectChangePoint(class Azure.AI.AnomalyDetector.Models.ChangePointDetectRequest body, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.AnomalyDetector.AnomalyDetectorClient.DetectChangePoint(Azure.AI.AnomalyDetector.Models.ChangePointDetectRequest,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DetectChangePoint (body As ChangePointDetectRequest, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ChangePointDetectResponse)" />
      <MemberSignature Language="F#" Value="abstract member DetectChangePoint : Azure.AI.AnomalyDetector.Models.ChangePointDetectRequest * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.AnomalyDetector.Models.ChangePointDetectResponse&gt;&#xA;override this.DetectChangePoint : Azure.AI.AnomalyDetector.Models.ChangePointDetectRequest * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.AnomalyDetector.Models.ChangePointDetectResponse&gt;" Usage="anomalyDetectorClient.DetectChangePoint (body, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.AI.AnomalyDetector.Models.ChangePointDetectResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="body" Type="Azure.AI.AnomalyDetector.Models.ChangePointDetectRequest" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="body"> Time series points and granularity is needed. Advanced model parameters can also be set in the request if needed. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Evaluate change point score of every series point. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DetectChangePointAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.AnomalyDetector.Models.ChangePointDetectResponse&gt;&gt; DetectChangePointAsync (Azure.AI.AnomalyDetector.Models.ChangePointDetectRequest body, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.AI.AnomalyDetector.Models.ChangePointDetectResponse&gt;&gt; DetectChangePointAsync(class Azure.AI.AnomalyDetector.Models.ChangePointDetectRequest body, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.AnomalyDetector.AnomalyDetectorClient.DetectChangePointAsync(Azure.AI.AnomalyDetector.Models.ChangePointDetectRequest,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DetectChangePointAsync (body As ChangePointDetectRequest, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ChangePointDetectResponse))" />
      <MemberSignature Language="F#" Value="abstract member DetectChangePointAsync : Azure.AI.AnomalyDetector.Models.ChangePointDetectRequest * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.AnomalyDetector.Models.ChangePointDetectResponse&gt;&gt;&#xA;override this.DetectChangePointAsync : Azure.AI.AnomalyDetector.Models.ChangePointDetectRequest * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.AnomalyDetector.Models.ChangePointDetectResponse&gt;&gt;" Usage="anomalyDetectorClient.DetectChangePointAsync (body, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.AnomalyDetector.Models.ChangePointDetectResponse&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="body" Type="Azure.AI.AnomalyDetector.Models.ChangePointDetectRequest" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="body"> Time series points and granularity is needed. Advanced model parameters can also be set in the request if needed. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Evaluate change point score of every series point. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DetectEntireSeries">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.AI.AnomalyDetector.Models.EntireDetectResponse&gt; DetectEntireSeries (Azure.AI.AnomalyDetector.Models.DetectRequest body, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.AI.AnomalyDetector.Models.EntireDetectResponse&gt; DetectEntireSeries(class Azure.AI.AnomalyDetector.Models.DetectRequest body, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.AnomalyDetector.AnomalyDetectorClient.DetectEntireSeries(Azure.AI.AnomalyDetector.Models.DetectRequest,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DetectEntireSeries (body As DetectRequest, Optional cancellationToken As CancellationToken = Nothing) As Response(Of EntireDetectResponse)" />
      <MemberSignature Language="F#" Value="abstract member DetectEntireSeries : Azure.AI.AnomalyDetector.Models.DetectRequest * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.AnomalyDetector.Models.EntireDetectResponse&gt;&#xA;override this.DetectEntireSeries : Azure.AI.AnomalyDetector.Models.DetectRequest * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.AnomalyDetector.Models.EntireDetectResponse&gt;" Usage="anomalyDetectorClient.DetectEntireSeries (body, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.AI.AnomalyDetector.Models.EntireDetectResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="body" Type="Azure.AI.AnomalyDetector.Models.DetectRequest" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="body"> Time series points and period if needed. Advanced model parameters can also be set in the request. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> This operation generates a model using an entire series, each point is detected with the same model. With this method, points before and after a certain point are used to determine whether it is an anomaly. The entire detection can give user an overall status of the time series. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DetectEntireSeriesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.AnomalyDetector.Models.EntireDetectResponse&gt;&gt; DetectEntireSeriesAsync (Azure.AI.AnomalyDetector.Models.DetectRequest body, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.AI.AnomalyDetector.Models.EntireDetectResponse&gt;&gt; DetectEntireSeriesAsync(class Azure.AI.AnomalyDetector.Models.DetectRequest body, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.AnomalyDetector.AnomalyDetectorClient.DetectEntireSeriesAsync(Azure.AI.AnomalyDetector.Models.DetectRequest,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DetectEntireSeriesAsync (body As DetectRequest, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of EntireDetectResponse))" />
      <MemberSignature Language="F#" Value="abstract member DetectEntireSeriesAsync : Azure.AI.AnomalyDetector.Models.DetectRequest * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.AnomalyDetector.Models.EntireDetectResponse&gt;&gt;&#xA;override this.DetectEntireSeriesAsync : Azure.AI.AnomalyDetector.Models.DetectRequest * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.AnomalyDetector.Models.EntireDetectResponse&gt;&gt;" Usage="anomalyDetectorClient.DetectEntireSeriesAsync (body, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.AnomalyDetector.Models.EntireDetectResponse&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="body" Type="Azure.AI.AnomalyDetector.Models.DetectRequest" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="body"> Time series points and period if needed. Advanced model parameters can also be set in the request. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> This operation generates a model using an entire series, each point is detected with the same model. With this method, points before and after a certain point are used to determine whether it is an anomaly. The entire detection can give user an overall status of the time series. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DetectLastPoint">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.AI.AnomalyDetector.Models.LastDetectResponse&gt; DetectLastPoint (Azure.AI.AnomalyDetector.Models.DetectRequest body, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.AI.AnomalyDetector.Models.LastDetectResponse&gt; DetectLastPoint(class Azure.AI.AnomalyDetector.Models.DetectRequest body, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.AnomalyDetector.AnomalyDetectorClient.DetectLastPoint(Azure.AI.AnomalyDetector.Models.DetectRequest,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DetectLastPoint (body As DetectRequest, Optional cancellationToken As CancellationToken = Nothing) As Response(Of LastDetectResponse)" />
      <MemberSignature Language="F#" Value="abstract member DetectLastPoint : Azure.AI.AnomalyDetector.Models.DetectRequest * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.AnomalyDetector.Models.LastDetectResponse&gt;&#xA;override this.DetectLastPoint : Azure.AI.AnomalyDetector.Models.DetectRequest * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.AI.AnomalyDetector.Models.LastDetectResponse&gt;" Usage="anomalyDetectorClient.DetectLastPoint (body, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.AI.AnomalyDetector.Models.LastDetectResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="body" Type="Azure.AI.AnomalyDetector.Models.DetectRequest" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="body"> Time series points and period if needed. Advanced model parameters can also be set in the request. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> This operation generates a model using points before the latest one. With this method, only historical points are used to determine whether the target point is an anomaly. The latest point detecting operation matches the scenario of real-time monitoring of business metrics. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DetectLastPointAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.AnomalyDetector.Models.LastDetectResponse&gt;&gt; DetectLastPointAsync (Azure.AI.AnomalyDetector.Models.DetectRequest body, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.AI.AnomalyDetector.Models.LastDetectResponse&gt;&gt; DetectLastPointAsync(class Azure.AI.AnomalyDetector.Models.DetectRequest body, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.AnomalyDetector.AnomalyDetectorClient.DetectLastPointAsync(Azure.AI.AnomalyDetector.Models.DetectRequest,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DetectLastPointAsync (body As DetectRequest, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of LastDetectResponse))" />
      <MemberSignature Language="F#" Value="abstract member DetectLastPointAsync : Azure.AI.AnomalyDetector.Models.DetectRequest * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.AnomalyDetector.Models.LastDetectResponse&gt;&gt;&#xA;override this.DetectLastPointAsync : Azure.AI.AnomalyDetector.Models.DetectRequest * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.AnomalyDetector.Models.LastDetectResponse&gt;&gt;" Usage="anomalyDetectorClient.DetectLastPointAsync (body, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.AnomalyDetector</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.AI.AnomalyDetector.Models.LastDetectResponse&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="body" Type="Azure.AI.AnomalyDetector.Models.DetectRequest" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="body"> Time series points and period if needed. Advanced model parameters can also be set in the request. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> This operation generates a model using points before the latest one. With this method, only historical points are used to determine whether the target point is an anomaly. The latest point detecting operation matches the scenario of real-time monitoring of business metrics. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

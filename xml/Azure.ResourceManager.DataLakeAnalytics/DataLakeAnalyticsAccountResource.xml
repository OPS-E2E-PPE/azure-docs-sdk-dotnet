<Type Name="DataLakeAnalyticsAccountResource" FullName="Azure.ResourceManager.DataLakeAnalytics.DataLakeAnalyticsAccountResource">
  <TypeSignature Language="C#" Value="public class DataLakeAnalyticsAccountResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataLakeAnalyticsAccountResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.DataLakeAnalytics.DataLakeAnalyticsAccountResource" />
  <TypeSignature Language="VB.NET" Value="Public Class DataLakeAnalyticsAccountResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type DataLakeAnalyticsAccountResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.DataLakeAnalytics</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            A Class representing a DataLakeAnalyticsAccount along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct a <see cref="T:Azure.ResourceManager.DataLakeAnalytics.DataLakeAnalyticsAccountResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetDataLakeAnalyticsAccountResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> using the GetDataLakeAnalyticsAccount method.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DataLakeAnalyticsAccountResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataLakeAnalytics.DataLakeAnalyticsAccountResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataLakeAnalytics</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.DataLakeAnalytics.DataLakeAnalyticsAccountResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateResourceIdentifier">
      <MemberSignature Language="C#" Value="public static Azure.Core.ResourceIdentifier CreateResourceIdentifier (string subscriptionId, string resourceGroupName, string accountName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Core.ResourceIdentifier CreateResourceIdentifier(string subscriptionId, string resourceGroupName, string accountName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataLakeAnalytics.DataLakeAnalyticsAccountResource.CreateResourceIdentifier(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateResourceIdentifier (subscriptionId As String, resourceGroupName As String, accountName As String) As ResourceIdentifier" />
      <MemberSignature Language="F#" Value="static member CreateResourceIdentifier : string * string * string -&gt; Azure.Core.ResourceIdentifier" Usage="Azure.ResourceManager.DataLakeAnalytics.DataLakeAnalyticsAccountResource.CreateResourceIdentifier (subscriptionId, resourceGroupName, accountName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataLakeAnalytics</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.ResourceIdentifier</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionId" Type="System.String" />
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="accountName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subscriptionId">To be added.</param>
        <param name="resourceGroupName">To be added.</param>
        <param name="accountName">To be added.</param>
        <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.DataLakeAnalytics.DataLakeAnalyticsAccountResource" /> instance. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DataLakeAnalytics.DataLakeAnalyticsAccountData Data { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.DataLakeAnalytics.DataLakeAnalyticsAccountData Data" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataLakeAnalytics.DataLakeAnalyticsAccountResource.Data" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Data As DataLakeAnalyticsAccountData" />
      <MemberSignature Language="F#" Value="member this.Data : Azure.ResourceManager.DataLakeAnalytics.DataLakeAnalyticsAccountData" Usage="Azure.ResourceManager.DataLakeAnalytics.DataLakeAnalyticsAccountResource.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataLakeAnalytics</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataLakeAnalytics.DataLakeAnalyticsAccountData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets the data representing this Feature. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation Delete (Azure.WaitUntil waitUntil, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation Delete(valuetype Azure.WaitUntil waitUntil, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataLakeAnalytics.DataLakeAnalyticsAccountResource.Delete(Azure.WaitUntil,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Delete (waitUntil As WaitUntil, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation" />
      <MemberSignature Language="F#" Value="abstract member Delete : Azure.WaitUntil * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&#xA;override this.Delete : Azure.WaitUntil * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation" Usage="dataLakeAnalyticsAccountResource.Delete (waitUntil, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataLakeAnalytics</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Begins the delete process for the Data Lake Analytics account object specified by the account name.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeAnalytics/accounts/{accountName}
            Operation Id: Accounts_Delete
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt; DeleteAsync (Azure.WaitUntil waitUntil, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation&gt; DeleteAsync(valuetype Azure.WaitUntil waitUntil, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataLakeAnalytics.DataLakeAnalyticsAccountResource.DeleteAsync(Azure.WaitUntil,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteAsync (waitUntil As WaitUntil, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation)" />
      <MemberSignature Language="F#" Value="abstract member DeleteAsync : Azure.WaitUntil * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;&#xA;override this.DeleteAsync : Azure.WaitUntil * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;" Usage="dataLakeAnalyticsAccountResource.DeleteAsync (waitUntil, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataLakeAnalytics</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Begins the delete process for the Data Lake Analytics account object specified by the account name.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeAnalytics/accounts/{accountName}
            Operation Id: Accounts_Delete
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DataLakeAnalytics.DataLakeAnalyticsAccountResource&gt; Get (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DataLakeAnalytics.DataLakeAnalyticsAccountResource&gt; Get(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataLakeAnalytics.DataLakeAnalyticsAccountResource.Get(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Get (Optional cancellationToken As CancellationToken = Nothing) As Response(Of DataLakeAnalyticsAccountResource)" />
      <MemberSignature Language="F#" Value="abstract member Get : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataLakeAnalytics.DataLakeAnalyticsAccountResource&gt;&#xA;override this.Get : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataLakeAnalytics.DataLakeAnalyticsAccountResource&gt;" Usage="dataLakeAnalyticsAccountResource.Get cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataLakeAnalytics</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DataLakeAnalytics.DataLakeAnalyticsAccountResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets details of the specified Data Lake Analytics account.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeAnalytics/accounts/{accountName}
            Operation Id: Accounts_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllDataLakeStoreAccountInformation">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DataLakeAnalytics.DataLakeStoreAccountInformationCollection GetAllDataLakeStoreAccountInformation ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DataLakeAnalytics.DataLakeStoreAccountInformationCollection GetAllDataLakeStoreAccountInformation() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataLakeAnalytics.DataLakeAnalyticsAccountResource.GetAllDataLakeStoreAccountInformation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAllDataLakeStoreAccountInformation () As DataLakeStoreAccountInformationCollection" />
      <MemberSignature Language="F#" Value="abstract member GetAllDataLakeStoreAccountInformation : unit -&gt; Azure.ResourceManager.DataLakeAnalytics.DataLakeStoreAccountInformationCollection&#xA;override this.GetAllDataLakeStoreAccountInformation : unit -&gt; Azure.ResourceManager.DataLakeAnalytics.DataLakeStoreAccountInformationCollection" Usage="dataLakeAnalyticsAccountResource.GetAllDataLakeStoreAccountInformation " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataLakeAnalytics</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataLakeAnalytics.DataLakeStoreAccountInformationCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of DataLakeStoreAccountInformationResources in the DataLakeAnalyticsAccount. </summary>
        <returns> An object representing collection of DataLakeStoreAccountInformationResources and their operations over a DataLakeStoreAccountInformationResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllStorageAccountInformation">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DataLakeAnalytics.StorageAccountInformationCollection GetAllStorageAccountInformation ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DataLakeAnalytics.StorageAccountInformationCollection GetAllStorageAccountInformation() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataLakeAnalytics.DataLakeAnalyticsAccountResource.GetAllStorageAccountInformation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAllStorageAccountInformation () As StorageAccountInformationCollection" />
      <MemberSignature Language="F#" Value="abstract member GetAllStorageAccountInformation : unit -&gt; Azure.ResourceManager.DataLakeAnalytics.StorageAccountInformationCollection&#xA;override this.GetAllStorageAccountInformation : unit -&gt; Azure.ResourceManager.DataLakeAnalytics.StorageAccountInformationCollection" Usage="dataLakeAnalyticsAccountResource.GetAllStorageAccountInformation " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataLakeAnalytics</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataLakeAnalytics.StorageAccountInformationCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of StorageAccountInformationResources in the DataLakeAnalyticsAccount. </summary>
        <returns> An object representing collection of StorageAccountInformationResources and their operations over a StorageAccountInformationResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataLakeAnalytics.DataLakeAnalyticsAccountResource&gt;&gt; GetAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DataLakeAnalytics.DataLakeAnalyticsAccountResource&gt;&gt; GetAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataLakeAnalytics.DataLakeAnalyticsAccountResource.GetAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DataLakeAnalyticsAccountResource))" />
      <MemberSignature Language="F#" Value="abstract member GetAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataLakeAnalytics.DataLakeAnalyticsAccountResource&gt;&gt;&#xA;override this.GetAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataLakeAnalytics.DataLakeAnalyticsAccountResource&gt;&gt;" Usage="dataLakeAnalyticsAccountResource.GetAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataLakeAnalytics</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataLakeAnalytics.DataLakeAnalyticsAccountResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets details of the specified Data Lake Analytics account.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeAnalytics/accounts/{accountName}
            Operation Id: Accounts_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetComputePolicies">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DataLakeAnalytics.ComputePolicyCollection GetComputePolicies ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DataLakeAnalytics.ComputePolicyCollection GetComputePolicies() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataLakeAnalytics.DataLakeAnalyticsAccountResource.GetComputePolicies" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetComputePolicies () As ComputePolicyCollection" />
      <MemberSignature Language="F#" Value="abstract member GetComputePolicies : unit -&gt; Azure.ResourceManager.DataLakeAnalytics.ComputePolicyCollection&#xA;override this.GetComputePolicies : unit -&gt; Azure.ResourceManager.DataLakeAnalytics.ComputePolicyCollection" Usage="dataLakeAnalyticsAccountResource.GetComputePolicies " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataLakeAnalytics</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataLakeAnalytics.ComputePolicyCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ComputePolicyResources in the DataLakeAnalyticsAccount. </summary>
        <returns> An object representing collection of ComputePolicyResources and their operations over a ComputePolicyResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetComputePolicy">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DataLakeAnalytics.ComputePolicyResource&gt; GetComputePolicy (string computePolicyName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DataLakeAnalytics.ComputePolicyResource&gt; GetComputePolicy(string computePolicyName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataLakeAnalytics.DataLakeAnalyticsAccountResource.GetComputePolicy(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetComputePolicy (computePolicyName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ComputePolicyResource)" />
      <MemberSignature Language="F#" Value="abstract member GetComputePolicy : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataLakeAnalytics.ComputePolicyResource&gt;&#xA;override this.GetComputePolicy : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataLakeAnalytics.ComputePolicyResource&gt;" Usage="dataLakeAnalyticsAccountResource.GetComputePolicy (computePolicyName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataLakeAnalytics</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DataLakeAnalytics.ComputePolicyResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="computePolicyName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="computePolicyName"> The name of the compute policy to retrieve. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the specified Data Lake Analytics compute policy.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeAnalytics/accounts/{accountName}/computePolicies/{computePolicyName}
            Operation Id: ComputePolicies_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="computePolicyName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="computePolicyName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetComputePolicyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataLakeAnalytics.ComputePolicyResource&gt;&gt; GetComputePolicyAsync (string computePolicyName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DataLakeAnalytics.ComputePolicyResource&gt;&gt; GetComputePolicyAsync(string computePolicyName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataLakeAnalytics.DataLakeAnalyticsAccountResource.GetComputePolicyAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetComputePolicyAsync (computePolicyName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ComputePolicyResource))" />
      <MemberSignature Language="F#" Value="abstract member GetComputePolicyAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataLakeAnalytics.ComputePolicyResource&gt;&gt;&#xA;override this.GetComputePolicyAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataLakeAnalytics.ComputePolicyResource&gt;&gt;" Usage="dataLakeAnalyticsAccountResource.GetComputePolicyAsync (computePolicyName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataLakeAnalytics</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataLakeAnalytics.ComputePolicyResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="computePolicyName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="computePolicyName"> The name of the compute policy to retrieve. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the specified Data Lake Analytics compute policy.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeAnalytics/accounts/{accountName}/computePolicies/{computePolicyName}
            Operation Id: ComputePolicies_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="computePolicyName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="computePolicyName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataLakeStoreAccountInformation">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DataLakeAnalytics.DataLakeStoreAccountInformationResource&gt; GetDataLakeStoreAccountInformation (string dataLakeStoreAccountName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DataLakeAnalytics.DataLakeStoreAccountInformationResource&gt; GetDataLakeStoreAccountInformation(string dataLakeStoreAccountName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataLakeAnalytics.DataLakeAnalyticsAccountResource.GetDataLakeStoreAccountInformation(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataLakeStoreAccountInformation (dataLakeStoreAccountName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DataLakeStoreAccountInformationResource)" />
      <MemberSignature Language="F#" Value="abstract member GetDataLakeStoreAccountInformation : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataLakeAnalytics.DataLakeStoreAccountInformationResource&gt;&#xA;override this.GetDataLakeStoreAccountInformation : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataLakeAnalytics.DataLakeStoreAccountInformationResource&gt;" Usage="dataLakeAnalyticsAccountResource.GetDataLakeStoreAccountInformation (dataLakeStoreAccountName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataLakeAnalytics</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DataLakeAnalytics.DataLakeStoreAccountInformationResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataLakeStoreAccountName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="dataLakeStoreAccountName"> The name of the Data Lake Store account to retrieve. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the specified Data Lake Store account details in the specified Data Lake Analytics account.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeAnalytics/accounts/{accountName}/dataLakeStoreAccounts/{dataLakeStoreAccountName}
            Operation Id: DataLakeStoreAccounts_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="dataLakeStoreAccountName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dataLakeStoreAccountName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataLakeStoreAccountInformationAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataLakeAnalytics.DataLakeStoreAccountInformationResource&gt;&gt; GetDataLakeStoreAccountInformationAsync (string dataLakeStoreAccountName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DataLakeAnalytics.DataLakeStoreAccountInformationResource&gt;&gt; GetDataLakeStoreAccountInformationAsync(string dataLakeStoreAccountName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataLakeAnalytics.DataLakeAnalyticsAccountResource.GetDataLakeStoreAccountInformationAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataLakeStoreAccountInformationAsync (dataLakeStoreAccountName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DataLakeStoreAccountInformationResource))" />
      <MemberSignature Language="F#" Value="abstract member GetDataLakeStoreAccountInformationAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataLakeAnalytics.DataLakeStoreAccountInformationResource&gt;&gt;&#xA;override this.GetDataLakeStoreAccountInformationAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataLakeAnalytics.DataLakeStoreAccountInformationResource&gt;&gt;" Usage="dataLakeAnalyticsAccountResource.GetDataLakeStoreAccountInformationAsync (dataLakeStoreAccountName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataLakeAnalytics</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataLakeAnalytics.DataLakeStoreAccountInformationResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataLakeStoreAccountName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="dataLakeStoreAccountName"> The name of the Data Lake Store account to retrieve. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the specified Data Lake Store account details in the specified Data Lake Analytics account.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeAnalytics/accounts/{accountName}/dataLakeStoreAccounts/{dataLakeStoreAccountName}
            Operation Id: DataLakeStoreAccounts_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="dataLakeStoreAccountName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dataLakeStoreAccountName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetFirewallRule">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DataLakeAnalytics.FirewallRuleResource&gt; GetFirewallRule (string firewallRuleName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DataLakeAnalytics.FirewallRuleResource&gt; GetFirewallRule(string firewallRuleName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataLakeAnalytics.DataLakeAnalyticsAccountResource.GetFirewallRule(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFirewallRule (firewallRuleName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of FirewallRuleResource)" />
      <MemberSignature Language="F#" Value="abstract member GetFirewallRule : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataLakeAnalytics.FirewallRuleResource&gt;&#xA;override this.GetFirewallRule : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataLakeAnalytics.FirewallRuleResource&gt;" Usage="dataLakeAnalyticsAccountResource.GetFirewallRule (firewallRuleName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataLakeAnalytics</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DataLakeAnalytics.FirewallRuleResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="firewallRuleName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="firewallRuleName"> The name of the firewall rule to retrieve. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the specified Data Lake Analytics firewall rule.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeAnalytics/accounts/{accountName}/firewallRules/{firewallRuleName}
            Operation Id: FirewallRules_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="firewallRuleName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="firewallRuleName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetFirewallRuleAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataLakeAnalytics.FirewallRuleResource&gt;&gt; GetFirewallRuleAsync (string firewallRuleName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DataLakeAnalytics.FirewallRuleResource&gt;&gt; GetFirewallRuleAsync(string firewallRuleName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataLakeAnalytics.DataLakeAnalyticsAccountResource.GetFirewallRuleAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFirewallRuleAsync (firewallRuleName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of FirewallRuleResource))" />
      <MemberSignature Language="F#" Value="abstract member GetFirewallRuleAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataLakeAnalytics.FirewallRuleResource&gt;&gt;&#xA;override this.GetFirewallRuleAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataLakeAnalytics.FirewallRuleResource&gt;&gt;" Usage="dataLakeAnalyticsAccountResource.GetFirewallRuleAsync (firewallRuleName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataLakeAnalytics</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataLakeAnalytics.FirewallRuleResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="firewallRuleName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="firewallRuleName"> The name of the firewall rule to retrieve. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the specified Data Lake Analytics firewall rule.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeAnalytics/accounts/{accountName}/firewallRules/{firewallRuleName}
            Operation Id: FirewallRules_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="firewallRuleName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="firewallRuleName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetFirewallRules">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DataLakeAnalytics.FirewallRuleCollection GetFirewallRules ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DataLakeAnalytics.FirewallRuleCollection GetFirewallRules() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataLakeAnalytics.DataLakeAnalyticsAccountResource.GetFirewallRules" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFirewallRules () As FirewallRuleCollection" />
      <MemberSignature Language="F#" Value="abstract member GetFirewallRules : unit -&gt; Azure.ResourceManager.DataLakeAnalytics.FirewallRuleCollection&#xA;override this.GetFirewallRules : unit -&gt; Azure.ResourceManager.DataLakeAnalytics.FirewallRuleCollection" Usage="dataLakeAnalyticsAccountResource.GetFirewallRules " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataLakeAnalytics</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataLakeAnalytics.FirewallRuleCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of FirewallRuleResources in the DataLakeAnalyticsAccount. </summary>
        <returns> An object representing collection of FirewallRuleResources and their operations over a FirewallRuleResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStorageAccountInformation">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.DataLakeAnalytics.StorageAccountInformationResource&gt; GetStorageAccountInformation (string storageAccountName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.DataLakeAnalytics.StorageAccountInformationResource&gt; GetStorageAccountInformation(string storageAccountName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataLakeAnalytics.DataLakeAnalyticsAccountResource.GetStorageAccountInformation(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStorageAccountInformation (storageAccountName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of StorageAccountInformationResource)" />
      <MemberSignature Language="F#" Value="abstract member GetStorageAccountInformation : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataLakeAnalytics.StorageAccountInformationResource&gt;&#xA;override this.GetStorageAccountInformation : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DataLakeAnalytics.StorageAccountInformationResource&gt;" Usage="dataLakeAnalyticsAccountResource.GetStorageAccountInformation (storageAccountName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataLakeAnalytics</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DataLakeAnalytics.StorageAccountInformationResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storageAccountName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="storageAccountName"> The name of the Azure Storage account for which to retrieve the details. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the specified Azure Storage account linked to the given Data Lake Analytics account.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeAnalytics/accounts/{accountName}/storageAccounts/{storageAccountName}
            Operation Id: StorageAccounts_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="storageAccountName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="storageAccountName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetStorageAccountInformationAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataLakeAnalytics.StorageAccountInformationResource&gt;&gt; GetStorageAccountInformationAsync (string storageAccountName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DataLakeAnalytics.StorageAccountInformationResource&gt;&gt; GetStorageAccountInformationAsync(string storageAccountName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataLakeAnalytics.DataLakeAnalyticsAccountResource.GetStorageAccountInformationAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStorageAccountInformationAsync (storageAccountName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of StorageAccountInformationResource))" />
      <MemberSignature Language="F#" Value="abstract member GetStorageAccountInformationAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataLakeAnalytics.StorageAccountInformationResource&gt;&gt;&#xA;override this.GetStorageAccountInformationAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataLakeAnalytics.StorageAccountInformationResource&gt;&gt;" Usage="dataLakeAnalyticsAccountResource.GetStorageAccountInformationAsync (storageAccountName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataLakeAnalytics</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DataLakeAnalytics.StorageAccountInformationResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storageAccountName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="storageAccountName"> The name of the Azure Storage account for which to retrieve the details. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the specified Azure Storage account linked to the given Data Lake Analytics account.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeAnalytics/accounts/{accountName}/storageAccounts/{storageAccountName}
            Operation Id: StorageAccounts_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="storageAccountName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="storageAccountName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="HasData">
      <MemberSignature Language="C#" Value="public virtual bool HasData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasData" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.DataLakeAnalytics.DataLakeAnalyticsAccountResource.HasData" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HasData As Boolean" />
      <MemberSignature Language="F#" Value="member this.HasData : bool" Usage="Azure.ResourceManager.DataLakeAnalytics.DataLakeAnalyticsAccountResource.HasData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataLakeAnalytics</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets whether or not the current instance has data. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResourceType">
      <MemberSignature Language="C#" Value="public static readonly Azure.Core.ResourceType ResourceType;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype Azure.Core.ResourceType ResourceType" />
      <MemberSignature Language="DocId" Value="F:Azure.ResourceManager.DataLakeAnalytics.DataLakeAnalyticsAccountResource.ResourceType" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ResourceType As ResourceType " />
      <MemberSignature Language="F#" Value=" staticval mutable ResourceType : Azure.Core.ResourceType" Usage="Azure.ResourceManager.DataLakeAnalytics.DataLakeAnalyticsAccountResource.ResourceType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataLakeAnalytics</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.ResourceType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets the resource type for the operations. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataLakeAnalytics.DataLakeAnalyticsAccountResource&gt; Update (Azure.WaitUntil waitUntil, Azure.ResourceManager.DataLakeAnalytics.Models.DataLakeAnalyticsAccountPatch patch, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.DataLakeAnalytics.DataLakeAnalyticsAccountResource&gt; Update(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.DataLakeAnalytics.Models.DataLakeAnalyticsAccountPatch patch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataLakeAnalytics.DataLakeAnalyticsAccountResource.Update(Azure.WaitUntil,Azure.ResourceManager.DataLakeAnalytics.Models.DataLakeAnalyticsAccountPatch,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Update (waitUntil As WaitUntil, patch As DataLakeAnalyticsAccountPatch, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of DataLakeAnalyticsAccountResource)" />
      <MemberSignature Language="F#" Value="abstract member Update : Azure.WaitUntil * Azure.ResourceManager.DataLakeAnalytics.Models.DataLakeAnalyticsAccountPatch * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataLakeAnalytics.DataLakeAnalyticsAccountResource&gt;&#xA;override this.Update : Azure.WaitUntil * Azure.ResourceManager.DataLakeAnalytics.Models.DataLakeAnalyticsAccountPatch * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataLakeAnalytics.DataLakeAnalyticsAccountResource&gt;" Usage="dataLakeAnalyticsAccountResource.Update (waitUntil, patch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataLakeAnalytics</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataLakeAnalytics.DataLakeAnalyticsAccountResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="patch" Type="Azure.ResourceManager.DataLakeAnalytics.Models.DataLakeAnalyticsAccountPatch" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="patch"> Parameters supplied to the update Data Lake Analytics account operation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Updates the Data Lake Analytics account object specified by the accountName with the contents of the account object.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeAnalytics/accounts/{accountName}
            Operation Id: Accounts_Update
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="patch" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataLakeAnalytics.DataLakeAnalyticsAccountResource&gt;&gt; UpdateAsync (Azure.WaitUntil waitUntil, Azure.ResourceManager.DataLakeAnalytics.Models.DataLakeAnalyticsAccountPatch patch, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.DataLakeAnalytics.DataLakeAnalyticsAccountResource&gt;&gt; UpdateAsync(valuetype Azure.WaitUntil waitUntil, class Azure.ResourceManager.DataLakeAnalytics.Models.DataLakeAnalyticsAccountPatch patch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataLakeAnalytics.DataLakeAnalyticsAccountResource.UpdateAsync(Azure.WaitUntil,Azure.ResourceManager.DataLakeAnalytics.Models.DataLakeAnalyticsAccountPatch,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateAsync (waitUntil As WaitUntil, patch As DataLakeAnalyticsAccountPatch, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of DataLakeAnalyticsAccountResource))" />
      <MemberSignature Language="F#" Value="abstract member UpdateAsync : Azure.WaitUntil * Azure.ResourceManager.DataLakeAnalytics.Models.DataLakeAnalyticsAccountPatch * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataLakeAnalytics.DataLakeAnalyticsAccountResource&gt;&gt;&#xA;override this.UpdateAsync : Azure.WaitUntil * Azure.ResourceManager.DataLakeAnalytics.Models.DataLakeAnalyticsAccountPatch * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataLakeAnalytics.DataLakeAnalyticsAccountResource&gt;&gt;" Usage="dataLakeAnalyticsAccountResource.UpdateAsync (waitUntil, patch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataLakeAnalytics</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.DataLakeAnalytics.DataLakeAnalyticsAccountResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="patch" Type="Azure.ResourceManager.DataLakeAnalytics.Models.DataLakeAnalyticsAccountPatch" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="patch"> Parameters supplied to the update Data Lake Analytics account operation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Updates the Data Lake Analytics account object specified by the accountName with the contents of the account object.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeAnalytics/accounts/{accountName}
            Operation Id: Accounts_Update
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="patch" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
